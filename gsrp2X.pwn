/* 				====================================================================================
			   |							   FECHA DE INICIO DE CREACIÓN			                |
			   | 	   					          11 de Marzo de 2019 						        |
			   | 					                 COURIER (Block)                              |
				====================================================================================


VERSIÓN ANTERIOR: VERSIÓN 1 . 0 . ALPHA --- (SIRVE PARA OpenBeta) (hasta el 20/01/2022)
VERSIÓN ANTERIOR: VERSIÓN 1  . 1 . 6  ---- VERSIÓN ESTABLE AVANZADA (hasta el 29/01/2022
VERSIÓN ANTERIOR: VERSIÓN 1  . 2 HASTA (1.2.8) ---- ACTUALIZACIONES VARIAS
VERSUÓN ACTUAL: VERSIÓN 2 . 0 . X ---- MEJORADAS MUCHÍSIMAS COSAS :D

												       	GAMEMODE CREADO POR Courier. PARA USO PROPIO
															         - ESTE GM DE RP ES JUGABLE -

*/


// Includes de conexión //
#include <a_samp>
#include <a_mysql>
#define MySQL_HOST "localhost" // GS-RP Alojada en hosting SA-MP
#define MySQL_USER "root" // El del hosting samp
#define MySQL_PASSWORD "" // el del hosting SA-MP
#define MySQL_DATABASE "phpBB" //  definimos la conexión-foro mysql datos
#define PRESSED(%0) (((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#include <a_http>
// YSIS
#include <YSI\y_timers>
#include <zcmd>

AntiAmx() // para que no puedan sacar los
{
    new a[][] = {
        "GS:RP.ES",
        " By: Courier."
    };
    #pragma unused a
}
#include <YSI\y_ini>
#include <streamer>
#include <izcmd>
#include <djson> // json crean mucho caché en db
#include <foreach>
#include <selec2>
#include <mSelection>
#include <yom_buttons>
#include <progressbar>
// A partir de aquí empiezan includes de sistemas de juego // metemos en v.2 todos los includes buenos (cmblock)
#include <mapeos> // Aqui metemos los mapeos para no cargar el gamemode -- cmblock: solo meter mapeados si hace falta para el sistema
// --- SEGURIDAD---//
#include <JunkBuster> // -- añadido el 25/11/2022 FS de seguridad --
//----SISTEMAS EN INCLUDE --- //
#include <maletin> //




//------ se bugea el anti amx ???  pragma   unused a   ----//
#pragma disablerecursion
//- Anti amx

#undef MAX_PLAYERS
#define MAX_PLAYERS (500)
//- Scriptfiles  --- Establece el guardado de cuentas, si se pasa a mysql (borrado??)
#define DATOS_CUENTAS			"Jugadores/%s.rp"
#define DATOS_GRAFFITIS			"Graffitis/Graffiti_%d.rp"
#define DATOS_VEHICULOS			"Vehiculos/Veh_%d.rp"
#define DATOS_CASAS				"Casas/Casa_%d.rp"
#define DATOS_GARAGES			"Garages/Garage_%d.rp"
#define DATOS_NEGOCIOS			"Negocios/Negocio_%d.rp"
#define DATOS_FAMILIAS			"Familias/Fam_%d.rp"
#define DATOS_VEHICULOS_F		"Vehiculos_F/Veh_%d.rp"
#define DATOS_MARIA				"Plantas/s_%d.rp"
#define DATOS_EMPRESAS			"Empresas/Empresa_%d.rp"

//- Limites -
#undef MAX_ACTORS
#define MAX_POBJETOS               (200) // Máximo de objetos
#define MAX_ACTORS				   (100)
#define MAX_PUERTAS 			   (50) // IDs de teleports admins máximo 50  ----- block
#define MAX_ROPA       	           (8)
#define MAX_CASAS  			       (1200) // A partir de aquí todo lo guarda en scriptfiles/Registros
#define MAX_MUEBLES_C              (80)      // a partir de aquí mirar en un periodo si se bugea de crear /muebles --
#define MAX_MUEBLES_N              (100)
#define MAX_MUEBLES_G              (40)
#define MAX_MUEBLES_E              (120)  // máximo de muebles ----- PUEDE CAUSAR BUG ??? DE MOMENTO VA BIEN -- SINO SE PRUEBA SUBIR VARIABLE A 500--
#define MAX_GARAJES                (100) // importante -- los garages se asocian a las casas.
#define	MAX_VEHJUGADOR             (5) // importante cmblock --- este es importante porque por defecto el usuario tiene 3 slots, con premium suman 2 más.
#define	MAX_VEHICULOS              (5000)
#define MAX_GASOLINERAS 		   (30) // Máximo de gasolineras ---
#define	MAX_MODVEHICULOS    	   (15)
#define MAX_GRAFFITIS 		   	   (50) // Máximo graffitis -- este sistema se podría quitar en futura versión cmblock
#define MAX_EMPRESAS 			   (30) // Máximo de empresas dinámicas (reparto/talleres) que se pueden crear en el servidor
#define MAX_NEGOCIOS 			   (250)  // Máximo de negocios --- 250 negocios máximo para poder crearse--- si se necesita más subir variable - blcok -
#define	MAX_BARRERAS 			   (40)
#define	MAX_FACCIONES              (20) // Máximo de facciones que se pueden crear, pero actualmente -- 5 facciones --- 04/02/2022
#define	MAX_FAMILIAS 		 	   (11) // máximo de familias que se pueden crear con /crearfamilia
#define MAX_OBJETOS_S              (500)
#define	MAX_ACCESORIOS   		   (5)
#define	MAX_VEHFAMILIAS 		   (10)
#define MAX_VEH_VENTA				(87)
#define MAX_VEH_USADO				(100)     // otros -- define --
#define MAX_ZONE_NAME              (28)
#define MAX_TEXT_CHAT              (150)
#define MAX_TELEFONOS              (30)
#define MAX_CARACTERES_CLAVE       (64)
#define MAX_INCENDIOS              (15) // máximo de incendios que se pueden crear --15--
#define MAX_DINERO 				   (100)
#define VELOCITY_PEAJE_TIME        (30)
#define VELOCITY_PEAJE_PORCENT     (2)
#define MAX_SPLITLENGTH 		   (100)
#define MAX_PEAJES_COUNT           (20)
#define MIN_HAMBRE                 (23) // A partir de aquí se establecen a 120, 150 por el health del player -- si se sube falla--
#define MIN_SED                    (14)
#define MAX_HAMBRE                 (150)
#define MAX_SED                    (120)
#define MAX_PLANTAS				   (1000)
#define MAX_MOTELES                (20) // máximo de moteles.
#define MAX_MEMBERS                (20)
#define TOTAL_MODS					(36)   // hasta aquí deja de guardar en .log scriptfiles/registros -- ruta para db admin
#define BULLET_HIT_TYPE_NONE 0

//- Timer's e Invalid's
#define TIEMPO_RESPAWN 			   (9999)  // Estos estan metidos en [jTiempos] (modificados algunos)
#define	TIPO_TELEPORTTRAFICANTE    (0)
#define	TIPO_TELEPORTCAMIONERO     (1)
#define	TIPO_TELEPORTPESCADOR      (2)
#define	TIPO_TELEPORTTRABAJO1      (3)
#define	TIPO_TELEPORTGRANJERO      (4)

#define INVALID_CASA_ID 		   (-1)
#define INVALID_NEGOCIO_ID		   (-1)
#define INVALID_MUEBLES_ID 	       (0)
#define INVALID_PLAYER_VEHICLE_ID  (0)
#define CHECKPOINT_NONE 		   (0)
#define CHECKPOINT_RETURNTRUCK 	   (600)

//- Estilos
#define WALK_DEFAULT    1
#define WALK_PED        2
#define WALK_GANGSTA    3
#define WALK_GANGSTA2   4
#define WALK_OLD        5
#define WALK_FAT_OLD    6
#define WALK_FAT        7
#define WALK_LADY      	8
#define WALK_LADY2      9
#define WALK_WHORE      10
#define WALK_WHORE2     11
#define WALK_DRUNK     	12
#define WALK_BLIND     	13
//- Sistema de evento PURGA
#define D_PURGASHOP                 (415)

new walktime[MAX_PLAYERS];
new WalkStyle[MAX_PLAYERS];

//- Macros    //
#define SetPVarInt(%0,%1,0); 		        DeletePVar(%0,%1);
#define _GiveWeapon							GivePlayerWeapon
#define ColocarObject                       SetPlayerAttachedObject //  Coloca el objeto<.
#define ReiniciarDinero                     ResetPlayerMoney // Reinicia el dinero
#define ActualizarDinero 				    GivePlayerMoney
#define TextoPantalla   					GameTextForPlayer // Textos en la pantalla cuando usan determinados comandos.
#define Dialog(                             ShowPlayerDialog(
#define ComprobarDineroJ(%0) 			    GetPVarInt(%0, "Money")
#define Mensaje_ 			                SendClientMessage
#define EnviarMensajeTodos 			        SendClientMessageToAll // Se utiliza normalmente en el /ao - /aoa
#define funcion%0(%1) 				        forward %0(%1); public %0(%1)
#define Loop(%0,%1,%2)                      for(new %0 = %2; %0 < %1; %0++)
#define NombreVehiculo(%0) 			        nombre_vehiculo[GetVehicleModel(%0)-400] // este es importante da las variables del vehiculo
#define	_enPos(%2,%1,%3,%4,%5)			  	IsPlayerInRangeOfPoint(%2,%1,%3,%4,%5)
#define Formato(%1,              			format(%1,sizeof(%1),
#define TOTAL_MODS  (36)  // quitarlo??--2.0.x
#define IsValidComponent(%1)  \
									(1000 <= (%1) <= 1193)
#define IsVehicleValidModel(%1) \
									(400 <= (%1) <= 611)


//- Dialog's -- define de diálogos -- estructura general --
#define D_INVALIDO      		   (0)

#define D_INGRESO					(2)
#define D_REGISTRO					(3)
#define D_SEXO						(4)
#define D_EDAD						(5)
#define D_NACIONALIDAD				(6)
#define D_RPARTE_1					(7)
#define D_RPARTE_2					(8)
#define D_TEST0						(9)
#define D_TEST1						(10)
#define D_TEST2						(11)
#define D_TEST3						(12)
#define D_TEST4						(13)
#define D_TEST5						(14)
#define D_TEST6						(15)
#define D_TEST7						(16)
#define D_TEST8						(17)
#define D_TEST9						(18)
#define	D_CUENTA					(19)
#define D_CUENTA2					(20)
#define D_CUENTA3					(21)
#define D_CUENTA4					(22)
#define D_CUENTA5					(23)
#define D_CUENTA6					(24)
#define D_Iempresa					(25)
#define D_VehEmpresa				(26)
#define D_INVENTARIO				(27)
#define D_CINTURON					(28)
#define D_TELEFONO					(29)
#define D_TELEFONO2					(30)
#define D_TELEFONO3					(31)
#define D_TELEFONO4					(32)
#define D_TELEFONO5					(33)
#define D_TELEFONO6					(34)
#define D_TELEFONO7					(35)
#define D_TELEFONO8					(36)
#define D_AYUDA						(37)
#define D_AYUDA2					(38)
#define	D_BANCO						(39)
#define D_BANCOR					(40)
#define D_BANCOD					(41)
#define D_BANCOT					(42)
#define D_BANCOT2					(43)
#define D_Carmario					(44)
#define D_Carmario2					(45)
#define D_PDarmario					(46)
#define D_ArmarioN					(47)
#define D_Farmario					(48)
#define D_TRABAJOS					(49)
#define D_TRABAJOS2					(50)
#define D_LUGARES					(51)
#define D_LUGARES_2					(52)
#define D_LUGARES_3					(53)
#define D_LUGARES_4					(54)
#define D_LUGARES_5					(55)
#define D_GPS						(56)
#define D_LOCALIZAR					(57)
#define D_LOCALIZAR2				(58)
#define D_PDmecanico				(59)
#define D_Cvehiculo1				(60)
#define D_Cvehiculo2				(61)
#define D_Uvehiculo1				(62)
#define D_Uvehiculo2				(63)
#define D_SALDO						(64)
#define	D_FOGATA					(65)
#define D_AYUNTAMIENTO				(66)
#define D_LICENCIAS					(67)
#define D_PUERTO					(68)
#define D_BOOMBOX					(69)
#define D_BOOMBOX1					(70)
#define D_BOOMBOX2					(71)
#define	D_FOpciones					(72)
#define D_Fdinero					(73)
#define D_FdineroD					(74)
#define D_FdineroR					(75)
#define D_Mnegro					(76)
#define D_Cdnifalso					(77)
#define D_Cdnifalso2				(78)
#define D_Ifamilia					(79)
#define D_Ifaccion					(80)
#define D_OpTaller					(81)
#define D_Treparacion				(82)
#define	D_Tmecanico0				(83)
#define	D_Tmecanico1				(84)
#define	D_Tmecanico2				(85)
#define	D_Tmecanico3				(86)
#define	D_Tmecanico4				(87)
#define D_VEHMENU					(88)
#define D_MusiCar					(89)
#define D_MusiCar2					(90)
#define D_MusiCar3					(91)
#define D_Ilista					(92)
#define D_Ibuscar					(93)
#define D_Cuotas					(94)
#define D_ACCESORIOS				(95)
#define D_ACCESORIOS2				(96)
#define D_ACCESORIOS3				(97)
#define D_ACCESORIOS4				(98)
#define D_COMPRARTOY				(99)
#define D_COMPRARTOY2				(100)
#define D_COMPRARTOYVIP				(101)
#define D_COMPRARTOYVIP2			(102)
#define D_COMPRARTOYPD				(103)
#define D_COMPRARTOYPD2				(104)
#define D_COMPRARTOYPD3				(105)
#define D_QUITARTUNNING				(106)
#define D_ESTEREO					(107)
#define D_CASIVIPSKIN				(108)
#define	D_PREMIUMS					(109)
#define D_VEHMENU2					(110)
#define D_VIPCASILLERO				(111)
#define D_VIPTRABAJO				(112)
#define D_VIPTRABAJO2				(113)
#define	D_MULTA						(114)
#define D_CAMELLO					(115)
#define D_FABRICA					(116)
#define D_DrogaP					(117)
#define D_Praticar					(118)
#define D_MENUMALETERO				(119)
#define D_MENUMALETERO2				(120)
#define D_MENUMALETERO3				(121)
#define D_MENUMALETERO4				(122)
#define D_MENUMALETERO5				(123)
#define D_MENUMALETEROF				(124)
#define D_MENUGUANTERA				(125)
#define D_Color1					(126)
#define D_Color2					(127)
#define D_AGENDA					(128)
#define D_AGENDA2					(129)
#define D_AGENDA3					(130)
#define D_AGENDA4					(131)
#define D_ELEGIRROPA				(132)
#define D_EDITARROPA				(133)
#define D_EDITARROPA2				(134)
#define D_MUEBLES					(135)
#define D_MUEBLES2					(136)
#define D_MUEBLES3					(137)
#define D_MUEBLES4					(138)
#define D_TIENDA247					(139)
#define D_LOTERIA					(140)
#define D_ROPA						(141)
#define D_RESTAURANTES				(142)
#define D_AMMUNATION				(143)
#define D_CLUCKINBELL				(144)
#define D_BURGERSHOT				(145)
#define D_PIZZASTACK				(146)
#define D_SEXSHOP					(147)
#define D_SEXSHOP2					(148)
#define D_SEXSHOP3					(149)
#define D_SEXSHOP4					(150)
#define D_GASOLINERA				(151)
#define D_ELECTRONICA				(152)
#define D_FERRETERIA				(153)
#define D_FERRETERIA2				(154)
#define D_AMMUNATION2				(155)
#define D_COMPRAELCVEH				(156)
#define	D_Peluqueria1				(157)
#define	D_Peluqueria2				(158)
#define	D_Peluqueria3				(159)
#define D_Empeno					(160)
#define D_Empeno2					(161)
#define D_NEG_CLUBS					(162)
#define	D_PCLSPD0					(163)
#define	D_PCLSPD1					(164)
#define	D_PCLSPD2					(165)
#define	D_PCLSPD3					(166)
#define	D_PCLSPD4					(167)
#define D_Cdnifalso3				(168)
//casa
#define D_CASA_OPCIONES    	       (201)
#define D_CASA_DINERO    		   (202)
#define D_CASA_DINERO_R    		   (203)
#define D_CASA_DINERO_D			   (204)
#define D_CASA_MUEBLES    		   (205)
#define D_CASA_MUEBLE_C  		   (206)
#define D_CASA_MUEBLE_G  		   (207)
#define D_CASA_MUEBLE_E  		   (208)
#define D_CASA_MUEBLE_V  		   (209)
#define D_CASA_MUEBLE_B 		   (210)
#define D_NOMBRECASA               (211)
//negocio
#define D_NEGOCIO_OPCIONES         (212)
#define D_NEGOCIO_NOMBRE           (213)
#define D_NEGOCIO_DINERO       	   (214)
#define D_NEGOCIO_PRODUCTOS        (215)

#define D_NEGOCIO_MUEBLES    	   (219)
#define D_NEGOCIO_MUEBLE_C  	   (220)
#define D_NEGOCIO_MUEBLE_G  	   (221)
#define D_NEGOCIO_MUEBLE_E  	   (222)
#define D_NEGOCIO_MUEBLE_V  	   (223)
#define D_NEGOCIO_MUEBLE_B 		   (224)
//garaje
#define D_GARAGE_MUEBLES    	   (226)
#define D_GARAGE_MUEBLE_C  		   (227)
#define D_GARAGE_MUEBLE_G  		   (228)
#define D_GARAGE_MUEBLE_E  		   (229)
#define D_GARAGE_MUEBLE_V  		   (230)
#define D_GARAGE_MUEBLE_B 		   (231)
//empresa
#define D_empresa_O (240)
#define D_empresa_O2 (241)
#define D_empresa_O3 (242)
#define D_empresa_O4 (243)
#define D_empresa_O5 (244)
#define D_empresa_O6 (245)
#define D_empresa_O7 (246)
#define D_EMPRESA_MUEBLES    	   (247)
#define D_EMPRESA_MUEBLE_C  		   (248)
#define D_EMPRESA_MUEBLE_G  		   (249)
#define D_EMPRESA_MUEBLE_E  		   (250)
#define D_EMPRESA_MUEBLE_V  		   (251)
#define D_EMPRESA_MUEBLE_B 		   (252)
#define DIALOGO_EMPRESA				(253)
#define DIALOGO_EMPRESA2			(254)
#define D_EMPRESA_MUEBLE_2 		   (257)

#define D_Repartos					(256)
//graffiti
#define D_GRAFFITI					(300)
#define D_GRAFFITI1					(301)
#define D_GRAFFITI2					(302)
#define D_GRAFFITI3					(303)
#define D_GRAFFITI4					(304)
//equipo
#define D_EQUIPOLSPD1			(400)
#define D_EQUIPOLSPD2			(401)
#define D_EQUIPOLSPD3			(402)
#define D_EQUIPOLSPD4			(403)
#define D_EQUIPOSAN				(404)
#define D_EQUIPOALC				(405)
#define D_EQUIPOLSED			(406)

// Panel de Camionero -- 2.X block
#define P_CAMIONERO             (412)


//Model's
#define	D_UNIFORMESPD              (500)
#define	D_UNIFORMESSAN             (501)
#define	D_UNIFORMESALC             (502)
#define	D_UNIFORMESES              (503)
#define	D_OBJETOS_TRAFICO          (504)
#define D_OBJETOSADMIN             (505)
#define	D_MODELOS                  (507)
#define D_Pesca					   (508)

//Armas maleteros LSPD 2.X Courier
#define L_GUNRACK (509)
//Colores
#define C_VIP 					(0xC93CCEFF)
#define C_GRIS                  (0xb0b0b0FF)
#define C_ROJO                  (0xFF0000FF)
#define C_LIGHTBLUE 	        (0x33CCFFFF)
#define C_GCRP                  (0x00C200FF)
#define C_AZUL 					(0x2641FEFF)
#define C_FADE1 				(0xE6E6E6FF)
#define C_FADE2 				(0xC8C8C8FF)
#define C_FADE3 				(0xAAAAAAFF)
#define C_FADE4 				(0x8C8C8CFF)
#define C_FADE5 				(0x6E6E6EFF)
#define C_GRAD1 				(0xB4B5B7FF)
#define C_GRAD2 				(0xBFC0C2FF)
#define C_GRAD3 				(0xCBCCCEFF)
#define C_GRAD4 				(0xD8D8D8FF)
#define C_GRAD5 				(0xE3E3E3FF)
#define C_GRAD6 				(0xF0F0F0FF)
#define C_VERDE		 			(0x1EB032FF)
#define C_ROJO2 				(0xFF6F6FFF)
#define C_BLANCO 			    (0xFFFFFFFF)
#define C_PLAYERBLANCO 			(0xFFFFFF00)
#define C_AMARILLO 	     	    (0xFFF000FF)
#define C_COLORPOLICIA   		(0x8D8DFFFF)
#define C_COLORRADIO    		(0x9B9BFFFF)

forward RemoveBuildingForPlayerEx(playerid);

//*new'

new
	m_operacion[MAX_PLAYERS][6],
	id_tune[MAX_PLAYERS],
	e_tune[MAX_PLAYERS],
	veh_tune[MAX_PLAYERS],
	pieza_tune[MAX_PLAYERS][11],
	pago_tune[MAX_PLAYERS];

new
    SanMusic,
	clima = 14,
	Anuncios = 0,
	FalsoPD = 0,
	_sanCall = -1,
	pickupspf[7],
	ActFondos = 0,
	ActRegistro = 1,
	ActTest = 0, // Test de rol desactivado // con comando admin dentro del juego jeje (cmblock v.0.7)
	UsandoGym[6] = 0,
	nivelexp = 10,
	DobleExperiencia = 0,
	RobarBanco = 0,
	DineroLoteria = 0,
	DineroEstado = 0,
	ValorImpuestos = 0,
	Regalo = 1,
	CajadeRegalo,
	Text3D: dynamicgift3DText,
	_Tusando[MAX_PLAYERS],
	_Logeo[MAX_PLAYERS],
	_rVeh[MAX_PLAYERS],
	usandoYo[MAX_PLAYERS],
	_Minero[MAX_PLAYERS],
	_Piedras[MAX_PLAYERS],
	_Minando[MAX_PLAYERS],
	pescando[MAX_PLAYERS],
	pescador[MAX_PLAYERS],
	pesca[MAX_PLAYERS],
	_Pesca[MAX_PLAYERS],
	cocherobo[MAX_PLAYERS],
	checkcoche[MAX_PLAYERS],
	veh_asiento[MAX_PLAYERS],
	r_negocio[MAX_PLAYERS],
	r_vehiculo[MAX_PLAYERS],
	compra_Veh[MAX_PLAYERS],
	Float:TallerX[MAX_VEHICLES],
	Float:TallerY[MAX_VEHICLES],
	Float:TallerZ[MAX_VEHICLES],
	Float:TallerAngulo[MAX_VEHICLES],
	EnTaller[MAX_PLAYERS],
	asesino[MAX_PLAYERS],
	Pedido[MAX_PLAYERS],
	_arma[MAX_PLAYERS],
	PrestadorCoche[MAX_PLAYERS],
	LlavePrestada[MAX_PLAYERS],
	PlayerText:TextTrabajo[MAX_PLAYERS],
	PlayerText:TextLogin[MAX_PLAYERS][3], // Este es el del login al server
	PlayerText:Textdraw1[MAX_PLAYERS],
    PlayerText:textopantalla1[MAX_PLAYERS],
    PlayerText:textopantalla2[MAX_PLAYERS],
	idrobado[MAX_PLAYERS],
	Text3D:estado[MAX_PLAYERS],
	NumeroMensaje[MAX_PLAYERS],
	EnLlamada[MAX_PLAYERS],
	ToqueLlamada[MAX_PLAYERS],
	PersonaEnLlamada[MAX_PLAYERS],
	ToqueLlamadaTimer[MAX_PLAYERS],
	Altavoz[MAX_PLAYERS],
	CasaActual[MAX_PLAYERS] = {INVALID_CASA_ID, ...},
	OBJ_MuebleC[MAX_PLAYERS][MAX_MUEBLES_C],
	NegocioActual[MAX_PLAYERS] = {INVALID_NEGOCIO_ID, ...},
	OBJ_MuebleN[MAX_PLAYERS][MAX_MUEBLES_N],
	GarageActual[MAX_PLAYERS] = {INVALID_CASA_ID, ...},
	OBJ_MuebleG[MAX_PLAYERS][MAX_MUEBLES_G],
	EmpresaActual[MAX_PLAYERS] = {INVALID_CASA_ID, ...},
	OBJ_MuebleE[MAX_PLAYERS][MAX_MUEBLES_E],
	DentroCasa[MAX_PLAYERS],
	DentroNegocio[MAX_PLAYERS],
	DentroEmpresa[MAX_PLAYERS],
	DentroGarage[MAX_PLAYERS],
	IDNegocio[MAX_PLAYERS],
	BuscarTrabajo[MAX_PLAYERS],
	YaAviso[MAX_PLAYERS],
	TipoTunning[MAX_PLAYERS][TOTAL_MODS],
	TestErrores[MAX_PLAYERS],
	JugadorEnSeccion[MAX_PLAYERS char],
	VehCallSign[MAX_VEHICLES],
	Text3D:TextCallSign[MAX_VEHICLES],
	estacionp[MAX_PLAYERS],
	escuchandop[MAX_PLAYERS],
	estacionveh[MAX_VEHICLES],
	Esposado[MAX_PLAYERS],
	RecargarTiempo[MAX_PLAYERS],
	VehiculoGasolina[MAX_PLAYERS],
	GasolinaInicialVeh[MAX_VEHICLES] = 200,
	VehicleStatus[MAX_VEHICLES char] = 0,
	arr_Engine[MAX_VEHICLES char],
	Float: _vVelocidad[MAX_PLAYERS],
	Taseado[MAX_PLAYERS],
	_Gomas[MAX_PLAYERS],
	TaserRecarga[MAX_PLAYERS],
	RanuraSeleccionadaA[MAX_PLAYERS],
	EditandoObjetoJ[MAX_PLAYERS],
	RanuraSeleccionada[MAX_PLAYERS],
	RanuraObjCSeleccionada[MAX_PLAYERS],
	RanuraObjNSeleccionada[MAX_PLAYERS],
	MultaPrecio[MAX_PLAYERS],
	MultaOfrecer[MAX_PLAYERS],
	FacturaMulta[MAX_PLAYERS],
	MostrarNombre[MAX_PLAYERS],
	PressBancaBarraObjeto[6],
	HaciendoPressBanca[MAX_PLAYERS],
	ProgresoPressBanca[MAX_PLAYERS],
	RepeticionesPressBanca[MAX_PLAYERS],
	Spectando[MAX_PLAYERS],
	Spectate[MAX_PLAYERS],
	SpectadorID[MAX_PLAYERS],
	Atado[MAX_PLAYERS],
	Vendado[MAX_PLAYERS],
	VendasYSoga[MAX_PLAYERS],
	Text: EfectoCrack,
	Text: EfectoPorro,
	Text: EfectoCocaina,
	Text: EfectoHeroina,
	Consumiendo[MAX_PLAYERS],
	ReporteA[MAX_PLAYERS],
	ReporteB[MAX_PLAYERS],
	TiempoReporte[MAX_PLAYERS],
	ReporteT[MAX_PLAYERS][128],
	DudaTimer[MAX_PLAYERS],
	DudaA[MAX_PLAYERS] = 0,
	DudaB[MAX_PLAYERS] = 0,
	DudaT[MAX_PLAYERS][128],
	Casco[MAX_PLAYERS],
	VisitaTimer[MAX_PLAYERS],
	VisitaTimer2[MAX_PLAYERS],
	MuertoTimer[MAX_PLAYERS],
	Comandos[MAX_PLAYERS][20],
	FloodComandos[MAX_PLAYERS],
	MuebleActual[MAX_PLAYERS],
	Text3D: LabelTroncos,
	TroncosDis = 0,
	ObjetoIDs[] = {1814, 1817, 2083, 1811},
	Granjero[MAX_PLAYERS],
	Carpintero[MAX_PLAYERS],
	Carguero[MAX_PLAYERS],
	Lenador[MAX_PLAYERS],
	VehSeguro[MAX_VEHICLES],
	TruckDeliver[MAX_PLAYERS],
	gPlayerCheckpointStatus[MAX_PLAYERS],
	_Contenido[MAX_VEHICLES] = 0,
	_CamVeh[MAX_PLAYERS] = INVALID_VEHICLE_ID,
	Text: TextPurga0, // Agregado sistema de evento-purga por Courier -- 14/03 --2.X
	Text: TextPurga1,
	Text: TextPurga2,
	Text: TextPurga3,
	Text: TextPurga4,
	Text: TextPurga5,
	Paquetes[MAX_PLAYERS],
	Fac5_ = 0,
	_MedicCall = 999,
	_MedicAcept[MAX_PLAYERS],
	_Medic2Call[MAX_PLAYERS],
	_BombCall = 999,
	_BombAcept[MAX_PLAYERS],
	_Bomb2Call[MAX_PLAYERS],
	Fac2_ = 0,
	SangreLSED = 1000,
	NumeroFaccion[MAX_PLAYERS],
	NumeroFamilia[MAX_PLAYERS],
	NumeroEmpresa[MAX_PLAYERS],
	NombreFaccion[MAX_PLAYERS][40],
	TomandoTrabajo[MAX_PLAYERS],
	fInvitadoP[MAX_PLAYERS],
	fIDfamilia[MAX_PLAYERS],
	BalasDeGoma[MAX_PLAYERS],
	VehicleWindows[MAX_VEHICLES] = 0,
	PrivadosB[MAX_PLAYERS] = 0,
	B_Musica[MAX_PLAYERS],
	B_Manos[MAX_PLAYERS],
	B_Pecho[MAX_PLAYERS],
	B_OOC[MAX_PLAYERS],
	B_VIP[MAX_PLAYERS],
	B_SAN[MAX_PLAYERS],
	B_Radio[MAX_PLAYERS],
	B_Admin[MAX_PLAYERS],
	B_Faccion[MAX_PLAYERS],
	B_Familia[MAX_PLAYERS],
	B_WSP[MAX_PLAYERS],
	B_Privados[MAX_PLAYERS],
	VerPrivados[MAX_PLAYERS],
	B_Telefono[MAX_PLAYERS],
	B_SANMUSIC[MAX_PLAYERS],
	JugadorSentado[MAX_PLAYERS],
	EnCasaID[MAX_PLAYERS],
	Saludo_ID[MAX_PLAYERS],
	alcoholemia[MAX_PLAYERS],
	EnServicio[MAX_PLAYERS],
	EnServicioPD[MAX_PLAYERS],
	EnServicioADM[MAX_PLAYERS],
	CasaOffer[MAX_PLAYERS],
	CasaPrice[MAX_PLAYERS],
	NegocioOffer[MAX_PLAYERS],
	NegocioPrice[MAX_PLAYERS],
	_VehID[MAX_PLAYERS],
	_Vehprecio[MAX_PLAYERS],
	_Vehdueno[MAX_PLAYERS],
	PlayerText: Velocimetro[MAX_PLAYERS],
	GiveKeysTo[MAX_PLAYERS],
	QuienManejo[MAX_PLAYERS],
	PagarTiempo[MAX_PLAYERS],
	CederTiempo[MAX_PLAYERS],
	PrecioFianza[MAX_PLAYERS],
	QuienMato[MAX_PLAYERS][24],
	MusicaEsc[MAX_PLAYERS],
	VehGuanteraPlayer[MAX_PLAYERS],
	VehMaleteroPlayer[MAX_PLAYERS],
	SolicitaRefuerzos[MAX_PLAYERS],
	NoRefAuto[MAX_PLAYERS],
	BotonPanico[MAX_PLAYERS],
	ReparacionPrecio[MAX_PLAYERS],
	ReparacionOfrecer[MAX_PLAYERS],
	ReparacionVehiculo[MAX_PLAYERS],
	ObjetosRep[MAX_PLAYERS],
	_Entrevista[MAX_PLAYERS],
	_2Entrevista[MAX_PLAYERS],
	DocumentoNombre[MAX_PLAYERS][32],
	JugadorUsandoAnimacion[MAX_PLAYERS],
	SinSonido[MAX_VEHICLES],
	SirenaCoche[9][MAX_VEHICLES],
	JetPack[MAX_PLAYERS],
	CurrentMoney[MAX_PLAYERS],
	BigEar[MAX_PLAYERS],
	Intentar[MAX_PLAYERS],
	Intentar2[MAX_PLAYERS],
	IntentarD[MAX_PLAYERS],
	UsandoOptiwand[MAX_PLAYERS],
	jPt_fabrica[MAX_PLAYERS],
	Text: Hora2,
	Text: InicioTXT,
	MostrarHora[MAX_PLAYERS],
	MostrarVelocimetro[MAX_PLAYERS],
	xMeses[MAX_PLAYERS],
	xDias[MAX_PLAYERS]
	;

//*portones, puertas, vehículos, catalogos
new
	portonSAN,
	portonSAN1,
	portondeposito,
	portonpf,
	PuertaLSPDINT,
	BotonPuertaLSPDINT,
	BotonPuertaLSPDINT1,
	PuertaSasd,
	BotonPuertaSasd,
	BotonPuertaSasd1,
	LSPDVehicle[106],
	SASDVehicle[51],
	LSEDVehicle[25],
	SANVehicle[7],
	GOBVehicle[4],
	CamioneroVehicle[13],
	Pes_Veh[6],
	GranjeroVehicle[10],
	VehiculoRentable[5],
	SkinsHombre = mS_INVALID_LISTID,
	SkinsMujer = mS_INVALID_LISTID,
	AccesoriosN = mS_INVALID_LISTID,
	AccesoriosVIP = mS_INVALID_LISTID,
	MueblesCasa = mS_INVALID_LISTID,
	MueblesNegocios = mS_INVALID_LISTID,
	MueblesGarages = mS_INVALID_LISTID,
	MueblesTalleres = mS_INVALID_LISTID,
	MueblesRepartos = mS_INVALID_LISTID
;

//Colores en los Mensajes para simplificar en programación y optimizar líneas
new AccionesColors[20] =
{
	0xACC97F22A, // 0 - /me
	0xC2A2DAAA, // 1 - /ame
	0x9EC73DAA, // 2 - /do
	0xFFFFFFFF, // 3 - /g
	0xFAD98CFF, // 4 - /s
	0xFF9B6AFF // 5 - /m
};

new Float: AccionesRadios[20] =
{
	30.0, // 0 - /me
	30.0, // 1 - /ame
	35.0, // 2 - /do
	50.0, // 3 - /g
	3.0, // 4 - /s
	60.0 // 5 - /m
};

//----DATABASE--- Información de jugadores (se tienen que sincronizar con mysql para la v3 si o si) (conexión via php ftp actual v.2)
enum jInfo
{
	jClave[24], // Contraseña
	jRegistrado, // Registrado
	jSexo, // Sexo
	jEdad, // Edad
	jCiudad, // Ciudad
	jIdioma, // Idioma
	jEstilo, // Estilo de caminar
	jPelea, // Tipo de pelea
	jSed, // Sed
	jHambre, // Hambre
	jAlcohol, // Alcohol
	jFuerza, // Fuerza
	jDinero, // Dinero
	jBanco, // Dinero Banco
	jDebito, // Número tarjeta de débito
	jNivel, // Nivel
	jExperiencia, // Experiencia
	j_Horas, // Horas Conectado
	Float: jPosicion_X, //
	Float: jPosicion_Y, //
	Float: jPosicion_Z, //
	Float: jPosicion_R, //
	Float: jSangre, // Vida del personaje
	Float: jChaleco, // Chaleco
	jInterior, // Interior
	jVirtualWorld, // VirtualWorld
	jIP[32], // IP
	jMulticuenta, // .
	jBaneado, // Baneado
	jAdmin, // Variable Admin
	jEncargado[5], // Variables de encargado
	jCasaKey, // Casa
	jCasaKey2, // Casa 2
	jCasaRenta, // Casa en renta
	jCasaLlaves, // Llaves de casa
	jNegocioKey, // Negocio
	jNegocioKey2, // Negocio 2
	jNegocioLlaves, // Llaves de casa
	jEmpresaKey, // Empresa
	jEmpresaLlaves, // Llaves de empresa
	jContrato, // Contrato en empresa
	jLlaveCoche[6],
	jLlaveCochePrestado[6],
	jPremium, // Sistema vip
	jColorP, // Color vip
	jCoins, // Coins - moneda real (UScoins)
	jD_premium, // Día del fin del vip
	jM_premium, // Mes del fin del vip
	jGraffitiE,
	jBolsillo[10], //
	jBolsilloCant[10], //
	jm_Izquierda, //
	jm_IzquierdaCant, //
	jm_Derecha, //
	jm_DerechaCant, //
	jEspalda, //
	jEspaldaCant, //
	jCinturon[6], //
	jCinturonCant[6], //
	jRopa, // Ropa
	jRopaArmario[MAX_ROPA], // Ropa armarios
	jLider, // Lider fac
	jMiembro, // Miembro fac
	jRango, // Rango fac
	jDivision, // División fac
	jLiderFam, // Lider fam
	jMiembroFam, // Miembro fam
	jRangoFam, // Rango fam
	jMuerto, // Muerto
	jMuerto2, // Muerto
	jTelefono, // Número de teléfono
	jSaldo, // Saldo de teléfono
	jAgenda, // Agenda
	jFrecuencia, // Frecuencia de radio
	jBoombox, // Equipo de sonido
	jLoteria, // número de loteria
	jMascara, // Mascara
	jEstrellas, // Busqueda policial
	jArrestos, // Arrestos IC
	jSanciones, // Arrestos OOC
	jEncarcelado, // Encarcelado
	jSancionador[50], //- Sancionador ooc
	jTiempoCarcel, // Tiempo de arresto
	jCargas, // Cargas realizadas
	jMuebles, // Muebles creados
	jTroncos, // Troncos creados
	jPescados, // Pescados
	jCosechas, // Cosechas de granjero
	jEscombros, // Escombros
	jMateriales, // Materiales
	jPinturas, // Potes de pintura
	jGanzuas, // Ganzuas
	jLineas, // Lineas
	jCarnadas, // Carnadas
	jCheques, // Paga de cheque
	jTrabajo1, // Trabajo 1
	jTrabajo2, // Trabajo 2
	jTrabajo3, // Trabajo 3
	jLicencias[7], // Licencias
	jHabilidad[8], // Habilidades
	jHabilidad2[8], // Habilidades
	jE_Uso, // Estado - Uso
	jE_Color, // Estado - Color
	jE_Texto[60], // Estado - Texto
	jDocumento, // Documento legal
	jf_Edad, // Edad ilegal
	jf_Dni, // Documento ilegal
	jf_Nombre[32], // Nombre del documento ilegal
	jDelito1[32], // Antecedente
	jDelito2[32], // Antecedente
	jDelito3[32], // Antecedente
	jDelito4[32], // Antecedente
	jDelito5[32],
	jDelito6[32],
	jDelito7[32],
	jDelito8[32],
	jDelito9[32],
	jDelito10[32], // Antecedente
	jDelito[10], // Antecedente
	jContacto[20], // Contactos de agenda telefónica
	jContactoN1[32], // Contactos de agenda telefónica
	jContactoN2[32], // Contactos de agenda telefónica
	jContactoN3[32], // Contactos de agenda telefónica
	jContactoN4[32], // Contactos de agenda telefónica
	jContactoN5[32], // Contactos de agenda telefónica
	jContactoN6[32], // Contactos de agenda telefónica
	jContactoN7[32], // Contactos de agenda telefónica
	jContactoN8[32], // Contactos de agenda telefónica
	jContactoN9[32], // Contactos de agenda telefónica
	jContactoN10[32], // Contactos de agenda telefónica
	jContactoN11[32], // Contactos de agenda telefónica
	jContactoN12[32], // Contactos de agenda telefónica
	jContactoN13[32], // Contactos de agenda telefónica
	jContactoN14[32], // Contactos de agenda telefónica
	jContactoN15[32], // Contactos de agenda telefónica
	jContactoN16[32], // Contactos de agenda telefónica
	jContactoN17[32], // Contactos de agenda telefónica
	jContactoN18[32], // Contactos de agenda telefónica
	jContactoN19[32], // Contactos de agenda telefónica
	jContactoN20[32], // Contactos de agenda telefónica
	jTiempos[20], // Tiempos
	jHoras, // Última hora conectado
	jMinutos, // Último minuto conectado
	jSegundos, // Último segundo conectado
	jDias, // Último día conectado
	jMeses, // Último mes conectado
	jAnos, // Último Año conectado
	jAudio1[128], // Audio 1
	jAudio2[128], // Audio 2
	jAudio3[128], // Audio 3
	jSerial, // Cliente
	jPayday, // Tiempo payday
	jT_fabrica, // Tiempo de fabrica
	jI_fabrica, // Intentos de fabrica
	jT_fabrica2, // tiempo de fabrica cargadores
	jI_fabrica2, // intento de fabrica cargadores
	jBtiempo,
	jBculpable[32],
	jBrazon[128],
	jBmomento[150],
	jPiedras,
	jTickets,
	jPuntosRol,
	jAdiccion[6],
	jHorasE,
	jMotel,
	jEmpeno[5],
	jEmpeno2[5],
	jCambioN,
	//-  DATOS QUE NO SE GUARDAN --- CUANDO USUARIO DESCONECTA SE PIERDEN --- CMBlock (No da problems) sino se crearia bug el inventario si el player se desconecta y aparece en la mano.
	jPaquetes, // Paquete encima
	jRescatePolicial, // Llamado policial
	jTiempoGuardado, // Tiempo de guardado
	jTiempoCurar, // Tiempo en curar
	j_Mascara, // Mascara usando
	jTiempoServicio, // Tiempo en servicio
	jSQLID, // ID de usuario en base de datos
	//-
	State,
	IsCheckUser,
	SaveAfterAgenda[60],
};
new user[MAX_PLAYERS][jInfo];

//---Vehículos de faccciones fijos--- CMBlock -- se tiene que crear comando para v3 o v4 de crearlos in game (futuros)
enum vfcInfo
{
	vMaletero[12],
	vMaleteroCantidad[12],
};
new InfoFacVeh[210][vfcInfo];

stock ActualizarVehFac(vehid)
{
	new vehd[64];
	format(vehd, 64, DATOS_VEHICULOS_F, vehid);
	new INI: File = INI_Open(vehd);
	INI_SetTag(File, "Informacion");
	INI_WriteInt(File, "Maletero_1", InfoFacVeh[vehid][vMaletero][0]);
	INI_WriteInt(File, "Maletero_2", InfoFacVeh[vehid][vMaletero][1]);
	INI_WriteInt(File, "Maletero_3", InfoFacVeh[vehid][vMaletero][2]);
	INI_WriteInt(File, "Maletero_4", InfoFacVeh[vehid][vMaletero][3]);
	INI_WriteInt(File, "Maletero_5", InfoFacVeh[vehid][vMaletero][4]);
	INI_WriteInt(File, "Maletero_6", InfoFacVeh[vehid][vMaletero][5]);
	INI_WriteInt(File, "Maletero_7", InfoFacVeh[vehid][vMaletero][6]);
	INI_WriteInt(File, "Maletero_8", InfoFacVeh[vehid][vMaletero][7]);
	INI_WriteInt(File, "Maletero_9", InfoFacVeh[vehid][vMaletero][8]);
	INI_WriteInt(File, "Maletero_10", InfoFacVeh[vehid][vMaletero][9]);
	INI_WriteInt(File, "Maletero_11", InfoFacVeh[vehid][vMaletero][10]);
	INI_WriteInt(File, "Maletero_12", InfoFacVeh[vehid][vMaletero][11]);
	INI_WriteInt(File, "Maletero_Cantidad_1", InfoFacVeh[vehid][vMaleteroCantidad][0]);
	INI_WriteInt(File, "Maletero_Cantidad_2", InfoFacVeh[vehid][vMaleteroCantidad][1]);
	INI_WriteInt(File, "Maletero_Cantidad_3", InfoFacVeh[vehid][vMaleteroCantidad][2]);
	INI_WriteInt(File, "Maletero_Cantidad_4", InfoFacVeh[vehid][vMaleteroCantidad][3]);
	INI_WriteInt(File, "Maletero_Cantidad_5", InfoFacVeh[vehid][vMaleteroCantidad][4]);
	INI_WriteInt(File, "Maletero_Cantidad_6", InfoFacVeh[vehid][vMaleteroCantidad][5]);
	INI_WriteInt(File, "Maletero_Cantidad_7", InfoFacVeh[vehid][vMaleteroCantidad][6]);
	INI_WriteInt(File, "Maletero_Cantidad_8", InfoFacVeh[vehid][vMaleteroCantidad][7]);
	INI_WriteInt(File, "Maletero_Cantidad_9", InfoFacVeh[vehid][vMaleteroCantidad][8]);
	INI_WriteInt(File, "Maletero_Cantidad_10", InfoFacVeh[vehid][vMaleteroCantidad][9]);
	INI_WriteInt(File, "Maletero_Cantidad_11", InfoFacVeh[vehid][vMaleteroCantidad][10]);
	INI_WriteInt(File, "Maletero_Cantidad_12", InfoFacVeh[vehid][vMaleteroCantidad][11]);
	INI_Close(File);
	return 1;
}

funcion CargarFacVeh()
{
	new vehd[64];
	for (new vehid = 0; vehid < sizeof(InfoFacVeh); vehid++)
	{
		format(vehd, 64, DATOS_VEHICULOS_F, vehid);
		INI_ParseFile(vehd, "CargarFacVeh_data", .bExtra = true, .extra = vehid);
	}
	printf("» Sistema de maleteros de facciones cargado (150).");
	return 1;
}

funcion CargarFacVeh_data(vehid, name[], value[])
{
	INI_Int("Maletero_1", InfoFacVeh[vehid][vMaletero][0]);
	INI_Int("Maletero_2", InfoFacVeh[vehid][vMaletero][1]);
	INI_Int("Maletero_3", InfoFacVeh[vehid][vMaletero][2]);
	INI_Int("Maletero_4", InfoFacVeh[vehid][vMaletero][3]);
	INI_Int("Maletero_5", InfoFacVeh[vehid][vMaletero][4]);
	INI_Int("Maletero_6", InfoFacVeh[vehid][vMaletero][5]);
	INI_Int("Maletero_7", InfoFacVeh[vehid][vMaletero][6]);
	INI_Int("Maletero_8", InfoFacVeh[vehid][vMaletero][7]);
	INI_Int("Maletero_9", InfoFacVeh[vehid][vMaletero][8]);
	INI_Int("Maletero_10", InfoFacVeh[vehid][vMaletero][9]);
	INI_Int("Maletero_11", InfoFacVeh[vehid][vMaletero][10]);
	INI_Int("Maletero_12", InfoFacVeh[vehid][vMaletero][11]);
	INI_Int("Maletero_Cantidad_1", InfoFacVeh[vehid][vMaleteroCantidad][0]);
	INI_Int("Maletero_Cantidad_2", InfoFacVeh[vehid][vMaleteroCantidad][1]);
	INI_Int("Maletero_Cantidad_3", InfoFacVeh[vehid][vMaleteroCantidad][2]);
	INI_Int("Maletero_Cantidad_4", InfoFacVeh[vehid][vMaleteroCantidad][3]);
	INI_Int("Maletero_Cantidad_5", InfoFacVeh[vehid][vMaleteroCantidad][4]);
	INI_Int("Maletero_Cantidad_6", InfoFacVeh[vehid][vMaleteroCantidad][5]);
	INI_Int("Maletero_Cantidad_7", InfoFacVeh[vehid][vMaleteroCantidad][6]);
	INI_Int("Maletero_Cantidad_8", InfoFacVeh[vehid][vMaleteroCantidad][7]);
	INI_Int("Maletero_Cantidad_9", InfoFacVeh[vehid][vMaleteroCantidad][8]);
	INI_Int("Maletero_Cantidad_10", InfoFacVeh[vehid][vMaleteroCantidad][9]);
	INI_Int("Maletero_Cantidad_11", InfoFacVeh[vehid][vMaleteroCantidad][10]);
	INI_Int("Maletero_Cantidad_12", InfoFacVeh[vehid][vMaleteroCantidad][11]);
	return 1;
}

//<=================================> sistema de vehículos
enum vInfo
{
	vID,
	vDueno[32],
	vLlave,
	vModelo,
	Float: vVida,
	Float: vPosicionX,
	Float: vPosicionY,
	Float: vPosicionZ,
	Float: vPosicionR,
	vVirtualWorld,
	vInterior,
	vPrecio,
	vGuantera[3],
	vGuanteraCantidad[3],
	vMaletero[15],
	vMaleteroCantidad[15],
	vMaxMaletero,
	vSeguro,
	vUSeguro,
	vPaintJob,
	vColor_1,
	vColor_2,
	vStereo,
	vNeon,
	vGasolina,
	vEnDeposito,
	vMulta,
	vDanioSuperficie,
	vDanioPuertas,
	vDanioLuces,
	vDanioRuedas,
	vModificaciones[MAX_MODVEHICULOS],
	vSpawned,
	v_Guantera,
};
new InfoVehiculo[MAX_VEHICULOS][vInfo];
// ACTUALIZAR VEHÍCULOS--CUANDO EL JUGADOR SE DESCONECTA---BLOCK
stock ActualizarVehiculo(vid)
{
	new vehd[64];
	format(vehd, 64, DATOS_VEHICULOS, vid);
	new INI: File = INI_Open(vehd);
	INI_SetTag(File, "Informacion");
	INI_WriteString(File, "Dueño", InfoVehiculo[vid][vDueno]);
	INI_WriteInt(File, "Llave", InfoVehiculo[vid][vLlave]);
	INI_WriteInt(File, "Modelo", InfoVehiculo[vid][vModelo]);
	INI_WriteFloat(File, "Vida", InfoVehiculo[vid][vVida]);
	INI_WriteFloat(File, "PosicionX", InfoVehiculo[vid][vPosicionX]);
	INI_WriteFloat(File, "PosicionY", InfoVehiculo[vid][vPosicionY]);
	INI_WriteFloat(File, "PosicionZ", InfoVehiculo[vid][vPosicionZ]);
	INI_WriteFloat(File, "PosicionR", InfoVehiculo[vid][vPosicionR]);
	INI_WriteInt(File, "VirtualWorld", InfoVehiculo[vid][vVirtualWorld]);
	INI_WriteInt(File, "Interior", InfoVehiculo[vid][vInterior]);
	INI_WriteInt(File, "Precio", InfoVehiculo[vid][vPrecio]);
	INI_WriteInt(File, "Guantera_1", InfoVehiculo[vid][vGuantera][0]);
	INI_WriteInt(File, "Guantera_2", InfoVehiculo[vid][vGuantera][1]);
	INI_WriteInt(File, "Guantera_3", InfoVehiculo[vid][vGuantera][2]);
	INI_WriteInt(File, "Guantera_Cantidad_1", InfoVehiculo[vid][vGuanteraCantidad][0]);
	INI_WriteInt(File, "Guantera_Cantidad_2", InfoVehiculo[vid][vGuanteraCantidad][1]);
	INI_WriteInt(File, "Guantera_Cantidad_3", InfoVehiculo[vid][vGuanteraCantidad][2]);
	INI_WriteInt(File, "Maletero_1", InfoVehiculo[vid][vMaletero][0]);
	INI_WriteInt(File, "Maletero_2", InfoVehiculo[vid][vMaletero][1]);
	INI_WriteInt(File, "Maletero_3", InfoVehiculo[vid][vMaletero][2]);
	INI_WriteInt(File, "Maletero_4", InfoVehiculo[vid][vMaletero][3]);
	INI_WriteInt(File, "Maletero_5", InfoVehiculo[vid][vMaletero][4]);
	INI_WriteInt(File, "Maletero_6", InfoVehiculo[vid][vMaletero][5]);
	INI_WriteInt(File, "Maletero_7", InfoVehiculo[vid][vMaletero][6]);
	INI_WriteInt(File, "Maletero_8", InfoVehiculo[vid][vMaletero][7]);
	INI_WriteInt(File, "Maletero_9", InfoVehiculo[vid][vMaletero][8]);
	INI_WriteInt(File, "Maletero_10", InfoVehiculo[vid][vMaletero][9]);
	INI_WriteInt(File, "Maletero_11", InfoVehiculo[vid][vMaletero][10]);
	INI_WriteInt(File, "Maletero_12", InfoVehiculo[vid][vMaletero][11]);
	INI_WriteInt(File, "Maletero_13", InfoVehiculo[vid][vMaletero][12]);
	INI_WriteInt(File, "Maletero_14", InfoVehiculo[vid][vMaletero][13]);
	INI_WriteInt(File, "Maletero_15", InfoVehiculo[vid][vMaletero][14]);
	INI_WriteInt(File, "Maletero_Cantidad_1", InfoVehiculo[vid][vMaleteroCantidad][0]);
	INI_WriteInt(File, "Maletero_Cantidad_2", InfoVehiculo[vid][vMaleteroCantidad][1]);
	INI_WriteInt(File, "Maletero_Cantidad_3", InfoVehiculo[vid][vMaleteroCantidad][2]);
	INI_WriteInt(File, "Maletero_Cantidad_4", InfoVehiculo[vid][vMaleteroCantidad][3]);
	INI_WriteInt(File, "Maletero_Cantidad_5", InfoVehiculo[vid][vMaleteroCantidad][4]);
	INI_WriteInt(File, "Maletero_Cantidad_6", InfoVehiculo[vid][vMaleteroCantidad][5]);
	INI_WriteInt(File, "Maletero_Cantidad_7", InfoVehiculo[vid][vMaleteroCantidad][6]);
	INI_WriteInt(File, "Maletero_Cantidad_8", InfoVehiculo[vid][vMaleteroCantidad][7]);
	INI_WriteInt(File, "Maletero_Cantidad_9", InfoVehiculo[vid][vMaleteroCantidad][8]);
	INI_WriteInt(File, "Maletero_Cantidad_10", InfoVehiculo[vid][vMaleteroCantidad][9]);
	INI_WriteInt(File, "Maletero_Cantidad_11", InfoVehiculo[vid][vMaleteroCantidad][10]);
	INI_WriteInt(File, "Maletero_Cantidad_12", InfoVehiculo[vid][vMaleteroCantidad][11]);
	INI_WriteInt(File, "Maletero_Cantidad_13", InfoVehiculo[vid][vMaleteroCantidad][12]);
	INI_WriteInt(File, "Maletero_Cantidad_14", InfoVehiculo[vid][vMaleteroCantidad][13]);
	INI_WriteInt(File, "Maletero_Cantidad_15", InfoVehiculo[vid][vMaleteroCantidad][14]);
	INI_WriteInt(File, "Seguro", InfoVehiculo[vid][vSeguro]);
	INI_WriteInt(File, "USeguro", InfoVehiculo[vid][vUSeguro]);
	INI_WriteInt(File, "PaintJob", InfoVehiculo[vid][vPaintJob]);
	INI_WriteInt(File, "Color_1", InfoVehiculo[vid][vColor_1]);
	INI_WriteInt(File, "Color_2", InfoVehiculo[vid][vColor_2]);
	INI_WriteInt(File, "Stereo", InfoVehiculo[vid][vStereo]);
	INI_WriteInt(File, "Neon", InfoVehiculo[vid][vNeon]);
	INI_WriteInt(File, "Gasolina", InfoVehiculo[vid][vGasolina]);
	INI_WriteInt(File, "EnDeposito", InfoVehiculo[vid][vEnDeposito]);
	INI_WriteInt(File, "Multa", InfoVehiculo[vid][vMulta]);
	INI_WriteInt(File, "DañoSuperficie", InfoVehiculo[vid][vDanioSuperficie]);
	INI_WriteInt(File, "DañoPuertas", InfoVehiculo[vid][vDanioPuertas]);
	INI_WriteInt(File, "DañoLuces", InfoVehiculo[vid][vDanioLuces]);
	INI_WriteInt(File, "DañoRuedas", InfoVehiculo[vid][vDanioRuedas]);
	for(new m = 0; m < MAX_MODVEHICULOS; m++)
	{
		new key[64];
		format(key, 64, "Modificacion_%d", m);
		INI_WriteInt(File, key, InfoVehiculo[vid][vModificaciones][m]);
	}
	INI_Close(File);
	return 1;
}

funcion CargarVehiculos()
{
	new Totalvehs, vehd[64];
	for (new vid = 0; vid < sizeof(InfoVehiculo); vid++)
	{
		format(vehd, 64, DATOS_VEHICULOS, vid);
		INI_ParseFile(vehd, "CargarVehiculos_data", .bExtra = true, .extra = vid);
		if (InfoVehiculo[vid][vModelo] > 0)
		{
			Totalvehs++;
		}
	}
	printf("» Sistema de vehículos cargado (%d).",Totalvehs);
	return 1;
}

funcion CargarVehiculos_data(vid, name[], value[])
{
	INI_String("Dueño", InfoVehiculo[vid][vDueno], 32);
	INI_Int("Llave", InfoVehiculo[vid][vLlave]);
	INI_Int("Modelo", InfoVehiculo[vid][vModelo]);
	INI_Float("Vida", InfoVehiculo[vid][vVida]);
	INI_Float("PosicionX", InfoVehiculo[vid][vPosicionX]);
	INI_Float("PosicionY", InfoVehiculo[vid][vPosicionY]);
	INI_Float("PosicionZ", InfoVehiculo[vid][vPosicionZ]);
	INI_Float("PosicionR", InfoVehiculo[vid][vPosicionR]);
	INI_Int("VirtualWorld", InfoVehiculo[vid][vVirtualWorld]);
	INI_Int("Interior", InfoVehiculo[vid][vInterior]);
	INI_Int("Precio", InfoVehiculo[vid][vPrecio]);
	INI_Int("Guantera_1", InfoVehiculo[vid][vGuantera][0]);
	INI_Int("Guantera_2", InfoVehiculo[vid][vGuantera][1]);
	INI_Int("Guantera_3", InfoVehiculo[vid][vGuantera][2]);
	INI_Int("Guantera_Cantidad_1", InfoVehiculo[vid][vGuanteraCantidad][0]);
	INI_Int("Guantera_Cantidad_2", InfoVehiculo[vid][vGuanteraCantidad][1]);
	INI_Int("Guantera_Cantidad_3", InfoVehiculo[vid][vGuanteraCantidad][2]);
	INI_Int("Maletero_1", InfoVehiculo[vid][vMaletero][0]);
	INI_Int("Maletero_2", InfoVehiculo[vid][vMaletero][1]);
	INI_Int("Maletero_3", InfoVehiculo[vid][vMaletero][2]);
	INI_Int("Maletero_4", InfoVehiculo[vid][vMaletero][3]);
	INI_Int("Maletero_5", InfoVehiculo[vid][vMaletero][4]);
	INI_Int("Maletero_6", InfoVehiculo[vid][vMaletero][5]);
	INI_Int("Maletero_7", InfoVehiculo[vid][vMaletero][6]);
	INI_Int("Maletero_8", InfoVehiculo[vid][vMaletero][7]);
	INI_Int("Maletero_9", InfoVehiculo[vid][vMaletero][8]);
	INI_Int("Maletero_10", InfoVehiculo[vid][vMaletero][9]);
	INI_Int("Maletero_11", InfoVehiculo[vid][vMaletero][10]);
	INI_Int("Maletero_12", InfoVehiculo[vid][vMaletero][11]);
	INI_Int("Maletero_13", InfoVehiculo[vid][vMaletero][12]);
	INI_Int("Maletero_14", InfoVehiculo[vid][vMaletero][13]);
	INI_Int("Maletero_15", InfoVehiculo[vid][vMaletero][14]);
	INI_Int("Maletero_Cantidad_1", InfoVehiculo[vid][vMaleteroCantidad][0]);
	INI_Int("Maletero_Cantidad_2", InfoVehiculo[vid][vMaleteroCantidad][1]);
	INI_Int("Maletero_Cantidad_3", InfoVehiculo[vid][vMaleteroCantidad][2]);
	INI_Int("Maletero_Cantidad_4", InfoVehiculo[vid][vMaleteroCantidad][3]);
	INI_Int("Maletero_Cantidad_5", InfoVehiculo[vid][vMaleteroCantidad][4]);
	INI_Int("Maletero_Cantidad_6", InfoVehiculo[vid][vMaleteroCantidad][5]);
	INI_Int("Maletero_Cantidad_7", InfoVehiculo[vid][vMaleteroCantidad][6]);
	INI_Int("Maletero_Cantidad_8", InfoVehiculo[vid][vMaleteroCantidad][7]);
	INI_Int("Maletero_Cantidad_9", InfoVehiculo[vid][vMaleteroCantidad][8]);
	INI_Int("Maletero_Cantidad_10", InfoVehiculo[vid][vMaleteroCantidad][9]);
	INI_Int("Maletero_Cantidad_11", InfoVehiculo[vid][vMaleteroCantidad][10]);
	INI_Int("Maletero_Cantidad_12", InfoVehiculo[vid][vMaleteroCantidad][11]);
	INI_Int("Maletero_Cantidad_13", InfoVehiculo[vid][vMaleteroCantidad][12]);
	INI_Int("Maletero_Cantidad_14", InfoVehiculo[vid][vMaleteroCantidad][13]);
	INI_Int("Maletero_Cantidad_15", InfoVehiculo[vid][vMaleteroCantidad][14]);
	INI_Int("Seguro", InfoVehiculo[vid][vSeguro]);
	INI_Int("USeguro", InfoVehiculo[vid][vUSeguro]);
	INI_Int("PaintJob", InfoVehiculo[vid][vPaintJob]);
	INI_Int("Color_1", InfoVehiculo[vid][vColor_1]);
	INI_Int("Color_2", InfoVehiculo[vid][vColor_2]);
	INI_Int("Stereo", InfoVehiculo[vid][vStereo]);
	INI_Int("Neon", InfoVehiculo[vid][vNeon]);
	INI_Int("Gasolina", InfoVehiculo[vid][vGasolina]);
	INI_Int("EnDeposito", InfoVehiculo[vid][vEnDeposito]);
	INI_Int("Multa", InfoVehiculo[vid][vMulta]);
	INI_Int("DañoSuperficie", InfoVehiculo[vid][vDanioSuperficie]);
	INI_Int("DañoPuertas", InfoVehiculo[vid][vDanioPuertas]);
	INI_Int("DañoLuces", InfoVehiculo[vid][vDanioLuces]);
	INI_Int("DañoRuedas", InfoVehiculo[vid][vDanioRuedas]);
	for(new m = 0; m < MAX_MODVEHICULOS; m++)
	{
		new key[64];
		format(key, 64, "Modificacion_%d", m);
		INI_Int(key, InfoVehiculo[vid][vModificaciones][m]);
	}
	return 1;
}

//Estos son objetos dinámicos con catálogo para admins---se guardan en log-
enum pObjects
{
	pOID,
	pObjeto,
	Float:pPosX,
	Float:pPosY,
	Float:pPosZ,
	Float:pPosRX,
	Float:pPosRY,
	Float:pPosRZ,
	pVw,
	pInt,
};
new cObjeto[MAX_POBJETOS][pObjects];

CargarObjetosAdmin()
{
	new arrCoords[9][32];
	new strFromFile2[256];
	new CONTAR_OBJETOS;
	new File: file = fopen("ObjetosAdmin.rp", io_read);
	if (file)
	{
		new ID_OBJETO;
		while (ID_OBJETO < sizeof(cObjeto))
		{
			fread(file, strFromFile2);
			splits(strFromFile2, arrCoords, '|');
			cObjeto[ID_OBJETO][pPosX] = floatstr(arrCoords[3]);
			cObjeto[ID_OBJETO][pPosY] = floatstr(arrCoords[4]);
			cObjeto[ID_OBJETO][pPosZ] = floatstr(arrCoords[5]);
			cObjeto[ID_OBJETO][pPosRX] = floatstr(arrCoords[6]);
			cObjeto[ID_OBJETO][pPosRY] = floatstr(arrCoords[7]);
			cObjeto[ID_OBJETO][pPosRZ] = floatstr(arrCoords[8]);
			cObjeto[ID_OBJETO][pVw] = strval(arrCoords[1]);
			cObjeto[ID_OBJETO][pInt] = strval(arrCoords[2]);
			cObjeto[ID_OBJETO][pOID] = strval(arrCoords[0]);
			if (cObjeto[ID_OBJETO][pOID] > 0)
			{
				CONTAR_OBJETOS++;
				cObjeto[ID_OBJETO][pObjeto]  = CreateDynamicObject(cObjeto[ID_OBJETO][pOID], cObjeto[ID_OBJETO][pPosX], cObjeto[ID_OBJETO][pPosY], cObjeto[ID_OBJETO][pPosZ], cObjeto[ID_OBJETO][pPosRX], cObjeto[ID_OBJETO][pPosRY], cObjeto[ID_OBJETO][pPosRZ], cObjeto[ID_OBJETO][pVw], cObjeto[ID_OBJETO][pInt], -1, MAX_RADIO_STREAM_MIN);
			}
			ID_OBJETO++;
		}
		fclose(file);
	}
	if (CONTAR_OBJETOS != 0)
	{
		printf("» Sistema de objetos dinámicos cargado (%i).", CONTAR_OBJETOS);
	}
	else
	{
		printf("» Sistema de objetos dinámicos cargado (0).", CONTAR_OBJETOS);
	}
}

//Sistema de Incendios--dinámico---
enum iInfo
{
	Text3D:pInfoIncendio,
	pIntensidad,
	pIDI,
	pType,
	pObject[15],
};
new Incendios[MAX_INCENDIOS][iInfo];
//----[LS-PD]--- Objetos de tráfico ----
enum binfo
{
	bObjeto,
	bModelo,
	Float:bPosX,
	Float:bPosY,
	Float:bPosZ,
	Float:bPosRX,
	Float:bPosRY,
	Float:bPosRZ,
};
new InfoBar[MAX_BARRERAS][binfo];

enum Spikes
{
	Float: sX,
	Float: sY,
	Float: sZ,
	sObjectID,
	sDeployedAt[MAX_ZONE_NAME],
};
new SpikeStrips[10][Spikes];

enum pSpec
{
	Float: Coords[3],
	Float: sPx,
	Float: sPy,
	Float: sPz,
	sPint,
	sLocal,
	sCam,
};
new Unspec[MAX_PLAYERS][pSpec];
//Sistema de Eventos -- Fuera de uso (cmblock: pensar si quitarlo yaa)
enum jevento
{
	eVW,
	eInterior,
	Float: eVariable[6]
}
new jEvento[MAX_PLAYERS][jevento];

enum ievento
{
	iEtapa,
	iTipo,
	iMensaje[128],
	iMusica[128],
	Float: iVida,
	Float: iChaleco,
	Float: iPosicionX,
	Float: iPosicionY,
	Float: iPosicionZ,
	iInterior,
	iVirtualWorld,
};
new InfoEvento[ievento];
new iVehiculo[32], iObjeto[3];
//Sistema de Semillas --- posibles modificaciones para v3
enum maria
{
	sDueno[24],
	bool:sSlot,
	sTime,
	Float:sPosicion[3],
	sInterior,
	sVirtualWorld,
	sGramos,
	Text3D:sLabel,
	sObjeto,
};
new InfoMaria[MAX_PLANTAS][maria];

ActualizarMaria(s)
{
	new smi[64];
	format(smi, 64, DATOS_MARIA, s);
	new INI: File = INI_Open(smi);
	INI_SetTag(File, "Informacion");
	INI_WriteString(File, "Dueño", InfoMaria[s][sDueno]);
	INI_WriteBool(File, "Creado", InfoMaria[s][sSlot]);
	INI_WriteInt(File, "Tiempo", InfoMaria[s][sTime]);
	INI_WriteFloat(File, "Pos_X", InfoMaria[s][sPosicion][0]);
	INI_WriteFloat(File, "Pos_Y", InfoMaria[s][sPosicion][1]);
	INI_WriteFloat(File, "Pos_Z", InfoMaria[s][sPosicion][2]);
	INI_WriteInt(File, "Interior", InfoMaria[s][sInterior]);
	INI_WriteInt(File, "VirtualWorld", InfoMaria[s][sVirtualWorld]);
	INI_WriteInt(File, "Gramos", InfoMaria[s][sGramos]);
	INI_Close(File);
	return 1;
}

funcion CargarMarias()
{
	new Total_semillas,smi[64],string[128];
	for (new sid = 0; sid < sizeof(InfoMaria); sid++)
	{
		format(smi, 64, DATOS_MARIA, sid);
		INI_ParseFile(smi, "CargarMarias_data", .bExtra = true, .extra = sid);
		if (InfoMaria[sid][sPosicion][0] > 0.0)
		{
			format(string, sizeof(string), "Planta de marihuana\n{ffffff}Madura en %ih %im", InfoMaria[sid][sTime] / 60, InfoMaria[sid][sTime]);
			InfoMaria[sid][sLabel] = CreateDynamic3DTextLabel(string, 0x009F46FF, InfoMaria[sid][sPosicion][0], InfoMaria[sid][sPosicion][1], InfoMaria[sid][sPosicion][2] + 1.5, 8.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, InfoMaria[sid][sVirtualWorld], InfoMaria[sid][sInterior]);
			InfoMaria[sid][sObjeto] = CreateDynamicObject(19473, InfoMaria[sid][sPosicion][0], InfoMaria[sid][sPosicion][1], InfoMaria[sid][sPosicion][2], 0.0, 0.0, 0.0, InfoMaria[sid][sVirtualWorld], InfoMaria[sid][sInterior]);
			Total_semillas++;
		} else D_Semiallas(sid);
	}
	printf("» Sistema de semillas cargado (%d).",Total_semillas);
	return 1;
}

funcion D_Semiallas(sid)
{
	InfoMaria[sid][sPosicion][0] = 253.7604;
	InfoMaria[sid][sPosicion][1] = 1870.4363;
	InfoMaria[sid][sPosicion][2] = -32.2793;
	InfoMaria[sid][sLabel] = CreateDynamic3DTextLabel("planta no creada", C_BLANCO, InfoMaria[sid][sPosicion][0], InfoMaria[sid][sPosicion][1], InfoMaria[sid][sPosicion][2], 6.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 1, 75, 75);
	return 1;
}

funcion CargarMarias_data(s, name[], value[])
{
	INI_String("Dueño", InfoMaria[s][sDueno], 32);
	INI_Bool("Creado", InfoMaria[s][sSlot]);
	INI_Int("Tiempo", InfoMaria[s][sTime]);
	INI_Float("Pos_X", InfoMaria[s][sPosicion][0]);
	INI_Float("Pos_Y", InfoMaria[s][sPosicion][1]);
	INI_Float("Pos_Z", InfoMaria[s][sPosicion][2]);
	INI_Int("Interior", InfoMaria[s][sInterior]);
	INI_Int("VirtualWorld", InfoMaria[s][sVirtualWorld]);
	INI_Int("Gramos", InfoMaria[s][sGramos]);
	return 1;
}
//Crear fogatas
enum fInfo
{
	fObjeto,
	fObjeto2,
	Float:fPosicionX,
	Float:fPosicionY,
	Float:fPosicionZ,
	Float:fPosicionRX,
	Float:fPosicionRY,
	Float:fPosicionRZ,
};
new InfoFogata[MAX_PLAYERS][fInfo];
//-----SISTEMA DE GRAFFITIS DINÁMICO-----
enum GInfo
{
	gObjeto,
	Float:gPosX,
	Float:gPosY,
	Float:gPosZ,
	Float:gRX,
	Float:gRY,
	Float:gRZ,
	gDueno[30],
	gFont,
	gTexto[50],
	gSize,
	gVw,
	gColor,
	gInt,
};
new Graffiti[MAX_GRAFFITIS][GInfo];
//----[Sistema de fuerza para entrenar] añadido por: CMBlock en la v.0.0.6  12/04/20]
new	Float:barbell_pos[][] =
{
	{ 774.42907715,1.88309872,1000.48834229,0.00000000,270.00000000,87.99966431 }, // Los Santos Gym's BarBell
	{ 765.85528564,-48.86857224,1000.64093018,0.00000000,89.49993896,0.00000000 }, // San Fierro Gym's BarBell.
	{ 765.34039307,-59.18271637,1000.63793945,0.00000000,89.49993896, 181.25012207 }, // Las Venturas Gym's BarBell
	{ 202.97000, 1897.64001, 17.54000,90.00000, 90.00000, 0.00000 }, // pf
	{ 202.92900, 1892.56006, 17.54000,90.00000, 90.00000, 0.00000 }, // pf
	{ 653.42572, -1863.55444, 5.41780, 0.00000, 90.00000 } // playa LS
};

new Float:PressBancaPlayerPos[][] =
{
    { 773.0491,1.4285,1000.7209, 269.2024 }, // Los Santos Gym's bench.
    { 766.3170,-47.3574,1000.5859, 179.2983 }, // San Fierro Gym's bench.
    { 764.9001,-60.5580,1000.6563, 1.9500 }, // Las Venturas Gym's bench
    { 203.4694, 1896.2308, 17.5833, 0.0000 }, // Pf
    { 203.3845, 1894.1179, 17.5833, 180.0000 }, // Pf
    { 653.9918,-1865.1168,5.4609,5.2957 } // playa LS
};
//---[Sistema de heridas]---- En la v.1.2 Se encuentra aún con el FS aparte (heridas).
enum hInfo
{
	Cabeza[24],
	Torso[24],
	BrazoD[24],
	BrazoI[24],
	EntreP[24],
	PiernaD[24],
	PiernaI[24],
	Lesiones[24],
	Cabezar,
	Torsor,
	BrazoDr,
	BrazoIr,
	EntrePr,
	PiernaDr,
	PiernaIr,
	Lesionesr,
};
new InfoHeridas[MAX_PLAYERS][hInfo];


stock Sangre_(playerid, Float: hp) // Fijar
{
    if(GetPVarInt(playerid, "EnEvento") == 1) return 1;
	if(user[playerid][jSangre] < 101.0) user[playerid][jSangre] = 100.0;
	SetPlayerHealth(playerid, hp);
	user[playerid][jSangre] = hp;
	return 1;
}

stock _Sangre(playerid, Float: sg1) // Quitar
{
    if(GetPVarInt(playerid, "EnEvento") == 1) return 1;
	new Float: sg0 = user[playerid][jSangre];
	user[playerid][jSangre] = sg0+sg1;
	if(user[playerid][jSangre] <= 15.0) {
		if(user[playerid][jEncarcelado]) return _CARCEL(playerid);
		SetPlayerHealth(playerid, 15.0);
		if(GetPVarInt(playerid, "Esta_Herido") == 0) { SetPVarInt(playerid, "EnCrack", 1); SinSangre(playerid, 1); }
		else if(GetPVarInt(playerid, "Esta_Herido") == 1) { SetPVarInt(playerid, "EnCrack", 1); SinSangre(playerid, 2); }
		return 1;
	}
	SetPlayerHealth(playerid, sg0+sg1);
	return 1;
}

funcion SinSangre(playerid, tipo)
{
	if(GetPVarInt(playerid, "EnEvento") == 1) return 1;
	switch (tipo)
	{
		case 1:
		{
			if(asesino[playerid] != -1)
			{
				if(IsPlayerConnected(asesino[playerid])) format(QuienMato[playerid], 24, "%s", NombreRJugador(asesino[playerid]));
				for(new i=0;i<MAX_PLAYERS;i++) { if(user[i][jAdmin] >= 1) SendDeathMessageToPlayer(i,asesino[playerid], playerid, _arma[playerid]); }
			}
			//
			if (IsPlayerInAnyVehicle(playerid))
			{
				RemovePlayerFromVehicle(playerid);
				new Float:X, Float:Y, Float:Z;
				GetPlayerPos(playerid, X, Y, Z);
				SetPlayerPos(playerid, X, Y, Z+2);
			}
			if ( _sanCall == playerid )
			{
    			_MensajeSAN(0x00DC3AFF, "[Sistema de Noticias]: Conexión telefónica finalizada.");
				_sanCall = -1;
			}
			HaciendoPressBanca[playerid] = 0; RepeticionesPressBanca[playerid] = 0;
			EnLlamada[playerid] = 0; ToqueLlamada[playerid] = 0;
			KillTimer(ToqueLlamadaTimer[playerid]);
			if(PersonaEnLlamada[playerid] != -1)KillTimer(ToqueLlamadaTimer[PersonaEnLlamada[playerid]]);
			if(EnLlamada[playerid] == 3)
			{
				_Mensaje(playerid, 2, "0", "Precio de la llamada: 20$");
				user[playerid][jSaldo] -= 20;
			}
			if(PersonaEnLlamada[playerid] != -1)
			{
				if(EnLlamada[PersonaEnLlamada[playerid]] == 3)
				{
					_Mensaje(PersonaEnLlamada[playerid], 2, "0", "Precio de la llamada: 20$");
					user[PersonaEnLlamada[playerid]][jSaldo] -= 20;
				}
			}
			if(PersonaEnLlamada[playerid] != -1)_Mensaje(playerid, 2, "0", "Se ha cortado la línea...");
			for(new i=0; i<MAX_PLAYERS; i++) { if(PersonaEnLlamada[i] == playerid){_Mensaje(i, 2, "0","Se ha cortado la línea..."); EnLlamada[i] = 0; PersonaEnLlamada[i] = -1; break;} }
			PersonaEnLlamada[playerid] = -1;
			if(JugadorUsandoAnimacion[playerid] == 1) { JugadorUsandoAnimacion[playerid] = 0; JugadorSentado[playerid] = 0; }
			//
			usandoYo[playerid] = 0;
			_Mensaje(playerid, 4, "fcc1fd", "Te has desmayado debido a las heridas, escribe /avisarpd.");
			_Mensaje(playerid, 4, "fcc1fd", "Si no llega ningún oficial/médico, serás llevado en 8 minutos al hospital.");
			SetPVarInt(playerid, "Esta_Herido", 1);
			SetPVarInt(playerid, "Necesita_LSED", 1);
			SetPVarInt(playerid, "Llamada_LSED", 1);
			user[playerid][jSangre] = 50.0;
			user[playerid][jMuerto2] = 1;
			user[playerid][jMuerto] = 1;
			ApplyAnimation(playerid, "WUZI", "CS_Dead_Guy", 4.0, 0, 0, 0, 1, 0, 1);
			KillTimer(MuertoTimer[playerid]);
			MuertoTimer[playerid] = SetTimerEx("Muerto", 480000, false, "i", playerid);
			new str[128];
			format(str, sizeof(str), "Esta persona está herida\n(/heridas %d)", playerid);
			Update3DTextLabelText(estado[playerid], 0xEAD055FF, str); //0xAA3333FF --- 0xC23E3EFF (otros colores) jeje
			Attach3DTextLabelToPlayer(estado[playerid], playerid, 0.0, 0.0, 0.5);
		}
		case 2:
		{
			if (IsPlayerInAnyVehicle(playerid))
			{
				RemovePlayerFromVehicle(playerid);
				new Float:X, Float:Y, Float:Z;
				GetPlayerPos(playerid, X, Y, Z);
				SetPlayerPos(playerid, X, Y, Z+2);
			}
			Esposado[playerid] = 0; RemovePlayerAttachedObject(playerid, 9);
			usandoYo[playerid] = 0;
			TogglePlayerControllable(playerid, 0);
			_Mensaje(playerid, 4, "b00000", "Has muerto, en 2 minutos serás llevado al hospital (PK Parcial).");
			SetPVarInt(playerid, "Necesita_LSED", 1);
			SetPVarInt(playerid, "Esta_Herido", 2);
			SetPVarInt(playerid, "Llamada_LSED", 1);
			user[playerid][jSangre] = 15.0;
			user[playerid][jMuerto2] = 2;
			user[playerid][jMuerto] = 1;
			ClearAnimations(playerid);
			ApplyAnimation(playerid, "WUZI", "CS_Dead_Guy", 4.0, 0, 0, 0, 1, 0, 1);
			KillTimer(MuertoTimer[playerid]);
			MuertoTimer[playerid] = SetTimerEx("Muerto", 120000, false, "i", playerid);
			new str[128];
			format(str, sizeof(str), "Esta persona está muerta\n(/heridas %d)", playerid);
			Update3DTextLabelText(estado[playerid], 0xEAD055FF, str); //0xAA3333FF --- 0xC23E3EFF (otros colores)
			Attach3DTextLabelToPlayer(estado[playerid], playerid, 0.0, 0.0, 0.5);
		}
	}
	return 1;
}

stock Chaleco_(playerid, Float: cg1) // Fijar
{
	if(user[playerid][jChaleco] < 100.0) user[playerid][jChaleco] = 100.0;
	user[playerid][jChaleco] = cg1;
	SetPlayerArmour(playerid, Float: cg1);
	return 1;
}

stock _Chaleco(playerid, Float: cg1) // Quitar
{
	if (user[playerid][jChaleco] < 5.0) user[playerid][jChaleco] = 0.0;
	new Float: cg0 = user[playerid][jChaleco];
	user[playerid][jChaleco] = cg0+cg1;
	SetPlayerArmour(playerid, cg0+cg1);
	return 1;
}

//----[SISTEMA DE PEAJES DEL MAPA]--- Añadidos en la v.0.2
enum ppInfo
{
	objectid_peaje,
	objectmodel,
	Float:PosXTrue,
	Float:PosYTrue,
	Float:PosZTrue,
	Float:PosRotXTrue,
	Float:PosRotYTrue,
	Float:PosRotZTrue,
	Float:PosXFalse,
	Float:PosYFalse,
	Float:PosZFalse,
	Float:PosRotXFalse,
	Float:PosRotYFalse,
	Float:PosRotZFalse,
	Float:PosCommandX,
	Float:PosCommandY,
	Float:PosCommandZ,
	typePeajeOrParqueo,
	AnimObject,
};
new MAX_PEAJE, Peajes[MAX_PEAJES_COUNT][ppInfo];
//---[Sistema de puertas dinámicas actualizados todos los pExterior]----
enum pInfo
{
	pDescripcion[128],
	Float: pExteriorX,
	Float: pExteriorY,
	Float: pExteriorZ,
	Float: pExteriorA,
	Float: pInteriorX,
	Float: pInteriorY,
	Float: pInteriorZ,
	Float: pInteriorA,
	pExteriorVW,
	pExteriorInt,
	pInteriorVW,
	pInteriorInt,
	pNivelVIP,
	pFamilia,
	pFaccion,
    pModeloExt,
    pModeloInt,
    pExplosivos,
    pTieneBolsaDinero,
	Text3D: pTextoExt,
	Text3D: pTextoInt,
};
new CONTAR_PUERTAS, InfoPuerta[MAX_PUERTAS][pInfo];

funcion CargarPuertas()
{
	new arrCoords[16][64];
	new strFromFile2[256];
	new File: file = fopen("PuertasDinamicas.rp", io_read); // Log de guardado de las puertas --
	if (file)
	{
		new ID_PUERTA;
		while (ID_PUERTA < sizeof(InfoPuerta))
		{
			fread(file, strFromFile2);
			splits(strFromFile2, arrCoords, '|');
			strmid(InfoPuerta[ID_PUERTA][pDescripcion], arrCoords[0], 0, strlen(arrCoords[0]), 128);
			InfoPuerta[ID_PUERTA][pExteriorX] = floatstr(arrCoords[1]);
			InfoPuerta[ID_PUERTA][pExteriorY] = floatstr(arrCoords[2]);
			InfoPuerta[ID_PUERTA][pExteriorZ] = floatstr(arrCoords[3]);
			InfoPuerta[ID_PUERTA][pExteriorA] = floatstr(arrCoords[4]);
			InfoPuerta[ID_PUERTA][pExteriorVW] = strval(arrCoords[5]);
			InfoPuerta[ID_PUERTA][pExteriorInt] = strval(arrCoords[6]);
			InfoPuerta[ID_PUERTA][pInteriorX] = floatstr(arrCoords[7]);
			InfoPuerta[ID_PUERTA][pInteriorY] = floatstr(arrCoords[8]);
			InfoPuerta[ID_PUERTA][pInteriorZ] = floatstr(arrCoords[9]);
			InfoPuerta[ID_PUERTA][pInteriorA] = floatstr(arrCoords[10]);
			InfoPuerta[ID_PUERTA][pInteriorVW] = strval(arrCoords[11]);
			InfoPuerta[ID_PUERTA][pInteriorInt] = strval(arrCoords[12]);
			InfoPuerta[ID_PUERTA][pNivelVIP] = strval(arrCoords[13]);
			InfoPuerta[ID_PUERTA][pFaccion] = strval(arrCoords[14]);
			InfoPuerta[ID_PUERTA][pFamilia] = strval(arrCoords[15]);
			if (InfoPuerta[ID_PUERTA][pExteriorX] > 0.0)
			{
				ActualizarPuertaLabel(ID_PUERTA);
				CONTAR_PUERTAS++;
			}
			ID_PUERTA++;
		}
		fclose(file);
	}
	if (CONTAR_PUERTAS != 0)
	{
		printf("» Sistema de puertas dinamicas cargado (%i).", CONTAR_PUERTAS); // Carga al arrancar el servidor
	}
	else
	{
		printf("» Sistema de puertas dinamicas cargado (0).", CONTAR_PUERTAS);
	}
}

stock ActualizarPuerta()
{
	new szFileStr[1024],
	File: fHandle = fopen("PuertasDinamicas.rp", io_write); // Abre el archivo y edita automáticamente los datos.
	for (new pid; pid < MAX_PUERTAS; pid++)
	{
		format(szFileStr, sizeof(szFileStr), "%s|%f|%f|%f|%f|%d|%d|%f|%f|%f|%f|%d|%d|%d|%d|%d|\r\n",
		InfoPuerta[pid][pDescripcion],
		InfoPuerta[pid][pExteriorX],
		InfoPuerta[pid][pExteriorY],
		InfoPuerta[pid][pExteriorZ],
		InfoPuerta[pid][pExteriorA],
		InfoPuerta[pid][pExteriorVW],
		InfoPuerta[pid][pExteriorInt],
		InfoPuerta[pid][pInteriorX],
		InfoPuerta[pid][pInteriorY],
		InfoPuerta[pid][pInteriorZ],
		InfoPuerta[pid][pInteriorA],
		InfoPuerta[pid][pInteriorVW],
		InfoPuerta[pid][pInteriorInt],
		InfoPuerta[pid][pNivelVIP],
		InfoPuerta[pid][pFaccion],
		InfoPuerta[pid][pFamilia]);
		fwrite(fHandle, szFileStr);
	}
	return fclose(fHandle);
}
//[---SISTEMA DE CASAS DINÁMICO--] SE CREAN INGAME Y SE GUARDAN EN LOGS -- BLOCK AÑADIDOS EN LA V.0.0.9
enum cInfo
{
	cNombre[32],
	cEstado,
	cComprado,
	cComprador[32],
	cTipo,
	c_VW,
	c_Int,
	pickhouses,
	Text3D: labelhouses,
	Float: cExteriorX,
	Float: cExteriorY,
	Float: cExteriorZ,
	Float: cExteriorA,
	Float: cInteriorX,
	Float: cInteriorY,
	Float: cInteriorZ,
	Float: cInteriorA,
	cInterior,
	cPrecio,
	cCasaDinero,
	cRentable,
	cRentaPrecio,
	Float: cArmarioPos[3],
	cArmario[15],
	cArmarioCantidad[15],
	cObjModel[MAX_MUEBLES_C],
	Float:cObjPosX[MAX_MUEBLES_C],
	Float:cObjPosY[MAX_MUEBLES_C],
	Float:cObjPosZ[MAX_MUEBLES_C],
	Float:cObjRotX[MAX_MUEBLES_C],
	Float:cObjRotY[MAX_MUEBLES_C],
	Float:cObjRotZ[MAX_MUEBLES_C],
};
new InfoCasa[MAX_CASAS][cInfo],
	_casaCP[MAX_CASAS];

stock ActualizarCasa(cid, bool:Todo = true, Mueble = -1)
{
	new casad[64];
	format(casad, 64, DATOS_CASAS, cid);
	new INI: File = INI_Open(casad);
	INI_SetTag(File, "Informacion");
	if(Todo)
	{
		INI_WriteString(File, "Nombre", InfoCasa[cid][cNombre]);
		INI_WriteInt(File, "Seguro", InfoCasa[cid][cEstado]);
		INI_WriteInt(File, "Comprado", InfoCasa[cid][cComprado]);
		INI_WriteString(File, "Dueño", InfoCasa[cid][cComprador]);
		INI_WriteInt(File, "Tipo", InfoCasa[cid][cTipo]);
		INI_WriteFloat(File, "ExteriorX", InfoCasa[cid][cExteriorX]);
		INI_WriteFloat(File, "ExteriorY", InfoCasa[cid][cExteriorY]);
		INI_WriteFloat(File, "ExteriorZ", InfoCasa[cid][cExteriorZ]);
		INI_WriteFloat(File, "ExteriorA", InfoCasa[cid][cExteriorA]);
		INI_WriteFloat(File, "InteriorX", InfoCasa[cid][cInteriorX]);
		INI_WriteFloat(File, "InteriorY", InfoCasa[cid][cInteriorY]);
		INI_WriteFloat(File, "InteriorZ", InfoCasa[cid][cInteriorZ]);
		INI_WriteFloat(File, "InteriorA", InfoCasa[cid][cInteriorA]);
		INI_WriteFloat(File, "_Interior", InfoCasa[cid][c_Int]);
		INI_WriteFloat(File, "_VirtualWorld", InfoCasa[cid][c_VW]);
		INI_WriteInt(File, "Interior", InfoCasa[cid][cInterior]);
		INI_WriteInt(File, "Precio", InfoCasa[cid][cPrecio]);
		INI_WriteInt(File, "Casa_Dinero", InfoCasa[cid][cCasaDinero]);
		INI_WriteInt(File, "Renta", InfoCasa[cid][cRentable]);
		INI_WriteInt(File, "RentaPrecio", InfoCasa[cid][cRentaPrecio]);
		INI_WriteFloat(File, "ArmarioPosX", InfoCasa[cid][cArmarioPos][0]);
		INI_WriteFloat(File, "ArmarioPosY", InfoCasa[cid][cArmarioPos][1]);
		INI_WriteFloat(File, "ArmarioPosZ", InfoCasa[cid][cArmarioPos][2]);
		INI_WriteInt(File, "Armario_1", InfoCasa[cid][cArmario][0]);
		INI_WriteInt(File, "Armario_2", InfoCasa[cid][cArmario][1]);
		INI_WriteInt(File, "Armario_3", InfoCasa[cid][cArmario][2]);
		INI_WriteInt(File, "Armario_4", InfoCasa[cid][cArmario][3]);
		INI_WriteInt(File, "Armario_5", InfoCasa[cid][cArmario][4]);
		INI_WriteInt(File, "Armario_6", InfoCasa[cid][cArmario][5]);
		INI_WriteInt(File, "Armario_7", InfoCasa[cid][cArmario][6]);
		INI_WriteInt(File, "Armario_8", InfoCasa[cid][cArmario][7]);
		INI_WriteInt(File, "Armario_9", InfoCasa[cid][cArmario][8]);
		INI_WriteInt(File, "Armario_10", InfoCasa[cid][cArmario][9]);
		INI_WriteInt(File, "Armario_11", InfoCasa[cid][cArmario][10]);
		INI_WriteInt(File, "Armario_12", InfoCasa[cid][cArmario][11]);
		INI_WriteInt(File, "Armario_13", InfoCasa[cid][cArmario][12]);
		INI_WriteInt(File, "Armario_14", InfoCasa[cid][cArmario][13]);
		INI_WriteInt(File, "Armario_15", InfoCasa[cid][cArmario][14]);
		INI_WriteInt(File, "Armario_Cantidad_1", InfoCasa[cid][cArmarioCantidad][0]);
		INI_WriteInt(File, "Armario_Cantidad_2", InfoCasa[cid][cArmarioCantidad][1]);
		INI_WriteInt(File, "Armario_Cantidad_3", InfoCasa[cid][cArmarioCantidad][2]);
		INI_WriteInt(File, "Armario_Cantidad_4", InfoCasa[cid][cArmarioCantidad][3]);
		INI_WriteInt(File, "Armario_Cantidad_5", InfoCasa[cid][cArmarioCantidad][4]);
		INI_WriteInt(File, "Armario_Cantidad_6", InfoCasa[cid][cArmarioCantidad][5]);
		INI_WriteInt(File, "Armario_Cantidad_7", InfoCasa[cid][cArmarioCantidad][6]);
		INI_WriteInt(File, "Armario_Cantidad_8", InfoCasa[cid][cArmarioCantidad][7]);
		INI_WriteInt(File, "Armario_Cantidad_9", InfoCasa[cid][cArmarioCantidad][8]);
		INI_WriteInt(File, "Armario_Cantidad_10", InfoCasa[cid][cArmarioCantidad][9]);
		INI_WriteInt(File, "Armario_Cantidad_11", InfoCasa[cid][cArmarioCantidad][10]);
		INI_WriteInt(File, "Armario_Cantidad_12", InfoCasa[cid][cArmarioCantidad][11]);
		INI_WriteInt(File, "Armario_Cantidad_13", InfoCasa[cid][cArmarioCantidad][12]);
		INI_WriteInt(File, "Armario_Cantidad_14", InfoCasa[cid][cArmarioCantidad][13]);
		INI_WriteInt(File, "Armario_Cantidad_15", InfoCasa[cid][cArmarioCantidad][14]);
	}
	if(Mueble != -1 && Mueble < MAX_MUEBLES_C)
	{
		new key[32];
		format(key, 32, "Modelo_%d", Mueble);
		INI_WriteInt(File, key, InfoCasa[cid][cObjModel][Mueble]);
		format(key, 32, "PosicionX_%d", Mueble);
		INI_WriteFloat(File, key, InfoCasa[cid][cObjPosX][Mueble]);
		format(key, 32, "PosicionY_%d", Mueble);
		INI_WriteFloat(File, key, InfoCasa[cid][cObjPosY][Mueble]);
		format(key, 32, "PosicionZ_%d", Mueble);
		INI_WriteFloat(File, key, InfoCasa[cid][cObjPosZ][Mueble]);
		format(key, 32, "RotacionX_%d", Mueble);
		INI_WriteFloat(File, key, InfoCasa[cid][cObjRotX][Mueble]);
		format(key, 32, "RotacionY_%d", Mueble);
		INI_WriteFloat(File, key, InfoCasa[cid][cObjRotY][Mueble]);
		format(key, 32, "RotacionZ_%d", Mueble);
		INI_WriteFloat(File, key, InfoCasa[cid][cObjRotZ][Mueble]);
	}
	INI_Close(File);
	return 1;
}

funcion CargarCasas()
{
	new Total_Casas,casad[64];
	for (new cid = 0; cid < sizeof(InfoCasa); cid++)
	{
		format(casad, 64, DATOS_CASAS, cid);
		INI_ParseFile(casad, "CargarCasas_data", .bExtra = true, .extra = cid); // Actualiza y edita el archivo --- log para database actualizado y sincronizado con php ftp
		if (InfoCasa[cid][cTipo] > 0)
		{
			_casaCP[cid] = CreateDynamicCP(InfoCasa[cid][cExteriorX], InfoCasa[cid][cExteriorY], InfoCasa[cid][cExteriorZ] - 1, 1.5, InfoCasa[cid][c_VW], InfoCasa[cid][c_Int], -1, 5.0);
			Total_Casas++;
			_CasaPickup(cid);
			_CasaLabel(cid);
		} else _casaCP[cid] = CreateDynamicCP(-593.0027, 1983.1633, 6.9800, 1.5, 578, 55, -1, 5.0);
	}
	printf("» Sistema de casas cargado (%d).",Total_Casas);
	return 1;
}

funcion CargarCasas_data(cid, name[], value[])
{
	INI_String("Nombre", InfoCasa[cid][cNombre], 32);
	INI_Int("Seguro", InfoCasa[cid][cEstado]);
	INI_Int("Comprado", InfoCasa[cid][cComprado]);
	INI_String("Dueño", InfoCasa[cid][cComprador], 32);
	INI_Int("Tipo", InfoCasa[cid][cTipo]);
	INI_Float("ExteriorX", InfoCasa[cid][cExteriorX]);
	INI_Float("ExteriorY", InfoCasa[cid][cExteriorY]);
	INI_Float("ExteriorZ", InfoCasa[cid][cExteriorZ]);
	INI_Float("ExteriorA", InfoCasa[cid][cExteriorA]);
	INI_Float("InteriorX", InfoCasa[cid][cInteriorX]);
	INI_Float("InteriorY", InfoCasa[cid][cInteriorY]);
	INI_Float("InteriorZ", InfoCasa[cid][cInteriorZ]);
	INI_Float("InteriorA", InfoCasa[cid][cInteriorA]);
	INI_Int("_Interior", InfoCasa[cid][c_Int]);
	INI_Int("_VirtualWorld", InfoCasa[cid][c_VW]);
	INI_Int("Interior", InfoCasa[cid][cInterior]);
	INI_Int("Precio", InfoCasa[cid][cPrecio]);
	INI_Int("Casa_Dinero", InfoCasa[cid][cCasaDinero]);
	INI_Int("Renta", InfoCasa[cid][cRentable]);
	INI_Int("RentaPrecio", InfoCasa[cid][cRentaPrecio]);
	INI_Float("ArmarioPosX", InfoCasa[cid][cArmarioPos][0]);
	INI_Float("ArmarioPosY", InfoCasa[cid][cArmarioPos][1]);
	INI_Float("ArmarioPosZ", InfoCasa[cid][cArmarioPos][2]);
	INI_Int("Armario_1", InfoCasa[cid][cArmario][0]);
	INI_Int("Armario_2", InfoCasa[cid][cArmario][1]);
	INI_Int("Armario_3", InfoCasa[cid][cArmario][2]);
	INI_Int("Armario_4", InfoCasa[cid][cArmario][3]);
	INI_Int("Armario_5", InfoCasa[cid][cArmario][4]);
	INI_Int("Armario_6", InfoCasa[cid][cArmario][5]);
	INI_Int("Armario_7", InfoCasa[cid][cArmario][6]);
	INI_Int("Armario_8", InfoCasa[cid][cArmario][7]);
	INI_Int("Armario_9", InfoCasa[cid][cArmario][8]);
	INI_Int("Armario_10", InfoCasa[cid][cArmario][9]);
	INI_Int("Armario_11", InfoCasa[cid][cArmario][10]);
	INI_Int("Armario_12", InfoCasa[cid][cArmario][11]);
	INI_Int("Armario_13", InfoCasa[cid][cArmario][12]);
	INI_Int("Armario_14", InfoCasa[cid][cArmario][13]);
	INI_Int("Armario_15", InfoCasa[cid][cArmario][14]);
	INI_Int("Armario_Cantidad_1", InfoCasa[cid][cArmarioCantidad][0]);
	INI_Int("Armario_Cantidad_2", InfoCasa[cid][cArmarioCantidad][1]);
	INI_Int("Armario_Cantidad_3", InfoCasa[cid][cArmarioCantidad][2]);
	INI_Int("Armario_Cantidad_4", InfoCasa[cid][cArmarioCantidad][3]);
	INI_Int("Armario_Cantidad_5", InfoCasa[cid][cArmarioCantidad][4]);
	INI_Int("Armario_Cantidad_6", InfoCasa[cid][cArmarioCantidad][5]);
	INI_Int("Armario_Cantidad_7", InfoCasa[cid][cArmarioCantidad][6]);
	INI_Int("Armario_Cantidad_8", InfoCasa[cid][cArmarioCantidad][7]);
	INI_Int("Armario_Cantidad_9", InfoCasa[cid][cArmarioCantidad][8]);
	INI_Int("Armario_Cantidad_10", InfoCasa[cid][cArmarioCantidad][9]);
	INI_Int("Armario_Cantidad_11", InfoCasa[cid][cArmarioCantidad][10]);
	INI_Int("Armario_Cantidad_12", InfoCasa[cid][cArmarioCantidad][11]);
	INI_Int("Armario_Cantidad_13", InfoCasa[cid][cArmarioCantidad][12]);
	INI_Int("Armario_Cantidad_14", InfoCasa[cid][cArmarioCantidad][13]);
	INI_Int("Armario_Cantidad_15", InfoCasa[cid][cArmarioCantidad][14]);
	new key[32];
	for (new i = 0; i < MAX_MUEBLES_C; i++)
	{
		format(key, 32, "Modelo_%d", i);
		INI_Int(key, InfoCasa[cid][cObjModel][i]);
		format(key, 32, "PosicionX_%d", i);
		INI_Float(key, InfoCasa[cid][cObjPosX][i]);
		format(key, 32, "PosicionY_%d", i);
		INI_Float(key, InfoCasa[cid][cObjPosY][i]);
		format(key, 32, "PosicionZ_%d", i);
		INI_Float(key, InfoCasa[cid][cObjPosZ][i]);
		format(key, 32, "RotacionX_%d", i);
		INI_Float(key, InfoCasa[cid][cObjRotX][i]);
		format(key, 32, "RotacionY_%d", i);
		INI_Float(key, InfoCasa[cid][cObjRotY][i]);
		format(key, 32, "RotacionZ_%d", i);
		INI_Float(key, InfoCasa[cid][cObjRotZ][i]);
	}
	return 1;
}
//-----SISTEMA DE GARAGES--- SE ASOCIA CON LAS CASAS CUANDO LO CREAS PARA EL MISMO DUEÑO, ASI QUE NO HACE FALTA ASIGNAR DUEÑO MÁS QUE CASA---- POR COURIER
enum gInfo
{
	gIDCasa,
	gInterior,
	gVirtualWorld,
	gSeguro,
	gTipo,
	Float:gExteriorX,
	Float:gExteriorY,
	Float:gExteriorZ,
	Float:gExteriorA,
	Float:gExteriorX_V,
	Float:gExteriorY_V,
	Float:gInteriorX,
	Float:gInteriorY,
	Float:gInteriorZ,
	Float:gInteriorA,
	gObjModel[MAX_MUEBLES_G],
	Float:gObjPosX[MAX_MUEBLES_G],
	Float:gObjPosY[MAX_MUEBLES_G],
	Float:gObjPosZ[MAX_MUEBLES_G],
	Float:gObjRotX[MAX_MUEBLES_G],
	Float:gObjRotY[MAX_MUEBLES_G],
	Float:gObjRotZ[MAX_MUEBLES_G],
};
new InfoGaraje[MAX_GARAJES][gInfo],
	_gajCP[MAX_GARAJES];

stock ActualizarGarage(gid, bool:Todo = true, Mueble = -1)
{
	new garage[128];
	format(garage, 128, DATOS_GARAGES, gid);
	new INI:File = INI_Open(garage);
	INI_SetTag(File,"Informacion");
	if(Todo)
	{
		INI_WriteInt(File,"CasaID", InfoGaraje[gid][gIDCasa]);
		INI_WriteInt(File,"Interior", InfoGaraje[gid][gInterior]);
		INI_WriteInt(File,"VirtualWorld", InfoGaraje[gid][gVirtualWorld]);
		INI_WriteInt(File,"Seguro", InfoGaraje[gid][gSeguro]);
		INI_WriteInt(File,"Tipo", InfoGaraje[gid][gTipo]);
		INI_WriteFloat(File,"Exterior_X", InfoGaraje[gid][gExteriorX]);
		INI_WriteFloat(File,"Exterior_Y", InfoGaraje[gid][gExteriorY]);
		INI_WriteFloat(File,"Exterior_Z", InfoGaraje[gid][gExteriorZ]);
		INI_WriteFloat(File,"Exterior_A", InfoGaraje[gid][gExteriorA]);
		INI_WriteFloat(File,"ExteriorV_X", InfoGaraje[gid][gExteriorX_V]);
		INI_WriteFloat(File,"ExteriorV_Y", InfoGaraje[gid][gExteriorY_V]);
		INI_WriteFloat(File,"Interior_X", InfoGaraje[gid][gInteriorX]);
		INI_WriteFloat(File,"Interior_Y", InfoGaraje[gid][gInteriorY]);
		INI_WriteFloat(File,"Interior_Z", InfoGaraje[gid][gInteriorZ]);
		INI_WriteFloat(File,"Interior_A", InfoGaraje[gid][gInteriorA]);
	}
	if(Mueble != -1 && Mueble < MAX_MUEBLES_G)
	{
		new key[32];
		format(key, 32, "Modelo_%d", Mueble);
		INI_WriteInt(File, key, InfoGaraje[gid][gObjModel][Mueble]);
		format(key, 32, "PosicionX_%d", Mueble);
		INI_WriteFloat(File, key, InfoGaraje[gid][gObjPosX][Mueble]);
		format(key, 32, "PosicionY_%d", Mueble);
		INI_WriteFloat(File, key, InfoGaraje[gid][gObjPosY][Mueble]);
		format(key, 32, "PosicionZ_%d", Mueble);
		INI_WriteFloat(File, key, InfoGaraje[gid][gObjPosZ][Mueble]);
		format(key, 32, "RotacionX_%d", Mueble);
		INI_WriteFloat(File, key, InfoGaraje[gid][gObjRotX][Mueble]);
		format(key, 32, "RotacionY_%d", Mueble);
		INI_WriteFloat(File, key, InfoGaraje[gid][gObjRotY][Mueble]);
		format(key, 32, "RotacionZ_%d", Mueble);
		INI_WriteFloat(File, key, InfoGaraje[gid][gObjRotZ][Mueble]);
	}
	INI_Close(File);
	return 1;
}

funcion CargarGarages()
{
	new garage[64],Total_Garages;
	for(new gid = 0; gid < sizeof(InfoGaraje); gid++)
	{
		format(garage, 64, DATOS_GARAGES, gid);
		INI_ParseFile(garage, "CargarGarages_data", .bExtra = true, .extra = gid );
		if(InfoGaraje[gid][gExteriorX] > 0.0)
		{
			_gajCP[gid] = CreateDynamicCP(InfoGaraje[gid][gExteriorX], InfoGaraje[gid][gExteriorY], InfoGaraje[gid][gExteriorZ] - 1, 4.0, -1, -1, -1, 5.0);
			Total_Garages++;
		}
	}
	printf("» Sistema de garajes cargado (%d).",Total_Garages);
	return 1;
}

funcion CargarGarages_data(gid, name[], value[])
{
	INI_Int("CasaID", InfoGaraje[gid][gIDCasa]);
	INI_Int("Interior", InfoGaraje[gid][gInterior]);
	INI_Int("VirtualWorld", InfoGaraje[gid][gVirtualWorld]);
	INI_Int("Seguro", InfoGaraje[gid][gSeguro]);
	INI_Int("Tipo", InfoGaraje[gid][gTipo]);
	INI_Float("Exterior_X", InfoGaraje[gid][gExteriorX]);
	INI_Float("Exterior_Y", InfoGaraje[gid][gExteriorY]);
	INI_Float("Exterior_Z", InfoGaraje[gid][gExteriorZ]);
	INI_Float("Exterior_A", InfoGaraje[gid][gExteriorA]);
	INI_Float("ExteriorV_X", InfoGaraje[gid][gExteriorX_V]);
	INI_Float("ExteriorV_Y", InfoGaraje[gid][gExteriorY_V]);
	INI_Float("Interior_X", InfoGaraje[gid][gInteriorX]);
	INI_Float("Interior_Y", InfoGaraje[gid][gInteriorY]);
	INI_Float("Interior_Z", InfoGaraje[gid][gInteriorZ]);
	INI_Float("Interior_A", InfoGaraje[gid][gInteriorA]);
	new key[32];
	for (new i = 0; i < MAX_MUEBLES_G; i++)
	{
		format(key, 32, "Modelo_%d", i);
		INI_Int(key, InfoGaraje[gid][gObjModel][i]);
		format(key, 32, "PosicionX_%d", i);
		INI_Float(key, InfoGaraje[gid][gObjPosX][i]);
		format(key, 32, "PosicionY_%d", i);
		INI_Float(key, InfoGaraje[gid][gObjPosY][i]);
		format(key, 32, "PosicionZ_%d", i);
		INI_Float(key, InfoGaraje[gid][gObjPosZ][i]);
		format(key, 32, "RotacionX_%d", i);
		INI_Float(key, InfoGaraje[gid][gObjRotX][i]);
		format(key, 32, "RotacionY_%d", i);
		INI_Float(key, InfoGaraje[gid][gObjRotY][i]);
		format(key, 32, "RotacionZ_%d", i);
		INI_Float(key, InfoGaraje[gid][gObjRotZ][i]);
	}
	return 1;
}
//[.-------SISTEMA DE NEGOCIOS

// SE PUEDEN CREAR ACTUALMENTE DESDE LA V.1.2. POR CMBlock muebles dentro del negocio igualmente, aunque ya tienen amueblado el interior xd



// Se quitaria en caso de que se buguease o crease conflicto. Pero también ocupa espacio en el define de muebles, revisión de guardados para optimizaciones futuras.



enum nInfo
{
	nNombre[32],
	nDueno[32],
	nTipo,
	nSeguro,
	nComprado,
	Float: nExteriorX,
	Float: nExteriorY,
	Float: nExteriorZ,
	Float: nExteriorR,
	Float: nInteriorX,
	Float: nInteriorY,
	Float: nInteriorZ,
	Float: nInteriorR,
	nDinero,
	nProductos,
	nPrecio,
	nInterior,
	nArmario[15],
	nArmarioCant[15],
	nIcono,
	nCuotas,
	nPedido,
	nObjModel[MAX_MUEBLES_N],
	Float:nObjPosX[MAX_MUEBLES_N],
	Float:nObjPosY[MAX_MUEBLES_N],
	Float:nObjPosZ[MAX_MUEBLES_N],
	Float:nObjRotX[MAX_MUEBLES_N],
	Float:nObjRotY[MAX_MUEBLES_N],
	Float:nObjRotZ[MAX_MUEBLES_N],
	EnLlamas,
	EnPedido
}
new i_Negocio[MAX_NEGOCIOS][nInfo];

stock save_Negocio(nid, bool:Todo = true, Mueble = -1)
{
	new negd[64];
	format(negd, 64, DATOS_NEGOCIOS, nid);
	new INI: File = INI_Open(negd);
	INI_SetTag(File, "Informacion");
	if(Todo)
	{
		INI_WriteString(File, "Nombre", i_Negocio[nid][nNombre]);
		INI_WriteString(File, "Dueño", i_Negocio[nid][nDueno]);
		INI_WriteInt(File, "Tipo", i_Negocio[nid][nTipo]);
		INI_WriteInt(File, "Seguro", i_Negocio[nid][nSeguro]);
		INI_WriteInt(File, "Comprado", i_Negocio[nid][nComprado]);
		INI_WriteFloat(File, "Exterior_X", i_Negocio[nid][nExteriorX]);
		INI_WriteFloat(File, "Exterior_Y", i_Negocio[nid][nExteriorY]);
		INI_WriteFloat(File, "Exterior_Z", i_Negocio[nid][nExteriorZ]);
		INI_WriteFloat(File, "Exterior_R", i_Negocio[nid][nExteriorR]);
		INI_WriteFloat(File, "Interior_X", i_Negocio[nid][nInteriorX]);
		INI_WriteFloat(File, "Interior_Y", i_Negocio[nid][nInteriorY]);
		INI_WriteFloat(File, "Interior_Z", i_Negocio[nid][nInteriorZ]);
		INI_WriteFloat(File, "Interior_R", i_Negocio[nid][nInteriorR]);
		INI_WriteInt(File, "Dinero", i_Negocio[nid][nDinero]);
		INI_WriteInt(File, "Productos", i_Negocio[nid][nProductos]);
		INI_WriteInt(File, "Precio", i_Negocio[nid][nPrecio]);
		INI_WriteInt(File, "Interior", i_Negocio[nid][nInterior]);
		INI_WriteInt(File, "Entrada", i_Negocio[nid][nCuotas]);
		INI_WriteInt(File, "Pedido", i_Negocio[nid][nPedido]);
		INI_WriteInt(File, "Armario1", i_Negocio[nid][nArmario][0]);
		INI_WriteInt(File, "Armario2", i_Negocio[nid][nArmario][1]);
		INI_WriteInt(File, "Armario3", i_Negocio[nid][nArmario][2]);
		INI_WriteInt(File, "Armario4", i_Negocio[nid][nArmario][3]);
		INI_WriteInt(File, "Armario5", i_Negocio[nid][nArmario][4]);
		INI_WriteInt(File, "Armario6", i_Negocio[nid][nArmario][5]);
		INI_WriteInt(File, "Armario7", i_Negocio[nid][nArmario][6]);
		INI_WriteInt(File, "Armario8", i_Negocio[nid][nArmario][7]);
		INI_WriteInt(File, "Armario9", i_Negocio[nid][nArmario][8]);
		INI_WriteInt(File, "Armario10", i_Negocio[nid][nArmario][9]);
		INI_WriteInt(File, "ArmarioCant1", i_Negocio[nid][nArmarioCant][0]);
		INI_WriteInt(File, "ArmarioCant2", i_Negocio[nid][nArmarioCant][1]);
		INI_WriteInt(File, "ArmarioCant3", i_Negocio[nid][nArmarioCant][2]);
		INI_WriteInt(File, "ArmarioCant4", i_Negocio[nid][nArmarioCant][3]);
		INI_WriteInt(File, "ArmarioCant5", i_Negocio[nid][nArmarioCant][4]);
		INI_WriteInt(File, "ArmarioCant6", i_Negocio[nid][nArmarioCant][5]);
		INI_WriteInt(File, "ArmarioCant7", i_Negocio[nid][nArmarioCant][6]);
		INI_WriteInt(File, "ArmarioCant8", i_Negocio[nid][nArmarioCant][7]);
		INI_WriteInt(File, "ArmarioCant9", i_Negocio[nid][nArmarioCant][8]);
		INI_WriteInt(File, "ArmarioCant10", i_Negocio[nid][nArmarioCant][9]);
	}
	if(Mueble != -1 && Mueble < MAX_MUEBLES_N)
	{
		if(i_Negocio[nid][nObjModel][Mueble])
		{
			new nt[32];
			format(nt, 32, "Modelo_%d", Mueble);
			INI_WriteInt(File, nt, i_Negocio[nid][nObjModel][Mueble]);
			format(nt, 32, "PosicionX_%d", Mueble);
			INI_WriteFloat(File, nt, i_Negocio[nid][nObjPosX][Mueble]);
			format(nt, 32, "PosicionY_%d", Mueble);
			INI_WriteFloat(File, nt, i_Negocio[nid][nObjPosY][Mueble]);
			format(nt, 32, "PosicionZ_%d", Mueble);
			INI_WriteFloat(File, nt, i_Negocio[nid][nObjPosZ][Mueble]);
			format(nt, 32, "RotacionX_%d", Mueble);
			INI_WriteFloat(File, nt, i_Negocio[nid][nObjRotX][Mueble]);
			format(nt, 32, "RotacionY_%d", Mueble);
			INI_WriteFloat(File, nt, i_Negocio[nid][nObjRotY][Mueble]);
			format(nt, 32, "RotacionZ_%d", Mueble);
			INI_WriteFloat(File, nt, i_Negocio[nid][nObjRotZ][Mueble]);
		}
	}
	INI_Close(File);
	return 1;
}

funcion CargarNegocios()
{
	new Total_Negocios,negocio[64];
	for (new nid = 0; nid < sizeof(i_Negocio); nid++)
	{
		format(negocio, 64, DATOS_NEGOCIOS, nid);
		INI_ParseFile(negocio, "CargarNegocios_data", .bExtra = true, .extra = nid);
		if (i_Negocio[nid][nExteriorX] > 0.0)
		{
			Total_Negocios++;
			_NegocioP(nid);
		} else _Negocio2P(nid);
	}
	printf("» Sistema de negocios cargado (%d).",Total_Negocios);
	return 1;
}

funcion CargarNegocios_data(nid, name[], value[])
{
	INI_String("Nombre", i_Negocio[nid][nNombre], 32);
	INI_String("Dueño", i_Negocio[nid][nDueno], 32);
	INI_Int("Tipo", i_Negocio[nid][nTipo]);
	INI_Int("Seguro", i_Negocio[nid][nSeguro]);
	INI_Int("Comprado", i_Negocio[nid][nComprado]);
	INI_Float("Exterior_X", i_Negocio[nid][nExteriorX]);
	INI_Float("Exterior_Y", i_Negocio[nid][nExteriorY]);
	INI_Float("Exterior_Z", i_Negocio[nid][nExteriorZ]);
	INI_Float("Exterior_R", i_Negocio[nid][nExteriorR]);
	INI_Float("Interior_X", i_Negocio[nid][nInteriorX]);
	INI_Float("Interior_Y", i_Negocio[nid][nInteriorY]);
	INI_Float("Interior_Z", i_Negocio[nid][nInteriorZ]);
	INI_Float("Interior_R", i_Negocio[nid][nInteriorR]);
	INI_Int("Dinero", i_Negocio[nid][nDinero]);
	INI_Int("Productos", i_Negocio[nid][nProductos]);
	INI_Int("Precio", i_Negocio[nid][nPrecio]);
	INI_Int("Interior", i_Negocio[nid][nInterior]);
	INI_Int("Entrada", i_Negocio[nid][nCuotas]);
	INI_Int("Pedido", i_Negocio[nid][nPedido]);
	INI_Int("Armario1", i_Negocio[nid][nArmario][0]);
	INI_Int("Armario2", i_Negocio[nid][nArmario][1]);
	INI_Int("Armario3", i_Negocio[nid][nArmario][2]);
	INI_Int("Armario4", i_Negocio[nid][nArmario][3]);
	INI_Int("Armario5", i_Negocio[nid][nArmario][4]);
	INI_Int("Armario6", i_Negocio[nid][nArmario][5]);
	INI_Int("Armario7", i_Negocio[nid][nArmario][6]);
	INI_Int("Armario8", i_Negocio[nid][nArmario][7]);
	INI_Int("Armario9", i_Negocio[nid][nArmario][8]);
	INI_Int("Armario10", i_Negocio[nid][nArmario][9]);
	INI_Int("ArmarioCant1", i_Negocio[nid][nArmarioCant][0]);
	INI_Int("ArmarioCant2", i_Negocio[nid][nArmarioCant][1]);
	INI_Int("ArmarioCant3", i_Negocio[nid][nArmarioCant][2]);
	INI_Int("ArmarioCant4", i_Negocio[nid][nArmarioCant][3]);
	INI_Int("ArmarioCant5", i_Negocio[nid][nArmarioCant][4]);
	INI_Int("ArmarioCant6", i_Negocio[nid][nArmarioCant][5]);
	INI_Int("ArmarioCant7", i_Negocio[nid][nArmarioCant][6]);
	INI_Int("ArmarioCant8", i_Negocio[nid][nArmarioCant][7]);
	INI_Int("ArmarioCant9", i_Negocio[nid][nArmarioCant][8]);
	INI_Int("ArmarioCant10", i_Negocio[nid][nArmarioCant][9]);
	new nt[32];
	for (new i = 0; i < MAX_MUEBLES_N; i++)
	{
		format(nt, 32, "Modelo_%d", i);
		INI_Int(nt, i_Negocio[nid][nObjModel][i]);
		format(nt, 32, "PosicionX_%d", i);
		INI_Float(nt, i_Negocio[nid][nObjPosX][i]);
		format(nt, 32, "PosicionY_%d", i);
		INI_Float(nt, i_Negocio[nid][nObjPosY][i]);
		format(nt, 32, "PosicionZ_%d", i);
		INI_Float(nt, i_Negocio[nid][nObjPosZ][i]);
		format(nt, 32, "RotacionX_%d", i);
		INI_Float(nt, i_Negocio[nid][nObjRotX][i]);
		format(nt, 32, "RotacionY_%d", i);
		INI_Float(nt, i_Negocio[nid][nObjRotY][i]);
		format(nt, 32, "RotacionZ_%d", i);
		INI_Float(nt, i_Negocio[nid][nObjRotZ][i]);
	}
	return 1;
}
//<=================================> sistema de empresas
enum eInfo
{
	eNombre[32],
	eDueno[32],
	eTipo,
	eSeguro,
	eComprado,
	Float: eExteriorX,
	Float: eExteriorY,
	Float: eExteriorZ,
	Float: eExteriorR,
	Float: eExteriorX_V,
	Float: eExteriorY_V,
	Float: eInteriorX,
	Float: eInteriorY,
	Float: eInteriorZ,
	Float: eInteriorR,
	eDinero,
	ePrecio,
	eInterior,
	eMiembros,
	eEspacio,
	eIcono,
	eMapIcon,
	eObjModel[MAX_MUEBLES_E],
	Float:eObjPosX[MAX_MUEBLES_E],
	Float:eObjPosY[MAX_MUEBLES_E],
	Float:eObjPosZ[MAX_MUEBLES_E],
	Float:eObjRotX[MAX_MUEBLES_E],
	Float:eObjRotY[MAX_MUEBLES_E],
	Float:eObjRotZ[MAX_MUEBLES_E],
};
new i_Empresa[MAX_EMPRESAS][eInfo];

enum veInfo
{
	vID,
	vModelo,
    Float: vVida,
	Float: vPosicionX,
	Float: vPosicionY,
	Float: vPosicionZ,
	Float: vPosicionR,
	vPrecio,
    vVirtualWorld,
    vInterior,
	vColor_1,
	vColor_2,
	vGasolina,
    vDanioSuperficie,
    vDanioPuertas,
    vDanioLuces,
    vDanioRuedas,
	vMaletero[15],
	vMaleteroCantidad[15],
};

new InfoVehEmp[MAX_EMPRESAS][10][veInfo];

stock save_Empresa(e_id, bool:Todo = true, coche = -1, Mueble = -1)
{
	new emp_d[64];
	format(emp_d, 64, DATOS_EMPRESAS, e_id);
	new INI: File = INI_Open(emp_d);
	INI_SetTag(File, "Informacion");
	if(Todo)
	{
        INI_WriteString(File, "Nombre", i_Empresa[e_id][eNombre]);
        INI_WriteString(File, "Dueño", i_Empresa[e_id][eDueno]);
        INI_WriteInt(File, "Tipo", i_Empresa[e_id][eTipo]);
        INI_WriteInt(File, "Seguro", i_Empresa[e_id][eSeguro]);
        INI_WriteInt(File, "Comprado", i_Empresa[e_id][eComprado]);
        INI_WriteFloat(File, "Exterior_X", i_Empresa[e_id][eExteriorX]);
        INI_WriteFloat(File, "Exterior_Y", i_Empresa[e_id][eExteriorY]);
        INI_WriteFloat(File, "Exterior_Z", i_Empresa[e_id][eExteriorZ]);
        INI_WriteFloat(File, "Exterior_R", i_Empresa[e_id][eExteriorR]);
        INI_WriteFloat(File, "Exterior_XV", i_Empresa[e_id][eExteriorX_V]);
        INI_WriteFloat(File, "Exterior_YV", i_Empresa[e_id][eExteriorY_V]);
        INI_WriteFloat(File, "Interior_X", i_Empresa[e_id][eInteriorX]);
        INI_WriteFloat(File, "Interior_Y", i_Empresa[e_id][eInteriorY]);
        INI_WriteFloat(File, "Interior_Z", i_Empresa[e_id][eInteriorZ]);
        INI_WriteFloat(File, "Interior_R", i_Empresa[e_id][eInteriorR]);
        INI_WriteInt(File, "Dinero", i_Empresa[e_id][eDinero]);
        INI_WriteInt(File, "Precio", i_Empresa[e_id][ePrecio]);
        INI_WriteInt(File, "Interior", i_Empresa[e_id][eInterior]);
        INI_WriteInt(File, "Empleados", i_Empresa[e_id][eMiembros]);
        INI_WriteInt(File, "Espacio", i_Empresa[e_id][eEspacio]);
	}
	if(Mueble != -1 && Mueble < MAX_MUEBLES_E)
	{
		if(i_Empresa[e_id][eObjModel][Mueble])
		{
			new nt[32];
			format(nt, 32, "Modelo_%d", Mueble);
			INI_WriteInt(File, nt, i_Empresa[e_id][eObjModel][Mueble]);
			format(nt, 32, "PosicionX_%d", Mueble);
			INI_WriteFloat(File, nt, i_Empresa[e_id][eObjPosX][Mueble]);
			format(nt, 32, "PosicionY_%d", Mueble);
			INI_WriteFloat(File, nt, i_Empresa[e_id][eObjPosY][Mueble]);
			format(nt, 32, "PosicionZ_%d", Mueble);
			INI_WriteFloat(File, nt, i_Empresa[e_id][eObjPosZ][Mueble]);
			format(nt, 32, "RotacionX_%d", Mueble);
			INI_WriteFloat(File, nt, i_Empresa[e_id][eObjRotX][Mueble]);
			format(nt, 32, "RotacionY_%d", Mueble);
			INI_WriteFloat(File, nt, i_Empresa[e_id][eObjRotY][Mueble]);
			format(nt, 32, "RotacionZ_%d", Mueble);
			INI_WriteFloat(File, nt, i_Empresa[e_id][eObjRotZ][Mueble]);
		}
	}
	new string[128];
	if(coche != -1 && coche < 10)
	{
		format(string, 64, "v%d_IDModelo", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vModelo]);
		format(string, 64, "v%d_Vida", coche); INI_WriteFloat(File, string, InfoVehEmp[e_id][coche][vVida]);
		format(string, 64, "v%d_PosicionX", coche); INI_WriteFloat(File, string, InfoVehEmp[e_id][coche][vPosicionX]);
		format(string, 64, "v%d_PosicionY", coche); INI_WriteFloat(File, string, InfoVehEmp[e_id][coche][vPosicionY]);
		format(string, 64, "v%d_PosicionZ", coche); INI_WriteFloat(File, string, InfoVehEmp[e_id][coche][vPosicionZ]);
		format(string, 64, "v%d_PosicionR", coche); INI_WriteFloat(File, string, InfoVehEmp[e_id][coche][vPosicionR]);
		format(string, 64, "v%d_Precio", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vPrecio]);
		format(string, 64, "v%d_Color_1", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vColor_1]);
		format(string, 64, "v%d_Color_2", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vColor_2]);
		format(string, 64, "v%d_Gasolina", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vGasolina]);
		format(string, 64, "v%d_DañoSuperficie", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vDanioSuperficie]);
		format(string, 64, "v%d_DañoPuertas", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vDanioPuertas]);
		format(string, 64, "v%d_DañoLuces", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vDanioLuces]);
		format(string, 64, "v%d_DañoRuedas", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vDanioRuedas]);
		format(string, 64, "v%d_VirtualWorld", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vVirtualWorld]);
		format(string, 64, "v%d_Interior", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vInterior]);
		format(string, 64, "v%d_Maletero_1", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vMaletero][0]);
		format(string, 64, "v%d_Maletero_2", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vMaletero][1]);
		format(string, 64, "v%d_Maletero_3", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vMaletero][2]);
		format(string, 64, "v%d_Maletero_4", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vMaletero][3]);
		format(string, 64, "v%d_Maletero_5", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vMaletero][4]);
		format(string, 64, "v%d_Maletero_6", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vMaletero][5]);
		format(string, 64, "v%d_Maletero_7", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vMaletero][6]);
		format(string, 64, "v%d_Maletero_8", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vMaletero][7]);
		format(string, 64, "v%d_Maletero_9", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vMaletero][8]);
		format(string, 64, "v%d_Maletero_10", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vMaletero][9]);
		format(string, 64, "v%d_Maletero_11", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vMaletero][10]);
		format(string, 64, "v%d_Maletero_12", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vMaletero][11]);
		format(string, 64, "v%d_Maletero_13", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vMaletero][12]);
		format(string, 64, "v%d_Maletero_14", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vMaletero][13]);
		format(string, 64, "v%d_Maletero_15", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vMaletero][14]);
		format(string, 64, "v%d_Maletero_Cantidad_1", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vMaleteroCantidad][0]);
		format(string, 64, "v%d_Maletero_Cantidad_2", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vMaleteroCantidad][1]);
		format(string, 64, "v%d_Maletero_Cantidad_3", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vMaleteroCantidad][2]);
		format(string, 64, "v%d_Maletero_Cantidad_4", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vMaleteroCantidad][3]);
		format(string, 64, "v%d_Maletero_Cantidad_5", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vMaleteroCantidad][4]);
		format(string, 64, "v%d_Maletero_Cantidad_6", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vMaleteroCantidad][5]);
		format(string, 64, "v%d_Maletero_Cantidad_7", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vMaleteroCantidad][6]);
		format(string, 64, "v%d_Maletero_Cantidad_8", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vMaleteroCantidad][7]);
		format(string, 64, "v%d_Maletero_Cantidad_9", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vMaleteroCantidad][8]);
		format(string, 64, "v%d_Maletero_Cantidad_10", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vMaleteroCantidad][9]);
		format(string, 64, "v%d_Maletero_Cantidad_11", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vMaleteroCantidad][10]);
		format(string, 64, "v%d_Maletero_Cantidad_12", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vMaleteroCantidad][11]);
		format(string, 64, "v%d_Maletero_Cantidad_13", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vMaleteroCantidad][12]);
		format(string, 64, "v%d_Maletero_Cantidad_14", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vMaleteroCantidad][13]);
		format(string, 64, "v%d_Maletero_Cantidad_15", coche); INI_WriteInt(File, string, InfoVehEmp[e_id][coche][vMaleteroCantidad][14]);
    }
	INI_Close(File);
	return 1;
}

funcion CargarEmpresas()
{
	new Total_Empresas, empresa[64];
	for (new e_id = 0; e_id < sizeof(i_Empresa); e_id++)
	{
		format(empresa, 64, DATOS_EMPRESAS, e_id);
		INI_ParseFile(empresa, "CargarEmpresas_data", .bExtra = true, .extra = e_id);
		if (i_Empresa[e_id][eExteriorX] > 0.0)
		{
			Total_Empresas++;
			_EmpresaP(e_id);
			C_VehEmpresa(e_id);
		} else _Empresa2P(e_id);
	}
	printf("» Sistema de empresas cargado (%d).", Total_Empresas);
	return 1;
}

funcion C_VehEmpresa(e_id)
{
	for(new v = 0; v < MAX_VEHFAMILIAS; v++)
	{
		if(InfoVehEmp[e_id][v][vModelo] != 0)
		{
			new Coche = CreateVehicle(InfoVehEmp[e_id][v][vModelo], InfoVehEmp[e_id][v][vPosicionX], InfoVehEmp[e_id][v][vPosicionY], InfoVehEmp[e_id][v][vPosicionZ], InfoVehEmp[e_id][v][vPosicionR], InfoVehEmp[e_id][v][vColor_1], InfoVehEmp[e_id][v][vColor_2], -1);
			InfoVehEmp[e_id][v][vID] = Coche;
			GasolinaInicialVeh[Coche] = InfoVehEmp[e_id][v][vGasolina];
			SetVehicleHealth(Coche, InfoVehEmp[e_id][v][vVida]);
			SetVehicleVirtualWorld(Coche, InfoVehEmp[e_id][v][vVirtualWorld]);
			LinkVehicleToInterior(Coche, InfoVehEmp[e_id][v][vInterior]);
			UpdateVehicleDamageStatus(Coche, InfoVehEmp[e_id][v][vDanioSuperficie], InfoVehEmp[e_id][v][vDanioPuertas], InfoVehEmp[e_id][v][vDanioLuces], InfoVehEmp[e_id][v][vDanioRuedas]);
			SetVehicleMatricula(Coche);
		}
	}
}

funcion crear_VehEmpresa(jugador, e_id, veh, modelo, Float: x, Float: y, Float: z, Float: angle, color1, color2, precio)
{
	if (!InfoVehEmp[e_id][veh][vModelo])
	{
		InfoVehEmp[e_id][veh][vVirtualWorld] = GetPlayerVirtualWorld(jugador);
		InfoVehEmp[e_id][veh][vInterior] = GetPlayerInterior(jugador);
		InfoVehEmp[e_id][veh][vModelo] = modelo;
		InfoVehEmp[e_id][veh][vPosicionX] = x;
		InfoVehEmp[e_id][veh][vPosicionY] = y;
		InfoVehEmp[e_id][veh][vPosicionZ] = z;
		InfoVehEmp[e_id][veh][vPosicionR] = angle;
		InfoVehEmp[e_id][veh][vPrecio] = precio;
		InfoVehEmp[e_id][veh][vColor_1] = color1;
		InfoVehEmp[e_id][veh][vColor_2] = color2;
		InfoVehEmp[e_id][veh][vGasolina] = 100;
		InfoVehEmp[e_id][veh][vVida] = 1000.0;
		new Coche = CreateVehicle(modelo, x, y, z, angle, color1, color2, -1);
		InfoVehEmp[e_id][veh][vID] = Coche;
		SetVehicleVirtualWorld(Coche, InfoVehEmp[e_id][veh][vVirtualWorld]);
		LinkVehicleToInterior(Coche, InfoVehEmp[e_id][veh][vInterior]);
		SetVehicleMatricula(Coche);
		save_Empresa(e_id, false, veh);
		veh = 10;
	}
	return 1;
}

funcion borrar_VehEmpresa(vid, e_id)
{
	if(InfoVehEmp[e_id][vid][vID] != INVALID_PLAYER_VEHICLE_ID)
	{
		DestroyVehicle(InfoVehEmp[e_id][vid][vID]);
		InfoVehEmp[e_id][vid][vID] = INVALID_PLAYER_VEHICLE_ID;
		InfoVehEmp[e_id][vid][vModelo] = 0;
		InfoVehEmp[e_id][vid][vVida] = 1000.0;
		InfoVehEmp[e_id][vid][vPosicionX] = 0.0;
		InfoVehEmp[e_id][vid][vPosicionY] = 0.0;
		InfoVehEmp[e_id][vid][vPosicionZ] = 0.0;
		InfoVehEmp[e_id][vid][vPosicionR] = 0.0;
		InfoVehEmp[e_id][vid][vVirtualWorld] = 0;
		InfoVehEmp[e_id][vid][vInterior] = 0;
		InfoVehEmp[e_id][vid][vPrecio] = 0;
		InfoVehEmp[e_id][vid][vMaletero][0] = 0;
		InfoVehEmp[e_id][vid][vMaletero][1] = 0;
		InfoVehEmp[e_id][vid][vMaletero][2] = 0;
		InfoVehEmp[e_id][vid][vMaletero][3] = 0;
		InfoVehEmp[e_id][vid][vMaletero][4] = 0;
		InfoVehEmp[e_id][vid][vMaletero][5] = 0;
		InfoVehEmp[e_id][vid][vMaletero][6] = 0;
		InfoVehEmp[e_id][vid][vMaletero][7] = 0;
		InfoVehEmp[e_id][vid][vMaletero][8] = 0;
		InfoVehEmp[e_id][vid][vMaletero][9] = 0;
		InfoVehEmp[e_id][vid][vMaletero][10] = 0;
		InfoVehEmp[e_id][vid][vMaletero][11] = 0;
		InfoVehEmp[e_id][vid][vMaletero][12] = 0;
		InfoVehEmp[e_id][vid][vMaletero][13] = 0;
		InfoVehEmp[e_id][vid][vMaletero][14] = 0;
		InfoVehEmp[e_id][vid][vMaleteroCantidad][0] = 0;
		InfoVehEmp[e_id][vid][vMaleteroCantidad][1] = 0;
		InfoVehEmp[e_id][vid][vMaleteroCantidad][2] = 0;
		InfoVehEmp[e_id][vid][vMaleteroCantidad][3] = 0;
		InfoVehEmp[e_id][vid][vMaleteroCantidad][4] = 0;
		InfoVehEmp[e_id][vid][vMaleteroCantidad][5] = 0;
		InfoVehEmp[e_id][vid][vMaleteroCantidad][6] = 0;
		InfoVehEmp[e_id][vid][vMaleteroCantidad][7] = 0;
		InfoVehEmp[e_id][vid][vMaleteroCantidad][8] = 0;
		InfoVehEmp[e_id][vid][vMaleteroCantidad][9] = 0;
		InfoVehEmp[e_id][vid][vMaleteroCantidad][10] = 0;
		InfoVehEmp[e_id][vid][vMaleteroCantidad][11] = 0;
		InfoVehEmp[e_id][vid][vMaleteroCantidad][12] = 0;
		InfoVehEmp[e_id][vid][vMaleteroCantidad][13] = 0;
		InfoVehEmp[e_id][vid][vMaleteroCantidad][14] = 0;
		InfoVehEmp[e_id][vid][vGasolina] = 200;
		InfoVehEmp[e_id][vid][vColor_1] = 0;
		InfoVehEmp[e_id][vid][vColor_2] = 0;
		InfoVehEmp[e_id][vid][vDanioSuperficie] = 0;
		InfoVehEmp[e_id][vid][vDanioPuertas] = 0;
		InfoVehEmp[e_id][vid][vDanioLuces] = 0;
		InfoVehEmp[e_id][vid][vDanioRuedas] = 0;
		save_Empresa(e_id, false, vid);
    }
}
funcion _EmpresaP(e_id)
{
	new tipo = i_Empresa[e_id][eTipo];

	if (tipo == 1)
	{
		DestroyDynamicPickup(i_Empresa[e_id][eIcono]);
		i_Empresa[e_id][eIcono] = CreateDynamicPickup(19524, 1, i_Empresa[e_id][eExteriorX], i_Empresa[e_id][eExteriorY], i_Empresa[e_id][eExteriorZ]);
	}
	else if (tipo == 2)
	{
		DestroyDynamicPickup(i_Empresa[e_id][eIcono]);
		DestroyDynamicMapIcon(i_Empresa[e_id][eMapIcon]);
		i_Empresa[e_id][eIcono] = CreateDynamicPickup(19524, 1, i_Empresa[e_id][eExteriorX], i_Empresa[e_id][eExteriorY], i_Empresa[e_id][eExteriorZ]);
		i_Empresa[e_id][eMapIcon] = _MapIcon(i_Empresa[e_id][eExteriorX], i_Empresa[e_id][eExteriorY], i_Empresa[e_id][eExteriorZ], 27);
	}
/*	DestroyDynamicPickup(i_Empresa[e_id][eIcono]);
	if (i_Empresa[e_id][eComprado] == 0) i_Empresa[e_id][eIcono] = CreateDynamicPickup(1272, 1, i_Empresa[e_id][eExteriorX], i_Empresa[e_id][eExteriorY], i_Empresa[e_id][eExteriorZ]);
	else i_Empresa[e_id][eIcono] = CreateDynamicPickup(1273, 1, i_Empresa[e_id][nExteriorX], i_Empresa[e_id][nExteriorY], i_Empresa[e_id][nExteriorZ]);
*/	return 1;
}

funcion _Empresa2P(e_id)
{
/*	DestroyDynamicPickup(i_Empresa[e_id][eIcono]);
	i_Empresa[e_id][eIcono] = CreateDynamicPickup(1273, 1, -2190.7974,165.9186,58.2604);
*/	return 1;
}

funcion CargarEmpresas_data(e_id, name[], value[])
{
	INI_String("Nombre", i_Empresa[e_id][eNombre], 32);
	INI_String("Dueño", i_Empresa[e_id][eDueno], 32);
	INI_Int("Tipo", i_Empresa[e_id][eTipo]);
	INI_Int("Seguro", i_Empresa[e_id][eSeguro]);
	INI_Int("Comprado", i_Empresa[e_id][eComprado]);
	INI_Float("Exterior_X", i_Empresa[e_id][eExteriorX]);
	INI_Float("Exterior_Y", i_Empresa[e_id][eExteriorY]);
	INI_Float("Exterior_Z", i_Empresa[e_id][eExteriorZ]);
	INI_Float("Exterior_R", i_Empresa[e_id][eExteriorR]);
	INI_Float("Exterior_XV", i_Empresa[e_id][eExteriorX_V]);
	INI_Float("Exterior_YV", i_Empresa[e_id][eExteriorY_V]);
	INI_Float("Interior_X", i_Empresa[e_id][eInteriorX]);
	INI_Float("Interior_Y", i_Empresa[e_id][eInteriorY]);
	INI_Float("Interior_Z", i_Empresa[e_id][eInteriorZ]);
	INI_Float("Interior_R", i_Empresa[e_id][eInteriorR]);
	INI_Int("Dinero", i_Empresa[e_id][eDinero]);
	INI_Int("Precio", i_Empresa[e_id][ePrecio]);
	INI_Int("Interior", i_Empresa[e_id][eInterior]);
	INI_Int("Empleados", i_Empresa[e_id][eMiembros]);
	INI_Int("Espacio", i_Empresa[e_id][eEspacio]);
	new nt[32];
	for (new i = 0; i < MAX_MUEBLES_E; i++)
	{
		format(nt, 32, "Modelo_%d", i);
		INI_Int(nt, i_Empresa[e_id][eObjModel][i]);
		format(nt, 32, "PosicionX_%d", i);
		INI_Float(nt, i_Empresa[e_id][eObjPosX][i]);
		format(nt, 32, "PosicionY_%d", i);
		INI_Float(nt, i_Empresa[e_id][eObjPosY][i]);
		format(nt, 32, "PosicionZ_%d", i);
		INI_Float(nt, i_Empresa[e_id][eObjPosZ][i]);
		format(nt, 32, "RotacionX_%d", i);
		INI_Float(nt, i_Empresa[e_id][eObjRotX][i]);
		format(nt, 32, "RotacionY_%d", i);
		INI_Float(nt, i_Empresa[e_id][eObjRotY][i]);
		format(nt, 32, "RotacionZ_%d", i);
		INI_Float(nt, i_Empresa[e_id][eObjRotZ][i]);
	}
	new string[128];
	for (new coche = 0; coche < 10; coche++)
	{
		format(string, 64, "v%d_IDModelo", coche); INI_Int(string, InfoVehEmp[e_id][coche][vModelo]);
		format(string, 64, "v%d_Vida", coche); INI_Float(string, InfoVehEmp[e_id][coche][vVida]);
		format(string, 64, "v%d_PosicionX", coche); INI_Float(string, InfoVehEmp[e_id][coche][vPosicionX]);
		format(string, 64, "v%d_PosicionY", coche); INI_Float(string, InfoVehEmp[e_id][coche][vPosicionY]);
		format(string, 64, "v%d_PosicionZ", coche); INI_Float(string, InfoVehEmp[e_id][coche][vPosicionZ]);
		format(string, 64, "v%d_PosicionR", coche); INI_Float(string, InfoVehEmp[e_id][coche][vPosicionR]);
		format(string, 64, "v%d_Precio", coche); INI_Int(string, InfoVehEmp[e_id][coche][vPrecio]);
		format(string, 64, "v%d_Color_1", coche); INI_Int(string, InfoVehEmp[e_id][coche][vColor_1]);
		format(string, 64, "v%d_Color_2", coche); INI_Int(string, InfoVehEmp[e_id][coche][vColor_2]);
		format(string, 64, "v%d_Gasolina", coche); INI_Int(string, InfoVehEmp[e_id][coche][vGasolina]);
		format(string, 64, "v%d_DañoSuperficie", coche); INI_Int(string, InfoVehEmp[e_id][coche][vDanioSuperficie]);
		format(string, 64, "v%d_DañoPuertas", coche); INI_Int(string, InfoVehEmp[e_id][coche][vDanioPuertas]);
		format(string, 64, "v%d_DañoLuces", coche); INI_Int(string, InfoVehEmp[e_id][coche][vDanioLuces]);
		format(string, 64, "v%d_DañoRuedas", coche); INI_Int(string, InfoVehEmp[e_id][coche][vDanioRuedas]);
		format(string, 64, "v%d_VirtualWorld", coche); INI_Int(string, InfoVehEmp[e_id][coche][vVirtualWorld]);
		format(string, 64, "v%d_Interior", coche); INI_Int(string, InfoVehEmp[e_id][coche][vInterior]);
		format(string, 64, "v%d_Maletero_1", coche); INI_Int(string, InfoVehEmp[e_id][coche][vMaletero][0]);
		format(string, 64, "v%d_Maletero_2", coche); INI_Int(string, InfoVehEmp[e_id][coche][vMaletero][1]);
		format(string, 64, "v%d_Maletero_3", coche); INI_Int(string, InfoVehEmp[e_id][coche][vMaletero][2]);
		format(string, 64, "v%d_Maletero_4", coche); INI_Int(string, InfoVehEmp[e_id][coche][vMaletero][3]);
		format(string, 64, "v%d_Maletero_5", coche); INI_Int(string, InfoVehEmp[e_id][coche][vMaletero][4]);
		format(string, 64, "v%d_Maletero_6", coche); INI_Int(string, InfoVehEmp[e_id][coche][vMaletero][5]);
		format(string, 64, "v%d_Maletero_7", coche); INI_Int(string, InfoVehEmp[e_id][coche][vMaletero][6]);
		format(string, 64, "v%d_Maletero_8", coche); INI_Int(string, InfoVehEmp[e_id][coche][vMaletero][7]);
		format(string, 64, "v%d_Maletero_9", coche); INI_Int(string, InfoVehEmp[e_id][coche][vMaletero][8]);
		format(string, 64, "v%d_Maletero_10", coche); INI_Int(string, InfoVehEmp[e_id][coche][vMaletero][9]);
		format(string, 64, "v%d_Maletero_11", coche); INI_Int(string, InfoVehEmp[e_id][coche][vMaletero][10]);
		format(string, 64, "v%d_Maletero_12", coche); INI_Int(string, InfoVehEmp[e_id][coche][vMaletero][11]);
		format(string, 64, "v%d_Maletero_13", coche); INI_Int(string, InfoVehEmp[e_id][coche][vMaletero][12]);
		format(string, 64, "v%d_Maletero_14", coche); INI_Int(string, InfoVehEmp[e_id][coche][vMaletero][13]);
		format(string, 64, "v%d_Maletero_15", coche); INI_Int(string, InfoVehEmp[e_id][coche][vMaletero][14]);
		format(string, 64, "v%d_Maletero_Cantidad_1", coche); INI_Int(string, InfoVehEmp[e_id][coche][vMaleteroCantidad][0]);
		format(string, 64, "v%d_Maletero_Cantidad_2", coche); INI_Int(string, InfoVehEmp[e_id][coche][vMaleteroCantidad][1]);
		format(string, 64, "v%d_Maletero_Cantidad_3", coche); INI_Int(string, InfoVehEmp[e_id][coche][vMaleteroCantidad][2]);
		format(string, 64, "v%d_Maletero_Cantidad_4", coche); INI_Int(string, InfoVehEmp[e_id][coche][vMaleteroCantidad][3]);
		format(string, 64, "v%d_Maletero_Cantidad_5", coche); INI_Int(string, InfoVehEmp[e_id][coche][vMaleteroCantidad][4]);
		format(string, 64, "v%d_Maletero_Cantidad_6", coche); INI_Int(string, InfoVehEmp[e_id][coche][vMaleteroCantidad][5]);
		format(string, 64, "v%d_Maletero_Cantidad_7", coche); INI_Int(string, InfoVehEmp[e_id][coche][vMaleteroCantidad][6]);
		format(string, 64, "v%d_Maletero_Cantidad_8", coche); INI_Int(string, InfoVehEmp[e_id][coche][vMaleteroCantidad][7]);
		format(string, 64, "v%d_Maletero_Cantidad_9", coche); INI_Int(string, InfoVehEmp[e_id][coche][vMaleteroCantidad][8]);
		format(string, 64, "v%d_Maletero_Cantidad_10", coche); INI_Int(string, InfoVehEmp[e_id][coche][vMaleteroCantidad][9]);
		format(string, 64, "v%d_Maletero_Cantidad_11", coche); INI_Int(string, InfoVehEmp[e_id][coche][vMaleteroCantidad][10]);
		format(string, 64, "v%d_Maletero_Cantidad_12", coche); INI_Int(string, InfoVehEmp[e_id][coche][vMaleteroCantidad][11]);
		format(string, 64, "v%d_Maletero_Cantidad_13", coche); INI_Int(string, InfoVehEmp[e_id][coche][vMaleteroCantidad][12]);
		format(string, 64, "v%d_Maletero_Cantidad_14", coche); INI_Int(string, InfoVehEmp[e_id][coche][vMaleteroCantidad][13]);
		format(string, 64, "v%d_Maletero_Cantidad_15", coche); INI_Int(string, InfoVehEmp[e_id][coche][vMaleteroCantidad][14]);
	}
	return 1;
}

//<=================================> funciones:
funcion split(const strsrc[], strdest[][], delimiter)
{
	new i, li, aNum, len;
	while (i <= strlen(strsrc))
	{
		if (strsrc[i] == delimiter || i == strlen(strsrc))
		{
			len = strmid(strdest[aNum], strsrc, li, i, 128);
			strdest[aNum][len] = 0;
			li = i + 1;
			aNum++;
		}
		i++;
	}
	return 1;
}

stock Skin_(playerid, skin = 1)
{
	user[playerid][jRopa] = skin;
	SetPlayerSkin(playerid, skin);
}

stock DarDineroGC(playerid, money)
{
	SetPVarInt(playerid, "Money", GetPVarInt(playerid, "Money") + money);
	GivePlayerMoney(playerid, money);
	return 1;
}

funcion ResetPlayerCash(playerid)
{
	SetPVarInt(playerid, "Money", 0);
	ResetPlayerMoney(playerid);
	return 1;
}

funcion ActualizarHambre(playerid)
{
	if (user[playerid][jHambre] < MIN_HAMBRE) user[playerid][jHambre] = MIN_HAMBRE;
	if (user[playerid][jHambre] == MIN_HAMBRE * 2) _Mensaje(playerid, 4, "b0b0b0", "Empiezas a tener mucha hambre. Deberías comer algo.");
	if (user[playerid][jHambre] <= MIN_HAMBRE * 2)
	{
		new mareo = (5000 * MIN_HAMBRE) / user[playerid][jHambre];
		SetPlayerDrunkLevel(playerid, mareo);
	}
	return 1;
}

funcion ActualizarSed(playerid)
{
	if (user[playerid][jSed] < MIN_SED) user[playerid][jSed] = MIN_SED;
	if (user[playerid][jSed] == MIN_SED * 2) _Mensaje(playerid, 4, "b0b0b0", "Empiezas a tener mucha sed. Deberías beber algo.");
	if (user[playerid][jSed] <= MIN_SED * 2)
	{
		new mareo = (5000 * MIN_SED) / user[playerid][jSed];
		SetPlayerDrunkLevel(playerid, mareo);
	}
	return 1;
}

funcion SPEC_SetPlayerVirtualWorld(playerid, vw)
{
	SetPlayerVirtualWorld(playerid, vw);
	//- Empresas
	if(EmpresaActual[playerid] != INVALID_CASA_ID)
	{
		Loop(m, MAX_MUEBLES_E, 0)
		{
	        if(OBJ_MuebleE[playerid][m] != INVALID_OBJECT_ID)
			{
				DestroyPlayerObject(playerid, OBJ_MuebleE[playerid][m]);
	            OBJ_MuebleE[playerid][m] = INVALID_OBJECT_ID;
			}
		}
	}
	if(666 <= vw < 666+MAX_EMPRESAS) //Cargar Muebles
	{
		new e_id = vw-666;
		Loop(m, MAX_MUEBLES_E, 0)
		{
			if(i_Empresa[e_id][eObjPosX][m] != 0 && i_Empresa[e_id][eObjPosY][m] != 0 && i_Empresa[e_id][eObjPosX][m] != 0)
			{
				OBJ_MuebleE[playerid][m] = CreatePlayerObject(playerid,  i_Empresa[e_id][eObjModel][m],
    			i_Empresa[e_id][eObjPosX][m], i_Empresa[e_id][eObjPosY][m], i_Empresa[e_id][eObjPosZ][m],
    			i_Empresa[e_id][eObjRotX][m], i_Empresa[e_id][eObjRotY][m], i_Empresa[e_id][eObjRotZ][m]);
			}
		}
		EmpresaActual[playerid] = e_id;
	}
	else { EmpresaActual[playerid] = INVALID_CASA_ID; }
	//- Casas
	if(CasaActual[playerid] != INVALID_CASA_ID)
	{
		Loop(m, MAX_MUEBLES_C, 0)
		{
	        if(OBJ_MuebleC[playerid][m] != INVALID_OBJECT_ID)
			{
				DestroyPlayerObject(playerid, OBJ_MuebleC[playerid][m]);
	            OBJ_MuebleC[playerid][m] = INVALID_OBJECT_ID;
			}
		}
	}
	if(6000 <= vw < 6000+MAX_CASAS) //Cargar Muebles
	{
	    new cid = vw-6000;
		Loop(m, MAX_MUEBLES_C, 0)
		{
			if(InfoCasa[cid][cObjPosX][m] != 0 && InfoCasa[cid][cObjPosY][m] != 0 && InfoCasa[cid][cObjPosX][m] != 0)
			{
				OBJ_MuebleC[playerid][m] = CreatePlayerObject(playerid,  InfoCasa[cid][cObjModel][m],
    			InfoCasa[cid][cObjPosX][m], InfoCasa[cid][cObjPosY][m], InfoCasa[cid][cObjPosZ][m],
    			InfoCasa[cid][cObjRotX][m], InfoCasa[cid][cObjRotY][m], InfoCasa[cid][cObjRotZ][m]);
			}
		}
		CasaActual[playerid] = cid;
	}
	else { CasaActual[playerid] = INVALID_CASA_ID; }
	//- Negocios
	if(NegocioActual[playerid] != INVALID_NEGOCIO_ID) {
		Loop(m, MAX_MUEBLES_N, 0) {
	        if(OBJ_MuebleN[playerid][m] != INVALID_OBJECT_ID) {
				DestroyPlayerObject(playerid, OBJ_MuebleN[playerid][m]);
	            OBJ_MuebleN[playerid][m] = INVALID_OBJECT_ID;
			}
		}
	}
	if(300 <= vw < 300+MAX_NEGOCIOS) //Cargar Muebles
	{
	    new nid = vw-300;
		Loop(m, MAX_MUEBLES_N, 0)
		{
			if(i_Negocio[nid][nObjPosX][m] != 0 && i_Negocio[nid][nObjPosY][m] != 0 && i_Negocio[nid][nObjPosX][m] != 0)
			{
				OBJ_MuebleN[playerid][m] = CreatePlayerObject(playerid,  i_Negocio[nid][nObjModel][m],
    			i_Negocio[nid][nObjPosX][m], i_Negocio[nid][nObjPosY][m], i_Negocio[nid][nObjPosZ][m],
    			i_Negocio[nid][nObjRotX][m], i_Negocio[nid][nObjRotY][m], i_Negocio[nid][nObjRotZ][m]);
			}
		}
		NegocioActual[playerid] = nid;
	}
	else { NegocioActual[playerid] = INVALID_NEGOCIO_ID; }
	//- Garages
	if(GarageActual[playerid] != INVALID_CASA_ID)
	{
		Loop(m, MAX_MUEBLES_G, 0)
		{
	        if(OBJ_MuebleG[playerid][m] != INVALID_OBJECT_ID)
			{
				DestroyPlayerObject(playerid, OBJ_MuebleG[playerid][m]);
	            OBJ_MuebleG[playerid][m] = INVALID_OBJECT_ID;
			}
		}
	}
	if(100 <= vw < 100+MAX_GARAJES) //Cargar Muebles
	{
	    new gid = vw-100;
		Loop(m, MAX_MUEBLES_G, 0)
		{
			if(InfoGaraje[gid][gObjPosX][m] != 0 && InfoGaraje[gid][gObjPosY][m] != 0 && InfoGaraje[gid][gObjPosX][m] != 0)
			{
				OBJ_MuebleG[playerid][m] = CreatePlayerObject(playerid,  InfoGaraje[gid][gObjModel][m],
    			InfoGaraje[gid][gObjPosX][m], InfoGaraje[gid][gObjPosY][m], InfoGaraje[gid][gObjPosZ][m],
    			InfoGaraje[gid][gObjRotX][m], InfoGaraje[gid][gObjRotY][m], InfoGaraje[gid][gObjRotZ][m]);
			}
		}
		GarageActual[playerid] = gid;
	}
	else { GarageActual[playerid] = INVALID_CASA_ID; }
	return 1;
}
#define SetPlayerVirtualWorld SPEC_SetPlayerVirtualWorld

static const ObjetosInteriorC[][] =
{
	{1528, 100, "Graffiti A"},
	{1531, 100, "Graffiti B"},
	{18659, 100, "Graffiti C"},
	{28660, 100, "Graffiti D"},
	{18661, 100, "Graffiti E"},
	{18662, 100, "Graffiti F"},
	{18663, 100, "Graffiti G"},
	{18664, 100, "Graffiti H"},
	{18665, 100, "Graffiti I"},
	{18666, 100, "Graffiti J"},
	{18667, 100, "Graffiti K"},
	{1212, 100, "Dinero"},
	{1578, 100, "Paquete verde"},
	{1579, 100, "Paquete azul"},
	{1580, 100, "Paquete rojo"},
	{1930, 100, "Fichas 1"},
	{1931, 100, "Fichas 2"},
	{1932, 100, "Fichas 3"},
	{1978, 100, "Mesa casino"},
	{1979, 100, "Ruleta casino"},
	{2337, 100, "Lavadora"},//Baño
	{2097, 100, "Bañera sprunk"},
	{2526, 100, "Bañera"},
	{2522, 100, "Bañera 2"},
	{2516, 100, "Bañera 3"},
	{2527, 100, "Ducha"},
	{2517, 100, "Ducha 2"},
	{2525, 100, "Inodoro"},
	{2528, 100, "Inodoro 2"},
	{2514, 100, "Inodoro 3"},
	{1208, 100, "Lavaropa"},
	{1825, 100, "Mesa y sillas"},//Mesas
	{643, 100, "Mesa y sillas"},
	{2188, 100, "Mesa de blackyack"},
	{2964, 100, "Mesa de pool"},
	{19474, 100, "Mesa de cartas"},
	{2030, 100, "Mesa de marmol"},
	{2086, 100, "Mesa de vidrio"},
	{2112, 100, "Mesa de madera A"},
	{2115, 100, "Mesa de madera B"},
	{2118, 100, "Mesa de marmol 2"},
	{2085, 100, "Mesa de vidrio 2"},
	{2762, 100, "Mesa grande"},
	{2763, 100, "Mesa pequeña"},
	{2747, 100, "Mesa pequeña"},
	{2644, 100, "Mesa pequeña"},
	{11717, 100, "Sillon pro"},//sofas/sillones
	{2356, 100, "Silla de escritorio"},//sillas
	{1715, 100, "Silla A"},
	{1720, 100, "Silla B"},
	{1714, 100, "Silla C"},
	{1739, 100, "Silla D"},
	{1811, 100, "Silla E"},
	{1810, 100, "Silla F"},
	{2079, 100, "Silla G"},
	{2636, 100, "Silla H"},
	{2788, 100, "Silla I"},
	{1716, 100, "Silla J"},
	{1721, 100, "Silla K"},
	{1805, 100, "Silla L"},
	{2079, 100, "Silla M"},
	{2120, 100, "Silla N"},
	{2121, 100, "Silla Ñ"},
	{2096, 100, "Silla O"},
	{1796, 100, "Cama individual"},//camas
	{2563, 100, "Cama matrimonial2"},
	{2566, 100, "Cama matrimonial"},
	{1700, 100, "Cama 1"},
	{1701, 100, "Cama 2"},
	{1725, 100, "Cama 3"},
	{1745, 100, "Cama 4"},
	{1793, 100, "Cama 5"},
	{1794, 100, "Cama 6"},
	{1795, 100, "Cama 7"},
	{1796, 100, "Cama 8"},
	{1797, 100, "Cama 9"},
	{1798, 100, "Cama 10"},
	{1799, 100, "Cama 11"},
	{1800, 100, "Cama 12"},
	{1801, 100, "Cama 13"},
	{1802, 100, "Cama 14"},
	{1803, 100, "Cama 15"},
	{2090, 100, "Cama 16"},
	{2298, 100, "Cama azul"},
	{2299, 100, "Cama marron"},
	{2300, 100, "Cama amarilla"},
	{2301, 100, "Cama amarilla-roja"},
	{2302, 100, "Cama Blanca-azul"},
	{2339, 100, "Horno"},//cocina
	{19590, 100, "Cuchillo"},
	{2132, 100, "Fregadera Blanca"},
	{2141, 100, "Nevera"},
	{1665, 100, "Cenicero 1"},
	{1510, 100, "Cenicero 2"},
	{2149, 100, "Microondas"},
	{2421, 100, "Microondas 2"},
	{19584, 100, "Olla de cocina"},
	{19586, 100, "Espátula de cocina"},
	{19585, 100, "Sartén de cocina"},
	{1738, 100, "Estufa pared"},
	{2822, 100, "Platos"},
	{2820, 100, "Platos"},
	{2135, 100, "Horno + extractor Beige"},
	{2136, 100, "Fregadera Beige"},
	{2336, 100, "Fregadera"},
	{2415, 100, "Freidora"},
	{2417, 100, "Freidora 2"},
	{2002, 100, "Filtro de agua"},
	{1808, 100, "Filtro de agua 2"},
	{2013, 100, "Parte de cocina 1"},
	{2014, 100, "Parte de cocina 2"},
	{2015, 100, "Parte de cocina 3"},
	{2016, 100, "Parte de cocina 4"},
	{2018, 100, "Parte de cocina 5"},
	{2019, 100, "Parte de cocina 6"},
	{2134, 100, "Cocina blanca Parte 1"},
	{2133, 100, "Cocina blanca Parte 2"},
	{2131, 100, "Cocina blanca Parte 3"},
	{2130, 100, "Fregadera Roja"},
	{2128, 100, "Nevera Roja"},
	{2127, 100, "Cocina roja Parte 1"},
	{2129, 100, "Cocina roja Parte 2"},
	{2294, 100, "Cocina roja Parte 3"},
	{2137, 100, "Cocina Beige Parte 1"},
	{2139, 100, "Cocina Beige Parte 2"},
	{2140, 100, "Cocina Beige Parte 3"},
	{2160, 100, "Fregadera de madera"},
	{2159, 100, "Cocina madera parte 1"},
	{2158, 100, "Cocina madera parte 2"},
	{2157, 100, "Cocina madera parte 3"},
	{14720, 100, "Cocina completa"},
	{2515, 100, "Lava manos"},
	{2518, 100, "Lava manos 2"},
	{2524, 100, "Lava manos"},
	{19580, 100, "Pizza"},//comida
	{19579, 100, "Pan"},
	{19578, 100, "Banana"},
	{19577, 100, "Tomate"},
	{19575, 100, "Manzana"},
	{19574, 100, "Naranja"},
	{19572, 100, "Caja de pizza"},
	{19571, 100, "Caja de pizza 2"},
	{19570, 100, "Leche envasada"},
	{19569, 100, "Leche envasada en carton"},
	{19568, 100, "Comida empaquetada"},
	{19565, 100, "Nachos en paquete"},
	{19563, 100, "Jugo de naranja"},
	{19564, 100, "Jugo de manzana"},
	{19562, 100, "Cereales"},
	{19094, 100, "Hamburguesa A"},
	{19811, 100, "Hamburguesa B"},
	{2703, 100, "Hamburguesa C"},
	{2768, 100, "Hamburguesa D"},
	{2702, 100, "Hamburguesa E"},
	{19623, 100, "Cámara de fotos"},//eletronico
	{19893, 100, "Laptop abierta"},
	{19894, 100, "Laptop cerrada"},
	{2165, 100, "PC + Escritorio"},
	{2028, 100, "Consola CJD500"},
	{2202, 100, "Impresora"},
	{2313, 100, "TV + DVD Player"},
	{2627, 100, "Cinta para correr"},
	{2630, 100, "Bicicleta Fija"},
	{2872, 100, "Máquina de juegos A"},
	{2778, 100, "Máquina de juegos B"},
	{2779, 100, "Máquina de juegos C"},
	{19317, 100, "Guitarra eléctrica A"},
	{19318, 100, "Guitarra eléctrica B"},
	{19319, 100, "Guitarra eléctrica C"},
	{19609, 100, "Bateria"},
	{19610, 100, "Microfono"},
	{19611, 100, "Sostiene Microfono"},
	{19612, 100, "Planta"},
	{19615, 100, "Planta 2"},
	{19616, 100, "Parlante R"},
	{19617, 100, "Disco dorado R"},
	{19614, 100, "Amplificador de guitarra"},
	{19613, 100, "Amplificador de guitarra"},
	{2499, 100, "Cometa"},//accesorios
	{1649, 100, "Vidrio"},
	{1828, 100, "Alfombra Leopardo"},
	{2815, 100, "Alfombra A"},
	{2818, 100, "Alfombra B"},
	{2817, 100, "Alfombra C"},
	{2842, 100, "Alfombra D"},
	{2847, 100, "Alfombra E"},
	{19166, 100, "Cuadro de San Andreas"},
	{19172, 100, "Cuadro de Santa Maria B."},
	{19173, 100, "Cuadro de San Francisco"},
	{1409, 100, "Tacho de basura"},
	{19618, 100, "Caja fuerte A"},
	{19619, 100, "Caja fuerte B"},
	{2332, 100, "Caja fuerte C"},
	{628, 100, "Maseta A"},//
	{630, 100, "Maseta B"},
	{638, 100, "Maseta C"},
	{949, 100, "Maseta D"},
	{1360, 100, "Maseta E"},
	{1361, 100, "Maseta F"},
	{15038, 100, "Maseta G"},
	{2253, 100, "Maseta 1"},
	{2252, 100, "Maseta 2"},
	{2251, 100, "Maseta 3"},
	{2250, 100, "Maseta 4"},
	{2249, 100, "Maseta 5"},
	{2247, 100, "Maseta 6"},
	{2245, 100, "Maseta 7"},
	{2244, 100, "Maseta 8"},
	{2240, 100, "Maseta 9"},
	{2574, 100, "Escritorio + Caja fuerte"},//cuarto
	{16779, 100, "Ventilador"},
	{2161, 100, "Estanteria"},//estantes
	{2467, 100, "Estanteria cristal A"},
	{2385, 100, "Estanteria cristal B"},
	{2211, 100, "Estanteria cristal C"},
	{2210, 100, "Estanteria cristal D"},
	{1744, 100, "Estante"},
	{1742, 100, "Mueble+libros"},
	{1502, 100, "Puerta A"},//puertas
	{1491, 100, "Puerta B"},
	{1492, 100, "Puerta C"},
	{1494, 100, "Puerta D"},
	{1498, 100, "Puerta blanca"},
	{1536, 100, "Puerta negra"},
	{19859, 100, "Puerta amarilla"},
    {16151, 100, "Bar"},
	{19625, 100, "Cigarro 1"},
	{1485, 100, "Cigarro 2"},
	{19622, 100, "Escoba"},
	{2025, 100, "Armario"},
	{2167, 100, "Armario 2"},
	{2576, 100, "Armario 3"},
	{2689, 100, "Ropa gris"},
	{2704, 100, "Ropa negro con naranja"},
	{2705, 100, "Ropa blanca"},
	{2706, 100, "Ropa roja"},
	{1736, 100, "Cabeza de animal"},
	{1985, 100, "Bolsa de boxeo"},
	{2289, 100, "Cuadro de ciudad"},
	{2288, 100, "Cuadro de tabla"},
	{2287, 100, "Cuadro de barcos"},
	{2286, 100, "Cuadro de barco grande"},
	{2284, 100, "Cuadro de iglesia"},
	{2282, 100, "Cuadro de bosque"},
	{2281, 100, "Cuadro de bosque 2"},
	{2280, 100, "Cuadro de bosque 3"},
	{2279, 100, "Cuadro de bosque 4"},
	{2277, 100, "Cuadro de gato"},
	{2276, 100, "Cuadro de puente"},
	{2275, 100, "Cuadro de frutas"},
	{2274, 100, "Cuadro de flor"},
	{2273, 100, "Cuadro de flores"},
	{2271, 100, "Cuadro de blanco"},
	{2270, 100, "Cuadro de hojas"},
	{2269, 100, "Cuadro de lago"},
	{2268, 100, "Cuadro de gato 2"},
	{2267, 100, "Cuadro grande de barco"},
	{2266, 100, "Cuadro de ciudad SF"},
	{2265, 100, "Cuadro de desierto"},
	{2264, 100, "Cuadro de playa"},
	{2262, 100, "Cuadro de ciudad SF"},
	{2261, 100, "Cuadro de puente SF"},
	{2259, 100, "Cuadro de slenderman"},
	{2258, 100, "Cuadro de ciudad LA"},
	{2257, 100, "Cuadro de colores"},
	{2256, 100, "Cuadro de palmeras"},
	{2255, 100, "Cuadro de puta"},
	{2108, 100, "Lampara A"},
	{2076, 100, "Lampara B"},
	{2075, 100, "Lampara C"},
	{2074, 100, "Lampara D"},
	{2073, 100, "Lampara E"},
	{2072, 100, "Lampara F"},
	{2071, 100, "Lampara G"},
	{2069, 100, "Lampara H"},
	{2026, 100, "Lampara I"},
	{2023, 100, "Lampara J"},
	{1734, 100, "Lampara K"},
	{1731, 100, "Lampara L"},
	{1962, 100, "Disco azul"},
	{1961, 100, "Disco verde"},
	{1960, 100, "Disco morado"},
	{1768, 100, "Sofa A"},
	{1766, 100, "Sofa B"},
	{1764, 100, "Sofa C"},
	{1763, 100, "Sofa D"},
	{1761, 100, "Sofa E"},
	{1760, 100, "Sofa F"},
	{1757, 100, "Sofa G"},
	{1756, 100, "Sofa H"},
	{1753, 100, "Sofa I"},
	{1713, 100, "Sofa J"},
	{1712, 100, "Sofa K"},
	{1710, 100, "Sofa L"},
	{1709, 100, "Sofa M"},
	{1707, 100, "Sofa N"},
	{1706, 100, "Sofa Ñ"},
	{1703, 100, "Sofa O"},
	{2572, 100, "2 sofas + mesa"},
	{2571, 100, "2 sofas + mesa"},
	{1702, 100, "Sillón 1"},
	{1754, 100, "Sillón 2"},
	{1755, 100, "Sillón 3"},
	{1758, 100, "Sillón 4"},
	{1759, 100, "Sillón 5"},
	{1762, 100, "Sillón 6"},
	{1765, 100, "Sillón 7"},
	{1769, 100, "Sillón 8"},
	{11689, 100, "Sillón 9"},
	{2608, 100, "Estante"},
	{1718, 100, "Consola nintendo"},
	{1719, 100, "Consola play"},
	{2296, 100, "TV con estantes"},
	{11707, 100, "Toallero para baño"},
	{11709, 100, "Lavamanos para baño"},
	{11712, 100, "Cruz religiosa"},
	{11722, 100, "Envase de ketchup"},
	{11723, 100, "Envase de mostaza"},
	{11725, 100, "Chimenea"},
	{11726, 100, "Candelabro de techo"},
	{11728, 100, "Teléfono de pared"},
	{11733, 100, "Caballito"},
	{11734, 100, "Silla amacadora"},
	{11738, 100, "Botiquín"},
	{11743, 100, "Cafetera"},
	{11744, 100, "Plato"},
	{11745, 100, "Bolso/Maleta"},
	{19835, 100, "Vaso de café"},
	{19824, 100, "Botellas A"},
	{19823, 100, "Botellas B"},
	{19822, 100, "Botellas C"},
	{19821, 100, "Botellas D"},
	{19820, 100, "Botellas E"},
	{1551, 100, "Botellas F"},
	{1520, 100, "Botellas G"},
	{1517, 100, "Botellas H"},
	{1512, 100, "Botellas I"},
	{19819, 100, "Copas A"},
	{19818, 100, "Copas B"},
	{1667, 100, "Copas C"},
	{19814, 100, "Enchufes de pared"},
	{19813, 100, "Enchufes de pared 2"},
	{19808, 100, "Teclado de PC"},
	{19807, 100, "Teléfono de escritorio"},
	{19806, 100, "Araña(Lámpara de techo)"},
	{19804, 100, "Candado"},
	{19792, 100, "Tarjeta de débito"},
	{19825, 100, "Reloj de pared"},
	{19632, 100, "Leña encendida"},
	{19787, 100, "TV PLASMA"},
	{2312, 100, "Television A"},
	{2316, 100, "Television B"},
	{2317, 100, "Television C"},
	{2322, 100, "Television D"},
	{2596, 100, "Television E"},
	{2595, 100, "Television F"},
	{14532, 100, "Television G"},
	{1747, 100, "Television H"},
	{1748, 100, "Television I"},
	{1749, 100, "Television J"},
	{1450, 100, "Television K"},
	{1751, 100, "Television L"},
	{1752, 100, "Television M"},
	{1791, 100, "Television N"},
	{7192, 100, "Television Ñ"},
	{1782, 100, "DVD A"},
	{1783, 100, "DVD B"},
	{1788, 100, "DVD C"},
	{1790, 100, "DVD D"},
	{1785, 100, "Planta DVD"},
	{1787, 100, "Xbox negro"},
	{1786, 100, "Xbox 360"},
	{2103, 100, "Estereo A"},
	{2226, 100, "Estereo B"},
	{1809, 100, "Equipo de música A"},
	{1839, 100, "Equipo de música B"},
	{1840, 100, "Parlante"},
	{1841, 100, "Parlante 2"},
	{2102, 100, "Parlantes"},
	{2229, 100, "Parlante grande"},
	{2233, 100, "Parlante 3"},
	{2230, 100, "Parlante 4"},
	{336, 100, "Bate"},
	{339, 100, "Katana"},
	{341, 100, "Motosierra"},
	{342, 100, "Bomba"},
	{344, 100, "Molotov"},
	{345, 100, "Misil"},
	{346, 100, "Glock .45"},
	{347, 100, "Glock .45 con silenciador"},
	{348, 100, "Magnum Eagle"},
	{349, 100, "Remington"},
	{350, 100, "Escopeta doble"},
	{351, 100, "Escopeta combate"},
	{352, 100, "MAC-10"},
	{372, 100, "Carabina"},
	{353, 100, "MP5"},
	{355, 100, "AK-47"},
	{356, 100, "M4"},
	{357, 100, "Rifle de caza"},
	{358, 100, "Sniper"},
	{359, 100, "Bazoka Balistico"},
	{360, 100, "Bazoka"},
	{361, 100, "Lanzallamas"},
	{362, 100, "Minigum"},
	{370, 100, "Jetpack"},
	{371, 100, "Mochila"},
	{373, 100, "Chaleco"},
	{19354, 100, "Pared media negra"},
	{19355, 100, "Pared media gris"},
	{19356, 100, "Pared media madera"},
	{19357, 100, "Pared media blanca"},
	{19358, 100, "Pared media blanca negro"},
	{19361, 100, "Pared media naranja"},
	{19384, 100, "Marco puerta negro"},
	{19385, 100, "Marco puerta gris"},
	{19386, 100, "Marco puerta madera"},
	{19387, 100, "Marco puerta blanco"},
	{19388, 100, "Marco puerta blanca negra"},
	{19390, 100, "Marco puerta naranja"},
	{19400, 100, "Marco ventana negro"},
	{19401, 100, "Marco ventana gris"},
	{19402, 100, "Marco ventana madera"},
	{19403, 100, "Marco ventana blanco"},
	{19404, 100, "Marco ventana blanca negra"},
	{19407, 100, "Marco ventana naranja"},
	{19427, 100, "Pared chica negra"},
	{19428, 100, "Pared chica gris"},
	{19429, 100, "Pared chica madera"},
	{19430, 100, "Pared chica blanca"},
	{19431, 100, "Pared chica negra blanca"},
	{19434, 100, "Pared chica naranja"},
	{19446, 100, "Pared grande negra"},
	{19447, 100, "Pared grande gris"},
	{19448, 100, "Pared grande madera"},
	{19449, 100, "Pared grande blanca"},
	{19450, 100, "Pared grande blanca negra"},
	{19453, 100, "Pared grande naranja"}
};

static const ObjetosInteriorN[][] =
{
	{1212, 100, "Dinero"},
	{1578, 100, "Paquete verde"},
	{1579, 100, "Paquete azul"},
	{1580, 100, "Paquete rojo"},
	{1930, 100, "Fichas 1"},
	{1931, 100, "Fichas 2"},
	{1932, 100, "Fichas 3"},
	{1978, 100, "Mesa casino"},
	{1979, 100, "Ruleta casino"},
    {2725, 100, "Mesa de Narguile"},
    {2726, 100, "Narguile"},
    {19128, 100, "Pista de color"},
    {16151, 100, "Bar"},
	{2188, 100, "Mesa de blackyack"},
	{1825, 100, "Mesa y sillas"},
	{643, 100, "Mesa y sillas"},
	{11717, 100, "Sillon pro"},
	{2623, 100, "Registradora"},
	{19632, 100, "Leña"},
	{19640, 100, "Estante vacío"},
	{19621, 100, "Aceite"},
	{19622, 100, "Escoba"},
	{19623, 100, "Cámara"},
	{19624, 100, "Maleta marron"},
	{19626, 100, "Pala"},
	{19627, 100, "Llave"},
	{19561, 100, "Producto A"},
	{19562, 100, "Producto B"},
	{19563, 100, "Producto C"},
	{19564, 100, "Producto D"},
	{19565, 100, "Producto E"},
	{19566, 100, "Producto F"},
	{19567, 100, "Producto G"},
	{19568, 100, "Producto H"},
	{19569, 100, "Producto I"},
	{19570, 100, "Producto J"},
	{19636, 100, "Frutas A"},
	{19637, 100, "Frutas B"},
	{19638, 100, "Frutas C"},
	{19893, 100, "Laptop abierta"},
	{19894, 100, "Laptop cerrada"},
	{19326, 100, "3 for 2"},
	{1988, 100, "Estante de cereales"},
	{1983, 100, "Estante de cereales 2"},
	{1842, 100, "Congelador"},
	{1884, 100, "Estante de productos"},
	{1848, 100, "Estante de productos 2"},
	{1991, 100, "Estante de licores"},
	{1996, 100, "Estante de licores 2"},
	{1984, 100, "Caja registradora"},
	{2871, 100, "Estante de cereales 3"},
	{1775, 100, "Máquina de sprunk"},
	{2872, 100, "Máquina de juegos"},
	{2779, 100, "Máquina de juegos"},
	{1349, 100, "Carrito de compra"},
	{19572, 100, "Caja pissh"},
	{19592, 100, "Canasta de compra"},
	{19825, 100, "Reloj sprunk"},
	{1498, 100, "Puerta blanca"},
	{1536, 100, "Puerta negra"},
	{19859, 100, "Puerta amarilla"},
	{1561, 100, "Puerta 24/7"},
	{11706, 100, "Bote de basura"},
	{11711, 100, "Exit"},
	{2002, 100, "Filtro de agua"},
	{1808, 100, "Filtro de agua 2"},
	{19328, 100, "Cartel murky"},
	{19329, 100, "Cartel 24/7"},
	{19608, 100, "Lugar de música"},
	{19609, 100, "Bateria"},
	{19610, 100, "Microfono"},
	{19611, 100, "Sostiene Microfono"},
	{19612, 100, "Planta"},
	{19613, 100, "Amplificador de guitarra"},
	{19614, 100, "Amplificador de guitarra"},
	{19615, 100, "Planta 2"},
	{19616, 100, "Parlante"},
	{19617, 100, "Disco de oro"},
	{1718, 100, "Consola nintendo"},
	{1719, 100, "Consola play"},
	{1840, 100, "Parlante"},
	{2028, 100, "Consola CJD500"},
	{19787, 100, "TV PLASMA"},
	{2312, 100, "Television A"},
	{2316, 100, "Television B"},
	{2317, 100, "Television C"},
	{2322, 100, "Television D"},
	{2596, 100, "Television E"},
	{2595, 100, "Television F"},
	{14532, 100, "Television G"},
	{1747, 100, "Television H"},
	{1748, 100, "Television I"},
	{1749, 100, "Television J"},
	{1450, 100, "Television K"},
	{1751, 100, "Television L"},
	{1752, 100, "Television M"},
	{1791, 100, "Television N"},
	{7192, 100, "Television Ñ"},
	{1782, 100, "DVD A"},
	{1783, 100, "DVD B"},
	{1788, 100, "DVD C"},
	{1790, 100, "DVD D"},
	{1785, 100, "Planta DVD"},
	{1787, 100, "Xbox negro"},
	{1786, 100, "Xbox 360"},
	{2103, 100, "Estereo A"},
	{2226, 100, "Estereo B"},
	{1809, 100, "Equipo de música A"},
	{1839, 100, "Equipo de música B"},
	{1840, 100, "Parlante"},
	{1841, 100, "Parlante 2"},
	{2102, 100, "Parlantes"},
	{2229, 100, "Parlante grande"},
	{2233, 100, "Parlante 3"},
	{2230, 100, "Parlante 4"},
	{2063, 100, "Estante de hierro"},
	{1989, 100, "Estante pequeño vacío"},
	{918, 100, "Bombona"},
	{1650, 100, "Bidón de gasolina"},
	{1644, 100, "Mostaza"},
	{2040, 100, "Caja de munición"},
	{1218, 100, "Tanque tóxico"},
	{2340, 100, "Nevera"},
	{1208, 100, "Lavadora"},
	{2337, 100, "Lavadora 2"},
	{2713, 100, "Retrete"},
	{2843, 100, "Ropa"},
	{2845, 100, "Ropa 2"},
	{2846, 100, "Ropa 3"},
	{2844, 100, "Ropa 4"},
	{2835, 100, "Alfombra"},
	{2816, 100, "Revista"},
	{1432, 100, "Sillas + mesa"},
	{11689, 100, "Sillón"},
	{11690, 100, "Mesa"},
	{11691, 100, "Mesa 2"},
	{11688, 100, "Parlante"},
	{11687, 100, "Banco"},
	{2350, 100, "Banco 2"},
	{11686, 100, "Repartidor de alcohol"},
	{2310, 100, "Silla"},
	{2636, 100, "Silla 2"},
	{2638, 100, "Silla 3"},
	{2452, 100, "Dispensadora sprunk"},
	{2637, 100, "Mesa"},
	{2635, 100, "Mesa pequeña"},
	{2764, 100, "Mesa pequeña 2"},
	{2807, 100, "Silla"},
	{2639, 100, "Sillón"},
	{19580, 100, "Pizza"},
	{2682, 100, "Menú pizzería"},
	{2645, 100, "Menú pizzería 2"},
	{2453, 100, "Movedor de pizza"},
	{2646, 100, "Anuncio pizza"},
	{2668, 100, "Anuncio pizza 2"},
	{2665, 100, "Anuncio pizza 3"},
	{2451, 100, "Freidora"},
	{2417, 100, "Freidora 2"},
	{2415, 100, "Freidora 3"},
	{19558, 100, "Gorra de pizza"},
	{19571, 100, "Caja de pizza"},
	{2688, 100, "Anuncio fire blanket"},
	{2770, 100, "Deposito de basura"},
	{2762, 100, "Mesa CB"},
	{2763, 100, "Mesa pequeña CB"},
	{2766, 100, "Anuncio CB"},
	{2768, 100, "Hamburguesa CB"},
	{2769, 100, "Burrito CB"},
	{2765, 100, "Anuncio CB 2"},
	{2424, 100, "Meson CB"},
	{2422, 100, "PC CB"},
	{2748, 100, "Sillón CB"},
	{2746, 100, "Sillón CB 2"},
	{1716, 100, "Banco RD"},
	{2361, 100, "Congelador RD"},
	{2714, 100, "Cartel Open"},
	{2730, 100, "Cartel de ropa"},
	{2729, 100, "Cartel de ropa 2"},
	{2720, 100, "Cartel de ropa 3"},
	{2722, 100, "Cartel de ropa 4"},
	{2731, 100, "Cartel de ropa 5"},
	{2383, 100, "Ropa amarilla"},
	{2374, 100, "Camisas de cuadro azul"},
	{2399, 100, "Franelas R gris"},
	{2382, 100, "Pantalones"},
	{2375, 100, "Estante de ropa ZIP"},
	{2708, 100, "Estante vacío"},
	{2403, 100, "Estante gigante vacío"},
	{2385, 100, "Estante de vidrío"},
	{2387, 100, "Pantalones 2"},
	{2392, 100, "Pantalones 3"},
	{2381, 100, "Monos"},
	{2394, 100, "Camisas variada"},
	{2371, 100, "Sostenedor"},
	{2372, 100, "Sostenedor 2"},
	{2373, 100, "Sostenedor 3"},
	{2698, 100, "Cajas pro + estante"},
	{2622, 100, "Sostendor Prolaps"},
	{2625, 100, "Estante vacío 2"},
	{2654, 100, "Cajas de zapatos"},
	{2694, 100, "Caja de zapato"},
	{2652, 100, "Cajas Pro"},
	{2704, 100, "Chaqueta naranja 12"},
	{2689, 100, "Chaqueta gris Rockstar"},
	{2705, 100, "Franelilla R"},
	{2706, 100, "Franelilla D"},
	{2389, 100, "Chaquetas blancas + rojo"},
	{2396, 100, "Chaquetetas negras"},
	{2397, 100, "Pantalones gris"},
	{2398, 100, "Monos azules"},
	{2399, 100, "Chaquetas R gris"},
	{2401, 100, "Monos rojos"},
	{2390, 100, "Monos verdes"},
	{2656, 100, "Anuncio PRO"},
	{2732, 100, "Anuncio ZIP"},
	{2733, 100, "Anuncio ZIP 2"},
	{2734, 100, "Anuncio ZIP 3"},
	{2735, 100, "Anuncio ZIP 4"},
	{2583, 100, "Revistas XXX"},
	{2582, 100, "Revistas Hardcore"},
	{2578, 100, "Revistas XXX + estante"},
	{2585, 100, "Juguetes + estante"},
	{2681, 100, "Máquina de juegos"},
	{2581, 100, "Estante de peliculas HC"},
	{19354, 100, "Pared media negra"},
	{19355, 100, "Pared media gris"},
	{19356, 100, "Pared media madera"},
	{19357, 100, "Pared media blanca"},
	{19358, 100, "Pared media blanca negro"},
	{19361, 100, "Pared media naranja"},
	{19384, 100, "Marco puerta negro"},
	{19385, 100, "Marco puerta gris"},
	{19386, 100, "Marco puerta madera"},
	{19387, 100, "Marco puerta blanco"},
	{19388, 100, "Marco puerta blanca negra"},
	{19390, 100, "Marco puerta naranja"},
	{19400, 100, "Marco ventana negro"},
	{19401, 100, "Marco ventana gris"},
	{19402, 100, "Marco ventana madera"},
	{19403, 100, "Marco ventana blanco"},
	{19404, 100, "Marco ventana blanca negra"},
	{19407, 100, "Marco ventana naranja"},
	{19427, 100, "Pared chica negra"},
	{19428, 100, "Pared chica gris"},
	{19429, 100, "Pared chica madera"},
	{19430, 100, "Pared chica blanca"},
	{19431, 100, "Pared chica negra blanca"},
	{19434, 100, "Pared chica naranja"},
	{19446, 100, "Pared grande negra"},
	{19447, 100, "Pared grande gris"},
	{19448, 100, "Pared grande madera"},
	{19449, 100, "Pared grande blanca"},
	{19450, 100, "Pared grande blanca negra"},
	{19453, 100, "Pared grande naranja"}
};

static const ObjetosInteriorG[][] =
{
	{1528, 100, "Graffiti A"},
	{1531, 100, "Graffiti B"},
	{18659, 100, "Graffiti C"},
	{28660, 100, "Graffiti D"},
	{18661, 100, "Graffiti E"},
	{18662, 100, "Graffiti F"},
	{18663, 100, "Graffiti G"},
	{18664, 100, "Graffiti H"},
	{18665, 100, "Graffiti I"},
	{18666, 100, "Graffiti J"},
	{18667, 100, "Graffiti K"},
	{1212, 100, "Dinero"},
	{1578, 100, "Paquete verde"},
	{1579, 100, "Paquete azul"},
	{1580, 100, "Paquete rojo"},
	{1930, 100, "Fichas 1"},
	{1931, 100, "Fichas 2"},
	{1932, 100, "Fichas 3"},
	{1978, 100, "Mesa casino"},
	{1979, 100, "Ruleta casino"},
	{1558, 100, "Caja marron"},
	{2893, 100, "Metal"},
	{1498, 100, "Puerta blanca"},
	{2611, 100, "Tabla azul de notas"},
	{2114, 100, "Balón de basket"},
	{2915, 100, "Par de mancuernas"},
	{1808, 100, "Filtro de agua"},
	{2418, 100, "Mesa de metal"},
	{1327, 100, "Caucho"},
	{19815, 100, "Tabla de herramientas"},
	{2257, 100, "Cuadro de colores"},
	{19816, 100, "Óxido nitroso"},
	{19817, 100, "Subida de vehículo"},
	{19898, 100, "Mancha"},
	{19899, 100, "Estante rojo"},
	{19900, 100, "Caja de herramientas"},
	{19903, 100, "Toma de aire"},
	{19904, 100, "Chaleco naranja"},
	{19906, 100, "Portón"},
	{19893, 100, "Laptop"},
	{19878, 100, "Skate"},
	{19875, 100, "Puerta azul"},
	{19859, 100, "Puerta verde"},
	{19861, 100, "Portón blanco"},
	{19627, 100, "Llave"},
	{19626, 100, "Pala"},
	{19622, 100, "Escoba"},
	{19621, 100, "Pote de aceite"},
	{3096, 100, "Llave brillante"},
	{925, 100, "Estante con tanques"},
	{2567, 100, "Estante con cajas"},
	{1073, 100, "Llanta A"},
	{1074, 100, "Llanta B"},
	{1075, 100, "Llanta C"},
	{1076, 100, "Llanta D"},
	{1077, 100, "Llanta E"},
	{1078, 100, "Llanta F"},
	{1079, 100, "Llanta G"},
	{1080, 100, "Llanta H"},
	{1081, 100, "Llanta I"},
	{1082, 100, "Llanta J"},
	{1083, 100, "Llanta K"},
	{1084, 100, "Llanta L"},
	{1085, 100, "Llanta M"},
	{14826, 100, "Vehículo guardado"},
	{10282, 100, "Juego de taller completo"},
	{3761, 100, "Estante con cajitas"},
	{2681, 100, "Máquina de juegos"},
	{19473, 100, "Planta de marihuana"},
	{19608, 100, "Lugar de música"},
	{19609, 100, "Bateria"},
	{19610, 100, "Microfono"},
	{19611, 100, "Sostiene Microfono"},
	{19612, 100, "Planta"},
	{19613, 100, "Amplificador de guitarra"},
	{19614, 100, "Amplificador de guitarra"},
	{19615, 100, "Planta 2"},
	{19616, 100, "Parlante"},
	{19617, 100, "Disco de oro"},
	{19787, 100, "TV PLASMA"},
	{2312, 100, "Television A"},
	{2028, 100, "Consola CJD500"},
	{2103, 100, "Estereo A"},
	{2226, 100, "Estereo B"},
	{19354, 100, "Pared media negra"},
	{19355, 100, "Pared media gris"},
	{19356, 100, "Pared media madera"},
	{19357, 100, "Pared media blanca"},
	{19358, 100, "Pared media blanca negro"},
	{19361, 100, "Pared media naranja"},
	{19384, 100, "Marco puerta negro"},
	{19385, 100, "Marco puerta gris"},
	{19386, 100, "Marco puerta madera"},
	{19387, 100, "Marco puerta blanco"},
	{19388, 100, "Marco puerta blanca negra"},
	{19390, 100, "Marco puerta naranja"},
	{19400, 100, "Marco ventana negro"},
	{19401, 100, "Marco ventana gris"},
	{19402, 100, "Marco ventana madera"},
	{19403, 100, "Marco ventana blanco"},
	{19404, 100, "Marco ventana blanca negra"},
	{19407, 100, "Marco ventana naranja"},
	{19427, 100, "Pared chica negra"},
	{19428, 100, "Pared chica gris"},
	{19429, 100, "Pared chica madera"},
	{19430, 100, "Pared chica blanca"},
	{19431, 100, "Pared chica negra blanca"},
	{19434, 100, "Pared chica naranja"},
	{19446, 100, "Pared grande negra"},
	{19447, 100, "Pared grande gris"},
	{19448, 100, "Pared grande madera"},
	{19449, 100, "Pared grande blanca"},
	{19450, 100, "Pared grande blanca negra"},
	{19453, 100, "Pared grande naranja"}
};

static const ObjetosInteriorE[][] = {
//repartos
	{1930, 100, "Fichas 1"},
	{1931, 100, "Fichas 2"},
	{1932, 100, "Fichas 3"},
	{1978, 100, "Mesa casino"},
	{1979, 100, "Ruleta casino"},
	{1825, 100, "Mesa y sillas"},//Mesas
	{643, 100, "Mesa y sillas"},
	{2188, 100, "Mesa de blackyack"},
	{2964, 100, "Mesa de pool"},
	{19474, 100, "Mesa de cartas"},
	{2030, 100, "Mesa de marmol"},
	{2086, 100, "Mesa de vidrio"},
	{2112, 100, "Mesa de madera A"},
	{2115, 100, "Mesa de madera B"},
	{2118, 100, "Mesa de marmol 2"},
	{2085, 100, "Mesa de vidrio 2"},
	{2762, 100, "Mesa grande"},
	{2763, 100, "Mesa pequeña"},
	{2747, 100, "Mesa pequeña"},
	{2644, 100, "Mesa pequeña"},
	{11717, 100, "Sillon pro"},//sofas/sillones
	{2356, 100, "Silla de escritorio"},//sillas
	{1715, 100, "Silla A"},
	{1720, 100, "Silla B"},
	{1714, 100, "Silla C"},
	{1739, 100, "Silla D"},
	{1811, 100, "Silla E"},
	{1810, 100, "Silla F"},
	{2079, 100, "Silla G"},
	{2636, 100, "Silla H"},
	{2788, 100, "Silla I"},
	{1716, 100, "Silla J"},
	{1721, 100, "Silla K"},
	{1805, 100, "Silla L"},
	{2079, 100, "Silla M"},
	{2120, 100, "Silla N"},
	{2121, 100, "Silla Ñ"},
	{2096, 100, "Silla O"},
	{2132, 100, "Fregadera Blanca"},
	{2141, 100, "Nevera"},
	{1665, 100, "Cenicero 1"},
	{1510, 100, "Cenicero 2"},
	{19623, 100, "Cámara de fotos"},//eletronico
	{19893, 100, "Laptop abierta"},
	{19894, 100, "Laptop cerrada"},
	{2165, 100, "PC + Escritorio"},
	{2028, 100, "Consola CJD500"},
	{2202, 100, "Impresora"},
	{2313, 100, "TV + DVD Player"},
	{2627, 100, "Cinta para correr"},
	{2630, 100, "Bicicleta Fija"},
	{2872, 100, "Máquina de juegos A"},
	{2778, 100, "Máquina de juegos B"},
	{2779, 100, "Máquina de juegos C"},
	{19317, 100, "Guitarra eléctrica A"},
	{19318, 100, "Guitarra eléctrica B"},
	{19319, 100, "Guitarra eléctrica C"},
	{19609, 100, "Bateria"},
	{19610, 100, "Microfono"},
	{19611, 100, "Sostiene Microfono"},
	{19612, 100, "Planta"},
	{19615, 100, "Planta 2"},
	{19616, 100, "Parlante R"},
	{19617, 100, "Disco dorado R"},
	{19614, 100, "Amplificador de guitarra"},
	{19613, 100, "Amplificador de guitarra"},
	{2499, 100, "Cometa"},//accesorios
	{1649, 100, "Vidrio"},
	{1828, 100, "Alfombra Leopardo"},
	{2815, 100, "Alfombra A"},
	{2818, 100, "Alfombra B"},
	{2817, 100, "Alfombra C"},
	{2842, 100, "Alfombra D"},
	{2847, 100, "Alfombra E"},
	{19166, 100, "Cuadro de San Andreas"},
	{19172, 100, "Cuadro de Santa Maria B."},
	{19173, 100, "Cuadro de San Francisco"},
	{1409, 100, "Tacho de basura"},
	{19618, 100, "Caja fuerte A"},
	{19619, 100, "Caja fuerte B"},
	{2332, 100, "Caja fuerte C"},
	{628, 100, "Maseta A"},//
	{630, 100, "Maseta B"},
	{638, 100, "Maseta C"},
	{949, 100, "Maseta D"},
	{1360, 100, "Maseta E"},
	{1361, 100, "Maseta F"},
	{15038, 100, "Maseta G"},
	{2253, 100, "Maseta 1"},
	{2252, 100, "Maseta 2"},
	{2251, 100, "Maseta 3"},
	{2250, 100, "Maseta 4"},
	{2249, 100, "Maseta 5"},
	{2247, 100, "Maseta 6"},
	{2245, 100, "Maseta 7"},
	{2244, 100, "Maseta 8"},
	{2240, 100, "Maseta 9"},
	{2574, 100, "Escritorio + Caja fuerte"},//cuarto
	{16779, 100, "Ventilador"},
	{2161, 100, "Estanteria"},//estantes
	{2467, 100, "Estanteria cristal A"},
	{2385, 100, "Estanteria cristal B"},
	{2211, 100, "Estanteria cristal C"},
	{2210, 100, "Estanteria cristal D"},
	{1744, 100, "Estante"},
	{1742, 100, "Mueble+libros"},
	{1502, 100, "Puerta A"},//puertas
	{1491, 100, "Puerta B"},
	{1492, 100, "Puerta C"},
	{1494, 100, "Puerta D"},
	{1498, 100, "Puerta blanca"},
	{1536, 100, "Puerta negra"},
	{19859, 100, "Puerta amarilla"},
    {16151, 100, "Bar"},
	{19625, 100, "Cigarro 1"},
	{1485, 100, "Cigarro 2"},
	{19622, 100, "Escoba"},
	{2025, 100, "Armario"},
	{2167, 100, "Armario 2"},
	{2576, 100, "Armario 3"},
	{2689, 100, "Ropa gris"},
	{2704, 100, "Ropa negro con naranja"},
	{2705, 100, "Ropa blanca"},
	{2706, 100, "Ropa roja"},
	{1736, 100, "Cabeza de animal"},
	{2289, 100, "Cuadro de ciudad"},
	{2288, 100, "Cuadro de tabla"},
	{2287, 100, "Cuadro de barcos"},
	{2286, 100, "Cuadro de barco grande"},
	{2284, 100, "Cuadro de iglesia"},
	{2282, 100, "Cuadro de bosque"},
	{2281, 100, "Cuadro de bosque 2"},
	{2280, 100, "Cuadro de bosque 3"},
	{2279, 100, "Cuadro de bosque 4"},
	{2277, 100, "Cuadro de gato"},
	{2276, 100, "Cuadro de puente"},
	{2275, 100, "Cuadro de frutas"},
	{2274, 100, "Cuadro de flor"},
	{2273, 100, "Cuadro de flores"},
	{2271, 100, "Cuadro de blanco"},
	{2270, 100, "Cuadro de hojas"},
	{2269, 100, "Cuadro de lago"},
	{2268, 100, "Cuadro de gato 2"},
	{2267, 100, "Cuadro grande de barco"},
	{2266, 100, "Cuadro de ciudad SF"},
	{2265, 100, "Cuadro de desierto"},
	{2264, 100, "Cuadro de playa"},
	{2262, 100, "Cuadro de ciudad SF"},
	{2261, 100, "Cuadro de puente SF"},
	{2259, 100, "Cuadro de slenderman"},
	{2258, 100, "Cuadro de ciudad LA"},
	{2257, 100, "Cuadro de colores"},
	{2256, 100, "Cuadro de palmeras"},
	{2255, 100, "Cuadro de puta"},
	{2108, 100, "Lampara A"},
	{2076, 100, "Lampara B"},
	{2075, 100, "Lampara C"},
	{2074, 100, "Lampara D"},
	{2073, 100, "Lampara E"},
	{2072, 100, "Lampara F"},
	{2071, 100, "Lampara G"},
	{2069, 100, "Lampara H"},
	{2026, 100, "Lampara I"},
	{2023, 100, "Lampara J"},
	{1734, 100, "Lampara K"},
	{1731, 100, "Lampara L"},
	{1962, 100, "Disco azul"},
	{1961, 100, "Disco verde"},
	{1960, 100, "Disco morado"},
	{1768, 100, "Sofa A"},
	{1766, 100, "Sofa B"},
	{1764, 100, "Sofa C"},
	{1763, 100, "Sofa D"},
	{1761, 100, "Sofa E"},
	{1760, 100, "Sofa F"},
	{1757, 100, "Sofa G"},
	{1756, 100, "Sofa H"},
	{1753, 100, "Sofa I"},
	{1713, 100, "Sofa J"},
	{1712, 100, "Sofa K"},
	{1710, 100, "Sofa L"},
	{1709, 100, "Sofa M"},
	{1707, 100, "Sofa N"},
	{1706, 100, "Sofa Ñ"},
	{1703, 100, "Sofa O"},
	{2572, 100, "2 sofas + mesa"},
	{2571, 100, "2 sofas + mesa"},
	{1702, 100, "Sillón 1"},
	{1754, 100, "Sillón 2"},
	{1755, 100, "Sillón 3"},
	{1758, 100, "Sillón 4"},
	{1759, 100, "Sillón 5"},
	{1762, 100, "Sillón 6"},
	{1765, 100, "Sillón 7"},
	{1769, 100, "Sillón 8"},
	{11689, 100, "Sillón 9"},
	{2608, 100, "Estante"},
	{1718, 100, "Consola nintendo"},
	{1719, 100, "Consola play"},
	{2296, 100, "TV con estantes"},
	{11707, 100, "Toallero para baño"},
	{11709, 100, "Lavamanos para baño"},
	{11712, 100, "Cruz religiosa"},
	{11722, 100, "Envase de ketchup"},
	{11723, 100, "Envase de mostaza"},
	{11725, 100, "Chimenea"},
	{11726, 100, "Candelabro de techo"},
	{11728, 100, "Teléfono de pared"},
	{11733, 100, "Caballito"},
	{11734, 100, "Silla amacadora"},
	{11738, 100, "Botiquín"},
	{11743, 100, "Cafetera"},
	{11744, 100, "Plato"},
	{11745, 100, "Bolso/Maleta"},
	{19835, 100, "Vaso de café"},
	{19824, 100, "Botellas A"},
	{19823, 100, "Botellas B"},
	{19822, 100, "Botellas C"},
	{19821, 100, "Botellas D"},
	{19820, 100, "Botellas E"},
	{1551, 100, "Botellas F"},
	{1520, 100, "Botellas G"},
	{1517, 100, "Botellas H"},
	{1512, 100, "Botellas I"},
	{19819, 100, "Copas A"},
	{19818, 100, "Copas B"},
	{1667, 100, "Copas C"},
	{19814, 100, "Enchufes de pared"},
	{19813, 100, "Enchufes de pared 2"},
	{19808, 100, "Teclado de PC"},
	{19807, 100, "Teléfono de escritorio"},
	{19806, 100, "Araña(Lámpara de techo)"},
	{19804, 100, "Candado"},
	{19792, 100, "Tarjeta de débito"},
	{19825, 100, "Reloj de pared"},
	{19632, 100, "Leña encendida"},
	{19787, 100, "TV PLASMA"},
	{2312, 100, "Television A"},
	{2316, 100, "Television B"},
	{2317, 100, "Television C"},
	{2322, 100, "Television D"},
	{2596, 100, "Television E"},
	{2595, 100, "Television F"},
	{14532, 100, "Television G"},
	{1747, 100, "Television H"},
	{1748, 100, "Television I"},
	{1749, 100, "Television J"},
	{1450, 100, "Television K"},
	{1751, 100, "Television L"},
	{1752, 100, "Television M"},
	{1791, 100, "Television N"},
	{7192, 100, "Television Ñ"},
	{1782, 100, "DVD A"},
	{1783, 100, "DVD B"},
	{1788, 100, "DVD C"},
	{1790, 100, "DVD D"},
	{1785, 100, "Planta DVD"},
	{1787, 100, "Xbox negro"},
	{1786, 100, "Xbox 360"},
	{2103, 100, "Estereo A"},
	{2226, 100, "Estereo B"},
	{1809, 100, "Equipo de música A"},
	{1839, 100, "Equipo de música B"},
	{1840, 100, "Parlante"},
	{1841, 100, "Parlante 2"},
	{2102, 100, "Parlantes"},
	{2229, 100, "Parlante grande"},
	{2233, 100, "Parlante 3"},
	{2230, 100, "Parlante 4"},
//mecánica
	{1558, 100, "Caja marron"},
	{2893, 100, "Metal"},
	{1498, 100, "Puerta blanca"},
	{2611, 100, "Tabla azul de notas"},
	{2114, 100, "Balón de basket"},
	{2915, 100, "Par de mancuernas"},
	{1808, 100, "Filtro de agua"},
	{2418, 100, "Mesa de metal"},
	{1327, 100, "Caucho"},
	{19815, 100, "Tabla de herramientas"},
	{2257, 100, "Cuadro de colores"},
	{19816, 100, "Óxido nitroso"},
	{19817, 100, "Subida de vehículo"},
	{19898, 100, "Mancha"},
	{19899, 100, "Estante rojo"},
	{19900, 100, "Caja de herramientas"},
	{19903, 100, "Toma de aire"},
	{19904, 100, "Chaleco naranja"},
	{19906, 100, "Portón"},
	{19893, 100, "Laptop"},
	{19878, 100, "Skate"},
	{19875, 100, "Puerta azul"},
	{19859, 100, "Puerta verde"},
	{19861, 100, "Portón blanco"},
	{19627, 100, "Llave"},
	{19626, 100, "Pala"},
	{19622, 100, "Escoba"},
	{19621, 100, "Pote de aceite"},
	{19526, 100, "ATM"},
	{3096, 100, "Llave brillante"},
	{925, 100, "Estante con tanques"},
	{2567, 100, "Estante con cajas"},
	{1073, 100, "Llanta A"},
	{1074, 100, "Llanta B"},
	{1075, 100, "Llanta C"},
	{1076, 100, "Llanta D"},
	{1077, 100, "Llanta E"},
	{1078, 100, "Llanta F"},
	{1079, 100, "Llanta G"},
	{1080, 100, "Llanta H"},
	{1081, 100, "Llanta I"},
	{1082, 100, "Llanta J"},
	{1083, 100, "Llanta K"},
	{1084, 100, "Llanta L"},
	{1085, 100, "Llanta M"},
	{14826, 100, "Vehículo guardado"},
	{10282, 100, "Juego de taller completo"},
	{3761, 100, "Estante con cajitas"},
	{2681, 100, "Máquina de juegos"},
	{19787, 100, "TV PLASMA"},
	{2312, 100, "Television A"},
	{2028, 100, "Consola CJD500"},
	{2103, 100, "Estereo A"},
	{2226, 100, "Estereo B"},
	{19354, 100, "Pared media negra"},
	{19355, 100, "Pared media gris"},
	{19356, 100, "Pared media madera"},
	{19357, 100, "Pared media blanca"},
	{19358, 100, "Pared media blanca negro"},
	{19361, 100, "Pared media naranja"},
	{19384, 100, "Marco puerta negro"},
	{19385, 100, "Marco puerta gris"},
	{19386, 100, "Marco puerta madera"},
	{19387, 100, "Marco puerta blanco"},
	{19388, 100, "Marco puerta blanca negra"},
	{19390, 100, "Marco puerta naranja"},
	{19400, 100, "Marco ventana negro"},
	{19401, 100, "Marco ventana gris"},
	{19402, 100, "Marco ventana madera"},
	{19403, 100, "Marco ventana blanco"},
	{19404, 100, "Marco ventana blanca negra"},
	{19407, 100, "Marco ventana naranja"},
	{19427, 100, "Pared chica negra"},
	{19428, 100, "Pared chica gris"},
	{19429, 100, "Pared chica madera"},
	{19430, 100, "Pared chica blanca"},
	{19431, 100, "Pared chica negra blanca"},
	{19434, 100, "Pared chica naranja"},
	{19446, 100, "Pared grande negra"},
	{19447, 100, "Pared grande gris"},
	{19448, 100, "Pared grande madera"},
	{19449, 100, "Pared grande blanca"},
	{19450, 100, "Pared grande blanca negra"},
	{19453, 100, "Pared grande naranja"}
};

new nombre_vehiculo[212][] =
{
	"Landstalker","Bravura","Buffalo","Linerunner","Perennial","Sentinel","Dumper","Firetruck","Trashmaster","Stretch",
	"Manana","Infernus","Voodoo","Pony","Mule","Cheetah","Ambulance","Leviathan","Moonbeam","Esperanto","Taxi",
	"Washington","Bobcat","Mr Whoopee","BF Injection","Hunter","Premier","Enforcer","Securicar","Banshee","Predator",
	"Bus","Rhino","Barracks","Hotknife","Trailer","Previon","Coach","Cabbie","Stallion","Rumpo","RC Bandit", "Romero",
	"Packer","Monster","Admiral","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder","Reefer","Tropic","Flatbed",
	"Yankee","Caddy","Solair","Berkley's RC Van","Skimmer","PCJ-600","Faggio","Freeway","RC Baron","RC Raider",
	"Glendale","Oceanic","Sanchez","Sparrow","Patriot","Quad","Coastguard","Dinghy","Hermes","Sabre","Rustler",
	"ZR-350","Walton","Regina","Comet","BMX","Burrito","Camper","Marquis","Baggage","Dozer","Maverick","News Chopper",
	"Rancher","FBI Rancher","Virgo","Greenwood","Jetmax","Hotring Racer","Sandking","Blista Compact","Police Maverick",
	"Boxville","Benson","Mesa","RC Goblin","Hotring Racer A","Hotring Racer B","Bloodring Banger","Rancher","Super GT",
	"Elegant","Journey","Bike","Mountain Bike","Beagle","Cropduster","Stuntplane","Tanker","Road Train","Nebula","Majestic",
	"Buccaneer","Shamal","Hydra","FCR-900","NRG-500","HPV-1000","Cement Truck","Tow Truck","Fortune","Cadrona","FBI Truck",
	"Willard","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade","Freight","Streak","Vortex","Vincent",
	"Bullet","Clover","Sadler","Firetruck","Hustler","Intruder","Primo","Cargobob","Tampa","Sunrise","Merit","Utility",
	"Nevada","Yosemite","Windsor","Monster A","Monster B","Uranus","Jester","Sultan","Stratum","Elegy","Raindance","RC Tiger",
	"Flash","Tahoma","Savanna","Bandito","Freight","Trailer","Kart","Mower","Duneride","Sweeper","Broadway",
	"Tornado","AT-400","DFT-30","Huntley","Stafford","BF-400","Newsvan","Tug","Trailer","Emperor","Wayfarer",
	"Euros","Hotdog","Club","Trailer","Trailer","Andromada","Dodo","RCCam","Launch","Police Car (LSPD)","Police Car (SFPD)",
	"Police Car (LVPD)","Police Ranger","Picador","S.W.A.T. Van","Alpha","Phoenix","Glendale","Sadler","Luggage Trailer A",
	"Luggage Trailer B","Stair Trailer","Boxville","Farm Plow","Utility Trailer"
};
//<=================================> vehículos usados
enum v_info
{
	uPrecioVeh,
	uModeloVeh,
	uSeguro,
	uPaintJob,
	uColor_1,
	uColor_2,
	uDanioSuperficie,
	uDanioPuertas,
	uDanioLuces,
	uDanioRuedas,
	Float: uVida,
	uModificaciones[MAX_MODVEHICULOS],
	uGasolina,
	uStereo,
	uNeon,
}
new i_Usado[MAX_VEH_USADO][v_info];

funcion CargarVehUsados()
{
	if (!fexist("VehiculosUsados.rp")) return 1;
	new szFileStr[1024], File: iFileHandle = fopen("VehiculosUsados.rp", io_read),vid;
	while (vid < sizeof(i_Usado) && fread(iFileHandle, szFileStr))
	{
		sscanf(szFileStr, "p<|>iiiiiiiiiifiiiiiiiiiiiiiiiiii",
		i_Usado[vid][uPrecioVeh],
		i_Usado[vid][uModeloVeh],
		i_Usado[vid][uSeguro],
		i_Usado[vid][uPaintJob],
		i_Usado[vid][uColor_1],
		i_Usado[vid][uColor_2],
		i_Usado[vid][uDanioSuperficie],
		i_Usado[vid][uDanioPuertas],
		i_Usado[vid][uDanioLuces],
		i_Usado[vid][uDanioRuedas],
		i_Usado[vid][uVida],
		i_Usado[vid][uModificaciones][0],
		i_Usado[vid][uModificaciones][1],
		i_Usado[vid][uModificaciones][2],
		i_Usado[vid][uModificaciones][3],
		i_Usado[vid][uModificaciones][4],
		i_Usado[vid][uModificaciones][5],
		i_Usado[vid][uModificaciones][6],
		i_Usado[vid][uModificaciones][7],
		i_Usado[vid][uModificaciones][8],
		i_Usado[vid][uModificaciones][9],
		i_Usado[vid][uModificaciones][10],
		i_Usado[vid][uModificaciones][11],
		i_Usado[vid][uModificaciones][12],
		i_Usado[vid][uModificaciones][13],
		i_Usado[vid][uModificaciones][14],
		i_Usado[vid][uGasolina],
		i_Usado[vid][uStereo],
		i_Usado[vid][uNeon]);
		if (i_Usado[vid][uModeloVeh] >= 400)
		{
			++vid;
		}
	}
	printf("» Sistema de vehículos usados cargado (%d).",vid);
	return fclose(iFileHandle);
}

ActualizarUVeh()
{
	new szFileStr[512], File: fHandle = fopen("VehiculosUsados.rp", io_write);
	for (new vid; vid < MAX_VEH_USADO; vid++)
	{
		format(szFileStr, sizeof(szFileStr), "%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%f|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d\r\n",
		i_Usado[vid][uPrecioVeh],
		i_Usado[vid][uModeloVeh],
		i_Usado[vid][uSeguro],
		i_Usado[vid][uPaintJob],
		i_Usado[vid][uColor_1],
		i_Usado[vid][uColor_2],
		i_Usado[vid][uDanioSuperficie],
		i_Usado[vid][uDanioPuertas],
		i_Usado[vid][uDanioLuces],
		i_Usado[vid][uDanioRuedas],
		i_Usado[vid][uVida],
		i_Usado[vid][uModificaciones][0],
		i_Usado[vid][uModificaciones][1],
		i_Usado[vid][uModificaciones][2],
		i_Usado[vid][uModificaciones][3],
		i_Usado[vid][uModificaciones][4],
		i_Usado[vid][uModificaciones][5],
		i_Usado[vid][uModificaciones][6],
		i_Usado[vid][uModificaciones][7],
		i_Usado[vid][uModificaciones][8],
		i_Usado[vid][uModificaciones][9],
		i_Usado[vid][uModificaciones][10],
		i_Usado[vid][uModificaciones][11],
		i_Usado[vid][uModificaciones][12],
		i_Usado[vid][uModificaciones][13],
		i_Usado[vid][uModificaciones][14],
		i_Usado[vid][uGasolina],
		i_Usado[vid][uStereo],
		i_Usado[vid][uNeon]);
		fwrite(fHandle, szFileStr);
	}
	return fclose(fHandle);
}
//<=================================> sistema de concesionarias
enum e_info
{
	eDisponibles,
	ePrecioVeh,
	eModeloVeh,
	eTipo
};
new i_Conce[MAX_VEH_VENTA][e_info];

funcion CargarConcesionarias()
{
	if (!fexist("VehiculosVenta.rp")) return 1;
	new szFileStr[1024], File: iFileHandle = fopen("VehiculosVenta.rp", io_read),vid;
	while (vid < sizeof(i_Conce) && fread(iFileHandle, szFileStr))
	{
		sscanf(szFileStr, "p<|>iiii",
		i_Conce[vid][eDisponibles],
		i_Conce[vid][eTipo],
		i_Conce[vid][ePrecioVeh],
		i_Conce[vid][eModeloVeh]);
		if (i_Conce[vid][eModeloVeh] >= 400)
		{
			++vid;
		}
	}
	printf("» Sistema de concesionarias cargado (%d).",vid);
	return fclose(iFileHandle);
}

ActualizarVVeh()
{
	new szFileStr[512], File: fHandle = fopen("VehiculosVenta.rp", io_write);
	for (new vid; vid < MAX_VEH_VENTA; vid++)
	{
		format(szFileStr, sizeof(szFileStr), "%d|%d|%d|%d\r\n",
		i_Conce[vid][eDisponibles],
		i_Conce[vid][eTipo],
		i_Conce[vid][ePrecioVeh],
		i_Conce[vid][eModeloVeh]);
		fwrite(fHandle, szFileStr);
	}
	return fclose(fHandle);
}
//<=================================> anti-balas - jorgito
enum antichit
{
	bool:Balas
}
new AntiG[antichit];

enum antichitplayers
{
	BalasW
}
new Anti[MAX_PLAYERS][antichitplayers];
//<=================================> gasolineras
enum gsInfo
{
	gsNegocio,
	Float: gsPosicionX,
	Float: gsPosicionY,
	Float: gsPosicionZ
}
new InfoGas[MAX_GASOLINERAS][gsInfo];

funcion CargarGasolineras()
{
	if (!fexist("Gasolineras.rp")) fcreate("Gasolineras.rp");
	new szFileStr[1024], File: iFileHandle = fopen("Gasolineras.rp", io_read),gsid;
	while (gsid < sizeof(InfoGas) && fread(iFileHandle, szFileStr))
	{
		sscanf(szFileStr, "p<|>dfff",
		InfoGas[gsid][gsNegocio],
		InfoGas[gsid][gsPosicionX],
		InfoGas[gsid][gsPosicionY],
        InfoGas[gsid][gsPosicionZ]);
		if (InfoGas[gsid][gsPosicionX] > 0.0)
		{
			++gsid;
		}
	}
	printf("» Sistema de gasolineras cargado (%d).",gsid);
	return fclose(iFileHandle);
}

stock ActualizarGasolineras()
{
	new szFileStr[512], File: fHandle = fopen("Gasolineras.rp", io_write);
	for (new gsid; gsid < MAX_GASOLINERAS; gsid++)
	{
		format(szFileStr, sizeof(szFileStr), "%d|%f|%f|%f\r\n",
		InfoGas[gsid][gsNegocio],
		InfoGas[gsid][gsPosicionX],
		InfoGas[gsid][gsPosicionY],
		InfoGas[gsid][gsPosicionZ]);
		fwrite(fHandle, szFileStr);
	}
	return fclose(fHandle);
}
//<=================================> teléfonos públicos
enum tpInfo
{
	Float: tpPosicion[6],
	tpObjeto,
	Text3D: tpTexto,
}
new InfoTelefono[MAX_TELEFONOS][tpInfo];

funcion CargarTelefonos()
{
	if (!fexist("T_Publicos.rp")) fcreate("T_Publicos.rp");
	new szFileStr[1024], File: iFileHandle = fopen("T_Publicos.rp", io_read),tpid;
	while (tpid < sizeof(InfoTelefono) && fread(iFileHandle, szFileStr))
	{
		sscanf(szFileStr, "p<|>ffffff",
		InfoTelefono[tpid][tpPosicion][0],
		InfoTelefono[tpid][tpPosicion][1],
		InfoTelefono[tpid][tpPosicion][2],
		InfoTelefono[tpid][tpPosicion][3],
		InfoTelefono[tpid][tpPosicion][4],
		InfoTelefono[tpid][tpPosicion][5]);
		if (InfoTelefono[tpid][tpPosicion][0] > 0.0)
		{
			InfoTelefono[tpid][tpObjeto] = CreateDynamicObject(1216, InfoTelefono[tpid][tpPosicion][0], InfoTelefono[tpid][tpPosicion][1], InfoTelefono[tpid][tpPosicion][2], InfoTelefono[tpid][tpPosicion][3], InfoTelefono[tpid][tpPosicion][4], InfoTelefono[tpid][tpPosicion][5]);
			new text[256];
			format(text, sizeof(text), "%d | /publico", tpid);
			InfoTelefono[tpid][tpTexto] = CreateDynamic3DTextLabel(text, 0xD6E1EBFF, InfoTelefono[tpid][tpPosicion][0], InfoTelefono[tpid][tpPosicion][1], InfoTelefono[tpid][tpPosicion][2] + 0.4, 8.0);
			++tpid;
		}
	}
	printf("» Sistema de teléfonos públicos cargado (%d).",tpid);
	return fclose(iFileHandle);
}

stock ActualizarTelefono()
{
	new szFileStr[512], File: fHandle = fopen("T_Publicos.rp", io_write);
	for (new tpid; tpid < MAX_TELEFONOS; tpid++)
	{
		format(szFileStr, sizeof(szFileStr), "%f|%f|%f|%f|%f|%f\r\n",
		InfoTelefono[tpid][tpPosicion][0],
		InfoTelefono[tpid][tpPosicion][1],
		InfoTelefono[tpid][tpPosicion][2],
		InfoTelefono[tpid][tpPosicion][3],
		InfoTelefono[tpid][tpPosicion][4],
		InfoTelefono[tpid][tpPosicion][5]);
		fwrite(fHandle, szFileStr);
	}
	return fclose(fHandle);
}
//<=================================> facciones dinamicas - EdinsonWalker
enum famInfo
{
	fNombre[32],
	fRango1[24],
	fRango2[24],
	fRango3[24],
	fRango4[24],
	fRango5[24],
	fLider[24],
	fMiembros,
	fChat,
	Float: fCajaFuerteX,
	Float: fCajaFuerteY,
	Float: fCajaFuerteZ,
	fDinero,
	fCajaFuerteWorld,
	fPickup,
	fArmario[12],
	fArmarioCantidad[12],
	fTipo,
};
new InfoFamilia[MAX_FAMILIAS][famInfo];

enum vfInfo
{
	vID,
	vModelo,
	Float: vPosicionX,
	Float: vPosicionY,
	Float: vPosicionZ,
	Float: vPosicionR,
	vPaintJob,
	vColor_1,
	vColor_2,
	vGasolina,
	vMaletero[12],
	vMaleteroCantidad[12],
};

new InfoVehFam[MAX_FAMILIAS][MAX_VEHFAMILIAS][vfInfo];

funcion CargaFamilias()
{
	new familia[64];
	for (new fid = 0; fid < sizeof(InfoFamilia); fid++)
	{
		format(familia, 64, DATOS_FAMILIAS, fid);
		INI_ParseFile(familia, "CargaFamilias_data", .bExtra = true, .extra = fid);
		if (InfoFamilia[fid][fCajaFuerteX] != 0 && InfoFamilia[fid][fCajaFuerteY] != 0 && InfoFamilia[fid][fCajaFuerteZ] != 0)
		{
			InfoFamilia[fid][fPickup] = CreateDynamicPickup(1239, 1, InfoFamilia[fid][fCajaFuerteX], InfoFamilia[fid][fCajaFuerteY], InfoFamilia[fid][fCajaFuerteZ], InfoFamilia[fid][fCajaFuerteWorld]);
		}
		CargarFamVeh(fid);
	}
	print("» Sistema de organizaciones cargado.");
	return 1;
}

funcion CargaFamilias_data(fid, name[], value[])
{
	INI_String("Nombre", InfoFamilia[fid][fNombre], 32);
	INI_String("Rango_1", InfoFamilia[fid][fRango1], 24);
	INI_String("Rango_2", InfoFamilia[fid][fRango2], 24);
	INI_String("Rango_3", InfoFamilia[fid][fRango3], 24);
	INI_String("Rango_4", InfoFamilia[fid][fRango4], 24);
	INI_String("Rango_5", InfoFamilia[fid][fRango5], 24);
	INI_String("Nombre_Lider", InfoFamilia[fid][fLider], 24);
	INI_Int("Miembros", InfoFamilia[fid][fMiembros]);
	INI_Float("CajaFuerte_X", InfoFamilia[fid][fCajaFuerteX]);
	INI_Float("CajaFuerte_Y", InfoFamilia[fid][fCajaFuerteY]);
	INI_Float("CajaFuerte_Z", InfoFamilia[fid][fCajaFuerteZ]);
	INI_Int("Dinero", InfoFamilia[fid][fDinero]);
	INI_Int("Caja_Fuerte_World", InfoFamilia[fid][fCajaFuerteWorld]);
	INI_Int("Armario_1", InfoFamilia[fid][fArmario][0]);
	INI_Int("Armario_2", InfoFamilia[fid][fArmario][1]);
	INI_Int("Armario_3", InfoFamilia[fid][fArmario][2]);
	INI_Int("Armario_4", InfoFamilia[fid][fArmario][3]);
	INI_Int("Armario_5", InfoFamilia[fid][fArmario][4]);
	INI_Int("Armario_6", InfoFamilia[fid][fArmario][5]);
	INI_Int("Armario_7", InfoFamilia[fid][fArmario][6]);
	INI_Int("Armario_8", InfoFamilia[fid][fArmario][7]);
	INI_Int("Armario_9", InfoFamilia[fid][fArmario][8]);
	INI_Int("Armario_10", InfoFamilia[fid][fArmario][9]);
	INI_Int("Armario_11", InfoFamilia[fid][fArmario][10]);
	INI_Int("Armario_12", InfoFamilia[fid][fArmario][11]);
	INI_Int("Armario_Cantidad_1", InfoFamilia[fid][fArmarioCantidad][0]);
	INI_Int("Armario_Cantidad_2", InfoFamilia[fid][fArmarioCantidad][1]);
	INI_Int("Armario_Cantidad_3", InfoFamilia[fid][fArmarioCantidad][2]);
	INI_Int("Armario_Cantidad_4", InfoFamilia[fid][fArmarioCantidad][3]);
	INI_Int("Armario_Cantidad_5", InfoFamilia[fid][fArmarioCantidad][4]);
	INI_Int("Armario_Cantidad_6", InfoFamilia[fid][fArmarioCantidad][5]);
	INI_Int("Armario_Cantidad_7", InfoFamilia[fid][fArmarioCantidad][6]);
	INI_Int("Armario_Cantidad_8", InfoFamilia[fid][fArmarioCantidad][7]);
	INI_Int("Armario_Cantidad_9", InfoFamilia[fid][fArmarioCantidad][8]);
	INI_Int("Armario_Cantidad_10", InfoFamilia[fid][fArmarioCantidad][9]);
	INI_Int("Armario_Cantidad_11", InfoFamilia[fid][fArmarioCantidad][10]);
	INI_Int("Armario_Cantidad_12", InfoFamilia[fid][fArmarioCantidad][11]);
	INI_Int("Tipo", InfoFamilia[fid][fTipo]);
	new string[256];
	for (new v = 0; v < MAX_VEHFAMILIAS; v++)
	{
		format(string, 128, "v%d_IDModelo", v); INI_Int(string, InfoVehFam[fid][v][vModelo]);
		format(string, 128, "v%d_PosicionX", v); INI_Float(string, InfoVehFam[fid][v][vPosicionX]);
		format(string, 128, "v%d_PosicionY", v); INI_Float(string, InfoVehFam[fid][v][vPosicionY]);
		format(string, 128, "v%d_PosicionZ", v); INI_Float(string, InfoVehFam[fid][v][vPosicionZ]);
		format(string, 128, "v%d_PosicionR", v); INI_Float(string, InfoVehFam[fid][v][vPosicionR]);
		format(string, 128, "v%d_PaintJob", v); INI_Int(string, InfoVehFam[fid][v][vPaintJob]);
		format(string, 128, "v%d_Color_1", v); INI_Int(string, InfoVehFam[fid][v][vColor_1]);
		format(string, 128, "v%d_Color_2", v); INI_Int(string, InfoVehFam[fid][v][vColor_2]);
		format(string, 128, "v%d_Maletero_1", v); INI_Int(string, InfoVehFam[fid][v][vMaletero][0]);
		format(string, 128, "v%d_Maletero_2", v); INI_Int(string, InfoVehFam[fid][v][vMaletero][1]);
		format(string, 128, "v%d_Maletero_3", v); INI_Int(string, InfoVehFam[fid][v][vMaletero][2]);
		format(string, 128, "v%d_Maletero_4", v); INI_Int(string, InfoVehFam[fid][v][vMaletero][3]);
		format(string, 128, "v%d_Maletero_5", v); INI_Int(string, InfoVehFam[fid][v][vMaletero][4]);
		format(string, 128, "v%d_Maletero_6", v); INI_Int(string, InfoVehFam[fid][v][vMaletero][5]);
		format(string, 128, "v%d_Maletero_7", v); INI_Int(string, InfoVehFam[fid][v][vMaletero][6]);
		format(string, 128, "v%d_Maletero_8", v); INI_Int(string, InfoVehFam[fid][v][vMaletero][7]);
		format(string, 128, "v%d_Maletero_9", v); INI_Int(string, InfoVehFam[fid][v][vMaletero][8]);
		format(string, 128, "v%d_Maletero_10", v); INI_Int(string, InfoVehFam[fid][v][vMaletero][9]);
		format(string, 128, "v%d_Maletero_11", v); INI_Int(string, InfoVehFam[fid][v][vMaletero][10]);
		format(string, 128, "v%d_Maletero_12", v); INI_Int(string, InfoVehFam[fid][v][vMaletero][11]);
		format(string, 128, "v%d_Maletero_Cantidad_1", v); INI_Int(string, InfoVehFam[fid][v][vMaleteroCantidad][0]);
		format(string, 128, "v%d_Maletero_Cantidad_2", v); INI_Int(string, InfoVehFam[fid][v][vMaleteroCantidad][1]);
		format(string, 128, "v%d_Maletero_Cantidad_3", v); INI_Int(string, InfoVehFam[fid][v][vMaleteroCantidad][2]);
		format(string, 128, "v%d_Maletero_Cantidad_4", v); INI_Int(string, InfoVehFam[fid][v][vMaleteroCantidad][3]);
		format(string, 128, "v%d_Maletero_Cantidad_5", v); INI_Int(string, InfoVehFam[fid][v][vMaleteroCantidad][4]);
		format(string, 128, "v%d_Maletero_Cantidad_6", v); INI_Int(string, InfoVehFam[fid][v][vMaleteroCantidad][5]);
		format(string, 128, "v%d_Maletero_Cantidad_7", v); INI_Int(string, InfoVehFam[fid][v][vMaleteroCantidad][6]);
		format(string, 128, "v%d_Maletero_Cantidad_8", v); INI_Int(string, InfoVehFam[fid][v][vMaleteroCantidad][7]);
		format(string, 128, "v%d_Maletero_Cantidad_9", v); INI_Int(string, InfoVehFam[fid][v][vMaleteroCantidad][8]);
		format(string, 128, "v%d_Maletero_Cantidad_10", v); INI_Int(string, InfoVehFam[fid][v][vMaleteroCantidad][9]);
		format(string, 128, "v%d_Maletero_Cantidad_11", v); INI_Int(string, InfoVehFam[fid][v][vMaleteroCantidad][10]);
		format(string, 128, "v%d_Maletero_Cantidad_12", v); INI_Int(string, InfoVehFam[fid][v][vMaleteroCantidad][11]);
		format(string, 128, "v%d_Gasolina", v); INI_Int(string, InfoVehFam[fid][v][vGasolina]);
	}
	return 1;
}

stock ActualizarFamilia(fid)
{
	new familia[64];
	new string[64];
	format(familia, 64, DATOS_FAMILIAS, fid);
	new INI: File = INI_Open(familia);
	INI_SetTag(File, "Informacion");
	INI_WriteString(File, "Nombre", InfoFamilia[fid][fNombre]);
	INI_WriteString(File, "Rango_1", InfoFamilia[fid][fRango1]);
	INI_WriteString(File, "Rango_2", InfoFamilia[fid][fRango2]);
	INI_WriteString(File, "Rango_3", InfoFamilia[fid][fRango3]);
	INI_WriteString(File, "Rango_4", InfoFamilia[fid][fRango4]);
	INI_WriteString(File, "Rango_5", InfoFamilia[fid][fRango5]);
	INI_WriteString(File, "Nombre_Lider", InfoFamilia[fid][fLider]);
	INI_WriteInt(File, "Miembros", InfoFamilia[fid][fMiembros]);
	INI_WriteFloat(File, "CajaFuerte_X", InfoFamilia[fid][fCajaFuerteX]);
	INI_WriteFloat(File, "CajaFuerte_Y", InfoFamilia[fid][fCajaFuerteY]);
	INI_WriteFloat(File, "CajaFuerte_Z", InfoFamilia[fid][fCajaFuerteZ]);
	INI_WriteInt(File, "Dinero", InfoFamilia[fid][fDinero]);
	INI_WriteInt(File, "Caja_Fuerte_World", InfoFamilia[fid][fCajaFuerteWorld]);
	INI_WriteInt(File, "Armario_1", InfoFamilia[fid][fArmario][0]);
	INI_WriteInt(File, "Armario_2", InfoFamilia[fid][fArmario][1]);
	INI_WriteInt(File, "Armario_3", InfoFamilia[fid][fArmario][2]);
	INI_WriteInt(File, "Armario_4", InfoFamilia[fid][fArmario][3]);
	INI_WriteInt(File, "Armario_5", InfoFamilia[fid][fArmario][4]);
	INI_WriteInt(File, "Armario_6", InfoFamilia[fid][fArmario][5]);
	INI_WriteInt(File, "Armario_7", InfoFamilia[fid][fArmario][6]);
	INI_WriteInt(File, "Armario_8", InfoFamilia[fid][fArmario][7]);
	INI_WriteInt(File, "Armario_9", InfoFamilia[fid][fArmario][8]);
	INI_WriteInt(File, "Armario_10", InfoFamilia[fid][fArmario][9]);
	INI_WriteInt(File, "Armario_11", InfoFamilia[fid][fArmario][10]);
	INI_WriteInt(File, "Armario_12", InfoFamilia[fid][fArmario][11]);
	INI_WriteInt(File, "Armario_Cantidad_1", InfoFamilia[fid][fArmarioCantidad][0]);
	INI_WriteInt(File, "Armario_Cantidad_2", InfoFamilia[fid][fArmarioCantidad][1]);
	INI_WriteInt(File, "Armario_Cantidad_3", InfoFamilia[fid][fArmarioCantidad][2]);
	INI_WriteInt(File, "Armario_Cantidad_4", InfoFamilia[fid][fArmarioCantidad][3]);
	INI_WriteInt(File, "Armario_Cantidad_5", InfoFamilia[fid][fArmarioCantidad][4]);
	INI_WriteInt(File, "Armario_Cantidad_6", InfoFamilia[fid][fArmarioCantidad][5]);
	INI_WriteInt(File, "Armario_Cantidad_7", InfoFamilia[fid][fArmarioCantidad][6]);
	INI_WriteInt(File, "Armario_Cantidad_8", InfoFamilia[fid][fArmarioCantidad][7]);
	INI_WriteInt(File, "Armario_Cantidad_9", InfoFamilia[fid][fArmarioCantidad][8]);
	INI_WriteInt(File, "Armario_Cantidad_10", InfoFamilia[fid][fArmarioCantidad][9]);
	INI_WriteInt(File, "Armario_Cantidad_11", InfoFamilia[fid][fArmarioCantidad][10]);
	INI_WriteInt(File, "Armario_Cantidad_12", InfoFamilia[fid][fArmarioCantidad][11]);
	INI_WriteInt(File, "Tipo", InfoFamilia[fid][fTipo]);
	for (new v = 0; v < MAX_VEHFAMILIAS; v++)
	{
		format(string, 64, "v%d_IDModelo", v); INI_WriteInt(File, string, InfoVehFam[fid][v][vModelo]);
		format(string, 64, "v%d_PosicionX", v); INI_WriteFloat(File, string, InfoVehFam[fid][v][vPosicionX]);
		format(string, 64, "v%d_PosicionY", v); INI_WriteFloat(File, string, InfoVehFam[fid][v][vPosicionY]);
		format(string, 64, "v%d_PosicionZ", v); INI_WriteFloat(File, string, InfoVehFam[fid][v][vPosicionZ]);
		format(string, 64, "v%d_PosicionR", v); INI_WriteFloat(File, string, InfoVehFam[fid][v][vPosicionR]);
		format(string, 64, "v%d_PaintJob", v); INI_WriteInt(File, string, InfoVehFam[fid][v][vPaintJob]);
		format(string, 64, "v%d_Color_1", v); INI_WriteInt(File, string, InfoVehFam[fid][v][vColor_1]);
		format(string, 64, "v%d_Color_2", v); INI_WriteInt(File, string, InfoVehFam[fid][v][vColor_2]);
		format(string, 64, "v%d_Gasolina", v); INI_WriteInt(File, string, InfoVehFam[fid][v][vGasolina]);
		format(string, 64, "v%d_Maletero_1", v); INI_WriteInt(File, string, InfoVehFam[fid][v][vMaletero][0]);
		format(string, 64, "v%d_Maletero_2", v); INI_WriteInt(File, string, InfoVehFam[fid][v][vMaletero][1]);
		format(string, 64, "v%d_Maletero_3", v); INI_WriteInt(File, string, InfoVehFam[fid][v][vMaletero][2]);
		format(string, 64, "v%d_Maletero_4", v); INI_WriteInt(File, string, InfoVehFam[fid][v][vMaletero][3]);
		format(string, 64, "v%d_Maletero_5", v); INI_WriteInt(File, string, InfoVehFam[fid][v][vMaletero][4]);
		format(string, 64, "v%d_Maletero_6", v); INI_WriteInt(File, string, InfoVehFam[fid][v][vMaletero][5]);
		format(string, 64, "v%d_Maletero_7", v); INI_WriteInt(File, string, InfoVehFam[fid][v][vMaletero][6]);
		format(string, 64, "v%d_Maletero_8", v); INI_WriteInt(File, string, InfoVehFam[fid][v][vMaletero][7]);
		format(string, 64, "v%d_Maletero_9", v); INI_WriteInt(File, string, InfoVehFam[fid][v][vMaletero][8]);
		format(string, 64, "v%d_Maletero_10", v); INI_WriteInt(File, string, InfoVehFam[fid][v][vMaletero][9]);
		format(string, 64, "v%d_Maletero_11", v); INI_WriteInt(File, string, InfoVehFam[fid][v][vMaletero][10]);
		format(string, 64, "v%d_Maletero_12", v); INI_WriteInt(File, string, InfoVehFam[fid][v][vMaletero][11]);
		format(string, 64, "v%d_Maletero_Cantidad_1", v); INI_WriteInt(File, string, InfoVehFam[fid][v][vMaleteroCantidad][0]);
		format(string, 64, "v%d_Maletero_Cantidad_2", v); INI_WriteInt(File, string, InfoVehFam[fid][v][vMaleteroCantidad][1]);
		format(string, 64, "v%d_Maletero_Cantidad_3", v); INI_WriteInt(File, string, InfoVehFam[fid][v][vMaleteroCantidad][2]);
		format(string, 64, "v%d_Maletero_Cantidad_4", v); INI_WriteInt(File, string, InfoVehFam[fid][v][vMaleteroCantidad][3]);
		format(string, 64, "v%d_Maletero_Cantidad_5", v); INI_WriteInt(File, string, InfoVehFam[fid][v][vMaleteroCantidad][4]);
		format(string, 64, "v%d_Maletero_Cantidad_6", v); INI_WriteInt(File, string, InfoVehFam[fid][v][vMaleteroCantidad][5]);
		format(string, 64, "v%d_Maletero_Cantidad_7", v); INI_WriteInt(File, string, InfoVehFam[fid][v][vMaleteroCantidad][6]);
		format(string, 64, "v%d_Maletero_Cantidad_8", v); INI_WriteInt(File, string, InfoVehFam[fid][v][vMaleteroCantidad][7]);
		format(string, 64, "v%d_Maletero_Cantidad_9", v); INI_WriteInt(File, string, InfoVehFam[fid][v][vMaleteroCantidad][8]);
		format(string, 64, "v%d_Maletero_Cantidad_10", v); INI_WriteInt(File, string, InfoVehFam[fid][v][vMaleteroCantidad][9]);
		format(string, 64, "v%d_Maletero_Cantidad_11", v); INI_WriteInt(File, string, InfoVehFam[fid][v][vMaleteroCantidad][10]);
		format(string, 64, "v%d_Maletero_Cantidad_12", v); INI_WriteInt(File, string, InfoVehFam[fid][v][vMaleteroCantidad][11]);
	}
	INI_Close(File);
	return 1;
}
//<=================================> sistema de accesorios
enum aInfo
{
	aModelo,
	aParte,
	Float: aPosicionX,
	Float: aPosicionY,
	Float: aPosicionZ,
	Float: aRotacionX,
	Float: aRotacionY,
	Float: aRotacionZ,
	Float: aEscalaX,
	Float: aEscalaY,
	Float: aEscalaZ,
	aColocado,
};
new InfoAccesorio[MAX_PLAYERS][MAX_ACCESORIOS][aInfo];

enum AccesoriosEnum
{
	ModeloAccesorio,
	PrecioAccesorio,
	NombreAccesorio[36],
};

static const AccesoriosPD[][AccesoriosEnum] =
{
	{19801, 70, "Pasamontañas"},
	{19773, 50, "Pistolera"},
	{19904, 150, "Chaleco reflector"},
	{19942, 60, "Radio portatil"},
	{19775, 25, "Placa"},
	{19141, 250, "Casco tactico"},
	{19142, 300, "Chaleco tactico"},
	{18636, 70, "Gorra negra police"},
	{19099, 70, "Sombrero negro"},
	{19100, 70, "Sombrero marron"},
	{18637, 250, "Escudo antidisturbios"},
	{19161, 130, "Gorra negra con logo"},
	{19162, 130, "Gorra azul con logo"},
	{19200, 150, "Casco de Motorista"},
	{19138, 80, "Gafas negras"},
	{19139, 80, "Gafas rojas"},
	{19140, 80, "Gafas azules"},
	{19472, 120, "Mascara gas"},
	{19347, 40, "Estrella"},
	{19515, 255, "Chaleco tactico gris"},
	{19514, 150, "Casco gris"},
	{19521, 200, "Gorra única."},
	{18642, 20, "Taser"},
	{368, 12, "Visión nocturna"}
};

static const Accesorios[][AccesoriosEnum] =
{
	{18976, 12, "Casco motrocross"},
	{18979, 12, "Casco rosa"},
	{18978, 12, "Casco blanco"},
	{368, 12, "Visión nocturna"},
    {19801, 70, "Pasamontañas"},
	{19773, 50, "Pistolera"},
	{19904, 150, "Chaleco reflector"},
	{19942, 60, "Radio portatil"},
	{19775, 25, "Placa"},
	{19141, 250, "Casco Tactico"},
	{19142, 300, "Chaleco Tactico"},
	{18636, 70, "Gorra negra police"},
	{19099, 70, "Sombrero negro"},
	{19100, 70, "Sombrero marron"},
	{18637, 250, "Escudo antidisturbios"},
	{19161, 130, "Gorra negra con logo"},
	{19162, 130, "Gorra azul con logo"},
	{19200, 150, "Casco de Motorista"},
	{19138, 80, "Gafas negras"},
	{19139, 80, "Gafas rojas"},
	{19140, 80, "Gafas azules"},
	{19472, 120, "Mascara gas"},
	{19347, 40, "Estrella"},
	{19515, 255, "Chaleco tactico gris"},
	{19514, 150, "Casco gris"},
	{19521, 200, "Gorra única."},
	{1254, 15, "Calavera"},
	{19320, 15, "Calabaza"},
	{18642, 20, "Taser"},
	{18640, 7, "Peluca 1"},
	{18975, 9, "Peluca 2"},
	{19136, 20, "Peluca 3"},
	{19274, 14, "Peluca 4"},
	{18632, 2, "Caña Pesca"},
	{18638, 5, "Casco de minero"},
	{19093, 4, "Gorra blanca"},
	{19160, 5, "Gorra amarilla"},
	{18639, 6, "Sombrero"},
	{18891, 5, "Bandana 1"},
	{18892, 5, "Bandana 2"},
	{18893, 5, "Bandana 3"},
	{18894, 5, "Bandana 4"},
	{18895, 5, "Bandana 5"},
	{18896, 5, "Bandana 6"},
	{18897, 5, "Bandana 7"},
	{18898, 5, "Bandana 8"},
	{18899, 5, "Bandana 9"},
	{18900, 5, "Bandana 10"},
	{18901, 7, "Bandana 11"},
	{18902, 7, "Bandana 12"},
	{18903, 7, "Bandana 13"},
	{18904, 7, "Bandana 14"},
	{18905, 7, "Bandana 15"},
	{18906, 7, "Bandana 16"},
	{18907, 7, "Bandana 17"},
	{18908, 7, "Bandana 18"},
	{18909, 7, "Bandana 19"},
	{18910, 7, "Bandana 20"},
	{18911, 10, "Bandana 21"},
	{18912, 10, "Bandana 22"},
	{18913, 10, "Bandana 23"},
	{18914, 10, "Bandana 24"},
	{18915, 10, "Bandana 25"},
	{18916, 10, "Bandana 26"},
	{18917, 10, "Bandana 27"},
	{18918, 10, "Bandana 28"},
	{18919, 10, "Bandana 29"},
	{18920, 10, "Bandana 30"},
	{19487, 10, "Sombrero VIP"},
	{19488, 10, "Sombrero VIP 2"},
	{18921, 5, "Boina 1"},
	{18922, 5, "Boina 2"},
	{18923, 7, "Boina 3"},
	{18924, 8, "Boina 4"},
	{18925, 8, "Boina 5"},
	{19557, 8, "Máscara sexy"},
	{11704, 8, "Máscara demonio"},
	{360, 8, "Objeto premium"},
	{370, 8, "Jetpack"},
	{371, 8, "Mochila"},
	{19554, 25, "Capucha"},
	{19067, 3, "Capucha 2"},
	{19068, 3, "Capucha 3"},
	{19069, 3, "Capucha 4"},
	{19528, 30, "Gorro de Bruja"},
	{19623, 25, "Camara"},
	{19627, 25, "Llave"},
	{19555, 25, "Guante Boxeo L"},
	{19556, 25, "Guante Boxeo R"},
	{18952, 10, "Casco Boxeo"},
	{19137, 15, "GorraCluckinBell"},
	{19330, 8, "Casco Bomb"},
	{19331, 9, "Casco Bomb2"},
	{19317, 10, "Guitarra"},
	{19318, 10, "GuitarraX"},
	{19319, 12, "XFireGuitarra"},
	{1210, 5, "Maleta"},
	{19421, 4, "Audífonos 1"},
	{19422, 4, "Audífonos 2"},
	{19423, 4, "Audífonos 3"},
	{19424, 4, "Audífonos 4"},
	{19558, 4, "Gorra pizzero"},
	{19559, 6, "Mochila"},
	{19624, 41, "Maleta de mano"},
	{19330, 5 ,"sombrerodefuego"},
	{1242, 100, "Chaleco"},
	{19036, 2, "Mascara 1"},
	{19037, 2, "Mascara 2"},
	{19038, 2, "Mascara 3"},
	{19163, 7, "Mascara CJ"},
	{19064, 9, "Gorro santa 1"},
	{19065, 12, "Gorro santa 2"},
	{19066, 14, "Gorro santa 3"},
	{18645, 15, "Casco de moto"},
	{18926, 2, "Gorra 1"},
	{18927, 2, "Gorra 2"},
	{18928, 2, "Gorra 3"},
	{18929, 2, "Gorra 4"},
	{18930, 2, "Gorra 5"},
	{18931, 2, "Gorra 6"},
	{18932, 2, "Gorra 7"},
	{18933, 2, "Gorra 8"},
	{18934, 2, "Gorra 9"},
	{18935, 2, "Gorra 10"},
	{18939, 7, "Gorra 11"},
	{18940, 7, "Gorra 12"},
	{18941, 7, "Gorra 13"},
	{18942, 4, "Gorra 14"},
	{18955, 7, "Gorra 15"},
	{18956, 7, "Gorra 16"},
	{18957, 7, "Gorra 17"},
	{18958, 7, "Gorra 18"},
	{18959, 7, "Gorra 19"},
	{18960, 10, "Gorra 20"},
	{18953, 12, "Gorra 21"},
	{18954, 7, "Gorra 22"},
	{18943, 4, "Gorra 23"},
	{18961, 10, "Gorra 24"},
	{18966, 5, "Gorra 25"},
	{18967, 5, "Gorra 26"},
	{18968, 6, "Gorra 27"},
	{18969, 6, "Gorra 28"},
	{18936, 5, "Casco 1"},
	{18937, 7, "Casco 2"},
	{18938, 8, "Casco 3"},
	{18944, 3, "Sombrero 1"},
	{18945, 3, "Sombrero 2"},
	{18946, 3, "Sombrero 3"},
	{18947, 3, "Sombrero 4"},
	{18948, 3, "Sombrero 5"},
	{18949, 3, "Sombrero 6"},
	{18950, 3, "Sombrero 7"},
	{18951, 3, "Sombrero 8"},
	{18962, 12, "Sombrero 9"},
	{18971, 7, "Sombrero 10"},
	{18972, 5, "Sombrero 11"},
	{18973, 1, "Sombrero 12"},
	{18970, 5, "Sombrero 13"},
	{19006, 7, "Lentes 1"},
	{19007, 7, "Lentes 2"},
	{19008, 7, "Lentes 3"},
	{19009, 7, "Lentes 4"},
	{19010, 7, "Lentes 4"},
	{19011, 7, "Lentes 6"},
	{19012, 7, "Lentes 7"},
	{19013, 7, "Lentes 8"},
	{19014, 7, "Lentes 9"},
	{19015, 7, "Lentes 10"},
	{19016, 7, "Lentes 11"},
	{19017, 7, "Lentes 12"},
	{19018, 7, "Lentes 13"},
	{19019, 7, "Lentes 14"},
	{19020, 7, "Lentes 15"},
	{19021, 7, "Lentes 16"},
	{19022, 7, "Lentes 17"},
	{19023, 7, "Lentes 18"},
	{19024, 7, "Lentes 19"},
	{19025, 7, "Lentes 20"},
	{19026, 7, "Lentes 21"},
	{19027, 7, "Lentes 22"},
	{19028, 7, "Lentes 23"},
	{19029, 7, "Lentes 24"},
	{19030, 7, "Lentes 25"},
	{19031, 7, "Lentes 26"},
	{19032, 7, "Lentes 27"},
	{19033, 7, "Lentes 28"},
	{19034, 7, "Lentes 29"},
	{19035, 7, "Lentes 30"},
	{19039, 8, "Reloj 1"},
	{19040, 8, "Reloj 2"},
	{19041, 8, "Reloj 3"},
	{19042, 8, "Reloj 4"},
	{19043, 8, "Reloj 5"},
	{19044, 8, "Reloj 6"},
	{19045, 8, "Reloj 7"},
	{19046, 8, "Reloj 8"},
	{19047, 8, "Reloj 9"},
	{19048, 8, "Reloj 10"},
	{19049, 8, "Reloj 11"},
	{19050, 8, "Reloj 12"},
	{19051, 8, "Reloj 13"},
	{19052, 8, "Reloj 14"},
	{19053, 8, "Reloj 15"},
	{18641, 10, "Linterna"},
	{19095, 8, "Sombrero vaquero 2"},
	{19096, 7, "Sombrero vaquero 3"},
	{19097, 6, "Sombrero vaquero 4"},
	{19098, 6, "Sombrero vaquero 5"},
	{19553, 2, "Sombrero de paja"},
	{19101, 15, "Casco militar 1"},
	{19102, 15, "Casco militar 2"},
	{19103, 15, "Casco militar 3"},
	{19104, 15, "Casco militar 4"},
	{19105, 15, "Casco militar 5"},
	{19106, 15, "Casco militar 6"},
	{19107, 15, "Casco militar 7"},
	{19108, 15, "Casco militar 8"},
	{19109, 15, "Casco militar 9"},
	{19110, 15, "Casco militar 10"},
	{19111, 15, "Casco militar 11"},
	{19112, 15, "Casco militar 12"}
};

new ParteAccesorios[][] =
{
	"Ninguna",
	"Columna vertebral",
	"Cabeza",
	"Brazo izquierdo",
	"Brazo derecho",
	"Mano izquierda",
	"Mano derecha",
	"Muslo izquierdo",
	"Muslo derecho",
	"Pie izquierdo",
	"Pie derecho",
	"Pantorrilla derecha",
	"Pantorrilla izquierda",
	"Antebrazo izquierdo",
	"Antebrazo derecho",
	"Clavícula izquierda",
	"Clavícula derecha",
	"Cuello",
	"Mandíbula"
};

enum accCaid
{
	AccID,
	Float:AccX,
	Float:AccY,
	Float:AccZ,
	AccVWorld,
	AccInterior,
	aParte,
	Float: aPosicionX,
	Float: aPosicionY,
	Float: aPosicionZ,
	Float: aRotacionX,
	Float: aRotacionY,
	Float: aRotacionZ,
	Float: aEscalaX,
	Float: aEscalaY,
	Float: aEscalaZ,
};
new InfoCaido[MAX_OBJETOS_S][accCaid], AccCaido[MAX_OBJETOS_S];
//<=================================> posiciones:
new Float:_Granjero[26][3] =
{
	{-329.8441,-1557.6462,17.1252},
	{-234.1303,-1548.5472,6.3998},
	{-213.3647,-1471.5482,9.1731},
	{-330.6235,-1470.2892,15.6810},
	{-333.9123,-1512.1113,16.0053},
	{-264.0076,-1469.2531,5.0508},
	{-160.0505,-1415.3773,3.9964},
	{-167.2669,-1304.8627,5.1608},
	{-318.7726,-1315.9666,10.3838},
	{-286.0480,-1369.3938,10.4001},
	{-326.8901,-1429.5435,16.1370},
	{-333.9123,-1512.1113,16.0053},
	{-282.6288,-1466.4514,6.3875},
	{-218.7042,-1516.6606,8.2762},
	{-281.3156,-1555.7562,6.9667},
	{-167.2669,-1304.8627,5.1608},
	{-318.7726,-1315.9666,10.3838},
	{-286.0480,-1369.3938,10.4001},
	{-326.8901,-1429.5435,16.1370},
	{-282.6288,-1466.4514,6.3875},
	{-218.7042,-1516.6606,8.2762},
	{-281.3156,-1555.7562,6.9667},
	{-288.0921,-1526.8507,8.6386},
	{-286.0480,-1369.3938,10.4001},
	{-347.0992,-1504.7065,22.2383},
	{-369.2457,-1464.7102,26.7027}
};

new Float:_OOCp[4][4] =
{
	{1825.8677,-1271.8790,109.3594,317.4605},
	{1785.5293,-1297.2992,109.3594,46.6680},
	{1832.1046,-1309.8278,109.3594,257.5433},
	{1834.7744,-1286.1531,109.3594,314.8838}
};

new Float:_COMISARIAp[2][3] =
{
	{322.3042, 311.5955, 999.2017},
	{322.0996, 316.5232, 999.2017}
};

new Float:_PFp[4][3] =
{
	{188.2428,1913.2661,17.6721},
	{229.6464,1902.8188,17.6481},
	{214.4664,1874.8922,17.6406},
	{203.7212,1895.0477,17.6406}
};
//<=================================> teléfono
funcion LlamarTelefono(playerid, numero) {
	if(numero == user[playerid][jTelefono]){_Mensaje(playerid, 0, "536", "No te puedes llamar a tí mismo."); return 1;}
	new string[128];
	if(numero == 911) { //- Llama a SAPD
		if(user[playerid][jMiembro] == 1 || user[playerid][jMiembro] == 5 && EnServicioPD[playerid] > 0){_Mensaje(playerid, 0, "536", "No puedes llamar a la policía siendo policía y estando de servicio."); return 1;}
		EnLlamada[playerid] = 911;
		new Cops;
		for(new i=0;i<MAX_PLAYERS;i++) {
			if(user[i][jMiembro] == 1 || user[i][jMiembro] == 5) {
				_Mensaje(i, 4, "77c7ff", "**[CH|911|Central Call: Una llamada está siendo transferida al departamento de emergencias. ((/centralita para coger el teléfono)) **");
				Cops++;
			}
		}
		if(Cops < 1){_Mensaje(playerid, 4, "77c7ff", "[Error en la llamada]: En estos momentos nuestras líneas están saturadas ((no hay lspd/lsed en servicio))."); EnLlamada[playerid] = 0; return 1;}
		_Mensaje(playerid, 4, "77c7ff", "[Central|911]: Espere mientras le pasamos al departamento policial...");
		return 1;
	} else if(numero == 305) { //- Llama a CNN
		if(user[playerid][jMiembro] == 3){_Mensaje(playerid, 0, "536", "No puedes llamar a SA Network siento parte de ella."); return 1;}
		if ( _sanCall == -1 ) {
			EnLlamada[playerid] = 305;
			new repors;
			for(new i=0;i<MAX_PLAYERS;i++) {
				if(user[i][jMiembro] == 3) {
					format(string, sizeof(string), "* Llamada entrante del %d, escribe /conectar [número]", user[playerid][jTelefono]);
					_Mensaje(i, 4, "EFFF00", string);
					repors++;
				}
			}
			if(repors < 1){_Mensaje(playerid, 4, "EFFF00", " En estos momentos no se encuentran reporteros en la línea."); EnLlamada[playerid] = 0; return 1;}
			_Mensaje(playerid, 4, "b0b0b0", " Llamando al 305, número de SA Network...");
		} else _Mensaje(playerid, 0, "917", "El número al que llama se encuentra ocupado.");
		return 1;
	}
	new tlfencontrado;
	for(new x=0; x<MAX_PLAYERS; x++) {
		if(IsPlayerConnected(x) && x != INVALID_PLAYER_ID) {
			if(user[x][jTelefono] == numero) {
				if(EnLlamada[x] != 0 || PersonaEnLlamada[x] != -1){tlfencontrado = -1; break;}
				if (B_Telefono[x] > 0) return _Mensaje(playerid, 0, "276", "Ese jugador tiene el teléfono apagado.");
				tlfencontrado = 1;
				AccionesRol(x, 0, "le empieza a sonar el teléfono.");
				format(string, sizeof(string), "* Llamada entrante del %d, escribe /atender para responder al teléfono.", user[playerid][jTelefono]);
				_Mensaje(x, 4, "00c200", string);
				format(string, sizeof(string), "Llamando al número %d.", numero);
				_Mensaje(playerid, 4, "b0b0b0", string);
				new Float: cx, Float: cy, Float: cz;
				GetPlayerPos(playerid, cx, cy, cz);
				PlayerPlaySound(playerid, 3600, cx, cy, cz);
				GetPlayerPos(x, cx, cy, cz);
				PlayerPlaySound(x, 3600, cx, cy, cz);
				ToqueLlamada[x] = 0;
				PersonaEnLlamada[playerid] = x;
				PersonaEnLlamada[x] = playerid;
				EnLlamada[playerid] = 1;
				ToqueLlamadaTimer[x] = SetTimerEx("D_Llamada", 15000, true, "i", x);
				break;
			}
		}
	}
	if(tlfencontrado == -1){_Mensaje(playerid, 0, "0", "El número que ha marcado ya está en una llamada."); return 1;}
	if(tlfencontrado == 0){_Mensaje(playerid, 0, "0", "El número que ha marcado no existe o no está disponible."); return 1;}
	return 1;
}

funcion ColgarTelefono(playerid) {
	new string[128], oyente = PersonaEnLlamada[playerid];
	if(EnLlamada[playerid] == 1) { //- Está llamando a alguien
		EnLlamada[playerid] = 0;
		_Mensaje(playerid, 4, "b0b0b0", " Has colgado");
		format(string, sizeof(string), "Tienes una llamada perdida del %d.", user[playerid][jTelefono]);
		_Mensaje(oyente, 4, "b0b0b0", string);
		KillTimer(ToqueLlamadaTimer[oyente]);
		ToqueLlamada[oyente] = 0;
		PersonaEnLlamada[oyente] = -1;
		PersonaEnLlamada[playerid] = -1;
		return 1;
	}
	if(EnLlamada[playerid] == 2 || EnLlamada[playerid] == 3) { //- Llamada normal
		_Mensaje(playerid, 4, "b0b0b0", " Has colgado");
		_Mensaje(oyente, 4, "b0b0b0", " Han colgado.");
		if(EnLlamada[playerid] == 3) {
			_Mensaje(playerid, 4, "b0b0b0", " Precio de la llamada: 1$");
			user[playerid][jSaldo] -= 1;
		}
		if(EnLlamada[oyente] == 3) {
			_Mensaje(oyente, 4, "b0b0b0", " Precio de la llamada: 1$");
			user[oyente][jSaldo] -= 1;
		}
		EnLlamada[playerid] = 0;
		EnLlamada[oyente] = 0;
		PersonaEnLlamada[oyente] = -1;
		PersonaEnLlamada[playerid] = -1;
		return 1;
	}
	if(EnLlamada[playerid] == 911) { //- Llamando a emergencias
		EnLlamada[playerid] = 0;
		_Mensaje(playerid, 4, "b0b0b0", " Has colgado");
	}
	if(EnLlamada[playerid] == 912) { //- Llamada de emergencias
		_Mensaje(playerid, 4, "b0b0b0", " Has colgado");
		_Mensaje(oyente, 4, "b0b0b0", " Han colgado.");
		EnLlamada[playerid] = 0;
		EnLlamada[oyente] = 0;
		PersonaEnLlamada[oyente] = -1;
		PersonaEnLlamada[playerid] = -1;
	}
	if(EnLlamada[playerid] == 305) { //- Llamando a cnn
	    if ( _sanCall == playerid ) {
			_MensajeSAN(0x00DC3AFF, "[SAN] Conexión telefónica finalizada.");
			_sanCall = -1;
		}
		EnLlamada[playerid] = 0;
		_Mensaje(playerid, 4, "b0b0b0", " Has colgado");
	}
	return 1;
}

funcion D_Llamada(playerid) {
	new string[128];
	if(!_Telefono(playerid)) {
		EnLlamada[PersonaEnLlamada[playerid]] = 0;
		ToqueLlamada[playerid] = 0;
		_Mensaje(PersonaEnLlamada[playerid], 4, "ffffff", "No contestan.");
		PersonaEnLlamada[PersonaEnLlamada[playerid]] = -1;
		PersonaEnLlamada[playerid] = -1;
		KillTimer(ToqueLlamadaTimer[playerid]);
		return 1;
	}
	if(ToqueLlamada[playerid] > 4) {
	    EnLlamada[PersonaEnLlamada[playerid]] = 0;
		ToqueLlamada[playerid] = 0;
		format(string, sizeof(string), "Llamada perdida del %d.", user[PersonaEnLlamada[playerid]][jTelefono]);
		_Mensaje(playerid, 4, "b0b0b0", string);
		_Mensaje(PersonaEnLlamada[playerid], 4, "ffffff", "No contestan.");
		for(new i=0; i<MAX_PLAYERS; i++) { if(PersonaEnLlamada[i] == playerid){PersonaEnLlamada[i] = -1; break;} }
		PersonaEnLlamada[playerid] = -1;
		KillTimer(ToqueLlamadaTimer[playerid]);
		return 1;
	}
	new Float: cx, Float: cy, Float: cz;
	GetPlayerPos(playerid, cx, cy, cz);
	PlayerPlaySound(playerid, 3600, cx, cy, cz);
	_Mensaje(PersonaEnLlamada[playerid], 4, "ffffff", "Llamando...");
	ToqueLlamada[playerid] ++;
	return 1;
}
//<=================================> nombres de zonas
enum szInfo
{
	sz_Nombre[28],
	Float:sz_Area[6]
};

static const NombreZona[][szInfo] =
{
	// Barrios y pueblos
	{"The Big Ear",	                {-410.00,1403.30,-3.00,-137.90,1681.20,200.00}},
	{"Aldea Malvada",               {-1372.10,2498.50,0.00,-1277.50,2615.30,200.00}},
	{"Angel Pine",                  {-2324.90,-2584.20,-6.10,-1964.20,-2212.10,200.00}},
	{"Arco del Oeste",              {-901.10,2221.80,0.00,-592.00,2571.90,200.00}},
	{"Avispa Country Club",         {-2646.40,-355.40,0.00,-2270.00,-222.50,200.00}},
	{"Avispa Country Club",         {-2831.80,-430.20,-6.10,-2646.40,-222.50,200.00}},
	{"Avispa Country Club",         {-2361.50,-417.10,0.00,-2270.00,-355.40,200.00}},
	{"Avispa Country Club",         {-2667.80,-302.10,-28.80,-2646.40,-262.30,71.10}},
	{"Avispa Country Club",         {-2470.00,-355.40,0.00,-2270.00,-318.40,46.10}},
	{"Avispa Country Club",         {-2550.00,-355.40,0.00,-2470.00,-318.40,39.70}},
	{"Back o Beyond",               {-1166.90,-2641.10,0.00,-321.70,-1856.00,200.00}},
	{"Battery Point",               {-2741.00,1268.40,-4.50,-2533.00,1490.40,200.00}},
	{"Bayside",                     {-2741.00,2175.10,0.00,-2353.10,2722.70,200.00}},
	{"Bayside Marina",              {-2353.10,2275.70,0.00,-2153.10,2475.70,200.00}},
	{"Beacon Hill",                 {-399.60,-1075.50,-1.40,-319.00,-977.50,198.50}},
	{"Blackfield",                  {964.30,1203.20,-89.00,1197.30,1403.20,110.90}},
	{"Blackfield",                  {964.30,1403.20,-89.00,1197.30,1726.20,110.90}},
	{"Blackfield Chapel",           {1375.60,596.30,-89.00,1558.00,823.20,110.90}},
	{"Blackfield Chapel",           {1325.60,596.30,-89.00,1375.60,795.00,110.90}},
	{"Blackfield Intersection",     {1197.30,1044.60,-89.00,1277.00,1163.30,110.90}},
	{"Blackfield Intersection",     {1166.50,795.00,-89.00,1375.60,1044.60,110.90}},
	{"Blackfield Intersection",     {1277.00,1044.60,-89.00,1315.30,1087.60,110.90}},
	{"Blackfield Intersection",     {1375.60,823.20,-89.00,1457.30,919.40,110.90}},
	{"Blueberry",                   {104.50,-220.10,2.30,349.60,152.20,200.00}},
	{"Blueberry",                   {19.60,-404.10,3.80,349.60,-220.10,200.00}},
	{"Blueberry Acres",             {-319.60,-220.10,0.00,104.50,293.30,200.00}},
	{"Caligula's Palace",           {2087.30,1543.20,-89.00,2437.30,1703.20,110.90}},
	{"Caligula's Palace",           {2137.40,1703.20,-89.00,2437.30,1783.20,110.90}},
	{"Calton Heights",              {-2274.10,744.10,-6.10,-1982.30,1358.90,200.00}},
	{"Chinatown",                   {-2274.10,578.30,-7.60,-2078.60,744.10,200.00}},
	{"City Hall",                   {-2867.80,277.40,-9.10,-2593.40,458.40,200.00}},
	{"Come-A-Lot",                  {2087.30,943.20,-89.00,2623.10,1203.20,110.90}},
	{"Commerce",                    {1323.90,-1842.20,-89.00,1701.90,-1722.20,110.90}},
	{"Commerce",                    {1323.90,-1722.20,-89.00,1440.90,-1577.50,110.90}},
	{"Commerce",                    {1370.80,-1577.50,-89.00,1463.90,-1384.90,110.90}},
	{"Commerce",                    {1463.90,-1577.50,-89.00,1667.90,-1430.80,110.90}},
	{"Commerce",                    {1583.50,-1722.20,-89.00,1758.90,-1577.50,110.90}},
	{"Commerce",                    {1667.90,-1577.50,-89.00,1812.60,-1430.80,110.90}},
	{"Conference Center",           {1046.10,-1804.20,-89.00,1323.90,-1722.20,110.90}},
	{"Conference Center",           {1073.20,-1842.20,-89.00,1323.90,-1804.20,110.90}},
	{"Cranberry Station",           {-2007.80,56.30,0.00,-1922.00,224.70,100.00}},
	{"Creek",                       {2749.90,1937.20,-89.00,2921.60,2669.70,110.90}},
	{"Dillimore",                   {580.70,-674.80,-9.50,861.00,-404.70,200.00}},
	{"Doherty",                     {-2270.00,-324.10,-0.00,-1794.90,-222.50,200.00}},
	{"Doherty",                     {-2173.00,-222.50,-0.00,-1794.90,265.20,200.00}},
	{"Downtown",                    {-1982.30,744.10,-6.10,-1871.70,1274.20,200.00}},
	{"Downtown",                    {-1871.70,1176.40,-4.50,-1620.30,1274.20,200.00}},
	{"Downtown",                    {-1700.00,744.20,-6.10,-1580.00,1176.50,200.00}},
	{"Downtown",                    {-1580.00,744.20,-6.10,-1499.80,1025.90,200.00}},
	{"Downtown",                    {-2078.60,578.30,-7.60,-1499.80,744.20,200.00}},
	{"Downtown",                    {-1993.20,265.20,-9.10,-1794.90,578.30,200.00}},
	{"Downtown Los Santos",         {1463.90,-1430.80,-89.00,1724.70,-1290.80,110.90}},
	{"Downtown Los Santos",         {1724.70,-1430.80,-89.00,1812.60,-1250.90,110.90}},
	{"Downtown Los Santos",         {1463.90,-1290.80,-89.00,1724.70,-1150.80,110.90}},
	{"Downtown Los Santos",         {1370.80,-1384.90,-89.00,1463.90,-1170.80,110.90}},
	{"Downtown Los Santos",         {1724.70,-1250.90,-89.00,1812.60,-1150.80,110.90}},
	{"Downtown Los Santos",         {1370.80,-1170.80,-89.00,1463.90,-1130.80,110.90}},
	{"Downtown Los Santos",         {1378.30,-1130.80,-89.00,1463.90,-1026.30,110.90}},
	{"Downtown Los Santos",         {1391.00,-1026.30,-89.00,1463.90,-926.90,110.90}},
	{"Downtown Los Santos",         {1507.50,-1385.20,110.90,1582.50,-1325.30,335.90}},
	{"East Beach",                  {2632.80,-1852.80,-89.00,2959.30,-1668.10,110.90}},
	{"East Beach",                  {2632.80,-1668.10,-89.00,2747.70,-1393.40,110.90}},
	{"East Beach",                  {2747.70,-1668.10,-89.00,2959.30,-1498.60,110.90}},
	{"East Beach",                  {2747.70,-1498.60,-89.00,2959.30,-1120.00,110.90}},
	{"East Los Santos",             {2421.00,-1628.50,-89.00,2632.80,-1454.30,110.90}},
	{"East Los Santos",             {2222.50,-1628.50,-89.00,2421.00,-1494.00,110.90}},
	{"East Los Santos",             {2266.20,-1494.00,-89.00,2381.60,-1372.00,110.90}},
	{"East Los Santos",             {2381.60,-1494.00,-89.00,2421.00,-1454.30,110.90}},
	{"East Los Santos",             {2281.40,-1372.00,-89.00,2381.60,-1135.00,110.90}},
	{"East Los Santos",             {2381.60,-1454.30,-89.00,2462.10,-1135.00,110.90}},
	{"East Los Santos",             {2462.10,-1454.30,-89.00,2581.70,-1135.00,110.90}},
	{"Easter Basin",                {-1794.90,249.90,-9.10,-1242.90,578.30,200.00}},
	{"Easter Basin",                {-1794.90,-50.00,-0.00,-1499.80,249.90,200.00}},
	{"Easter Bay Airport",          {-1499.80,-50.00,-0.00,-1242.90,249.90,200.00}},
	{"Easter Bay Airport",          {-1794.90,-730.10,-3.00,-1213.90,-50.00,200.00}},
	{"Easter Bay Airport",          {-1213.90,-730.10,0.00,-1132.80,-50.00,200.00}},
	{"Easter Bay Airport",          {-1242.90,-50.00,0.00,-1213.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1213.90,-50.00,-4.50,-947.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1315.40,-405.30,15.40,-1264.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1354.30,-287.30,15.40,-1315.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1490.30,-209.50,15.40,-1264.40,-148.30,25.40}},
	{"Easter Bay Chemicals",        {-1132.80,-768.00,0.00,-956.40,-578.10,200.00}},
	{"Easter Bay Chemicals",        {-1132.80,-787.30,0.00,-956.40,-768.00,200.00}},
	{"El Castillo del Diablo",      {-464.50,2217.60,0.00,-208.50,2580.30,200.00}},
	{"El Castillo del Diablo",      {-208.50,2123.00,-7.60,114.00,2337.10,200.00}},
	{"El Castillo del Diablo",      {-208.50,2337.10,0.00,8.40,2487.10,200.00}},
	{"El Corona",                   {1812.60,-2179.20,-89.00,1970.60,-1852.80,110.90}},
	{"El Corona",                   {1692.60,-2179.20,-89.00,1812.60,-1842.20,110.90}},
	{"El Quebrados",                {-1645.20,2498.50,0.00,-1372.10,2777.80,200.00}},
	{"Esplanade East",              {-1620.30,1176.50,-4.50,-1580.00,1274.20,200.00}},
	{"Esplanade East",              {-1580.00,1025.90,-6.10,-1499.80,1274.20,200.00}},
	{"Esplanade East",              {-1499.80,578.30,-79.60,-1339.80,1274.20,20.30}},
	{"Esplanade North",             {-2533.00,1358.90,-4.50,-1996.60,1501.20,200.00}},
	{"Esplanade North",             {-1996.60,1358.90,-4.50,-1524.20,1592.50,200.00}},
	{"Esplanade North",             {-1982.30,1274.20,-4.50,-1524.20,1358.90,200.00}},
	{"Fallen Tree",                 {-792.20,-698.50,-5.30,-452.40,-380.00,200.00}},
	{"Fallow Bridge",               {434.30,366.50,0.00,603.00,555.60,200.00}},
	{"Fern Ridge",                  {508.10,-139.20,0.00,1306.60,119.50,200.00}},
	{"Financial",                   {-1871.70,744.10,-6.10,-1701.30,1176.40,300.00}},
	{"Fisher's Lagoon",             {1916.90,-233.30,-100.00,2131.70,13.80,200.00}},
	{"Flint Intersection",          {-187.70,-1596.70,-89.00,17.00,-1276.60,110.90}},
	{"Flint Range",                 {-594.10,-1648.50,0.00,-187.70,-1276.60,200.00}},
	{"Fort Carson",                 {-376.20,826.30,-3.00,123.70,1220.40,200.00}},
	{"Foster Valley",               {-2270.00,-430.20,-0.00,-2178.60,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-599.80,-0.00,-1794.90,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-1115.50,0.00,-1794.90,-599.80,200.00}},
	{"Foster Valley",               {-2178.60,-1250.90,0.00,-1794.90,-1115.50,200.00}},
	{"Frederick Bridge",            {2759.20,296.50,0.00,2774.20,594.70,200.00}},
	{"Gant Bridge",                 {-2741.40,1659.60,-6.10,-2616.40,2175.10,200.00}},
	{"Gant Bridge",                 {-2741.00,1490.40,-6.10,-2616.40,1659.60,200.00}},
	{"Ganton",                      {2222.50,-1852.80,-89.00,2632.80,-1722.30,110.90}},
	{"Ganton",                      {2222.50,-1722.30,-89.00,2632.80,-1628.50,110.90}},
	{"Garcia",                      {-2411.20,-222.50,-0.00,-2173.00,265.20,200.00}},
	{"Garcia",                      {-2395.10,-222.50,-5.30,-2354.00,-204.70,200.00}},
	{"Garver Bridge",               {-1339.80,828.10,-89.00,-1213.90,1057.00,110.90}},
	{"Garver Bridge",               {-1213.90,950.00,-89.00,-1087.90,1178.90,110.90}},
	{"Garver Bridge",               {-1499.80,696.40,-179.60,-1339.80,925.30,20.30}},
	{"Glen Park",                   {1812.60,-1449.60,-89.00,1996.90,-1350.70,110.90}},
	{"Glen Park",                   {1812.60,-1100.80,-89.00,1994.30,-973.30,110.90}},
	{"Glen Park",                   {1812.60,-1350.70,-89.00,2056.80,-1100.80,110.90}},
	{"Green Palms",                 {176.50,1305.40,-3.00,338.60,1520.70,200.00}},
	{"Greenglass College",          {964.30,1044.60,-89.00,1197.30,1203.20,110.90}},
	{"Greenglass College",          {964.30,930.80,-89.00,1166.50,1044.60,110.90}},
	{"Hampton Barns",               {603.00,264.30,0.00,761.90,366.50,200.00}},
	{"Hankypanky Point",            {2576.90,62.10,0.00,2759.20,385.50,200.00}},
	{"Harry Gold Parkway",          {1777.30,863.20,-89.00,1817.30,2342.80,110.90}},
	{"Hashbury",                    {-2593.40,-222.50,-0.00,-2411.20,54.70,200.00}},
	{"Hilltop Farm",                {967.30,-450.30,-3.00,1176.70,-217.90,200.00}},
	{"Hunter Quarry",               {337.20,710.80,-115.20,860.50,1031.70,203.70}},
	{"Idlewood",                    {1812.60,-1852.80,-89.00,1971.60,-1742.30,110.90}},
	{"Idlewood",                    {1812.60,-1742.30,-89.00,1951.60,-1602.30,110.90}},
	{"Idlewood",                    {1951.60,-1742.30,-89.00,2124.60,-1602.30,110.90}},
	{"Idlewood",                    {1812.60,-1602.30,-89.00,2124.60,-1449.60,110.90}},
	{"Idlewood",                    {2124.60,-1742.30,-89.00,2222.50,-1494.00,110.90}},
	{"Idlewood",                    {1971.60,-1852.80,-89.00,2222.50,-1742.30,110.90}},
	{"Jefferson",                   {1996.90,-1449.60,-89.00,2056.80,-1350.70,110.90}},
	{"Jefferson",                   {2124.60,-1494.00,-89.00,2266.20,-1449.60,110.90}},
	{"Jefferson",                   {2056.80,-1372.00,-89.00,2281.40,-1210.70,110.90}},
	{"Jefferson",                   {2056.80,-1210.70,-89.00,2185.30,-1126.30,110.90}},
	{"Jefferson",                   {2185.30,-1210.70,-89.00,2281.40,-1154.50,110.90}},
	{"Jefferson",                   {2056.80,-1449.60,-89.00,2266.20,-1372.00,110.90}},
	{"Julius Thruway East",         {2623.10,943.20,-89.00,2749.90,1055.90,110.90}},
	{"Julius Thruway East",         {2685.10,1055.90,-89.00,2749.90,2626.50,110.90}},
	{"Julius Thruway East",         {2536.40,2442.50,-89.00,2685.10,2542.50,110.90}},
	{"Julius Thruway East",         {2625.10,2202.70,-89.00,2685.10,2442.50,110.90}},
	{"Julius Thruway North",        {2498.20,2542.50,-89.00,2685.10,2626.50,110.90}},
	{"Julius Thruway North",        {2237.40,2542.50,-89.00,2498.20,2663.10,110.90}},
	{"Julius Thruway North",        {2121.40,2508.20,-89.00,2237.40,2663.10,110.90}},
	{"Julius Thruway North",        {1938.80,2508.20,-89.00,2121.40,2624.20,110.90}},
	{"Julius Thruway North",        {1534.50,2433.20,-89.00,1848.40,2583.20,110.90}},
	{"Julius Thruway North",        {1848.40,2478.40,-89.00,1938.80,2553.40,110.90}},
	{"Julius Thruway North",        {1704.50,2342.80,-89.00,1848.40,2433.20,110.90}},
	{"Julius Thruway North",        {1377.30,2433.20,-89.00,1534.50,2507.20,110.90}},
	{"Julius Thruway South",        {1457.30,823.20,-89.00,2377.30,863.20,110.90}},
	{"Julius Thruway South",        {2377.30,788.80,-89.00,2537.30,897.90,110.90}},
	{"Julius Thruway West",         {1197.30,1163.30,-89.00,1236.60,2243.20,110.90}},
	{"Julius Thruway West",         {1236.60,2142.80,-89.00,1297.40,2243.20,110.90}},
	{"Juniper Hill",                {-2533.00,578.30,-7.60,-2274.10,968.30,200.00}},
	{"Juniper Hollow",              {-2533.00,968.30,-6.10,-2274.10,1358.90,200.00}},
	{"K.A.C.C. Military Fuels",     {2498.20,2626.50,-89.00,2749.90,2861.50,110.90}},
	{"Kincaid Bridge",              {-1339.80,599.20,-89.00,-1213.90,828.10,110.90}},
	{"Kincaid Bridge",              {-1213.90,721.10,-89.00,-1087.90,950.00,110.90}},
	{"Kincaid Bridge",              {-1087.90,855.30,-89.00,-961.90,986.20,110.90}},
	{"King's",                      {-2329.30,458.40,-7.60,-1993.20,578.30,200.00}},
	{"King's",                      {-2411.20,265.20,-9.10,-1993.20,373.50,200.00}},
	{"King's",                      {-2253.50,373.50,-9.10,-1993.20,458.40,200.00}},
	{"LVA Freight Depot",           {1457.30,863.20,-89.00,1777.40,1143.20,110.90}},
	{"LVA Freight Depot",           {1375.60,919.40,-89.00,1457.30,1203.20,110.90}},
	{"LVA Freight Depot",           {1277.00,1087.60,-89.00,1375.60,1203.20,110.90}},
	{"LVA Freight Depot",           {1315.30,1044.60,-89.00,1375.60,1087.60,110.90}},
	{"LVA Freight Depot",           {1236.60,1163.40,-89.00,1277.00,1203.20,110.90}},
	{"Las Barrancas",               {-926.10,1398.70,-3.00,-719.20,1634.60,200.00}},
	{"Las Brujas",                  {-365.10,2123.00,-3.00,-208.50,2217.60,200.00}},
	{"Las Colinas",                 {1994.30,-1100.80,-89.00,2056.80,-920.80,110.90}},
	{"Las Colinas",                 {2056.80,-1126.30,-89.00,2126.80,-920.80,110.90}},
	{"Las Colinas",                 {2185.30,-1154.50,-89.00,2281.40,-934.40,110.90}},
	{"Las Colinas",                 {2126.80,-1126.30,-89.00,2185.30,-934.40,110.90}},
	{"Las Colinas",                 {2747.70,-1120.00,-89.00,2959.30,-945.00,110.90}},
	{"Las Colinas",                 {2632.70,-1135.00,-89.00,2747.70,-945.00,110.90}},
	{"Las Colinas",                 {2281.40,-1135.00,-89.00,2632.70,-945.00,110.90}},
	{"Las Payasadas",               {-354.30,2580.30,2.00,-133.60,2816.80,200.00}},
	{"Las Venturas Airport",        {1236.60,1203.20,-89.00,1457.30,1883.10,110.90}},
	{"Las Venturas Airport",        {1457.30,1203.20,-89.00,1777.30,1883.10,110.90}},
	{"Las Venturas Airport",        {1457.30,1143.20,-89.00,1777.40,1203.20,110.90}},
	{"Las Venturas Airport",        {1515.80,1586.40,-12.50,1729.90,1714.50,87.50}},
	{"Last Dime Motel",             {1823.00,596.30,-89.00,1997.20,823.20,110.90}},
	{"Leafy Hollow",                {-1166.90,-1856.00,0.00,-815.60,-1602.00,200.00}},
	{"Liberty City",                {-1000.00,400.00,1300.00,-700.00,600.00,1400.00}},
	{"Lil' Probe Inn",              {-90.20,1286.80,-3.00,153.80,1554.10,200.00}},
	{"Linden Side",                 {2749.90,943.20,-89.00,2923.30,1198.90,110.90}},
	{"Linden Station",              {2749.90,1198.90,-89.00,2923.30,1548.90,110.90}},
	{"Linden Station",              {2811.20,1229.50,-39.50,2861.20,1407.50,60.40}},
	{"Little Mexico",               {1701.90,-1842.20,-89.00,1812.60,-1722.20,110.90}},
	{"Little Mexico",               {1758.90,-1722.20,-89.00,1812.60,-1577.50,110.90}},
	{"Los Flores",                  {2581.70,-1454.30,-89.00,2632.80,-1393.40,110.90}},
	{"Los Flores",                  {2581.70,-1393.40,-89.00,2747.70,-1135.00,110.90}},
	{"Los Santos Airport",          {1249.60,-2394.30,-89.00,1852.00,-2179.20,110.90}},
	{"Los Santos Airport",          {1852.00,-2394.30,-89.00,2089.00,-2179.20,110.90}},
	{"Los Santos Airport",          {1382.70,-2730.80,-89.00,2201.80,-2394.30,110.90}},
	{"Los Santos Airport",          {1974.60,-2394.30,-39.00,2089.00,-2256.50,60.90}},
	{"Los Santos Airport",          {1400.90,-2669.20,-39.00,2189.80,-2597.20,60.90}},
	{"Los Santos Airport",          {2051.60,-2597.20,-39.00,2152.40,-2394.30,60.90}},
	{"Marina",                      {647.70,-1804.20,-89.00,851.40,-1577.50,110.90}},
	{"Marina",                      {647.70,-1577.50,-89.00,807.90,-1416.20,110.90}},
	{"Marina",                      {807.90,-1577.50,-89.00,926.90,-1416.20,110.90}},
	{"Market",                      {787.40,-1416.20,-89.00,1072.60,-1310.20,110.90}},
	{"Market",                      {952.60,-1310.20,-89.00,1072.60,-1130.80,110.90}},
	{"Market",                      {1072.60,-1416.20,-89.00,1370.80,-1130.80,110.90}},
	{"Market",                      {926.90,-1577.50,-89.00,1370.80,-1416.20,110.90}},
	{"Market Station",              {787.40,-1410.90,-34.10,866.00,-1310.20,65.80}},
	{"Martin Bridge",               {-222.10,293.30,0.00,-122.10,476.40,200.00}},
	{"Missionary Hill",             {-2994.40,-811.20,0.00,-2178.60,-430.20,200.00}},
	{"Montgomery",                  {1119.50,119.50,-3.00,1451.40,493.30,200.00}},
	{"Montgomery",                  {1451.40,347.40,-6.10,1582.40,420.80,200.00}},
	{"Montgomery Intersection",     {1546.60,208.10,0.00,1745.80,347.40,200.00}},
	{"Montgomery Intersection",     {1582.40,347.40,0.00,1664.60,401.70,200.00}},
	{"Mulholland",                  {1414.00,-768.00,-89.00,1667.60,-452.40,110.90}},
	{"Mulholland",                  {1281.10,-452.40,-89.00,1641.10,-290.90,110.90}},
	{"Mulholland",                  {1269.10,-768.00,-89.00,1414.00,-452.40,110.90}},
	{"Mulholland",                  {1357.00,-926.90,-89.00,1463.90,-768.00,110.90}},
	{"Mulholland",                  {1318.10,-910.10,-89.00,1357.00,-768.00,110.90}},
	{"Mulholland",                  {1169.10,-910.10,-89.00,1318.10,-768.00,110.90}},
	{"Mulholland",                  {768.60,-954.60,-89.00,952.60,-860.60,110.90}},
	{"Mulholland",                  {687.80,-860.60,-89.00,911.80,-768.00,110.90}},
	{"Mulholland",                  {737.50,-768.00,-89.00,1142.20,-674.80,110.90}},
	{"Mulholland",                  {1096.40,-910.10,-89.00,1169.10,-768.00,110.90}},
	{"Mulholland",                  {952.60,-937.10,-89.00,1096.40,-860.60,110.90}},
	{"Mulholland",                  {911.80,-860.60,-89.00,1096.40,-768.00,110.90}},
	{"Mulholland",                  {861.00,-674.80,-89.00,1156.50,-600.80,110.90}},
	{"Mulholland Intersection",     {1463.90,-1150.80,-89.00,1812.60,-768.00,110.90}},
	{"North Rock",                  {2285.30,-768.00,0.00,2770.50,-269.70,200.00}},
	{"Ocean Docks",                 {2373.70,-2697.00,-89.00,2809.20,-2330.40,110.90}},
	{"Ocean Docks",                 {2201.80,-2418.30,-89.00,2324.00,-2095.00,110.90}},
	{"Ocean Docks",                 {2324.00,-2302.30,-89.00,2703.50,-2145.10,110.90}},
	{"Ocean Docks",                 {2089.00,-2394.30,-89.00,2201.80,-2235.80,110.90}},
	{"Ocean Docks",                 {2201.80,-2730.80,-89.00,2324.00,-2418.30,110.90}},
	{"Ocean Docks",                 {2703.50,-2302.30,-89.00,2959.30,-2126.90,110.90}},
	{"Ocean Docks",                 {2324.00,-2145.10,-89.00,2703.50,-2059.20,110.90}},
	{"Ocean Flats",                 {-2994.40,277.40,-9.10,-2867.80,458.40,200.00}},
	{"Ocean Flats",                 {-2994.40,-222.50,-0.00,-2593.40,277.40,200.00}},
	{"Ocean Flats",                 {-2994.40,-430.20,-0.00,-2831.80,-222.50,200.00}},
	{"Octane Springs",              {338.60,1228.50,0.00,664.30,1655.00,200.00}},
	{"Old Venturas Strip",          {2162.30,2012.10,-89.00,2685.10,2202.70,110.90}},
	{"Palisades",                   {-2994.40,458.40,-6.10,-2741.00,1339.60,200.00}},
	{"Palomino Creek",              {2160.20,-149.00,0.00,2576.90,228.30,200.00}},
	{"Paradiso",                    {-2741.00,793.40,-6.10,-2533.00,1268.40,200.00}},
	{"Pershing Square",             {1440.90,-1722.20,-89.00,1583.50,-1577.50,110.90}},
	{"Pilgrim",                     {2437.30,1383.20,-89.00,2624.40,1783.20,110.90}},
	{"Pilgrim",                     {2624.40,1383.20,-89.00,2685.10,1783.20,110.90}},
	{"Pilson Intersection",         {1098.30,2243.20,-89.00,1377.30,2507.20,110.90}},
	{"Pirates in Men's Pants",      {1817.30,1469.20,-89.00,2027.40,1703.20,110.90}},
	{"Playa del Seville",           {2703.50,-2126.90,-89.00,2959.30,-1852.80,110.90}},
	{"Prickle Pine",                {1534.50,2583.20,-89.00,1848.40,2863.20,110.90}},
	{"Prickle Pine",                {1117.40,2507.20,-89.00,1534.50,2723.20,110.90}},
	{"Prickle Pine",                {1848.40,2553.40,-89.00,1938.80,2863.20,110.90}},
	{"Prickle Pine",                {1938.80,2624.20,-89.00,2121.40,2861.50,110.90}},
	{"Queens",                      {-2533.00,458.40,0.00,-2329.30,578.30,200.00}},
	{"Queens",                      {-2593.40,54.70,0.00,-2411.20,458.40,200.00}},
	{"Queens",                      {-2411.20,373.50,0.00,-2253.50,458.40,200.00}},
	{"Randolph Industrial Estate",  {1558.00,596.30,-89.00,1823.00,823.20,110.90}},
	{"Redsands East",               {1817.30,2011.80,-89.00,2106.70,2202.70,110.90}},
	{"Redsands East",               {1817.30,2202.70,-89.00,2011.90,2342.80,110.90}},
	{"Redsands East",               {1848.40,2342.80,-89.00,2011.90,2478.40,110.90}},
	{"Redsands West",               {1236.60,1883.10,-89.00,1777.30,2142.80,110.90}},
	{"Redsands West",               {1297.40,2142.80,-89.00,1777.30,2243.20,110.90}},
	{"Redsands West",               {1377.30,2243.20,-89.00,1704.50,2433.20,110.90}},
	{"Redsands West",               {1704.50,2243.20,-89.00,1777.30,2342.80,110.90}},
	{"Regular Tom",                 {-405.70,1712.80,-3.00,-276.70,1892.70,200.00}},
	{"Richman",                     {647.50,-1118.20,-89.00,787.40,-954.60,110.90}},
	{"Richman",                     {647.50,-954.60,-89.00,768.60,-860.60,110.90}},
	{"Richman",                     {225.10,-1369.60,-89.00,334.50,-1292.00,110.90}},
	{"Richman",                     {225.10,-1292.00,-89.00,466.20,-1235.00,110.90}},
	{"Richman",                     {72.60,-1404.90,-89.00,225.10,-1235.00,110.90}},
	{"Richman",                     {72.60,-1235.00,-89.00,321.30,-1008.10,110.90}},
	{"Richman",                     {321.30,-1235.00,-89.00,647.50,-1044.00,110.90}},
	{"Richman",                     {321.30,-1044.00,-89.00,647.50,-860.60,110.90}},
	{"Richman",                     {321.30,-860.60,-89.00,687.80,-768.00,110.90}},
	{"Richman",                     {321.30,-768.00,-89.00,700.70,-674.80,110.90}},
	{"Robada Intersection",         {-1119.00,1178.90,-89.00,-862.00,1351.40,110.90}},
	{"Roca Escalante",              {2237.40,2202.70,-89.00,2536.40,2542.50,110.90}},
	{"Roca Escalante",              {2536.40,2202.70,-89.00,2625.10,2442.50,110.90}},
	{"Rockshore East",              {2537.30,676.50,-89.00,2902.30,943.20,110.90}},
	{"Rockshore West",              {1997.20,596.30,-89.00,2377.30,823.20,110.90}},
	{"Rockshore West",              {2377.30,596.30,-89.00,2537.30,788.80,110.90}},
	{"Rodeo",                       {72.60,-1684.60,-89.00,225.10,-1544.10,110.90}},
	{"Rodeo",                       {72.60,-1544.10,-89.00,225.10,-1404.90,110.90}},
	{"Rodeo",                       {225.10,-1684.60,-89.00,312.80,-1501.90,110.90}},
	{"Rodeo",                       {225.10,-1501.90,-89.00,334.50,-1369.60,110.90}},
	{"Rodeo",                       {334.50,-1501.90,-89.00,422.60,-1406.00,110.90}},
	{"Rodeo",                       {312.80,-1684.60,-89.00,422.60,-1501.90,110.90}},
	{"Rodeo",                       {422.60,-1684.60,-89.00,558.00,-1570.20,110.90}},
	{"Rodeo",                       {558.00,-1684.60,-89.00,647.50,-1384.90,110.90}},
	{"Rodeo",                       {466.20,-1570.20,-89.00,558.00,-1385.00,110.90}},
	{"Rodeo",                       {422.60,-1570.20,-89.00,466.20,-1406.00,110.90}},
	{"Rodeo",                       {466.20,-1385.00,-89.00,647.50,-1235.00,110.90}},
	{"Rodeo",                       {334.50,-1406.00,-89.00,466.20,-1292.00,110.90}},
	{"Royal Casino",                {2087.30,1383.20,-89.00,2437.30,1543.20,110.90}},
	{"San Andreas Sound",           {2450.30,385.50,-100.00,2759.20,562.30,200.00}},
	{"Santa Flora",                 {-2741.00,458.40,-7.60,-2533.00,793.40,200.00}},
	{"Santa Maria Beach",           {342.60,-2173.20,-89.00,647.70,-1684.60,110.90}},
	{"Santa Maria Beach",           {72.60,-2173.20,-89.00,342.60,-1684.60,110.90}},
	{"Shady Cabin",                 {-1632.80,-2263.40,-3.00,-1601.30,-2231.70,200.00}},
	{"Shady Creeks",                {-1820.60,-2643.60,-8.00,-1226.70,-1771.60,200.00}},
	{"Shady Creeks",                {-2030.10,-2174.80,-6.10,-1820.60,-1771.60,200.00}},
	{"Sobell Rail Yards",           {2749.90,1548.90,-89.00,2923.30,1937.20,110.90}},
	{"Spinybed",                    {2121.40,2663.10,-89.00,2498.20,2861.50,110.90}},
	{"Starfish Casino",             {2437.30,1783.20,-89.00,2685.10,2012.10,110.90}},
	{"Starfish Casino",             {2437.30,1858.10,-39.00,2495.00,1970.80,60.90}},
	{"Starfish Casino",             {2162.30,1883.20,-89.00,2437.30,2012.10,110.90}},
	{"Temple",                      {1252.30,-1130.80,-89.00,1378.30,-1026.30,110.90}},
	{"Temple",                      {1252.30,-1026.30,-89.00,1391.00,-926.90,110.90}},
	{"Temple",                      {1252.30,-926.90,-89.00,1357.00,-910.10,110.90}},
	{"Temple",                      {952.60,-1130.80,-89.00,1096.40,-937.10,110.90}},
	{"Temple",                      {1096.40,-1130.80,-89.00,1252.30,-1026.30,110.90}},
	{"Temple",                      {1096.40,-1026.30,-89.00,1252.30,-910.10,110.90}},
	{"The Camel's Toe",             {2087.30,1203.20,-89.00,2640.40,1383.20,110.90}},
	{"The Clown's Pocket",          {2162.30,1783.20,-89.00,2437.30,1883.20,110.90}},
	{"The Emerald Isle",            {2011.90,2202.70,-89.00,2237.40,2508.20,110.90}},
	{"The Farm",                    {-1209.60,-1317.10,114.90,-908.10,-787.30,251.90}},
	{"The Four Dragons Casino",     {1817.30,863.20,-89.00,2027.30,1083.20,110.90}},
	{"The High Roller",             {1817.30,1283.20,-89.00,2027.30,1469.20,110.90}},
	{"The Mako Span",               {1664.60,401.70,0.00,1785.10,567.20,200.00}},
	{"The Panopticon",              {-947.90,-304.30,-1.10,-319.60,327.00,200.00}},
	{"The Pink Swan",               {1817.30,1083.20,-89.00,2027.30,1283.20,110.90}},
	{"The Sherman Dam",             {-968.70,1929.40,-3.00,-481.10,2155.20,200.00}},
	{"The Strip",                   {2027.40,863.20,-89.00,2087.30,1703.20,110.90}},
	{"The Strip",                   {2106.70,1863.20,-89.00,2162.30,2202.70,110.90}},
	{"The Strip",                   {2027.40,1783.20,-89.00,2162.30,1863.20,110.90}},
	{"The Strip",                   {2027.40,1703.20,-89.00,2137.40,1783.20,110.90}},
	{"The Visage",                  {1817.30,1863.20,-89.00,2106.70,2011.80,110.90}},
	{"The Visage",                  {1817.30,1703.20,-89.00,2027.40,1863.20,110.90}},
	{"Unity Station",               {1692.60,-1971.80,-20.40,1812.60,-1932.80,79.50}},
	{"Valle Ocultado",              {-936.60,2611.40,2.00,-715.90,2847.90,200.00}},
	{"Verdant Bluffs",              {930.20,-2488.40,-89.00,1249.60,-2006.70,110.90}},
	{"Verdant Bluffs",              {1073.20,-2006.70,-89.00,1249.60,-1842.20,110.90}},
	{"Verdant Bluffs",              {1249.60,-2179.20,-89.00,1692.60,-1842.20,110.90}},
	{"Verdant Meadows",             {37.00,2337.10,-3.00,435.90,2677.90,200.00}},
	{"Verona Beach",                {647.70,-2173.20,-89.00,930.20,-1804.20,110.90}},
	{"Verona Beach",                {930.20,-2006.70,-89.00,1073.20,-1804.20,110.90}},
	{"Verona Beach",                {851.40,-1804.20,-89.00,1046.10,-1577.50,110.90}},
	{"Verona Beach",                {1161.50,-1722.20,-89.00,1323.90,-1577.50,110.90}},
	{"Verona Beach",                {1046.10,-1722.20,-89.00,1161.50,-1577.50,110.90}},
	{"Vinewood",                    {787.40,-1310.20,-89.00,952.60,-1130.80,110.90}},
	{"Vinewood",                    {787.40,-1130.80,-89.00,952.60,-954.60,110.90}},
	{"Vinewood",                    {647.50,-1227.20,-89.00,787.40,-1118.20,110.90}},
	{"Vinewood",                    {647.70,-1416.20,-89.00,787.40,-1227.20,110.90}},
	{"Whitewood Estates",           {883.30,1726.20,-89.00,1098.30,2507.20,110.90}},
	{"Whitewood Estates",           {1098.30,1726.20,-89.00,1197.30,2243.20,110.90}},
	{"Willowfield",                 {1970.60,-2179.20,-89.00,2089.00,-1852.80,110.90}},
	{"Willowfield",                 {2089.00,-2235.80,-89.00,2201.80,-1989.90,110.90}},
	{"Willowfield",                 {2089.00,-1989.90,-89.00,2324.00,-1852.80,110.90}},
	{"Willowfield",                 {2201.80,-2095.00,-89.00,2324.00,-1989.90,110.90}},
	{"Willowfield",                 {2541.70,-1941.40,-89.00,2703.50,-1852.80,110.90}},
	{"Willowfield",                 {2324.00,-2059.20,-89.00,2541.70,-1852.80,110.90}},
	{"Willowfield",                 {2541.70,-2059.20,-89.00,2703.50,-1941.40,110.90}},
	{"Yellow Bell Station",         {1377.40,2600.40,-21.90,1492.40,2687.30,78.00}},
	// Ciudades y condados
	{"Los Santos",                  {44.60,-2892.90,-242.90,2997.00,-768.00,900.00}},
	{"Las Venturas",                {869.40,596.30,-242.90,2997.00,2993.80,900.00}},
	{"Bone County",                 {-480.50,596.30,-242.90,869.40,2993.80,900.00}},
	{"Tierra Robada",               {-2997.40,1659.60,-242.90,-480.50,2993.80,900.00}},
	{"Tierra Robada",               {-1213.90,596.30,-242.90,-480.50,1659.60,900.00}},
	{"San Fierro",                  {-2997.40,-1115.50,-242.90,-1213.90,1659.60,900.00}},
	{"Red County",                  {-1213.90,-768.00,-242.90,2997.00,596.30,900.00}},
	{"Flint County",                {-1213.90,-2892.90,-242.90,44.60,-768.00,900.00}},
	{"Whetstone",                   {-2997.40,-2892.90,-242.90,-1213.90,-1115.50,900.00}}
};
//<=================================> inventario/bolsillos
enum dData
{
	DropID,
	DropCantidad,
	Float:DropPosX,
	Float:DropPosY,
	Float:DropPosZ,
	DropVWorld,
	DropInterior,
};
new InfoSuelo[MAX_OBJETOS_S][dData], ObjetoCaido[MAX_OBJETOS_S], ObjTimer[MAX_OBJETOS_S];

enum oInfo
{
	IDObjeto,
	NombreObjeto[30],
	ModeloObjeto,
	IDArma,
	Guardable,
	Arrojadizo,
	Capacidad,
};

static const InfoObjeto[][oInfo] =
{
    {0, "Vacío", 0, 0, 0, 0, 0},
    {1, "Nudillera", 331, 1, 1, 0, 1},
    {2, "Palo de golf", 333, 2, 3, 0, 1},
    {3, "Bastón policial", 334, 3, 1, 0, 1},
    {4, "Navaja", 335, 4, 1, 0, 1},
    {5, "Bate", 336, 5, 3, 0, 1},
    {6, "Pala", 337, 0, 3, 0, 1},
    {7, "Palo de billar", 338, 0, 3, 0, 1},
    {8, "Sable", 339, 8, 3, 0, 1},
    {9, "Motosierra", 341, 9, 3, 0, 1},
    {10, "Consolador rosa", 321, 0, 1, 0, 1},
    {11, "Consolador pequeño", 322, 0, 1, 0, 1},
    {12, "Consolador largo", 323, 0, 1, 0, 1},
    {13, "Consolador plateado", 324, 0, 1, 0, 1},
    {14, "Flores", 325, 0, 3, 0, 1},
    {15, "Bastón", 326, 0, 3, 0, 1},
    {16, "Granada", 342, 16, 1, 1, 1},
    {17, "Granada de gas", 343, 17, 1, 1, 30},
    {18, "Cóctel molotov", 344, 18, 1, 1, 10},
    {19, "Glock .45", 346, 22, 1, 0, 30},
    {20, "Glock .45 + silenciador", 347, 23, 1, 0, 50},
    {21, "Magnum Eagle .90", 348, 24, 1, 0, 17},
    {22, "Escopeta Remington 870", 349, 25, 3, 0, 40},
    {23, "Recortada", 350, 26, 3, 0, 20},
    {24, "Escopeta Benelli .100", 351, 27, 3, 0, 100},
    {25, "Subfusil MAC-10", 352, 28, 1, 0, 90},
    {26, "MP5K Heckler", 353, 29, 3, 0, 90},
    {27, "AK-47 Kalashnikova", 355, 30, 3, 0, 150},
    {28, "Fusil M4A1 CM518", 356, 31, 3, 0, 120},
    {29, "Subfusil CO2 Carabina", 372, 32, 1, 0, 90},
    {30, "Rifle caza Weihrauch HW 97", 357, 33, 3, 0, 15},
    {31, "Francotirador Sniper AS50", 358, 34, 3, 0, 20},
    {32, "Cohete", 359, 35, 3, 0, 100},
    {33, "RPG Cohete", 360, 36, 3, 0, 100},
    {34, "Lanzallamas", 361, 37, 3, 0, 100},
    {35, "Minigun", 362, 38, 3, 0, 5000},
    {36, "Spray Pimienta", 365, 41, 1, 0, 1000},
    {37, "Extintor C02", 366, 42, 3, 0, 1500},
    {38, "Cámara Fotos Sony", 367, 43, 1, 0, 500},
    {39, "Paracaidas", 371, 46, 3, 1, 1},
    {40, "Tasér Paralizador", 347, 23, 1, 0, 2},
    {41, "Cargador 45. Glock", 19995, 0, 1, 0, 30},
    {42, "Cargador Magnum Eagle", 19995, 0, 1, 0, 17},
    {43, "Cargador UZI", 19995, 0, 1, 0, 90},
    {44, "Cargador MP5K", 19995, 0, 1, 0, 120},
    {45, "Cargador CO2 Carabina", 19995, 0, 1, 0, 90},
    {46, "Cargador AK-47", 2037, 0, 1, 0, 150},
    {47, "Cargador M4AL CM518", 2037, 0, 1, 0, 120},
    {48, "Cargador Weihrauch HW 97", 2037, 0, 1, 0, 15},
    {49, "Cartuchos de Escopeta", 2040, 0, 2, 1, 40},
    {50, "Caja vacía", 3052, 0, 2, 1, 1},
    {51, "Caja 45. Glock", 3052, 0, 2, 1, 20},
    {52, "Caja Magnum .90", 3052, 0, 2, 1, 20},
    {53, "Caja Carabina", 3052, 0, 2, 1, 20},
    {54, "Caja MAC-10", 3052, 0, 2, 1, 20},
    {55, "Caja MP5K", 3052, 0, 2, 1, 20},
    {56, "Caja Remington 870", 3052, 0, 2, 1, 20},
    {57, "Caja de Recortada", 3052, 0, 2, 1, 20},
    {58, "Caja Benelli .100", 3052, 0, 2, 1, 20},
    {59, "Caja AK-47", 3052, 0, 2, 1, 20},
    {60, "Caja M4A1 CM518", 3052, 0, 2, 1, 20},
    {61, "Caja Rifle Weihrauch HW 97", 3052, 0, 2, 1, 20},
    {62, "Caja Sniper AS50", 3052, 0, 2, 1, 20},
    {63, "Caja Cargadores 45. Glock", 2040, 0, 2, 1, 20},
    {64, "C.Cargadores Magnum Eagle", 2040, 0, 2, 1, 20},
    {65, "C.Cargadores CO2 Carabina", 2040, 0, 2, 1, 20},
    {66, "C.Cargadores MAC-10", 2040, 0, 2, 1, 20},
    {67, "C.Cargadores MP5 Heckler", 2040, 0, 2, 1, 20},
    {68, "C.Cargadores AK-17", 2040, 0, 2, 1, 20},
    {69, "C.Cargadores M4A1", 2040, 0, 2, 1, 20},
    {70, "C.Cargadores Rifle", 2040, 0, 2, 1, 20},
    {71, "Spray", 365,  0,  1, 1, 1000},
    {72, "Chaleco", 1242, 0, 2, 1, 100},
    {73, "Esposas", 19418, 0, 1, 1, 1},
    {74, "Bolsita de marihuana", 327, 0, 1, 1, 20},
    {75, "Bolsita de cocaína", 327, 0, 1, 1, 3},
    {76, "Bolsita de crack", 327, 0, 1, 1, 3},
    {77, "Bolsita de heroína", 327, 0, 1, 1, 3},
    {78, "Tripi de LSD", 327, 0, 1, 1, 3},
    {79, "Semilla marihuana", 327, 0, 1, 1, 30},
    {80, "iPhone", 18871, 0, 1, 0, 1},
    {81, "GPS", 18875, 0, 1, 0, 1},
    {82, "Radio", 330, 0, 1, 0, 1},
    {83, "Dados", 1852, 0, 1, 0, 1},
    {84, "Tarjeta de débito", 19792, 0, 1, 1, 1},
    {85, "Caña de pesca", 18632, 0, 2, 0, 1},
    {86, "Destornillador", 18644, 0, 2, 0, 1},
    {87, "Encendedor", 19998, 0, 1, 1, 30},
    {88, "Caja Cigarrillos", 19896, 0, 1, 1, 10},
    {89, "Bidón de gasolina", 1650, 0, 2, 1, 10},
    {90, "Bolsa de doritos", 2663, 0, 1, 1, 1},
    {91, "Bolsa de patatas", 2663, 0, 1, 1, 1},
    {92, "Bolsa de nachos", 2663, 0, 1, 1, 1},
    {93, "Lata de sprunk", 2601, 0, 1, 0, 5},
    {94, "Lata de pepsi", 2601, 0, 1, 1, 1},
    {95, "Botella de agua", 1484, 0, 1, 1, 1},
    {96, "Botella de cerveza", 1486, 0, 1, 1, 1},
    {97, "Copa de vino", 1667, 0, 1, 1, 1},
    {98, "Vaso de whisky", 1666, 0, 1, 1, 1},
    {99, "Vaso de ron", 1666, 0, 1, 1, 1},
    {100, "Hamburguesa", 2768, 0, 1, 1, 5},
    {101, "Burrito", 2769, 0, 1, 1, 5},
    {102, "Pizza", 2814, 0, 1, 1, 8},
    {103, "Botella de ron", 1544, 0, 1, 1, 12},
    {104, "Botella de whisky", 1520, 0, 1, 1, 12},
    {105, "Botella de vino", 1517, 0, 1, 1, 12},
    {106, "Cigarro", 19625, 0, 1, 1, 5},
    {107, "Billete", 1212, 0, 1, 1, 311},
    {108, "C. Cargadores Escopeta", 2040, 0, 2, 1, 20},
    {109, "Optiwand", 356, 0, 0, 3, 1},
    {110, "P. Marihuana", 1578, 0, 2, 1, 500},
    {111, "P. Cocaína", 1579, 0, 2, 1, 500},
    {112, "P. Crack", 1577, 0, 2, 1, 500},
    {113, "P. Heroína", 1576, 0, 2, 1, 500},
    {114, "P. LSD", 1580, 0, 2, 1, 500},
    {115, "iPhone 12 Pro", 18865, 0, 1, 0, 1},
    {116, "iPhone 11", 18866, 0, 1, 0, 1},
    {117, "Samsung Galaxy S21", 18867, 0, 1, 0, 1},
    {118, "iPhone 13", 18868, 0, 1, 0, 1},
    {119, "Samsung Galaxy Note", 18869, 0, 1, 0, 1},
    {120, "Xiami Redmi Pro", 18870, 0, 1, 0, 1},
    {121, "Huawei P30", 18871, 0, 1, 0, 1},
    {122, "iPhone 11 Pro", 18872, 0, 1, 0, 1},
    {123, "Samsung Galaxy Ultra", 18873, 0, 1, 0, 1},
    {124, "Purple drank", 1546, 0, 1, 1, 10},
    {125, "Codeine", 1543, 0, 1, 1, 2},
    {126, "Goma de mascar", 0, 0, 1, 1, 1},
    {127, "Cuchillo", 11716, 0, 1, 0, 1},
    {128, "Palanca", 18634, 0, 1, 1, 1},
    {129, "Alcoholimetro", 2711, 0, 1, 1, 1},
    {130, "Botiquin", 11738, 0, 2, 1, 1},
    {131, "Caja registradora", 1514, 0, 2, 0, 8000},
    {132, "Porro", 3027, 0, 1, 1, 5}
};

funcion PonerObjeto(playerid, slot, objetoid) { //Coloca un objeto en la mano
	new modelo = InfoObjeto[objetoid][ModeloObjeto];
    if (slot == 1) {
        if (objetoid == 1) ColocarObject(playerid, 6, modelo, 6); //- Nudillera
        if (objetoid == 2) ColocarObject(playerid, 6, modelo, 6); //- Palo de golf
        if (objetoid == 3) ColocarObject(playerid, 6, modelo, 6); //- Bastón policial
        if (objetoid == 4) ColocarObject(playerid, 6, modelo, 6); //- Navaja
        if (objetoid == 5) ColocarObject(playerid, 6, modelo, 6); //- Bate
        if (objetoid == 6) ColocarObject(playerid, 6, modelo, 6); //- Pala
        if (objetoid == 7) ColocarObject(playerid, 6, modelo, 6); //- Palo de billar
        if (objetoid == 8) ColocarObject(playerid, 6, modelo, 6); //- Sable
        if (objetoid == 9) ColocarObject(playerid, 6, modelo, 6); //- Motosierra
        if (objetoid == 10) ColocarObject(playerid, 6, modelo, 6); //- Consolador 1
        if (objetoid == 11) ColocarObject(playerid, 6, modelo, 6); //- Consolador 2
        if (objetoid == 12) ColocarObject(playerid, 6, modelo, 6); //- Consolador 3
        if (objetoid == 13) ColocarObject(playerid, 6, modelo, 6); //- Consolador 4
        if (objetoid == 14) ColocarObject(playerid, 6, modelo, 6); //- Flores
        if (objetoid == 15) ColocarObject(playerid, 6, modelo, 6); //- Bastón - Palanca
        if (objetoid == 16) ColocarObject(playerid, 6, modelo, 6); //- Granada
        if (objetoid == 17) ColocarObject(playerid, 6, modelo, 6); //- Granada de gas
        if (objetoid == 18) ColocarObject(playerid, 6, modelo, 6); //- Cóctel molotov
        if (objetoid == 19) ColocarObject(playerid, 6, modelo, 6); //- 45. Colt
        if (objetoid == 20) ColocarObject(playerid, 6, modelo, 6); //- 45. Colt + silenciador
        if (objetoid == 21) ColocarObject(playerid, 6, modelo, 6); //- Desert Eagle
        if (objetoid == 22) ColocarObject(playerid, 6, modelo, 6); //- Escopeta
        if (objetoid == 23) ColocarObject(playerid, 6, modelo, 6); //- Recortada
        if (objetoid == 24) ColocarObject(playerid, 6, modelo, 6); //- Escopeta combate
        if (objetoid == 25) ColocarObject(playerid, 6, modelo, 6); //- UZI
        if (objetoid == 26) ColocarObject(playerid, 6, modelo, 6); //- MP5K
        if (objetoid == 27) ColocarObject(playerid, 6, modelo, 6); //- AK47
        if (objetoid == 28) ColocarObject(playerid, 6, modelo, 6); //- M4
        if (objetoid == 29) ColocarObject(playerid, 6, modelo, 6); //- Tec9
        if (objetoid == 30) ColocarObject(playerid, 6, modelo, 6); //- Rifle de caza
        if (objetoid == 31) ColocarObject(playerid, 6, modelo, 6); //- Rifle de francotirador
        if (objetoid == 32) ColocarObject(playerid, 6, modelo, 6); //- Cohete
        if (objetoid == 33) ColocarObject(playerid, 6, modelo, 6); //- RPG Cohete
        if (objetoid == 34) ColocarObject(playerid, 6, modelo, 6); //- Lanzallamas
        if (objetoid == 35) ColocarObject(playerid, 6, modelo, 6); //- Minigun
        if (objetoid == 36) ColocarObject(playerid, 6, modelo, 6); //- Spray
        if (objetoid == 37) ColocarObject(playerid, 6, modelo, 6); //- Extintor
        if (objetoid == 38) ColocarObject(playerid, 6, modelo, 6); //- Cámara fotográfica
        if (objetoid == 39) ColocarObject(playerid, 6, modelo, 6); //- Paracaidas
        if (objetoid == 40) ColocarObject(playerid, 6, modelo, 6); //- Tasér
        if (objetoid >= 41 && objetoid <= 45) ColocarObject(playerid, 6, modelo, 6, 0.083999, 0.039000, -0.003999, 0.799998, -5.099998, -92.599990, 1.000000, 1.000000, 1.000000); //- Cargador pequeño
        if (objetoid >= 46 && objetoid <= 48) ColocarObject(playerid, 6, modelo, 6, 0.064999, 0.035998, 0.018999, 1.599980, -105.499984, 1.800009, 0.649999, 0.910999, 0.476999); //- Cargador grande
        if (objetoid == 49) ColocarObject(playerid, 6, modelo, 6, 0.063000, 0.053000, 0.015000, -2.100000, -99.399963, 79.600021, 0.425000, 0.560000, 0.482999); //- Cargador escopeta
        if (objetoid >= 50 && objetoid <= 62) ColocarObject(playerid, 6, modelo, 6, 0.152999, 0.106998, 0.034999, -85.699996, 179.999969, 78.399993, 1.038999, 0.752000, 0.854999); //- Cajas grandes
        if (objetoid >= 63 && objetoid <= 70) ColocarObject(playerid, 6, modelo, 6, 0.063000, 0.053000, 0.015000, -2.100000, -99.399963, 79.600021, 0.425000, 0.560000, 0.482999); //- Cajas pequeñas
        if (objetoid == 71) ColocarObject(playerid, 6, modelo, 6); //- Spray (no arma)
        if (objetoid == 72) ColocarObject(playerid, 6, modelo, 6); //- Chaleco
        if (objetoid == 73) ColocarObject(playerid, 6, modelo, 6, 0.117999, 0.009998, -0.041000, 10.800001, -103.099998, 0.000000, 1.000000, 1.000000, 1.000000); //- Esposas
        if (objetoid >= 74 && objetoid <= 79) ColocarObject(playerid, 6, modelo, 6, 0.117999, 0.009998, -0.041000, 10.800001, -103.099998, 0.000000, 1.000000, 1.000000, 1.000000); //- Bolsitas droga y semilla
        if (objetoid == 80) ColocarObject(playerid, 6, modelo, 6, 0.067000, 0.040000, 0.047999, 94.499992, 15.299990, -177.700012, 0.825999, 0.991999, 0.480999); //- Teléfono
        if (objetoid == 81) ColocarObject(playerid, 6, modelo, 6, 0.042000, 0.042000, 0.003999, 78.999961, 1.699989, 103.699920, 0.724999, 0.667999, 0.480999); //- GPS
        if (objetoid == 82) ColocarObject(playerid, 6, modelo, 6, -0.005000, -0.010000, -0.024000, 10.800001, 1.499994, 0.000000, 1.000000, 1.000000, 1.000000); //- Radio
        if (objetoid == 83) ColocarObject(playerid, 6, modelo, 6, 0.080000, 0.032000, 0.003999, 81.299957, 2.899988, 102.499923, 0.176999, 0.100000, 0.121999); //- Dados
        if (objetoid == 84) ColocarObject(playerid, 6, modelo, 6, 0.065000, 0.044000, -0.001000, 87.699981, -119.399978, -81.000007, 1.000000, 1.000000, 1.000000); //- Tarjeta débito
		if (objetoid == 85) ColocarObject(playerid, 6, modelo, 6, 0.076000, 0.001999, 0.002000, 9.400000, -171.900024, 150.999969, 1.000000, 1.000000, 0.717999); //- Caña de pesca
        if (objetoid == 86) ColocarObject(playerid, 6, modelo, 6, 0.079999, 0.020998, 0.016999, 10.800001, 164.000000, 0.000000, 1.000000, 1.000000, 1.000000); //- Destornillador
        if (objetoid == 87) ColocarObject(playerid, 6, modelo, 6, 0.059000, 0.041000, 0.012999, 0.199999, -21.399997, 0.099999, 0.389000, 0.939000, 0.409999); //- Encendedor
        if (objetoid == 88) ColocarObject(playerid, 6, modelo, 6, 0.070999, 0.032999, 0.025999, 10.800001, 89.800041, 0.000000, 1.000000, 1.000000, 1.000000); //- Cigarrillos
		if (objetoid == 89) ColocarObject(playerid, 6, modelo, 6, 0.095997, 0.005997, 0.049004, 32.000011, -103.499977, 10.299985, 0.825999, 0.620998, 0.762996); //- Bidón de gasolina
		if (objetoid >= 90 && objetoid <= 92) ColocarObject(playerid, 6, modelo, 6, 0.204000, 0.029998, 0.016999, 10.800001, -103.099998, 0.000000, 0.839000, 0.423999, 0.645000); //- Doritos, patatas y nachos
        if (objetoid == 93 || objetoid == 94) ColocarObject(playerid, 6, modelo, 6, 0.043999, 0.029998, 0.016999, 10.800001, -13.199980, 1.000000, 1.000000, 1.000000, 1.000000); //Sprunk y fanta
        if (objetoid == 95) ColocarObject(playerid, 6, modelo, 6, -0.031000, -0.030001, 0.060999, 10.800001, 17.200008, 0.000000, 1.000000, 1.000000, 1.000000); //- Botella agua
        if (objetoid == 96) ColocarObject(playerid, 6, modelo, 6, 0.042000, 0.055999, -0.085000, 10.800001, 1.100013, 0.000000, 1.000000, 1.000000, 1.000000); //- Botella cerveza
        if (objetoid == 97) ColocarObject(playerid, 6, modelo, 6, 0.064999, 0.029998, 0.016999, 10.800001, -30.299997, 0.000000, 1.000000, 1.000000, 1.000000); //- Copa de vino
        if (objetoid == 98 || objetoid == 99) ColocarObject(playerid, 6, modelo, 6, 0.059999, 0.029998, 0.016999, 10.800001, -31.300012, 0.000000, 1.000000, 1.000000, 1.000000); //- Vaso de whisky y ron
        if (objetoid == 100) ColocarObject(playerid, 6, modelo, 6, 0.088999, 0.029998, 0.045999, -43.799991, -24.899995, -10.599997, 1.000000, 1.000000, 0.833999); //- Hamburguesa
        if (objetoid == 101) ColocarObject(playerid, 6, modelo, 6, 0.054000, 0.029998, 0.016999, 106.699981, -11.200008, -105.300056, 1.000000, 1.000000, 1.000000); //- Burrito
        if (objetoid == 102) ColocarObject(playerid, 6, modelo, 6, 0.296000, 0.126998, 0.016999, 103.400001, 0.199999, 0.000000, 1.000000, 1.000000, 1.000000); //- Pizza
        if (objetoid == 103) ColocarObject(playerid, 6, modelo, 6, 0.035000, 0.059999, -0.076000, 10.800001, 5.399998, 0.000000, 1.000000, 1.000000, 1.000000); //- Botella ron
        if (objetoid == 104) ColocarObject(playerid, 6, modelo, 6, 0.037000, 0.072998, -0.065001, 10.800001, 0.100004, 0.000000, 1.000000, 1.000000, 1.000000); //- Botella whisky
        if (objetoid == 105) ColocarObject(playerid, 6, modelo, 6, 0.036000, 0.034998, 0.064998, 10.800001, -0.399997, 0.000000, 1.000000, 1.000000, 1.000000); //- Botella vino
        if (objetoid == 106) ColocarObject(playerid, 6, modelo, 6, 0.121999, -0.004000, 0.004999, 9.599995, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000); //- Cigarro
        if (objetoid == 107) ColocarObject(playerid, 6, modelo, 6, 0.057998, 0.028998, 0.004001, -69.499977, -5.499964, -96.500000, 0.825999, 0.620998, 0.762996); //- billetes
        if (objetoid == 108) ColocarObject(playerid, 6, modelo, 6, 0.063000, 0.053000, 0.015000, -2.100000, -99.399963, 79.600021, 0.425000, 0.560000, 0.482999); //- Caja Cargador escopeta
        if (objetoid == 109) ColocarObject(playerid, 6, modelo, 6); //- Optiwand
		if (objetoid >= 110 && objetoid <= 114) ColocarObject(playerid, 6, modelo, 6, 0.082000, 0.000000, 0.000000, 0.099999, 76.499984, 1.000000, 1.000000, 1.000000, 1.000000); //- Paquetes drogas
		if (objetoid >= 115 && objetoid <= 123) ColocarObject(playerid, 6, modelo, 6, 0.067000, 0.040000, 0.047999, 94.499992, 15.299990, -177.700012, 0.825999, 0.991999, 0.480999); //- Teléfonos
		if (objetoid == 124) ColocarObject(playerid, 6, modelo, 6, 0.093999, 0.052000, 0.004003, -1.100001, -27.100055, -73.999977, 0.777999, 0.982000, 0.851000); //- Purple drank
        if (objetoid == 125) ColocarObject(playerid, 6, modelo, 6, 0.042000, 0.055999, -0.085000, 10.800001, 1.100013, 0.000000, 1.000000, 1.000000, 1.000000); //- Codeine
        if (objetoid == 126) ColocarObject(playerid, 6, modelo, 6, 0.117999, 0.009998, -0.041000, 10.800001, -103.099998, 0.000000, 1.000000, 1.000000, 1.000000); // chicle
        if (objetoid == 127) ColocarObject(playerid, 6, modelo, 6, 0.079999, 0.020998, 0.016999, 10.800001, 164.000000, 0.000000, 1.000000, 1.000000, 1.000000); //- Cuchillo
        if (objetoid == 128) ColocarObject(playerid, 6, modelo, 6, 0.074000, 0.013999, 0.050999, 95.600013, 0.000000, 0.000000, 0.818000, 0.447000, 0.685000); //- Palanca
        if (objetoid == 129) ColocarObject(playerid, 6, modelo, 6, -0.048000, 0.025999, 0.083000, -174.299987, 45.499992, 1.100000, 1.000000, 1.000000, 1.500000); //- Alcoholimetro
        if (objetoid == 130) ColocarObject(playerid, 6, modelo, 6, 0.178000, 0.019999, 0.031998, 0.000000, -101.600021, 0.000000, 0.630999, 0.452998, 0.611998); //- Botiquin
        if (objetoid == 131) ColocarObject(playerid, 6, modelo, 6, 0.098000, 0.153000, -0.219999, -110.699958, -10.599965, -99.099998, 0.825999, 0.620999, 0.762999); //- Caja registradora
        if (objetoid == 132) ColocarObject(playerid, 6, modelo, 6, 0.098000, 0.034000, 0.037999, 111.599998, 19.299999, 8.299999, 1.000000, 1.000000, 1.000000); //- Porro
    }
	if (slot == 2) {
        if (objetoid == 1) ColocarObject(playerid, 7, modelo, 5, 0.024999, 0.000000, -0.005999, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000); //- Nudillera
        if (objetoid == 2) ColocarObject(playerid, 7, modelo, 5, -0.040000, 0.067000, -0.003000, -29.899999, 152.000000, 176.000030, 1.000000, 1.000000, 1.000000); //- Palo de golf
        if (objetoid == 3) ColocarObject(playerid, 7, modelo, 5, 0.000000, 0.059999, -0.022000, 161.599990, 10.700001, 5.800002, 1.000000, 1.000000, 1.000000); //- Bastón policial
        if (objetoid == 4) ColocarObject(playerid, 7, modelo, 5, 0.180999, 0.000000, 0.017999, 0.000000, 177.800018, -8.799996, 1.000000, 1.000000, 1.000000); //- Navaja
        if (objetoid == 5) ColocarObject(playerid, 7, modelo, 5, 0.135999, 0.030999, 0.053999, -17.900001, 153.800018, 0.000000, 1.000000, 1.000000, 1.000000); //- Bate
        if (objetoid == 6) ColocarObject(playerid, 7, modelo, 5, 0.041999, 0.051999, -0.080000, -27.899986, 155.800018, -167.499938, 1.000000, 1.000000, 1.000000); //- Pala
        if (objetoid == 7) ColocarObject(playerid, 7, modelo, 5, 0.156999, 0.092000, 0.071999, -25.099998, 172.899963, -19.899995, 1.000000, 1.000000, 1.000000); //- Palo de billar
        if (objetoid == 8) ColocarObject(playerid, 7, modelo, 5, 0.058000, 0.008000, -0.109000, -27.999998, 155.100036, 172.699966, 1.000000, 1.000000, 1.000000); //- Sable
        if (objetoid == 9) ColocarObject(playerid, 7, modelo, 5, 0.000000, 0.078999, -0.009000, 155.599990, 7.200000, 4.800000, 1.000000, 1.000000, 1.000000); //- Motosierra
        if (objetoid == 10) ColocarObject(playerid, 7, modelo, 5, 0.015000, 0.041000, -0.068000, -25.599971, 162.900054, -175.300018, 1.000000, 1.000000, 1.000000); //- Consolador 1
        if (objetoid == 11) ColocarObject(playerid, 7, modelo, 5, 0.023999, 0.052999, -0.041999, 157.899978, 2.499999, 0.000000, 1.000000, 1.000000, 1.000000); //- Consolador 2
        if (objetoid == 12) ColocarObject(playerid, 7, modelo, 5, -0.002000, 0.074000, 0.001000, 151.200042, 23.000000, -9.100001, 1.000000, 1.000000, 1.000000); //- Consolador 3
        if (objetoid == 13) ColocarObject(playerid, 7, modelo, 5, 0.017999, 0.003999, -0.047999, 168.200012, 18.300003, -27.900005, 1.000000, 1.000000, 1.000000); //- Consolador 4
        if (objetoid == 14) ColocarObject(playerid, 7, modelo, 5, 0.176000, 0.000000, -0.011000, -23.399999, 160.599990, -6.399995, 1.000000, 1.000000, 1.000000); //- Flores
        if (objetoid == 15) ColocarObject(playerid, 7, modelo, 5, 0.008999, -0.018999, -0.047999, -33.199996, 159.900085, 156.399902, 1.000000, 1.000000, 1.000000); //- Bastón
        if (objetoid == 16) ColocarObject(playerid, 7, modelo, 5, 0.019000, 0.047000, -0.021000, 164.499984, 0.000000, -17.599994, 1.000000, 1.000000, 1.000000); //- Granada
        if (objetoid == 17) ColocarObject(playerid, 7, modelo, 5, 0.034000, 0.063000, -0.037999, 164.500000, 14.599996, -4.700009, 1.000000, 1.000000, 1.000000); //- Granada de gas
        if (objetoid == 18) ColocarObject(playerid, 7, modelo, 5, 0.022999, 0.039000, -0.125999, 165.700012, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000); //- Cóctel molotov
        if (objetoid == 19) ColocarObject(playerid, 7, modelo, 5, 0.033000, 0.057999, -0.017999, 146.299987, 14.999998, -4.700002, 1.000000, 1.000000, 1.000000); //- 45. Colt + silenciador
        if (objetoid == 20) ColocarObject(playerid, 7, modelo, 5, 0.050999, 0.038000, -0.021999, 144.500015, 9.100000, -11.600002, 1.000000, 1.000000, 1.000000); //- 45. Colt
        if (objetoid == 21) ColocarObject(playerid, 7, modelo, 5, 0.041000, 0.038000, -0.026999, 173.899963, 0.000000, 1.799999, 1.000000, 1.000000, 1.000000); //- Desert Eagle
        if (objetoid == 22) ColocarObject(playerid, 7, modelo, 5, 0.000000, 0.089000, 0.000000, 153.500015, 10.000001, 4.800000, 1.000000, 1.000000, 1.000000); //- Escopeta
        if (objetoid == 23) ColocarObject(playerid, 7, modelo, 5, 0.040000, 0.026000, 0.011000, -156.300003, 0.000000, 2.600000, 1.000000, 1.000000, 1.000000); //- Recortada
        if (objetoid == 24) ColocarObject(playerid, 7, modelo, 5, 0.023000, 0.048999, -0.013000, 172.200012, 14.400005, 0.599999, 1.000000, 1.000000, 1.000000); //- Escopeta combate
        if (objetoid == 25) ColocarObject(playerid, 7, modelo, 5, 0.024999, 0.048000, -0.012000, 172.000076, -3.099988, -2.099991, 1.000000, 1.000000, 1.000000); //- UZI
        if (objetoid == 26) ColocarObject(playerid, 7, modelo, 5, 0.005000, 0.065000, -0.016000, 162.399963, 9.599999, 8.400000, 1.000000, 1.000000, 1.000000); //- MP5K
        if (objetoid == 27) ColocarObject(playerid, 7, modelo, 5, 0.057999, 0.076999, -0.023999, 162.799942, 14.399999, 0.000000, 1.000000, 1.000000, 1.000000); //- AK47
        if (objetoid == 28) ColocarObject(playerid, 7, modelo, 5, 0.043999, 0.028999, -0.038000, 167.499969, 15.999998, 0.000000, 1.000000, 1.000000, 1.000000); //- M4
        if (objetoid == 29) ColocarObject(playerid, 7, modelo, 5, 0.048000, 0.049999, 0.011000, -172.600006, -2.299995, 5.999999, 1.000000, 1.000000, 1.000000); //- Tec9
        if (objetoid == 30) ColocarObject(playerid, 7, modelo, 5, -0.043000, 0.065999, -0.044999, 167.499954, 17.399999, 0.000000, 1.000000, 1.000000, 1.000000); //- Rifle de caza
        if (objetoid == 31) ColocarObject(playerid, 7, modelo, 5, -0.018000, 0.085000, 0.033000, 167.399978, 12.200000, -0.299997, 1.000000, 1.000000, 1.000000); //- Rifle de francotirador
        if (objetoid == 32) ColocarObject(playerid, 7, modelo, 5, -0.019999, 0.053999, -0.042000, -33.100013, -174.800018, 171.199890, 0.757999, 0.782000, 0.979999); //- Cohete
        if (objetoid == 33) ColocarObject(playerid, 7, modelo, 5, 0.171999, 0.079999, -0.111999, -124.399993, 166.300018, -93.599990, 1.038999, 0.752000, 0.854999); //- RPG Cohete
		if (objetoid == 34) ColocarObject(playerid, 7, modelo, 5, 0.044999, 0.083999, 0.034999, 47.699974, -79.599967, -89.300102, 0.654999, 0.782000, 0.758000); //- Lanzallamas
        if (objetoid == 35) ColocarObject(playerid, 7, modelo, 5, 0.023000, 0.048999, -0.013000, 172.200012, 14.400005, 0.599999, 1.000000, 1.000000, 1.000000); //- Minigun
        if (objetoid == 36) ColocarObject(playerid, 7, modelo, 5, 0.036999, 0.026999, -0.079999, 152.899993, 14.900004, -0.400000, 1.000000, 1.000000, 1.000000); //- Spray
        if (objetoid == 37) ColocarObject(playerid, 7, modelo, 5, 0.004000, 0.061999, -0.063999, 126.599990, 33.099998, 2.200000, 1.000000, 1.000000, 1.000000); //- Extintor
        if (objetoid == 39) ColocarObject(playerid, 7, modelo, 5, 0.018000, 0.062999, 0.074999, -109.400039, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000); //- Cámara fotográfica
        if (objetoid == 39) ColocarObject(playerid, 7, modelo, 5, 0.018000, 0.062999, 0.074999, -109.400039, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000); //- Paracaidas
        if (objetoid == 40) ColocarObject(playerid, 7, modelo, 5, 0.050999, 0.038000, -0.021999, 144.500015, 9.100000, -11.600002, 1.000000, 1.000000, 1.000000); //- Tasér
		if (objetoid >= 41 && objetoid <= 45) ColocarObject(playerid, 7, modelo, 5, 0.088999, 0.023000, 0.006000, -9.600001, 178.099945, 92.899978, 1.000000, 1.000000, 1.000000); //- Cargador pequeño
        if (objetoid >= 46 && objetoid <= 48) ColocarObject(playerid, 7, modelo, 5, 0.092000, 0.038000, -0.026000, -37.200008, 82.199996, 3.499996, 0.649999, 0.910999, 0.476999); //- Cargador grande
        if (objetoid == 49) ColocarObject(playerid, 7, modelo, 5,  0.059000, 0.053000, 0.005000, -2.100000, -99.399963, 103.800018, 0.425000, 0.560000, 0.482999); //- Cargador escopeta
        if (objetoid >= 50 && objetoid <= 62) ColocarObject(playerid, 7, modelo, 5, 0.171999, 0.079999, -0.111999, -124.399993, 166.300018, -93.599990, 1.038999, 0.752000, 0.854999); //- Cajas grandes
        if (objetoid >= 63 && objetoid <= 70) ColocarObject(playerid, 7, modelo, 5,  0.059000, 0.053000, 0.005000, -2.100000, -99.399963, 103.800018, 0.425000, 0.560000, 0.482999); //- Cargador escopeta
        if (objetoid == 71) ColocarObject(playerid, 7, modelo, 5, 0.018000, 0.062999, 0.074999, -109.400039, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000); //- Spray (no arma)
        if (objetoid == 72) ColocarObject(playerid, 7, modelo, 5, 0.023000, 0.048999, -0.013000, 172.200012, 14.400005, 0.599999, 1.000000, 1.000000, 1.000000); //- Chaleco
		if (objetoid == 73) ColocarObject(playerid, 7, modelo, 5, 0.036000, 0.037999, 0.054999, -37.200008, 82.199996, 3.499995, 1.000000, 1.000000, 1.000000); //- Esposas
        if (objetoid >= 74 && objetoid <= 79) ColocarObject(playerid, 7, modelo, 5, 0.036000, 0.037999, 0.054999, -37.200008, 82.199996, 3.499995, 1.000000, 1.000000, 1.000000); //- Bolsitas droga y semilla
        if (objetoid == 80) ColocarObject(playerid, 7, modelo, 5, 0.113000, 0.058000, 0.010999, 76.599967, 15.299990, -170.900024, 0.825999, 0.991999, 0.480999); //- Teléfono
        if (objetoid == 81) ColocarObject(playerid, 7, modelo, 5, 0.076000, 0.031000, 0.003999, 81.299957, 2.899988, 102.499923, 0.724999, 0.667999, 0.480999); //- GPS
        if (objetoid == 82) ColocarObject(playerid, 7, modelo, 5, 0.144999, -0.009999, 0.027000, -23.500009, -173.399993, 3.499995, 1.000000, 1.000000, 1.000000); //- Radio
        if (objetoid == 83) ColocarObject(playerid, 7, modelo, 5, 0.091000, 0.032000, -0.011000, 81.299957, 2.899988, 102.499923, 0.176999, 0.100000, 0.121999); //- Dados
		if (objetoid == 84) ColocarObject(playerid, 7, modelo, 5, 0.065000, 0.044000, -0.001000, 87.699981, -119.399978, -81.000007, 1.000000, 1.000000, 1.000000); //- Tarjeta débito
		if (objetoid == 85) ColocarObject(playerid, 7, modelo, 5, 0.095999, 0.016999, -0.005999, 151.600036, -178.500000, 11.999951, 1.000000, 1.000000, 0.717999); //- Caña de pesca
        if (objetoid == 86) ColocarObject(playerid, 7, modelo, 5, 0.092000, 0.037999, -0.026000, -37.200008, -18.400012, 3.499995, 1.000000, 1.000000, 1.000000); //- Destornillador
        if (objetoid == 87) ColocarObject(playerid, 7, modelo, 5, 0.084000, 0.026000, -0.014000, 156.000076, -21.299989, -1.399998, 0.389000, 0.939000, 0.409999); //- Encendedor
        if (objetoid == 88) ColocarObject(playerid, 7, modelo, 5, 0.092000, 0.038000, -0.026000, -37.200008, 82.199996, 3.499996, 1.000000, 1.000000, 1.000000); //- Cigarrillos
		if (objetoid == 89) ColocarObject(playerid, 7, modelo, 5, 0.133997, 0.013997, -0.038995, 158.099990, -81.999946, 5.999985, 0.825999, 0.620998, 0.762996); //- Bidón de gasolina
		if (objetoid >= 90 && objetoid <= 92) ColocarObject(playerid, 7, modelo, 5, 0.216999, 0.037999, -0.002999, -13.699973, -98.399971, 3.000000, 0.839000, 0.423999, 0.645000); //- Doritos, patatas y nachos
        if (objetoid == 93 || objetoid == 94) ColocarObject(playerid, 7, modelo, 5, 0.072000, 0.036999, -0.026000, -11.800009, 175.100036, 3.000000, 1.000000, 1.000000, 1.000000); //- Sprunk y fanta
        if (objetoid == 95) ColocarObject(playerid, 7, modelo, 5, 0.134000, 0.001999, -0.122000, -37.200008, -149.699951, -37.999996, 1.000000, 1.000000, 1.000000); //- Botella agua
        if (objetoid == 96) ColocarObject(playerid, 7, modelo, 5, 0.092000, 0.114000, 0.069000, -37.200008, -173.000015, 3.499995, 1.000000, 1.000000, 1.000000); //- Botella cerveza
        if (objetoid == 97) ColocarObject(playerid, 7, modelo, 5, 0.077000, 0.037999, -0.026000, -37.200008, -174.300003, 3.499995, 1.000000, 1.000000, 1.000000); //- Copa vino
        if (objetoid == 98 || objetoid == 99) ColocarObject(playerid, 7, modelo, 5, 0.081000, 0.037999, -0.012999, -37.200008, 172.500061, 3.499995, 1.000000, 1.000000, 1.000000); //- Vaso de whisky y ron
        if (objetoid == 100) ColocarObject(playerid, 7, modelo, 5, 0.125999, 0.037999, -0.006999, -143.300033, -3.300006, 144.699966, 1.000000, 1.000000, 0.833999); //- Hamburguesa
        if (objetoid == 101) ColocarObject(playerid, 7, modelo, 5, 0.092000, 0.037999, -0.026000, -37.200008, 82.199996, -175.000000, 1.000000, 1.000000, 1.000000); //- Burrito
        if (objetoid == 102) ColocarObject(playerid, 7, modelo, 5, 0.293000, 0.108000, -0.049999, -116.499977, 170.400054, 3.799995, 1.000000, 1.000000, 1.000000); //- Pizza
        if (objetoid == 103) ColocarObject(playerid, 7, modelo, 5, 0.092000, 0.096000, 0.066999, -25.500007, 179.099990, 3.499995, 1.000000, 1.000000, 1.000000); //- Botella de ron
        if (objetoid == 104) ColocarObject(playerid, 7, modelo, 5, 0.092000, 0.092000, 0.045000, -37.200008, -165.699996, 3.499995, 1.000000, 1.000000, 1.000000); //- Botella de whisky
        if (objetoid == 105) ColocarObject(playerid, 7, modelo, 5, 0.072000, 0.037999, -0.038000, -15.100006, -158.999984, 3.499995, 1.000000, 1.000000, 1.000000); //- Botella de vino
        if (objetoid == 106) ColocarObject(playerid, 7, modelo, 5, 0.130000, 0.013999, 0.007999, 9.599995, 6.699999, 29.500005, 1.000000, 1.000000, 1.000000); //- Cigarro
        if (objetoid == 107) ColocarObject(playerid, 7, modelo, 5, 0.080998, 0.056998, -0.023998, 75.300010, -21.099960, -83.500007, 0.825999, 0.620998, 0.762996); //- billetes
        if (objetoid == 108) ColocarObject(playerid, 7, modelo, 5, 0.063000, 0.053000, 0.015000, -2.100000, -99.399963, 79.600021, 0.425000, 0.560000, 0.482999); //- Caja Cargador escopeta
        if (objetoid == 109) ColocarObject(playerid, 7, modelo, 5, 0.043999, 0.028999, -0.038000, 167.499969, 15.999998, 0.000000, 1.000000, 1.000000, 1.000000); //- Optiwand
		if (objetoid >= 110 && objetoid <= 114) ColocarObject(playerid, 7, modelo, 5, 0.082000, 0.000000, 0.000000, -0.399999, 76.499984, -25.099998, 1.000000, 1.000000, 1.000000); //- Paquetes drogas
		if (objetoid >= 115 && objetoid <= 123) ColocarObject(playerid, 7, modelo, 5, 0.113000, 0.058000, 0.010999, 76.599967, 15.299990, -170.900024, 0.825999, 0.991999, 0.480999); //- Teléfonos
		if (objetoid == 124) ColocarObject(playerid, 7, modelo, 5, 0.093998, 0.052000, -0.017997, 1.899998, -168.300033, -73.999977, 0.777998, 0.981999, 0.851000); //- Purple drank
        if (objetoid == 125) ColocarObject(playerid, 7, modelo, 5, 0.092000, 0.114000, 0.069000, -37.200008, -173.000015, 3.499995, 1.000000, 1.000000, 1.000000); //- Codeine
        if (objetoid == 126) ColocarObject(playerid, 7, modelo, 5, 0.036000, 0.037999, 0.054999, -37.200008, 82.199996, 3.499995, 1.000000, 1.000000, 1.000000); // chicle
        if (objetoid == 127) ColocarObject(playerid, 7, modelo, 5, 0.180999, 0.000000, 0.017999, 0.000000, 177.800018, -8.799996, 1.000000, 1.000000, 1.000000); //- Cuchillo
        if (objetoid == 128) ColocarObject(playerid, 7, modelo, 5, 0.082000, 0.022000, -0.040999, -110.899955, 0.000000, -20.699991, 1.000000, 0.541000, 0.599999); //- Palanca
        if (objetoid == 129) ColocarObject(playerid, 7, modelo, 5, -0.000000, 0.004999, -0.080999, -16.900087, 43.799995, 4.500000, 1.000000, 1.000000, 1.500000); //- Alcoholimetro
        if (objetoid == 130) ColocarObject(playerid, 7, modelo, 5, 0.193000, 0.029000, -0.001001, 0.000000, -101.600021, 12.900000, 0.630999, 0.452998, 0.611998); //- Botiquin
        if (objetoid == 131) ColocarObject(playerid, 6, modelo, 6, 0.098000, 0.153000, -0.219999, -110.699958, -10.599965, -99.099998, 0.825999, 0.620999, 0.762999); //- Caja registradora
        if (objetoid == 132) ColocarObject(playerid, 7, modelo, 5, 0.116999, 0.034000, -0.037000, 111.599998, 19.299999, 8.299999, 1.000000, 1.000000, 1.000000); //- Porro
	}
	if (slot == 3) {
        if (B_Pecho[playerid] == 0) {
            if (objetoid == 2) ColocarObject(playerid, 8, modelo, 1, 0.378000, -0.112998, 0.040000, 6.499971, -109.000022, -6.500008, 0.719999, 0.611000, 0.630000); //- Palo de golf
            if (objetoid == 5) ColocarObject(playerid, 8, modelo, 1, 0.287000, -0.106998, 0.040000, 6.499971, -109.000022, -6.500008, 0.719999, 0.611000, 0.630000); //- Bate
            if (objetoid == 6) ColocarObject(playerid, 8, modelo, 1, 0.265000, -0.157998, 0.061000, 6.499971, -108.600013, 92.200012, 0.719999, 0.611000, 0.630000); //- Pala
            if (objetoid == 7) ColocarObject(playerid, 8, modelo, 1, 0.287000, -0.106998, 0.040000, 6.499971, -109.000022, -6.500008, 0.719999, 0.611000, 0.630000); //- Palo de billar
            if (objetoid == 8) ColocarObject(playerid, 8, modelo, 1, 0.287000, -0.106998, 0.040000, 6.499971, -109.000022, -6.500008, 0.719999, 0.611000, 0.630000); //- Sable
            if (objetoid == 9) ColocarObject(playerid, 8, modelo, 1, 0.427000, -0.131998, 0.038000, -2.800032, -18.000013, 172.900024, 0.719999, 0.611000, 0.630000); //- Motosierra
            if (objetoid == 14) ColocarObject(playerid, 8, modelo, 1, 0.287000, -0.106998, 0.040000, 6.499971, -109.000022, -6.500008, 0.719999, 0.611000, 0.630000); //- Flores
            if (objetoid == 15) ColocarObject(playerid, 8, modelo, 1, 0.287000, -0.106998, 0.040000, 6.499971, -109.000022, -6.500008, 0.719999, 0.611000, 0.630000); //- Bastón
            if (objetoid == 22) ColocarObject(playerid, 8, modelo, 1, 0.220000, -0.135998, 0.113000, -1.900013, 161.699951, 8.599991, 0.719999, 0.675999, 0.928000); //- Escopeta
            if (objetoid == 23) ColocarObject(playerid, 8, modelo, 1, 0.345999, -0.151998, 0.166000, -1.900013, 161.699951, 8.599991, 0.918999, 0.982999, 0.984000); //- Recortada
            if (objetoid == 24) ColocarObject(playerid, 8, modelo, 1, 0.345999, -0.151998, 0.166000, -1.900013, 161.699951, 8.599991, 0.918999, 0.982999, 0.984000); //- Escopeta combate
            if (objetoid == 26) ColocarObject(playerid, 8, modelo, 1, 0.205000, -0.136998, 0.156000, -1.500012, 152.599945, 5.399990, 0.918999, 0.982999, 0.984000); //- MP5K
            if (objetoid == 27) ColocarObject(playerid, 8, modelo, 1, 0.251000, -0.130998, 0.135999, -1.500012, 152.599945, 5.399990, 0.960999, 0.883999, 0.984000); //- AK47
            if (objetoid == 28) ColocarObject(playerid, 8, modelo, 1, 0.251000, -0.130998, 0.135999, -1.500012, 152.599945, 5.399990, 0.960999, 0.883999, 0.984000); //- M4
            if (objetoid == 30) ColocarObject(playerid, 8, modelo, 1, 0.017999, -0.133999, 0.000000, 11.899997, 32.799995, 9.599994, 0.618999, 1.000000, 1.000000); //- Rifle de caza
            if (objetoid == 31) ColocarObject(playerid, 8, modelo, 1, 0.018000, -0.133999, 0.000000, 11.899998, 32.799995, 9.599995, 0.618999, 1.000000, 1.000000); //- Rifle de francotirador
            if (objetoid == 32) ColocarObject(playerid, 8, modelo, 1, -0.019999, -0.155000, 0.068000, 15.799981, 164.600006, -3.100142, 0.757999, 0.782000, 0.979999); //- Cohete
            if (objetoid == 33) ColocarObject(playerid, 8, modelo, 1, 0.195999, -0.142000, -0.129000, -1.799999, 18.200000, 0.000000, 1.000000, 1.000000, 1.000000); //- Cohete RPG
            if (objetoid == 34) ColocarObject(playerid, 8, modelo, 1, 0.363999, -0.155000, 0.083000, 15.799981, 164.600006, -3.100142, 0.654999, 0.782000, 0.758000); //- Lanzallamas
            if (objetoid == 35) ColocarObject(playerid, 8, modelo, 1, -0.289000, -0.114999, -0.048000, 0.000000, 0.000000, 0.000000, 0.643000, 1.000000, 0.636000); //- Minigun
			if (objetoid == 37) ColocarObject(playerid, 8, modelo, 1, 0.439999, -0.114999, 0.157000, -27.400011, 134.299942, -2.600011, 0.990999, 0.883999, 1.003000); //- Extintor
            if (objetoid == 39) ColocarObject(playerid, 8, modelo, 1, 0.087999, -0.114999, 0.000000, 11.899997, 86.899993, -18.700014, 1.029998, 1.000000, 1.000000); //- Paracaidas
            if (objetoid == 109) ColocarObject(playerid, 8, modelo, 1, 0.251000, -0.130998, 0.135999, -1.500012, 152.599945, 5.399990, 0.960999, 0.883999, 0.984000); //- Optiwand
        } else if (B_Pecho[playerid] == 1) {
            if (objetoid == 2) ColocarObject(playerid, 8, modelo, 1, 0.378000, -0.112998, 0.040000, 6.499971, -109.000022, -6.500008, 0.719999, 0.611000, 0.630000); //- Palo de golf
            if (objetoid == 5) ColocarObject(playerid, 8, modelo, 1, 0.287000, -0.106998, 0.040000, 6.499971, -109.000022, -6.500008, 0.719999, 0.611000, 0.630000); //- Bate
            if (objetoid == 6) ColocarObject(playerid, 8, modelo, 1, 0.265000, -0.157998, 0.061000, 6.499971, -108.600013, 92.200012, 0.719999, 0.611000, 0.630000); //- Pala
            if (objetoid == 7) ColocarObject(playerid, 8, modelo, 1, 0.287000, -0.106998, 0.040000, 6.499971, -109.000022, -6.500008, 0.719999, 0.611000, 0.630000); //- Palo de billar
            if (objetoid == 8) ColocarObject(playerid, 8, modelo, 1, 0.287000, -0.106998, 0.040000, 6.499971, -109.000022, -6.500008, 0.719999, 0.611000, 0.630000); //- Sable
            if (objetoid == 9) ColocarObject(playerid, 8, modelo, 1, 0.427000, -0.131998, 0.038000, -2.800032, -18.000013, 172.900024, 0.719999, 0.611000, 0.630000); //- Motosierra
            if (objetoid == 14) ColocarObject(playerid, 8, modelo, 1, 0.287000, -0.106998, 0.040000, 6.499971, -109.000022, -6.500008, 0.719999, 0.611000, 0.630000); //- Flores
            if (objetoid == 15) ColocarObject(playerid, 8, modelo, 1, 0.287000, -0.106998, 0.040000, 6.499971, -109.000022, -6.500008, 0.719999, 0.611000, 0.630000); //- Bastón
            if (objetoid == 22) ColocarObject(playerid, 8, modelo, 1, 0.200999, 0.175998, -0.119999, -176.800094, 150.299972, -1.400024, 0.780000, 0.850000, 0.758000); //- Escopeta
            if (objetoid == 23) ColocarObject(playerid, 8, modelo, 1, 0.200999, 0.175998, -0.119999, -176.800094, 150.299972, -1.400024, 0.780000, 0.850000, 0.758000); //- Recortada
            if (objetoid == 24) ColocarObject(playerid, 8, modelo, 1, 0.251998, 0.160998, -0.181998, -176.800094, 150.299972, -5.100023, 0.780000, 0.850000, 0.758000); //- Escopeta combate
            if (objetoid == 26) ColocarObject(playerid, 8, modelo, 1, 0.200999, 0.166998, -0.119999, -176.800094, 150.299972, -1.900023, 0.780000, 0.850000, 0.758000); //- MP5K
            if (objetoid == 27) ColocarObject(playerid, 8, modelo, 1, 0.200999, 0.191998, -0.119999, -176.800094, 150.299972, -1.900023, 0.758000, 0.850000, 0.780000); //- AK47
            if (objetoid == 28) ColocarObject(playerid, 8, modelo, 1, 0.147998, 0.203998, -0.096999, -176.300125, 147.999984, -2.200024, 0.841000, 1.000000, 0.852999); //- M4
            if (objetoid == 30) ColocarObject(playerid, 8, modelo, 1, 0.251998, 0.170998, -0.129998, -176.800094, 150.299972, -5.100023, 0.780000, 0.850000, 0.758000); //- Rifle de caza
            if (objetoid == 31) ColocarObject(playerid, 8, modelo, 1, 0.251998, 0.170998, -0.129998, -176.800094, 150.299972, -5.100023, 0.780000, 0.850000, 0.758000); //- Rifle de francotirador
            if (objetoid == 32) ColocarObject(playerid, 8, modelo, 1, -0.019999, -0.155000, 0.068000, 15.799981, 164.600006, -3.100142, 0.757999, 0.782000, 0.979999); //- Cohete
            if (objetoid == 33) ColocarObject(playerid, 8, modelo, 1, 0.195999, -0.142000, -0.129000, -1.799999, 18.200000, 0.000000, 1.000000, 1.000000, 1.000000); //- Cohete RPG
            if (objetoid == 34) ColocarObject(playerid, 8, modelo, 1, 0.363999, -0.155000, 0.083000, 15.799981, 164.600006, -3.100142, 0.654999, 0.782000, 0.758000); //- Lanzallamas
			if (objetoid == 35) ColocarObject(playerid, 8, modelo, 1, -0.289000, -0.114999, -0.048000, 0.000000, 0.000000, 0.000000, 0.643000, 1.000000, 0.636000); //- Minigun
			if (objetoid == 37) ColocarObject(playerid, 8, modelo, 1, 0.439999, -0.114999, 0.157000, -27.400011, 134.299942, -2.600011, 0.990999, 0.883999, 1.003000); //- Extintor
            if (objetoid == 39) ColocarObject(playerid, 8, modelo, 1, 0.087999, -0.114999, 0.000000, 11.899997, 86.899993, -18.700014, 1.029998, 1.000000, 1.000000); //- Paracaidas
            if (objetoid == 109) ColocarObject(playerid, 8, modelo, 1, 0.147998, 0.203998, -0.096999, -176.300125, 147.999984, -2.200024, 0.841000, 1.000000, 0.852999); //- Optiwand
        }
    }
    return 1;
}

funcion TirarAcc(ObjetoID, Float: X, Float: Y, Float: Z, world, interior, playerid) {
    if (ObjetoID != 0) {
        new Float: rotx, Float: roty, Float: rotz;
        for (new i = 0; i < sizeof(InfoCaido); i++) {
            if (InfoCaido[i][AccX] == 0.0 && InfoCaido[i][AccY] == 0.0 && InfoCaido[i][AccZ] == 0.0) {
                InfoCaido[i][AccID] = ObjetoID;
                InfoCaido[i][AccX] = X;
                InfoCaido[i][AccY] = Y;
                InfoCaido[i][AccZ] = Z;
                InfoCaido[i][AccVWorld] = world;
                InfoCaido[i][AccInterior] = interior;
                InfoCaido[i][aParte] = InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aParte];
                InfoCaido[i][aPosicionX] = InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionX];
                InfoCaido[i][aPosicionY] = InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionY];
                InfoCaido[i][aPosicionZ] = InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionZ];
                InfoCaido[i][aRotacionX] = InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionX];
                InfoCaido[i][aRotacionY] = InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionY];
                InfoCaido[i][aRotacionZ] = InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionZ];
                InfoCaido[i][aEscalaZ] = InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaZ];
                InfoCaido[i][aEscalaY] = InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaY];
                InfoCaido[i][aEscalaX] = InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaX];
                rotx = 80;
                roty = 0;
                rotz = 0;
                AccCaido[i] = CreateDynamicObject(ObjetoID, X, Y, Z - 1, rotx, roty, rotz, world);
                SetTimerEx("TirarAccTimer", 600000, false, "i", i);
                return 1;
            }
        }
        return 1;
    }
    return 1;
}

funcion TirarAccTimer(i) {
    DestroyDynamicObject(AccCaido[i]);
    InfoCaido[i][AccX] = 0.0;
    InfoCaido[i][AccY] = 0.0;
    InfoCaido[i][AccZ] = 0.0;
    InfoCaido[i][AccID] = 0;
    return 1;
}

funcion TirarObjeto(ObjetoID, Cantidad, Float: X, Float: Y, Float: Z, world, interior)
{
 	if (ObjetoID != 0)
	{
 		new Float: rotx, Float: roty, Float: rotz;
  		for (new i = 0; i < sizeof(InfoSuelo); i++)
		{
   			if (InfoSuelo[i][DropPosX] == 0.0)
			{
     			InfoSuelo[i][DropID] = ObjetoID;
       			InfoSuelo[i][DropCantidad] = Cantidad;
         		InfoSuelo[i][DropPosX] = X;
          		InfoSuelo[i][DropPosY] = Y;
           		InfoSuelo[i][DropPosZ] = Z;
            	InfoSuelo[i][DropVWorld] = world;
            	InfoSuelo[i][DropInterior] = interior;
            	rotx = 80;
            	roty = 0;
            	rotz = 0;
            	if (ObjetoID >= 47 && ObjetoID <= 49) rotx = 0;
            	if (ObjetoID >= 50 && ObjetoID <= 53) rotx = 0;
            	Z += 0.02;
            	if (ObjetoID == 67) rotx = 0;
            	if (ObjetoID >= 75 && ObjetoID <= 79) rotx = 0;
       	 		if (ObjetoID >= 102 && ObjetoID <= 124) rotx = 0;
       	 		if(ObjetoID == 131 || (ObjetoID >= 93 && ObjetoID <= 99) || (ObjetoID >= 103 && ObjetoID <= 105))
       	 		{
       	 		    rotx = 0.0;
					roty = 0.0;
					roty = 0.0;
					Z += 0.08;
       	 		}
				if(ObjetoID == 105) Z -= 0.08;
				if(ObjetoID == 131) Z += 0.12;
            	Z += 0.02;
            	ObjetoCaido[i] = CreateDynamicObject(InfoObjeto[ObjetoID][ModeloObjeto], X, Y, Z - 1, rotx, roty, rotz, world);
            	ObjTimer[i] = SetTimerEx("SueloTime", 3600000*5, false, "i", i);
            	return 1;
        	}
    	}
    }
    return 1;
}

funcion _Recoger(playerid)
{
	if(user[playerid][jm_Derecha] > 0 && user[playerid][jm_Izquierda] > 0) { _Mensaje(playerid, 0, "9", "Tienes ambas manos ocupadas."); return 1; }
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { _Mensaje(playerid, 0, "9", "No puedes usar este comando en esta situación."); return 1; }
	new ObjetoRecogido, string[256];
	for(new i = 0; i < sizeof(InfoSuelo); i++)
	{
		if(_enPos(playerid, 2.0, InfoSuelo[i][DropPosX], InfoSuelo[i][DropPosY], InfoSuelo[i][DropPosZ]))
		{
			if(GetPlayerVirtualWorld(playerid) == InfoSuelo[i][DropVWorld] && GetPlayerInterior(playerid) == InfoSuelo[i][DropInterior])
			{
				if(InfoSuelo[i][DropID] == 0) break;
				DestroyDynamicObject(ObjetoCaido[i]);
				if (user[playerid][j_Horas] < 10)
				{
				    if(InfoObjeto[InfoSuelo[i][DropID]][IDArma] > 0) {
				    	ResetPlayerWeapons(playerid);
				    	_Mensaje(playerid, 4, "b00000", "No posees diez horas de juego, no puedes tomar el arma.");
				    	return 1;
				    }
				}
				if(user[playerid][jm_Derecha] == 0)
				{
					user[playerid][jm_Derecha] = InfoSuelo[i][DropID], user[playerid][jm_DerechaCant] = InfoSuelo[i][DropCantidad];
					if(InfoObjeto[InfoSuelo[i][DropID]][IDArma] > 0 && InfoSuelo[i][DropCantidad] > 0) { _GiveWeapon(playerid, InfoObjeto[InfoSuelo[i][DropID]][IDArma], InfoSuelo[i][DropCantidad]); }
					PonerObjeto(playerid, 1, InfoSuelo[i][DropID]);
				}
				else if(user[playerid][jm_Izquierda] == 0)
				{
					user[playerid][jm_Izquierda] = InfoSuelo[i][DropID], user[playerid][jm_IzquierdaCant] = InfoSuelo[i][DropCantidad];
					PonerObjeto(playerid, 2, InfoSuelo[i][DropID]);
				}
				format(string, sizeof(string), "Recogiste del suelo un(a) %s.", InfoObjeto[InfoSuelo[i][DropID]][NombreObjeto]);
                if (InfoSuelo[i][DropID] == 131) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
				_Mensaje(playerid, 4, "A7CE00", string);
				InfoSuelo[i][DropPosX] = 0.0;
				InfoSuelo[i][DropPosY] = 0.0;
				InfoSuelo[i][DropPosZ] = 0.0;
				InfoSuelo[i][DropID] = 0;
				InfoSuelo[i][DropCantidad] = 0;
				KillTimer(ObjTimer[i]);
				Streamer_Update(playerid);
				ObjetoRecogido = 1;
				break;
			}
		}
	}
	if(ObjetoRecogido == 0) return _Mensaje(playerid, 0, "9", "No tienes un objeto cercano a ti.");
	return 1;
}

funcion SueloTime(i) {
    DestroyDynamicObject(ObjetoCaido[i]);
    InfoSuelo[i][DropPosX] = 0.0;
    InfoSuelo[i][DropPosY] = 0.0;
    InfoSuelo[i][DropPosZ] = 0.0;
    InfoSuelo[i][DropID] = 0;
    InfoSuelo[i][DropCantidad] = 0;
    KillTimer(ObjTimer[i]);
    return 1;
}

funcion TieneObjeto(playerid, objetoid) {
    for (new x = 0; x < 10; x++) {
        if (user[playerid][jBolsillo][x] == objetoid) {
            return x + 1;
        }
    }
    if (user[playerid][jm_Derecha] == objetoid) return 9;
    if (user[playerid][jm_Izquierda] == objetoid) return 10;
    return 0;
}

funcion _Telefono(playerid) {
	switch(user[playerid][jm_Derecha]) {
		case 80: return 80;
		case 115: return 115;
		case 116: return 116;
		case 117: return 117;
		case 118: return 118;
		case 119: return 119;
		case 120: return 120;
		case 121: return 121;
		case 122: return 122;
		case 123: return 123;
 	}
	switch(user[playerid][jm_Izquierda]) {
		case 80: return 80;
		case 115: return 115;
		case 116: return 116;
		case 117: return 117;
		case 118: return 118;
		case 119: return 119;
		case 120: return 120;
		case 121: return 121;
		case 122: return 122;
		case 123: return 123;
	}
	return 0;
}

funcion _Telefono2(playerid, mano) {
    if(mano == 1) {
		switch(user[playerid][jm_Derecha]) {
		    case 80: return 80;
		    case 115: return 115;
		    case 116: return 116;
		    case 117: return 117;
		    case 118: return 118;
		    case 119: return 119;
		    case 120: return 120;
		    case 121: return 121;
		    case 122: return 122;
			case 123: return 123;
		}
    } else if(mano == 2) {
		switch(user[playerid][jm_Izquierda]) {
		    case 80: return 80;
		    case 115: return 115;
		    case 116: return 116;
		    case 117: return 117;
		    case 118: return 118;
		    case 119: return 119;
		    case 120: return 120;
		    case 121: return 121;
		    case 122: return 122;
			case 123: return 123;
		}
    }
	return 0;
}

funcion TieneCaja(playerid, mano) {
    if(mano == 1) {
        switch(user[playerid][jm_Derecha]) {
            case 51: return 19; //- 45. Colt
            case 52: return 21; //- D. Eagle
            case 53: return 29; //- Tec-9
            case 54: return 25; //- UZI
            case 55: return 26; //- MP5K
            case 56: return 22; //- Escopeta
            case 57: return 23; //- Escopeta recortada
            case 58: return 24; //- Escopeta de combate
            case 59: return 27; //- Ak-47
            case 60: return 28; //- M4A1
            case 61: return 30; //- Rifle de caza
            case 62: return 31; //- Rifle de francotirador
            case 63: return 41; //- Cargador 45. Colt
            case 64: return 42; //- Cargador D. Eagle
            case 65: return 45; //- Cargador Tec-9
            case 66: return 43; //- Cargador UZI
            case 67: return 44; //- Cargador MP5K
            case 68: return 46; //- Cargador Ak-47
            case 69: return 47; //- Cargador M4A1
            case 70: return 48; //- Cargador rifle
            case 108: return 49; //- Cargador Escopeta
        }
    } else if(mano == 2) {
        switch(user[playerid][jm_Izquierda]) {
            case 51: return 19; //- 45. Colt
            case 52: return 21; //- D. Eagle
            case 53: return 29; //- Tec-9
            case 54: return 25; //- UZI
            case 55: return 26; //- MP5K
            case 56: return 22; //- Escopeta
            case 57: return 23; //- Escopeta recortada
            case 58: return 24; //- Escopeta de combate
            case 59: return 27; //- Ak-47
            case 60: return 28; //- M4A1
            case 61: return 30; //- Rifle de caza
            case 62: return 31; //- Rifle de francotirador
            case 63: return 41; //- Cargador 45. Colt
            case 64: return 42; //- Cargador D. Eagle
            case 65: return 45; //- Cargador Tec-9
            case 66: return 43; //- Cargador UZI
            case 67: return 44; //- Cargador MP5K
            case 68: return 46; //- Cargador Ak-47
            case 69: return 47; //- Cargador M4A1
            case 70: return 48; //- Cargador rifle
            case 108: return 49; //- Cargador Escopeta
        }
    } else if(mano == 3) {
        switch(user[playerid][jm_Izquierda] || user[playerid][jm_Derecha]) {
            case 50: return 1; //- Caja vacía
        }
    }
    return 0;
}

funcion TienePaquete(playerid, mano) {
    if(mano == 1) {
        switch(user[playerid][jm_Derecha]) {
            case 110: return 74; //- Marihuana
            case 111: return 75; //- Cocaína
            case 112: return 76; //- Crack
            case 113: return 77; //- Heroína
            case 114: return 78; //- LSD
        }
    } else if(mano == 2) {
        switch(user[playerid][jm_Izquierda]) {
            case 110: return 74; //- Marihuana
            case 111: return 75; //- Cocaína
            case 112: return 76; //- Crack
            case 113: return 77; //- Heroína
            case 114: return 78; //- LSD
        }
    }
    return 0;
}

funcion SetVehicleMatricula(carid) {
	if(!GetVehicleModel(carid)) return 1;
	new matricula[24];
	format(matricula, sizeof(matricula), "LS-%d", carid);
	SetVehicleNumberPlate(carid, matricula);
	return 1;
}

funcion DarMatricula(carid, id) {
	if(!GetVehicleModel(carid)) return 1;
	new matricula[24];
	format(matricula, sizeof(matricula), "LS-%d", id);
	SetVehicleNumberPlate(carid, matricula);
	return 1;
}

funcion C_data(playerid, name[], value[]) {
    INI_String("Contraseña", user[playerid][jClave], MAX_CARACTERES_CLAVE);
    INI_Int("Registrado", user[playerid][jRegistrado]);
	INI_Int("Sexo", user[playerid][jSexo]);
	INI_Int("Edad", user[playerid][jEdad]);
    INI_Int("Ciudad", user[playerid][jCiudad]);
    INI_Int("Idioma", user[playerid][jIdioma]);
    INI_Int("Estilo", user[playerid][jEstilo]);
    INI_Int("Pelea", user[playerid][jPelea]);
    INI_Int("Sed", user[playerid][jSed]);
    INI_Int("Hambre", user[playerid][jHambre]);
    INI_Int("Alcohol", user[playerid][jAlcohol]);
    INI_Int("Fuerza", user[playerid][jFuerza]);
    INI_Int("Dinero", user[playerid][jDinero]);
    SetPVarInt(playerid, "Money", user[playerid][jDinero]);
    INI_Int("Banco", user[playerid][jBanco]);
    INI_Int("Debito", user[playerid][jDebito]);
    INI_Int("Nivel", user[playerid][jNivel]);
    INI_Int("Experiencia", user[playerid][jExperiencia]);
    INI_Int("HorasJ", user[playerid][j_Horas]);
    INI_Float("Posicion_X", user[playerid][jPosicion_X]);
    INI_Float("Posicion_Y", user[playerid][jPosicion_Y]);
    INI_Float("Posicion_Z", user[playerid][jPosicion_Z]);
    INI_Float("Posicion_R", user[playerid][jPosicion_R]);
    INI_Float("Vida", user[playerid][jSangre]);
    INI_Float("Chaleco", user[playerid][jChaleco]);
    INI_Int("Interior", user[playerid][jInterior]);
    INI_Int("VirtualWorld", user[playerid][jVirtualWorld]);
    INI_Int("Multicuenta", user[playerid][jMulticuenta]);
    INI_String("IP", user[playerid][jIP], 32);
    INI_Int("Baneado", user[playerid][jBaneado]);
    INI_Int("Admin", user[playerid][jAdmin]);
    INI_Int("Encargado_1", user[playerid][jEncargado][0]);
    INI_Int("Encargado_2", user[playerid][jEncargado][1]);
    INI_Int("Encargado_3", user[playerid][jEncargado][2]);
    INI_Int("Encargado_4", user[playerid][jEncargado][3]);
    INI_Int("Encargado_5", user[playerid][jEncargado][4]);
    INI_Int("Casa", user[playerid][jCasaKey]);
    INI_Int("Casa2", user[playerid][jCasaKey2]);
    INI_Int("CasaRenta", user[playerid][jCasaRenta]);
    INI_Int("CasaLlaves", user[playerid][jCasaLlaves]);
    INI_Int("Negocio", user[playerid][jNegocioKey]);
    INI_Int("PdRol", user[playerid][jPuntosRol]);
    INI_Int("Negocio2", user[playerid][jNegocioKey2]);
    for(new i = 0; i < 6; i++) {
        new sql[100];
        format(sql, sizeof(sql), "LlavesVeh_%d", i);
        INI_Int(sql, user[playerid][jLlaveCoche][i]);
    }
    for(new i = 0; i < 6; i++) {
        new sql[100];
        format(sql, sizeof(sql), "LlavesVehPrestado_%d", i);
        INI_Int(sql, user[playerid][jLlaveCochePrestado][i]);
    }
    INI_Int("Premium", user[playerid][jPremium]);
    INI_Int("ColorP", user[playerid][jColorP]);
    INI_Int("Coins", user[playerid][jCoins]);
    INI_Int("D_Premium", user[playerid][jD_premium]);
    INI_Int("M_Premium", user[playerid][jM_premium]);
    for(new i = 0; i < 10; i++) {
        new sql[100];
        format(sql, sizeof(sql), "Bolsillo_%d", i);
        INI_Int(sql, user[playerid][jBolsillo][i]);
        format(sql, sizeof(sql), "Bolsillo_Cantidad_%d", i);
        INI_Int(sql, user[playerid][jBolsilloCant][i]);
    }
    INI_Int("Mano_Izquierda", user[playerid][jm_Izquierda]);
    INI_Int("Mano_Izquierda_Cantidad", user[playerid][jm_IzquierdaCant]);
    INI_Int("Mano_Derecha", user[playerid][jm_Derecha]);
    INI_Int("Mano_Derecha_Cantidad", user[playerid][jm_DerechaCant]);
    INI_Int("Espalda", user[playerid][jEspalda]);
    INI_Int("Espalda_Cantidad", user[playerid][jEspaldaCant]);
    for(new i = 0; i < 6; i++) {
        new sql[100];
        format(sql, sizeof(sql), "Cinturon_%d", i);
        INI_Int(sql, user[playerid][jCinturon][i]);
        format(sql, sizeof(sql), "Cinturon_Cantidad_%d", i);
        INI_Int(sql, user[playerid][jCinturonCant][i]);
    }
    INI_Int("Ropa", user[playerid][jRopa]);
    new Str[16];
    Loop(i, MAX_ROPA, 0) {
        Formato(Str, "Ropa_Armario_%d", i);
        INI_Int(Str, user[playerid][jRopaArmario][i]);
    }
    INI_Int("LiderFac", user[playerid][jLider]);
    INI_Int("MiembroFac", user[playerid][jMiembro]);
    INI_Int("RangoFac", user[playerid][jRango]);
    INI_Int("Division", user[playerid][jDivision]);
    INI_Int("LiderFam",user[playerid][jLiderFam]);
    INI_Int("MiembroFam",user[playerid][jMiembroFam]);
    INI_Int("RangoFam",user[playerid][jRangoFam]);
    INI_Int("Muerto", user[playerid][jMuerto]);
    INI_Int("Muerto2", user[playerid][jMuerto2]);
    INI_Int("Telefono", user[playerid][jTelefono]);
    INI_Int("Saldo", user[playerid][jSaldo]);
    INI_Int("Agenda", user[playerid][jAgenda]);
    INI_Int("Frecuencia", user[playerid][jFrecuencia]);
    INI_Int("Boombox", user[playerid][jBoombox]);
    INI_Int("Loteria", user[playerid][jLoteria]);
    INI_Int("Mascara", user[playerid][jMascara]);
    INI_Int("Estrellas", user[playerid][jEstrellas]);
    INI_Int("Arrestos", user[playerid][jArrestos]);
    INI_Int("Sanciones", user[playerid][jSanciones]);
    INI_Int("Encarcelado", user[playerid][jEncarcelado]);
    INI_String("Sancionador", user[playerid][jSancionador],50);
    INI_Int("TiempoCarcel", user[playerid][jTiempoCarcel]);
    INI_Int("Cargas", user[playerid][jCargas]);
    INI_Int("Muebles", user[playerid][jMuebles]);
    INI_Int("Troncos", user[playerid][jTroncos]);
    INI_Int("Pescados", user[playerid][jPescados]);
    INI_Int("Cosechas", user[playerid][jCosechas]);
    INI_Int("Escombros", user[playerid][jEscombros]);
    INI_Int("Materiales", user[playerid][jMateriales]);
    INI_Int("Pinturas", user[playerid][jPinturas]);
    INI_Int("Ganzuas", user[playerid][jGanzuas]);
    INI_Int("Lineas", user[playerid][jLineas]);
    INI_Int("Carnadas", user[playerid][jCarnadas]);
    INI_Int("Cheques", user[playerid][jCheques]);
    INI_Int("Trabajo_1", user[playerid][jTrabajo1]);
    INI_Int("Trabajo_2", user[playerid][jTrabajo2]);
    INI_Int("Trabajo_3", user[playerid][jTrabajo3]);
    INI_Int("Licencias_0", user[playerid][jLicencias][0]);
    INI_Int("Licencias_1", user[playerid][jLicencias][1]);
    INI_Int("Licencias_2", user[playerid][jLicencias][2]);
    INI_Int("Licencias_3", user[playerid][jLicencias][3]);
    INI_Int("Licencias_4", user[playerid][jLicencias][4]);
    INI_Int("Licencias_5", user[playerid][jLicencias][5]);
    INI_Int("Licencias_6", user[playerid][jLicencias][6]);
    INI_Int("Habilidad_1", user[playerid][jHabilidad][0]);
    INI_Int("Habilidad_2", user[playerid][jHabilidad][1]);
    INI_Int("Habilidad_3", user[playerid][jHabilidad][2]);
    INI_Int("Habilidad_4", user[playerid][jHabilidad][3]);
    INI_Int("Habilidad_5", user[playerid][jHabilidad][4]);
    INI_Int("Habilidad_6", user[playerid][jHabilidad][5]);
    INI_Int("Habilidad_7", user[playerid][jHabilidad][6]);
    INI_Int("Habilidad_8", user[playerid][jHabilidad][7]);
    INI_Int("Habilidad2_1", user[playerid][jHabilidad2][0]);
    INI_Int("Habilidad2_2", user[playerid][jHabilidad2][1]);
    INI_Int("Habilidad2_3", user[playerid][jHabilidad2][2]);
    INI_Int("Habilidad2_4", user[playerid][jHabilidad2][3]);
    INI_Int("Habilidad2_5", user[playerid][jHabilidad2][4]);
    INI_Int("Habilidad2_6", user[playerid][jHabilidad2][5]);
    INI_Int("Habilidad2_7", user[playerid][jHabilidad2][6]);
    INI_Int("Habilidad2_8", user[playerid][jHabilidad2][7]);
    INI_Int("Estado_Uso", user[playerid][jE_Uso]);
    INI_Int("Estado_Color", user[playerid][jE_Color]);
    INI_String("Estado_Texto", user[playerid][jE_Texto],60);
    INI_Int("Documento", user[playerid][jDocumento]);
    INI_Int("Edad_Falsa", user[playerid][jf_Edad]);
    INI_Int("Documento_Falso", user[playerid][jf_Dni]);
    INI_String("Documento_Nombre", user[playerid][jf_Nombre], 32);
    INI_String("Delito1", user[playerid][jDelito1], 32);
    INI_String("Delito2", user[playerid][jDelito2], 32);
    INI_String("Delito3", user[playerid][jDelito3], 32);
    INI_String("Delito4", user[playerid][jDelito4], 32);
    INI_String("Delito5", user[playerid][jDelito5], 32);
    INI_String("Delito6", user[playerid][jDelito6], 32);
    INI_String("Delito7", user[playerid][jDelito7], 32);
    INI_String("Delito8", user[playerid][jDelito8], 32);
    INI_String("Delito9", user[playerid][jDelito9], 32);
    INI_String("Delito10", user[playerid][jDelito10], 32);
    INI_Int("ODelito1", user[playerid][jDelito][0]);
    INI_Int("ODelito2", user[playerid][jDelito][1]);
    INI_Int("ODelito3", user[playerid][jDelito][2]);
    INI_Int("ODelito4", user[playerid][jDelito][3]);
    INI_Int("ODelito5", user[playerid][jDelito][4]);
    INI_Int("ODelito6", user[playerid][jDelito][5]);
    INI_Int("ODelito7", user[playerid][jDelito][6]);
    INI_Int("ODelito8", user[playerid][jDelito][7]);
    INI_Int("ODelito9", user[playerid][jDelito][8]);
    INI_Int("ODelito10", user[playerid][jDelito][9]);
    INI_Int("Contacto_1", user[playerid][jContacto][0]);
    INI_Int("Contacto_2", user[playerid][jContacto][1]);
    INI_Int("Contacto_3", user[playerid][jContacto][2]);
    INI_Int("Contacto_4", user[playerid][jContacto][3]);
    INI_Int("Contacto_5", user[playerid][jContacto][4]);
    INI_Int("Contacto_6", user[playerid][jContacto][5]);
    INI_Int("Contacto_7", user[playerid][jContacto][6]);
    INI_Int("Contacto_8", user[playerid][jContacto][7]);
    INI_Int("Contacto_9", user[playerid][jContacto][8]);
    INI_Int("Contacto_10", user[playerid][jContacto][9]);
    INI_Int("Contacto_11", user[playerid][jContacto][10]);
    INI_Int("Contacto_12", user[playerid][jContacto][11]);
    INI_Int("Contacto_13", user[playerid][jContacto][12]);
    INI_Int("Contacto_14", user[playerid][jContacto][13]);
    INI_Int("Contacto_15", user[playerid][jContacto][14]);
    INI_Int("Contacto_16", user[playerid][jContacto][15]);
    INI_Int("Contacto_17", user[playerid][jContacto][16]);
    INI_Int("Contacto_18", user[playerid][jContacto][17]);
    INI_Int("Contacto_19", user[playerid][jContacto][18]);
    INI_Int("Contacto_20", user[playerid][jContacto][19]);
    INI_String("ContactoN_1", user[playerid][jContactoN1],32);
    INI_String("ContactoN_2", user[playerid][jContactoN2],32);
    INI_String("ContactoN_3", user[playerid][jContactoN3],32);
    INI_String("ContactoN_4", user[playerid][jContactoN4],32);
    INI_String("ContactoN_5", user[playerid][jContactoN5],32);
    INI_String("ContactoN_6", user[playerid][jContactoN6],32);
    INI_String("ContactoN_7", user[playerid][jContactoN7],32);
    INI_String("ContactoN_8", user[playerid][jContactoN8],32);
    INI_String("ContactoN_9", user[playerid][jContactoN9],32);
    INI_String("ContactoN_10", user[playerid][jContactoN10],32);
    INI_String("ContactoN_11", user[playerid][jContactoN11],32);
    INI_String("ContactoN_12", user[playerid][jContactoN12],32);
    INI_String("ContactoN_13", user[playerid][jContactoN13],32);
    INI_String("ContactoN_14", user[playerid][jContactoN14],32);
    INI_String("ContactoN_15", user[playerid][jContactoN15],32);
    INI_String("ContactoN_16", user[playerid][jContactoN16],32);
    INI_String("ContactoN_17", user[playerid][jContactoN17],32);
    INI_String("ContactoN_18", user[playerid][jContactoN18],32);
    INI_String("ContactoN_19", user[playerid][jContactoN19],32);
    INI_String("ContactoN_20", user[playerid][jContactoN20],32);
    INI_Int("Tiempo_1", user[playerid][jTiempos][0]);
    INI_Int("Tiempo_2", user[playerid][jTiempos][1]);
    INI_Int("Tiempo_3", user[playerid][jTiempos][2]);
    INI_Int("Tiempo_4", user[playerid][jTiempos][3]);
    INI_Int("Tiempo_5", user[playerid][jTiempos][4]);
    INI_Int("Tiempo_6", user[playerid][jTiempos][5]);
    INI_Int("Tiempo_7", user[playerid][jTiempos][6]);
    INI_Int("Tiempo_8", user[playerid][jTiempos][7]);
    INI_Int("Tiempo_9", user[playerid][jTiempos][8]);
    INI_Int("Tiempo_10", user[playerid][jTiempos][9]);
    INI_Int("Tiempo_11", user[playerid][jTiempos][10]);
    INI_Int("Tiempo_12", user[playerid][jTiempos][11]);
    INI_Int("Tiempo_13", user[playerid][jTiempos][12]);
    INI_Int("Tiempo_14", user[playerid][jTiempos][13]);
    INI_Int("Tiempo_15", user[playerid][jTiempos][14]);
    INI_Int("Tiempo_16", user[playerid][jTiempos][15]);
    INI_Int("Tiempo_17", user[playerid][jTiempos][16]);
    INI_Int("Tiempo_18", user[playerid][jTiempos][17]);
    INI_Int("Tiempo_19", user[playerid][jTiempos][18]);
    INI_Int("Tiempo_20", user[playerid][jTiempos][19]);
    for(new v = 0; v < MAX_ACCESORIOS; v++) {
        new string[128];
        format(string, sizeof(string), "%d_Modelo", v);
        INI_Int(string, InfoAccesorio[playerid][v][aModelo]);
        format(string, 128, "%d_Parte", v);
        INI_Int(string, InfoAccesorio[playerid][v][aParte]);
        format(string, 128, "%d_Posicion_X", v);
        INI_Float(string, InfoAccesorio[playerid][v][aPosicionX]);
        format(string, 128, "%d_Posicion_Y", v);
        INI_Float(string, InfoAccesorio[playerid][v][aPosicionY]);
        format(string, 128, "%d_Posicion_Z", v);
        INI_Float(string, InfoAccesorio[playerid][v][aPosicionZ]);
        format(string, 128, "%d_Rotacion_X", v);
        INI_Float(string, InfoAccesorio[playerid][v][aRotacionX]);
        format(string, 128, "%d_Rotacion_Y", v);
        INI_Float(string, InfoAccesorio[playerid][v][aRotacionY]);
        format(string, 128, "%d_Rotacion_Z", v);
        INI_Float(string, InfoAccesorio[playerid][v][aRotacionZ]);
        format(string, 128, "%d_Escala_X", v);
        INI_Float(string, InfoAccesorio[playerid][v][aEscalaX]);
        format(string, 128, "%d_Escala_Y", v);
        INI_Float(string, InfoAccesorio[playerid][v][aEscalaY]);
        format(string, 128, "%d_Escala_Z", v);
        INI_Float(string, InfoAccesorio[playerid][v][aEscalaZ]);
        format(string, 128, "%d_Colocado", v);
        INI_Int(string, InfoAccesorio[playerid][v][aColocado]);
    }
    INI_Int("Horas", user[playerid][jHoras]);
    INI_Int("Minutos", user[playerid][jMinutos]);
    INI_Int("Segundos", user[playerid][jSegundos]);
    INI_Int("Dias", user[playerid][jDias]);
    INI_Int("Meses", user[playerid][jMeses]);
    INI_Int("Años", user[playerid][jAnos]);
    INI_String("Audio1", user[playerid][jAudio1], 128);
    INI_String("Audio2", user[playerid][jAudio2], 128);
    INI_String("Audio3", user[playerid][jAudio3], 128);
    INI_Int("NegocioLlaves", user[playerid][jNegocioLlaves]);
    INI_Int("Payday", user[playerid][jPayday]);
    INI_Int("T_Fabrica", user[playerid][jT_fabrica]);
    INI_Int("I_Fabrica", user[playerid][jI_fabrica]);
    INI_Int("T_Fabrica2", user[playerid][jT_fabrica2]);
    INI_Int("I_Fabrica2", user[playerid][jI_fabrica2]);
    INI_Int("Serial", user[playerid][jSerial]);

    INI_Int("Ban_t", user[playerid][jBtiempo]);
    INI_String("Ban_c", user[playerid][jBculpable], 32);
    INI_String("Ban_r", user[playerid][jBrazon], 128);
    INI_String("Ban_m", user[playerid][jBmomento], 150);

    INI_Int("Piedras", user[playerid][jPiedras]);
    INI_Int("Tickets", user[playerid][jTickets]);

	INI_Int("Adiccion0", user[playerid][jAdiccion][0]);
    INI_Int("Adiccion1", user[playerid][jAdiccion][1]);
    INI_Int("Adiccion2", user[playerid][jAdiccion][2]);
    INI_Int("Adiccion3", user[playerid][jAdiccion][3]);
    INI_Int("Adiccion4", user[playerid][jAdiccion][4]);

	INI_Int("Empeno0", user[playerid][jEmpeno][0]);
    INI_Int("Empeno1", user[playerid][jEmpeno][1]);
    INI_Int("Empeno2", user[playerid][jEmpeno][2]);
    INI_Int("Empeno3", user[playerid][jEmpeno][3]);
    INI_Int("Empeno4", user[playerid][jEmpeno][4]);
 	INI_Int("Empeno20", user[playerid][jEmpeno2][0]);
    INI_Int("Empeno21", user[playerid][jEmpeno2][1]);
    INI_Int("Empeno22", user[playerid][jEmpeno2][2]);
    INI_Int("Empeno23", user[playerid][jEmpeno2][3]);
    INI_Int("Empeno24", user[playerid][jEmpeno2][4]);

	INI_Int("Empresa", user[playerid][jEmpresaKey]);
	INI_Int("EmpresaLlaves", user[playerid][jEmpresaLlaves]);
	INI_Int("Contrato", user[playerid][jContrato]);
	INI_Int("Horas_E", user[playerid][jHorasE]);
	INI_Int("CambioN", user[playerid][jCambioN]);
	return 0;
}

INI_Exist(nickname[]) {
    new tmp[128];
    format(tmp, sizeof(tmp), DATOS_CUENTAS, nickname);
    return fexist(tmp);
}

vehicle_lock_doors(vehicle) {
    new vParamArr[7];
    GetVehicleParamsEx(vehicle, vParamArr[0], vParamArr[1], vParamArr[2], vParamArr[3], vParamArr[4], vParamArr[5], vParamArr[6]);
    return SetVehicleParamsEx(vehicle, vParamArr[0], vParamArr[1], vParamArr[2], VEHICLE_PARAMS_ON, vParamArr[4], vParamArr[5], vParamArr[6]);
}

vehicle_unlock_doors(vehicle) {
    new vParamArr[7];
    GetVehicleParamsEx(vehicle, vParamArr[0], vParamArr[1], vParamArr[2], vParamArr[3], vParamArr[4], vParamArr[5], vParamArr[6]);
    return SetVehicleParamsEx(vehicle, vParamArr[0], vParamArr[1], vParamArr[2], VEHICLE_PARAMS_OFF, vParamArr[4], vParamArr[5], vParamArr[6]);
}

stock U_Usuario(playerid) {
    new string[128], nombrepj[50 + MAX_PLAYER_NAME];
    GetPlayerName(playerid, nombrepj, sizeof(nombrepj));
    format(string, sizeof(string), DATOS_CUENTAS, nombrepj);
    return string;
}

stock alm(string[], string2[]) {
    strmid(string, string2, 0, strlen(string2), strlen(string2) + 1);
    return 1;
}

RespawnNearbyVehicles(playerid, Float: radi) {
    new Float: x, Float: y, Float: z;
    GetPlayerPos(playerid, x, y, z);
    for(new i = 1; i < MAX_VEHICLES; i++) {
        if(GetVehicleModel(i)) {
            new Float: posx, Float: posy, Float: posz;
            new Float: tempposx, Float: tempposy, Float: tempposz;
            GetVehiclePos(i, posx, posy, posz);
            tempposx = (posx - x);
            tempposy = (posy - y);
            tempposz = (posz - z);
            if(((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) {
                SetVehicleToRespawn(i);
            }
        }
    }
}

stock Float:GetPosInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance) { //by: whoever
	new Float:a;
	GetPlayerPos(playerid, x, y, a);
	switch(IsPlayerInAnyVehicle(playerid)) {
	    case 0: GetPlayerFacingAngle(playerid, a);
	    case 1: GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
	}
	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
	return a;
}

forward _FGomas(playerid); public _FGomas(playerid){
	ClearAnimations(playerid);
 	TogglePlayerControllable(playerid, 1);
    _Gomas[playerid] = 0;
    return 1;
}

forward _FGomas2(playerid); public _FGomas2(playerid){
	ClearAnimations(playerid);
 	TogglePlayerControllable(playerid, 1);
    Taseado[playerid] = 0;
    return 1;
}

public OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid, bodypart)
{
	switch(weaponid)
	{
		case 49,50,53,54:
		{
			_arma[playerid] = weaponid;
			asesino[playerid] = issuerid;
			_Sangre(playerid, -amount);
		}
		case 51:
		{
		    if (issuerid != INVALID_PLAYER_ID)
		    {
		        if (user[issuerid][jm_Derecha] != 16 && user[issuerid][jm_Derecha] != 32 && user[issuerid][jm_Derecha] != 33) // anticheat de explosivos
		        {
				    new text_[144];
					format(text_, sizeof(text_), "{FF6347}Administración: %s fue expulsado por CMBlock Admin [Bot]. Razón: [Arma no sincronizada (posible whitebug o cheat)]", NombreRJugador(issuerid));
					MensajeAdmin(text_);
					_Expulsar(issuerid, 0, "Arma no sincronizada");
					return 0;
		        }
		        else
		        {
					_arma[playerid] = weaponid;
					asesino[playerid] = issuerid;
					_Sangre(playerid, -amount);
		        }
		    }
		}
	}
	return 0;
}

public OnPlayerGiveDamage(playerid, damagedid, Float: amount, weaponid, bodypart)
{
	if (damagedid != INVALID_PLAYER_ID)
	{
		if(!IsPlayerConnected(damagedid)) { return 1; }
		if(GetPlayerTeam(playerid) == GetPlayerTeam(damagedid))
		{
			if (InfoObjeto[user[playerid][jm_Derecha]][IDArma] != weaponid && weaponid != 0) // si es un arma invisible, evitar el daño
			{
				return 1;
			}

			if(EnServicioADM[damagedid] == 1) return 1;
			if(user[damagedid][jMuerto2] == 2) return 1;
			if(GetPlayerState(damagedid) == PLAYER_STATE_WASTED) return 1;
			//

			new Float: vida, Float: chaleco, Float: punos, fuerza = user[playerid][jFuerza];
			_arma[damagedid] = weaponid;
			asesino[damagedid] = playerid;
            if (fuerza <= 1){ punos = 0.2;}
            else if(fuerza <= 100){ punos = 0.4;}
			else if(fuerza <= 150){ punos = 0.8;}
            else if(fuerza <= 200){ punos = 1.2;}
			else if(fuerza <= 250){ punos = 1.6;}
            else if(fuerza <= 300){ punos = 2.0;}
			else if(fuerza <= 350){ punos = 2.4;}
            else if(fuerza <= 400){ punos = 2.8;}
			else if(fuerza <= 450){ punos = 3.2;}
            else if(fuerza <= 500){ punos = 3.6;}
			else if(fuerza <= 550){ punos = 4.0;}
            else if(fuerza <= 600){ punos = 4.4;}
			else if(fuerza <= 650){ punos = 4.8;}
            else if(fuerza <= 700){ punos = 5.2;}
			else if(fuerza <= 750){ punos = 5.6;}
            else if(fuerza <= 800){ punos = 6.0;}
			else if(fuerza <= 850){ punos = 6.4;}
            else if(fuerza <= 900){ punos = 6.8;}
			else if(fuerza <= 950){ punos = 7.0;}
			else if(fuerza <= 1000){ punos = 7.5;}
			if(user[playerid][j_Horas] < 5) CongelarEx(playerid, 10), _Mensaje(playerid, 4, "ADC3E7", "Fuiste congelado, debes jugar al menos 5 horas.");
			switch(weaponid)
			{

				case 0: _Sangre(damagedid, -punos);
				case 1: _Sangre(damagedid, -5.0); //- Puño americano
				case 2: _Sangre(damagedid, -9.0); //- Palo de golf
				case 3: _Sangre(damagedid, -12.0); //- Porra
				case 4: _Sangre(damagedid, -13.0); //- Cuchillo
				case 5: _Sangre(damagedid, -(punos+2.0)); //- Bate
				case 6: _Sangre(damagedid, -12.0); //- Pala
				case 7: _Sangre(damagedid, -10.0); //- Palo de billar
				case 8: _Sangre(damagedid, -35.0); //- Katana
				case 9: _Sangre(damagedid, -37.0); //- Motosierra
				case 10..13: _Sangre(damagedid, -8.0); //- Dildos
				case 14: _Sangre(damagedid, -5.0); //- Flor
				case 15: _Sangre(damagedid, -10.0); //- Palanca
				case 22: { //- 45. Colt
						switch(bodypart) {
							case 9: vida = 70;
			                case 3,4: vida = 12.0;
							case 5,6,7,8: vida = 8.0;
						}
					}
				case 23:
					{
						if(user[playerid][jm_Derecha] == 40 && !IsPlayerInAnyVehicle(damagedid))
						{ //- Táser
							if(IsPlayerInAnyVehicle(damagedid)) { return 1; }
							if(!CercaDelWeon(10.0, playerid, damagedid)) return _Mensaje(playerid, 4, "b00000", "Los cables no lo han alcanzado, está muy lejos.");
							new string[128];
							TogglePlayerControllable(damagedid, 0);
							Taseado[damagedid] = 1;
							PlayerPlaySound(damagedid, 6003, 0.0, 0.0, 0.0);
							PlayerPlaySound(playerid, 6003, 0.0, 0.0, 0.0);
							_Mensaje(damagedid, 5, "0", "Te han disparado con cables de táser, 10 segundos para pasar efecto.");
							format(string, sizeof(string), "Has paralizado con cables de táser a %s.", NombreRJugador(damagedid));
							_Mensaje(playerid, 5, "0", string);
							SetTimerEx("_FGomas2", 10000, false, "i", damagedid);
						}
						else
						{
						    if(user[playerid][jm_Derecha] == 20)
						    {
						        switch(bodypart)
						        {
								case 9: vida = 60;
			                	case 3,4: vida = 12.0;
								case 5,6,7,8: vida = 7.0;
								}
						    }
						}
					}
				case 24: { //- Desert eagle.
						switch(bodypart) {
							case 9: vida = 90;
			                case 3,4: vida = 35.0;
							case 5,6,7,8: vida = 20.0;
						}
					}
				case 25: { //- Escopeta normal.
						if(Es_Faccion(playerid, 1) && BalasDeGoma[playerid] == 1){
							if(IsPlayerInAnyVehicle(damagedid)) { return 1; }
							if(_Gomas[damagedid] == 1) return 1;
							new string[128];
							TogglePlayerControllable(damagedid, 0);
							_Gomas[damagedid] = 1;
							_Mensaje(damagedid, 5, "0", "Te han disparado con balas de goma, 10 segundos para pasar efecto.");
							format(string, sizeof(string), "Has paralizado con balas de goma a %s.", NombreRJugador(damagedid));
							_Mensaje(playerid, 5, "0", string);
							TogglePlayerControllable(damagedid, 0);
							SetTimerEx("_FGomas", 10000, false, "i", damagedid);
						} else {
							switch(bodypart) {
								case 9: vida = 90;
				                case 3,4: vida = 40.0;
								case 5,6,7,8: vida = 25.0;
							}
						}
					}
				case 26: { //- Escopeta recortada   ----SISTEMA DE DAÑOS----
						switch(bodypart) {
							case 9: vida = 90;
							case 3,4: vida = 50.0;
							case 5,6,7,8: vida = 30.0;
						}
					}
				case 27: { //- Escopeta de combate.
						switch(bodypart) {
							case 9: vida = 90;
							case 3,4: vida = 45.0;
							case 5,6,7,8: vida = 35.0;
						}
					}
				case 28: { //- UZI
						switch(bodypart) {
							case 9: vida = 80;
							case 3,4: vida = 11.0;
							case 5,6,7,8: vida = 7.0;
						}
					}
				case 29: { //- MP5K
						switch(bodypart) {
							case 9: vida = 90;
							case 3,4: vida = 18.0;
							case 5,6,7,8: vida = 10.0;
						}
					}
				case 30: { //- AK47.
						switch(bodypart) {
							case 9: vida = 90;
							case 3,4: vida = 32.0;
							case 5,6,7,8: vida = 20.0;
						}
					}
				case 31: { //- M4.
						switch(bodypart) {
							case 9: vida = 90;
							case 3,4: vida = 34.0;
							case 5,6,7,8: vida = 22.0;
						}
					}
				case 32: { //- Tec-9
						switch(bodypart) {
							case 9: vida = 80;
							case 3,4: vida = 10.0;
							case 5,6,7,8: vida = 7.0;
						}
					}
				case 33: { //- Rifle de caza.
						switch(bodypart) {
							case 9: vida = 90;
							case 3,4: vida = 75.0;
							case 5,6,7,8: vida = 60.0;
						}
					}
				case 34: { // Sniper.
						switch(bodypart) {
							case 9: vida = 90;
							case 3,4: vida = 85.0;
							case 5,6,7,8: vida = 70.0;
						}
					}
				case 41: vida = 0.5; // Spray.
			}

			// SI ESTÁ EN UN VEHÍCULO SWAT BLINDADO.

			if(IsPlayerInAnyVehicle(damagedid))
			{
				new a = GetVehicleModel(GetPlayerVehicleID(damagedid));
			    if(a == 528 || a == 427 || a == 490)
			    {
					Mensaje_(damagedid, C_ROJO, "El camión blindado redujo tu impacto de bala a la mitad");
					vida = vida/3;
			    }
			}

			new weaponname[24];
			GetWeaponName(weaponid, weaponname, sizeof(weaponname));
			GetPlayerArmour(damagedid, chaleco);
			if (weaponid > 0) {
				switch(bodypart) {
					case 3: { //- Torso
						if(chaleco <= vida && chaleco > 0) { Chaleco_(damagedid, 0.0); }
						else if(chaleco > 0) { _Chaleco(damagedid, -vida); }
						else if(chaleco <= 0) { _Sangre(damagedid, -vida); }
						format(InfoHeridas[damagedid][Torso], 24, weaponname);
						InfoHeridas[damagedid][Torsor]++;
					}
					case 4: { //- Entre piernas
						if(chaleco <= vida && chaleco > 0) { Chaleco_(damagedid, 0.0); }
						else if(chaleco > 0) { _Chaleco(damagedid, -vida); }
						else if(chaleco <= 0) { _Sangre(damagedid, -vida); }
						format(InfoHeridas[damagedid][EntreP], 24, weaponname);
						InfoHeridas[damagedid][EntrePr]++;
					}
					case 5: { //- brazo izquierdo
						_Sangre(damagedid, -vida);
						format(InfoHeridas[damagedid][BrazoI], 24, weaponname);
						InfoHeridas[damagedid][BrazoIr]++;
					}
					case 6: { //- brazo derecho
						_Sangre(damagedid, -vida);
						format(InfoHeridas[damagedid][BrazoD], 24, weaponname);
						InfoHeridas[damagedid][BrazoDr]++;
					}
					case 7: { //- pierna izquierda
						_Sangre(damagedid, -vida);
						format(InfoHeridas[damagedid][PiernaI], 24, weaponname);
						InfoHeridas[damagedid][PiernaIr]++;
					}
					case 8: { //- pierna derecha
						_Sangre(damagedid, -vida);
						format(InfoHeridas[damagedid][PiernaD], 24, weaponname);
						InfoHeridas[damagedid][PiernaDr]++;
					}
					case 9: { //- Cabeza
						_Sangre(damagedid, -vida);
						format(InfoHeridas[damagedid][Cabeza], 24, weaponname);
						InfoHeridas[damagedid][Cabezar]++;
					}
				}
			} else InfoHeridas[damagedid][Lesionesr]++;

		}
		else
		if(user[playerid][jAdmin] < 10) // si su team no es el definido y daña a otro jugador [NOPS & SOBEIT]
		{
  			new text_[144];
			format(text_, sizeof(text_), "{FF6347}[AvisoCMBlock_BOT]: Jugador (%s) fue expulsado. Razón: [NOPS & S0BEIT]", NombreRJugador(playerid));
			MensajeAdmin(text_);
			_Expulsar(playerid, 0, "[AvisoSistema]: Error de vida y ataque desincronizado.");
		}
	} //- inválido
	return 1;
}

main() {

    print(" ");
    print("El servidor Gangsters Roleplay se ha arrancado con exito (incluída base de datos)");
	print(" ");
	print("-------------------------------------------------------------------");
	print("\t               GANGSTERS ROLEPLAY ESPAÑA ");
	print("\t        GAMEMODE RPG - Scripter; Courier (CMBlock)");
	print("-------------------------------------------------------------------");
	print(" ");
    print(" ");
   	print(" ");
    print(" ");
   	print(" ");
    print(" ");
   	print(" ");
    print(" ");
}
public OnVehiclePaintjob(playerid, vehicleid, paintjobid) {
    for (new v = 0; v < MAX_VEHICULOS; v++) {
    	if(InfoVehiculo[v][vID] == vehicleid) {
			InfoVehiculo[v][vPaintJob] = paintjobid;
    	}
    }
    return 0;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2) {
    for (new v = 0; v < MAX_VEHICULOS; v++) {
    	if(InfoVehiculo[v][vID] == vehicleid) {
			InfoVehiculo[v][vColor_1] = color1;
        	InfoVehiculo[v][vColor_2] = color2;
    	}
    }
    return 0;
}

public OnEnterExitModShop(playerid, enterexit, interiorid) {
    if(enterexit == 0) {
        for (new v = 0; v < MAX_VEHICULOS; v++) {
    		if(InfoVehiculo[v][vID] == GetPlayerVehicleID(playerid)) {
				ActualizarMods(InfoVehiculo[v][vID]);
			}
        }
        SetPlayerInterior(playerid, 0);
    }
    return 0;
}

stock Es_job(jugador, trabajo, extra = -1, extra2 = -1)//trabajos
{
	if(IsPlayerConnected(jugador))
	{
	    new job=user[jugador][jTrabajo1], job2=user[jugador][jTrabajo2], job3=user[jugador][jTrabajo3];

		if(job == trabajo || job == extra || job == extra2) return 1;
		else if(job2 == trabajo || job2 == extra || job2 == extra2) return 1;
		else if(job3 == trabajo || job3 == extra || job3 == extra2) return 1;
	}
	return 0;
}

stock Es_Faccion(jugador, faccion, extra = -1, extra2 = -1)//facciones
{
	if(IsPlayerConnected(jugador))
	{
		new lider = user[jugador][jLider], miembro = user[jugador][jMiembro];
		if(miembro == faccion || miembro == extra || miembro == extra2) return 1;
		else if(lider == faccion || lider == extra || lider == extra2) return 1;
	}
	return 0;
}

stock Es_Lider(jugador, faccion, extra = -1, extra2 = -1, extra3 = -1)//lideres
{
	if(IsPlayerConnected(jugador))
	{
		new lider = user[jugador][jLider];
		if(lider == faccion || lider == extra || lider == extra2 || lider == extra3) return 1;
	}
	return 0;
}

stock Es_Org(playerid)//organizaciones
{
	if(IsPlayerConnected(playerid))
	{
		new familia = user[playerid][jMiembroFam];
		if(familia == 1 || familia == 2 || familia == 3 || familia == 4 || familia == 5 || familia == 6 ||
		familia == 7 || familia == 8 || familia == 9 || familia == 10 || familia == 11 || familia == 12 || familia == 13) return 1;
	}
	return 0;
}

//- Cerca/Dentro de:
en_Concesionaria(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid,5.0,1981.1210, -2100.5159, 13.4231)) { return 1; } //motos
	else if(IsPlayerInRangeOfPoint(playerid,5.0,2131.8674, -1151.0360, 23.8920)) { return 1; } //Coutt And Schutz
	else if(IsPlayerInRangeOfPoint(playerid,5.0,519.0496, -1293.6548, 17.2224)) { return 1; } //grotti
	else if(IsPlayerInRangeOfPoint(playerid,5.0,2793.1045, -1087.5013, 30.6801)) { return 1; } //camionetas
	else if(IsPlayerInRangeOfPoint(playerid,5.0,2006.0568, -2271.4482, 13.5344)) { return 1; } //aviones
	else if(IsPlayerInRangeOfPoint(playerid,5.0,2515.4216, -1957.9753, 16.7286)) { return 1; } //Nuevased
	else if(IsPlayerInRangeOfPoint(playerid,5.0,2589.1169, -2219.4470, 13.5184)) { return 1; } //coches usados
	return 0;
}

/* en_Dejarcarga(playerid) // --- PARA SISTEMA DE CAMIONERO -- 2.X -- Block --
{
    if(IsPlayerInRangeOfPoint(playerid,5.0, 1221.680541, 303.388549, 19.554687)) { return 1; }
    if(IsPlayerInRangeOfPoint(playerid,5.0, 1381.692016, 11.717464, 34.183998)) { return 1; }
    if(IsPlayerInRangeOfPoint(playerid,5.0, 2278.222412, 63.559417, 26.484375)) { return 1; }
    return 0;
} */

EstaAfueraTaller(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid,10.0,720.4227,-465.2718,16.3359)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid,10.0,2073.6716,-1831.2239,13.5469)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid,10.0,1025.0483,-1031.6508,31.9656)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid,10.0,488.8826,-1732.4053,11.2144)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid,10.0,-1904.5531,276.1320,41.0469)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid,10.0,1840.4047,-1856.3762,13.3828)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid,10.0,1840.4047,-1856.3762,13.3828)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid,10.0,-2713.8391,216.8167,4.2731)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid,10.0,2644.9124,-2037.6128,13.5540)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid,10.0,2386.7439,1040.9083,10.8203)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid,10.0,1041.3345,-1028.0857,32.1016)) { return 1; }
	return 0;
}

EstaEnAutoSAN(carid)
{
	if(GetVehicleModel(carid) == 582 || GetVehicleModel(carid) == 488) return 1;
	return 0;
}

EstaEnMuelle(playerid) {
    if(_enPos(playerid, 1, 403.8266, -2088.7598, 7.8359)) return 1;
    else if(_enPos(playerid, 1, 398.7553, -2088.7490, 7.8359)) return 1;
    else if(_enPos(playerid, 1, 396.2197, -2088.6692, 7.8359)) return 1;
    else if(_enPos(playerid, 1, 391.1094, -2088.7976, 7.8359)) return 1;
    else if(_enPos(playerid, 1, 383.4157, -2088.7849, 7.8359)) return 1;
    else if(_enPos(playerid, 1, 374.9598, -2088.7979, 7.8359)) return 1;
    else if(_enPos(playerid, 1, 369.8107, -2088.7927, 7.8359)) return 1;
    else if(_enPos(playerid, 1, 367.3637, -2088.7925, 7.8359)) return 1;
    else if(_enPos(playerid, 1, 362.2244, -2088.7981, 7.8359)) return 1;
    else if(_enPos(playerid, 1, 354.5382, -2088.7979, 7.8359)) return 1;
    return 0;
}

EstaEnBanco(playerid) {
    if(_enPos(playerid, 2.0, -1539.4642,321.0930,53.5363)) return 1;
    return 0;
}

EstaEnPuntosDeMesas(playerid) {
	if(_enPos(playerid, 2.0, 2138.55542, -2188.58984, 13.01160)) return 1;
	else if(_enPos(playerid, 2.0, 2132.42310, -2182.28101, 13.01160)) return 1;
	else if(_enPos(playerid, 2.0, 2149.96655, -2178.01514, 13.01160)) return 1;
	else if(_enPos(playerid, 2.0, 2143.83301, -2171.79077, 13.01160)) return 1;
	else if(_enPos(playerid, 2.0, 2140.98608, -2179.90723, 13.01160)) return 1;
    return 0;
}

EstaEnPuntosDeArboles(playerid) {
    if(_enPos(playerid, 3.0, -441.13446, -1767.01123, 6.06064)) return 1;
    else if(_enPos(playerid, 3.0, -432.12009, -1785.66162, 3.72014)) return 1;
    else if(_enPos(playerid, 3.0, -419.71930, -1793.72607, 3.42763)) return 1;
    else if(_enPos(playerid, 3.0, -409.08514, -1794.17078, 3.07774)) return 1;
    else if(_enPos(playerid, 3.0, -404.41458, -1782.54700, 3.10609)) return 1;
    else if(_enPos(playerid, 3.0, -398.54572, -1769.50366, 4.84904)) return 1;
    else if(_enPos(playerid, 3.0, -393.60931, -1792.14294, 3.10774)) return 1;
    return 0;
}

EstaEnGob(playerid) {
    if (_enPos(playerid, 2.0, -2050.8799,-190.1223,35.4445)) return 1;
    else if (_enPos(playerid, 2.0, 218.3815,187.4334,1003.0313)) return 1;
    else if (_enPos(playerid, 2.0, 374.3038,186.4248,1014.1875)) return 1;
    return 0;
}

_Fabrica(playerid) {
    if (_enPos(playerid, 2.0, 943.96948, 2127.54150, 1011.02472)) return 1;
    else if (_enPos(playerid, 2.0, 940.99377, 2127.47949, 1011.02472)) return 1;
    else if (_enPos(playerid, 2.0, 942.56256, 2137.43994, 1011.02472)) return 1;
    else if (_enPos(playerid, 2.0, 942.46503, 2117.84863, 1011.02472)) return 1;
    else if (_enPos(playerid, 2.0, 942.60162, 2153.59595, 1011.02472)) return 1;
    else if (_enPos(playerid, 2.0, 941.16083, 2163.73975, 1011.02472)) return 1;
    else if (_enPos(playerid, 2.0, 943.88867, 2163.79761, 1011.02472)) return 1;
    else if (_enPos(playerid, 2.0, 2820.2854,-1173.0179,1025.5703)) return 1;
    return 0;
}

EstaEnPuntosDeArresto(playerid) {
    if(IsPlayerConnected(playerid)) {
        if(_enPos(playerid, 5.0, 2314.0645,2447.0774,3.2734)) return 1; // Garage LA
        else if(_enPos(playerid, 5.0, 200.7210, 168.3594, 1002.9638)) return 1; // Interior LA
        else if(_enPos(playerid, 5.0, 260.3547, 1990.4944, 17.6406)) return 1; // Prisión Federal
        else if(_enPos(playerid, 5.0, 234.1898,72.5130,1005.0391)) return 1; // Sheriff
        else if(_enPos(playerid, 5.0, -448.4868, 675.1337, 3852.9907)) return 1; // Sheriff
    }
    return 0;
}

EstaEnPuntosCosechas(playerid) {
    if(_enPos(playerid, 10.0, -329.8441,-1557.6462,17.1252)) return 1;
    else if(_enPos(playerid, 10.0, -234.1303,-1548.5472,6.3998)) return 1;
    else if(_enPos(playerid, 10.0, -213.3647,-1471.5482,9.1731)) return 1;
    else if(_enPos(playerid, 10.0, -330.6235,-1470.2892,15.6810)) return 1;
    else if(_enPos(playerid, 10.0, -333.9123,-1512.1113,16.0053)) return 1;
    else if(_enPos(playerid, 10.0, -264.0076,-1469.2531,5.0508)) return 1;
    else if(_enPos(playerid, 10.0, -160.0505,-1415.3773,3.9964)) return 1;
    else if(_enPos(playerid, 10.0, -167.2669,-1304.8627,5.1608)) return 1;
    else if(_enPos(playerid, 10.0, -318.7726,-1315.9666,10.3838)) return 1;
    else if(_enPos(playerid, 10.0, -286.0480,-1369.3938,10.4001)) return 1;
    else if(_enPos(playerid, 10.0, -326.8901,-1429.5435,16.1370)) return 1;
    else if(_enPos(playerid, 10.0, -333.9123,-1512.1113,16.0053)) return 1;
    else if(_enPos(playerid, 10.0, -282.6288,-1466.4514,6.3875)) return 1;
    else if(_enPos(playerid, 10.0, -218.7042,-1516.6606,8.2762)) return 1;
    else if(_enPos(playerid, 10.0, -281.3156,-1555.7562,6.9667)) return 1;
    else if(_enPos(playerid, 10.0, -167.2669,-1304.8627,5.1608)) return 1;
    else if(_enPos(playerid, 10.0, -318.7726,-1315.9666,10.3838)) return 1;
    else if(_enPos(playerid, 10.0, -286.0480,-1369.3938,10.4001)) return 1;
    else if(_enPos(playerid, 10.0, -326.8901,-1429.5435,16.1370)) return 1;
    else if(_enPos(playerid, 10.0, -282.6288,-1466.4514,6.3875)) return 1;
    else if(_enPos(playerid, 10.0, -218.7042,-1516.6606,8.2762)) return 1;
    else if(_enPos(playerid, 10.0, -281.3156,-1555.7562,6.9667)) return 1;
    else if(_enPos(playerid, 10.0, -288.0921,-1526.8507,8.6386)) return 1;
    else if(_enPos(playerid, 10.0, -286.0480,-1369.3938,10.4001)) return 1;
    else if(_enPos(playerid, 10.0, -347.0992,-1504.7065,22.2383)) return 1;
    else if(_enPos(playerid, 10.0, -369.2457,-1464.7102,26.7027)) return 1;
    return 0;
}

_Pdrogas(playerid) {
	if(_enPos(playerid, 10.0, 633.3113, -1776.1129, 14.1459)) return 1; //- Marihuana
	else if(_enPos(playerid, 10.0, 990.2177, -1349.8931, 13.3322)) return 1; //- Crack
	else if(_enPos(playerid, 10.0, 2199.9021, -1259.1571, 24.0084)) return 1; //- Heroína
	else if(_enPos(playerid, 10.0, 2537.6741, -1469.8153, 23.9680)) return 1; //- lsd
	else if(_enPos(playerid, 10.0, 2280.2500, -1937.8478, 13.5463)) return 1; //- cocaina
	return 0;
}

_Pentregas(playerid) {
	if(_enPos(playerid, 10.0, 1843.9279, -1863.0637, 13.4591)) return 1;
	else if(_enPos(playerid, 10.0, 1798.3921, -1441.8682, 13.3058)) return 1;
	else if(_enPos(playerid, 10.0, 2092.6326, -1343.3174, 23.9050)) return 1;
	else if(_enPos(playerid, 10.0, 2139.8669, -1207.1927, 23.9445)) return 1;
	else if(_enPos(playerid, 10.0, 1449.1597, -1149.7483, 23.8987)) return 1;
	else if(_enPos(playerid, 10.0, 486.9438, -1468.7220, 18.5618)) return 1;
	else if(_enPos(playerid, 10.0, 2358.1895, -1472.5239, 23.7326)) return 1;
	else if(_enPos(playerid, 10.0, 1832.9298, -1403.4407, 13.3343)) return 1;
	else if(_enPos(playerid, 10.0, 1574.1155, -1286.5681, 17.3694)) return 1;
	else if(_enPos(playerid, 10.0, 788.4850, -1608.5558, 13.3503)) return 1;
	else if(_enPos(playerid, 10.0, 951.4890, -1366.0647, 13.2354)) return 1;
	else if(_enPos(playerid, 10.0, 2400.4500, -1496.9219, 23.7326)) return 1;
	else if(_enPos(playerid, 10.0, -2033.2224,-95.0304,35.5155)) return 1; //SF
	else if(_enPos(playerid, 10.0, 2103.3979,2037.3856,11.1668)) return 1; //LV
    return 0;
}

EstaEnTiendaRopa(playerid) {
    if(_enPos(playerid, 30.0, 207.5627, -103.7291, 1005.2578)) return 1;
    else if(_enPos(playerid, 30.0, 203.9068, -41.0728, 1001.8047)) return 1;
    else if(_enPos(playerid, 25.0, 203.9068, -41.0728, 1001.8047)) return 1;
    else if(_enPos(playerid, 30.0, 214.4470, -7.6471, 1001.2109)) return 1;
    else if(_enPos(playerid, 50.0, 161.3765, -83.8416, 1001.8047)) return 1;
    else if(_enPos(playerid, 30.0, -2664.3318, 1538.4259, 907.1797)) return 1;
    else if(_enPos(playerid, 30.0, 1395.0045, -1896.1139, 13.3733)) return 1;
    else if(_enPos(playerid, 30.0, 202.6777, -163.0623, 1000.5306)) return 1;
    return 0;
}

//- Camionero
funcion _CamionCancel(playerid) {
    new vehicleid = GetPlayerVehicleID(playerid);
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) { if(Camionero_Vehicle(vehicleid)) SetVehicleToRespawn(vehicleid); }
    DeletePVar(playerid, "TipoCarga");
    _Contenido[_CamVeh[playerid]] = 0;
    _CamVeh[playerid] = INVALID_VEHICLE_ID;
    gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
    DisablePlayerCheckpoint(playerid);
    return 1;
}

//- Variables de vehículos
EstaAutoEnganche(carid) {
    if(GetVehicleModel(carid) == 485 || GetVehicleModel(carid) == 525 || GetVehicleModel(carid) == 583 || GetVehicleModel(carid) == 574) { return 1; }
    return 0;
}

Camionero_Vehicle(carid) {
    for(new v = 0; v < sizeof(CamioneroVehicle); v++) { if(carid == CamioneroVehicle[v]) return 1; }
    return 0;
}

Pescador_Vehicle(carid) {
    for(new v = 0; v < sizeof(Pes_Veh); v++) { if(carid == Pes_Veh[v]) return 1; }
    return 0;
}

Granjero_Vehicle(carid) {
    if(GetVehicleModel(carid) == 531) { return 1; }
    return 0;
}

LSPD_Veh(carid) {
    for(new v = 0; v < sizeof(LSPDVehicle); v++) { if(carid == LSPDVehicle[v]) return 1; }
    return 0;
}
SASD_Veh(carid) {
    for(new v = 0; v < sizeof(SASDVehicle); v++) { if(carid == SASDVehicle[v]) return 1; }
    return 0;
}

LSPD_Veh2(carid) {
    for(new v = 0; v < 90; v++) { if(carid == LSPDVehicle[v]) return 1; }
    return 0;
}
SASD_Veh2(carid) {
    for(new v = 0; v < 33; v++) { if(carid == SASDVehicle[v]) return 1; }
    return 0;
}

SAN_Vehicle(carid) {
    for(new v = 0; v < sizeof(SANVehicle); v++) { if(carid == SANVehicle[v]) return 1; }
    return 0;
}

GOB_Vehicle(carid) {
    for(new v = 0; v < sizeof(GOBVehicle); v++) { if(carid == GOBVehicle[v]) return 1; }
    return 0;
}

LSED_Vehicle(carid) {
    for(new i = 0; i < sizeof(LSEDVehicle); i++) { if(LSEDVehicle[i] == carid) return 1; }
    return 0;
}

EstaEnBicis(carid) {
    if(GetVehicleModel(carid) == 509 || GetVehicleModel(carid) == 481 || GetVehicleModel(carid) == 510) { return 1; }
    return 0;
}

EnMotos_Bicis(carid) {
    new Bike[] = { 509, 481, 510, 462, 448, 581, 522, 461, 521, 523, 463, 586, 468, 471 };
    for(new i = 0; i < sizeof(Bike); i++) { if(GetVehicleModel(carid) == Bike[i]) return 1; }
    return 0;
}

EstaEnAvion(carid) {
    new Avion[] = {592, 577, 511, 512, 593, 520, 553, 476, 519, 460, 513, 548, 425, 417, 487, 488, 497, 563, 447, 469};
    for(new i = 0; i < sizeof(Avion); i++) { if(GetVehicleModel(carid) == Avion[i]) return 1; }
    return 0;
}
BOTE(carid)
{
	if(GetVehicleModel(carid) == 453)
	{
		return 1;
	}
	return 0;
}
EstaEnBote(carid) {
    new Boats[] = {472, 473, 493, 484, 430, 454, 453, 452, 446};
    for(new i = 0; i < sizeof(Boats); i++) { if(GetVehicleModel(carid) == Boats[i]) return 1; }
    return 0;
}

Veh_MaleteroGrande(carid) {
    new veh[] = {400, 413, 414, 418, 427, 428, 440, 456, 459, 482, 483, 489, 490, 495, 498, 499, 479, 482, 609};
    for(new i = 0; i < sizeof(veh); i++) { if(GetVehicleModel(carid) == veh[i]) return 1; }
    return 0;
}

stock _LimpiarM(vid){
	InfoVehiculo[vid][vGuantera][0] = 0;
	InfoVehiculo[vid][vGuantera][1] = 0;
	InfoVehiculo[vid][vGuantera][2] = 0;
	InfoVehiculo[vid][vGuanteraCantidad][0] = 0;
	InfoVehiculo[vid][vGuanteraCantidad][1] = 0;
	InfoVehiculo[vid][vGuanteraCantidad][2] = 0;
	InfoVehiculo[vid][vMaletero][0] = 0;
	InfoVehiculo[vid][vMaletero][1] = 0;
	InfoVehiculo[vid][vMaletero][2] = 0;
	InfoVehiculo[vid][vMaletero][3] = 0;
	InfoVehiculo[vid][vMaletero][4] = 0;
	InfoVehiculo[vid][vMaletero][5] = 0;
	InfoVehiculo[vid][vMaletero][6] = 0;
	InfoVehiculo[vid][vMaletero][7] = 0;
	InfoVehiculo[vid][vMaletero][8] = 0;
	InfoVehiculo[vid][vMaletero][9] = 0;
	InfoVehiculo[vid][vMaletero][10] = 0;
	InfoVehiculo[vid][vMaletero][11] = 0;
	InfoVehiculo[vid][vMaletero][12] = 0;
	InfoVehiculo[vid][vMaletero][13] = 0;
	InfoVehiculo[vid][vMaletero][14] = 0;
	InfoVehiculo[vid][vMaleteroCantidad][0] = 0;
	InfoVehiculo[vid][vMaleteroCantidad][1] = 0;
	InfoVehiculo[vid][vMaleteroCantidad][2] = 0;
	InfoVehiculo[vid][vMaleteroCantidad][3] = 0;
	InfoVehiculo[vid][vMaleteroCantidad][4] = 0;
	InfoVehiculo[vid][vMaleteroCantidad][5] = 0;
	InfoVehiculo[vid][vMaleteroCantidad][6] = 0;
	InfoVehiculo[vid][vMaleteroCantidad][7] = 0;
	InfoVehiculo[vid][vMaleteroCantidad][8] = 0;
	InfoVehiculo[vid][vMaleteroCantidad][9] = 0;
	InfoVehiculo[vid][vMaleteroCantidad][10] = 0;
	InfoVehiculo[vid][vMaleteroCantidad][11] = 0;
	InfoVehiculo[vid][vMaleteroCantidad][12] = 0;
	InfoVehiculo[vid][vMaleteroCantidad][13] = 0;
	InfoVehiculo[vid][vMaleteroCantidad][14] = 0;
	return 1;
}

stock QuitarBolsillos(playerid) {
    user[playerid][jBolsillo][0] = 0;
    user[playerid][jBolsillo][1] = 0;
    user[playerid][jBolsillo][2] = 0;
    user[playerid][jBolsillo][3] = 0;
    user[playerid][jBolsillo][4] = 0;
    user[playerid][jBolsillo][5] = 0;
    user[playerid][jBolsillo][6] = 0;
    user[playerid][jBolsillo][7] = 0;
    user[playerid][jBolsillo][8] = 0;
    user[playerid][jBolsillo][9] = 0;
    user[playerid][jBolsilloCant][0] = 0;
    user[playerid][jBolsilloCant][1] = 0;
    user[playerid][jBolsilloCant][2] = 0;
    user[playerid][jBolsilloCant][3] = 0;
    user[playerid][jBolsilloCant][4] = 0;
    user[playerid][jBolsilloCant][5] = 0;
    user[playerid][jBolsilloCant][6] = 0;
    user[playerid][jBolsilloCant][7] = 0;
    user[playerid][jBolsilloCant][8] = 0;
    user[playerid][jBolsilloCant][9] = 0;
    return 1;
}

stock QuitarCinturon(playerid) {
    user[playerid][jCinturon][0] = 0;
    user[playerid][jCinturon][1] = 0;
    user[playerid][jCinturon][2] = 0;
    user[playerid][jCinturon][3] = 0;
    user[playerid][jCinturon][4] = 0;
    user[playerid][jCinturon][5] = 0;
    user[playerid][jCinturonCant][0] = 0;
    user[playerid][jCinturonCant][1] = 0;
    user[playerid][jCinturonCant][2] = 0;
    user[playerid][jCinturonCant][3] = 0;
    user[playerid][jCinturonCant][4] = 0;
    user[playerid][jCinturonCant][5] = 0;
    return 1;
}

stock QuitarManos(playerid) {
    user[playerid][jm_Izquierda] = 0;
    user[playerid][jm_IzquierdaCant] = 0;
    user[playerid][jm_Derecha] = 0;
    user[playerid][jm_DerechaCant] = 0;
    RemovePlayerAttachedObject(playerid, 6);
    RemovePlayerAttachedObject(playerid, 7);
    ResetPlayerWeapons(playerid);
    return 1;
}

stock QuitarEspalda(playerid) {
    user[playerid][jEspalda] = 0, user[playerid][jEspaldaCant] = 0;
    RemovePlayerAttachedObject(playerid, 8);
    return 1;
}

stock N_Apellido(playerid) {
	new NombrePJ[24];
	GetPlayerName(playerid, NombrePJ, 24);
	return NombrePJ;
}

stock NombreRJugador(playerid) {
    new N[24], NombrePJ[24];
    GetPlayerName(playerid, NombrePJ, 24);
    strmid(N, NombrePJ, 0, strlen(NombrePJ), 24);
    for(new i = 0; i < MAX_PLAYER_NAME; i++) {
        if(N[i] == '_') N[i] = ' ';
    }
    return N;
}

stock NombreJugador(playerid) {
    new N[24];
    if(user[playerid][j_Mascara] == 0) {
        new NombrePJ[24];
        GetPlayerName(playerid, NombrePJ, 24);
        strmid(N, NombrePJ, 0, strlen(NombrePJ), 24);
        for(new i = 0; i < MAX_PLAYER_NAME; i++) {
            if(N[i] == '_') N[i] = ' ';
        }
	} else if(user[playerid][j_Mascara] == 1) {
        new string[24];
        format(string, sizeof(string), "[Extraño_%d]", playerid*5+150);
        strmid(N, string, 0, strlen(string), 24);
    }
    return N;
}

stock PlayerPlaySoundEx(soundid, Float: x, Float: y, Float: z) { // Realistic sound playback
    foreach(Player, i) {
        if(_enPos(i, 20.0, x, y, z)) PlayerPlaySound(i, soundid, x, y, z);
    }
    return 1;
}

PartesVehiculo(type) {
    new name[64];
    switch(type) {
        case 0: name = "Alerón";
        case 1: name = "Capó";
        case 2: name = "Techo";
        case 3: name = "Lados";
        case 4: name = "Lamps";
        case 5: name = "Nitro";
        case 6: name = "Escape";
        case 7: name = "Ruedas";
        case 8: name = "Stereo";
        case 9: name = "Hidráulica";
        case 10: name = "Parachoque D.";
        case 11: name = "Parachoque T.";
        case 12: name = "Ventilacion Izq.";
        case 13: name = "Ventilacion Der.";
        default: name = "Desconocida";
    }
    return name;
}

PartesNombres(part) {
    new name[24];
    switch(part - 1000) {
        case 0: name = "Pro";
        case 1: name = "Win";
        case 2: name = "Drag";
        case 3: name = "Alpha";
        case 4: name = "Champ Scoop";
        case 5: name = "Fury Scoop";
        case 6: name = "Roof Scoop";
        case 7: name = "Sideskirt";
        case 8: name = "2x";
        case 9: name = "5x";
        case 10: name = "10x";
        case 11: name = "Race Scoop";
        case 12: name = "Worx Scoop";
        case 13: name = "Round Fog";
        case 14: name = "Champ";
        case 15: name = "Race";
        case 16: name = "Worx";
        case 17: name = "Sideskirt";
        case 18: name = "Upswept";
        case 19: name = "Twin";
        case 20: name = "Large";
        case 21: name = "Medium";
        case 22: name = "Small";
        case 23: name = "Fury";
        case 24: name = "Square Fog";
        case 26: name = "Alien";
        case 27: name = "Alien";
        case 28: name = "Alien";
        case 29: name = "X-Flow";
        case 30: name = "X-Flow";
        case 31: name = "X-Flow";
        case 32: name = "Alien Roof Vent";
        case 33: name = "X-Flow Roof Vent";
        case 34: name = "Alien";
        case 35: name = "X-Flow Roof Vent";
        case 36: name = "Alien";
        case 37: name = "X-Flow";
        case 38: name = "Alien Roof Vent";
        case 39: name = "X-Flow";
        case 40: name = "Alien";
        case 41: name = "X-Flow";
        case 42: name = "Chrome";
        case 43: name = "Slamin";
        case 44: name = "Chrome";
        case 45: name = "X-Flow";
        case 46: name = "Alien";
        case 47: name = "Alien";
        case 48: name = "X-Flow";
        case 49: name = "Alien";
        case 50: name = "X-Flow";
        case 51: name = "Alien";
        case 52: name = "X-Flow";
        case 53: name = "X-Flow";
        case 54: name = "Alien";
        case 55: name = "Alien";
        case 56: name = "Alien";
        case 57: name = "X-Flow";
        case 58: name = "Alien";
        case 59: name = "X-Flow";
        case 60: name = "X-Flow";
        case 61: name = "X-Flow";
        case 62: name = "Alien";
        case 63: name = "X-Flow";
        case 64: name = "Alien";
        case 65: name = "Alien";
        case 66: name = "X-Flow";
        case 67: name = "Alien";
        case 68: name = "X-Flow";
        case 69: name = "Alien";
        case 70: name = "X-Flow";
        case 71: name = "Alien";
        case 72: name = "X-Flow";
        case 88: name = "Alien";
        case 89: name = "X-Flow";
        case 90: name = "Alien";
        case 91: name = "X-Flow";
        case 92: name = "Alien";
        case 93: name = "X-Flow";
        case 94: name = "Alien";
        case 95: name = "X-Flow";
        case 99: name = "Chrome";
        case 100: name = "Chrome Grill";
        case 101: name = "Chrome Flames";
        case 102: name = "Chrome Strip";
        case 103: name = "Convertible";
        case 104: name = "Chrome";
        case 105: name = "Slamin";
        case 106: name = "Chrome Arches";
        case 107: name = "Chrome Strip";
        case 108: name = "Chrome Strip";
        case 109: name = "Chrome";
        case 110: name = "Slamin";
        case 113: name = "Chrome";
        case 114: name = "Slamin";
        case 115: name = "Chrome";
        case 116: name = "Slamin";
        case 117: name = "Chrome";
        case 118: name = "Chrome Trim";
        case 119: name = "Wheelcovers";
        case 120: name = "Chrome Trim";
        case 121: name = "Wheelcovers";
        case 122: name = "Chrome Flames";
        case 123: name = "Bullbar Chrome Bars";
        case 124: name = "Chrome Arches";
        case 125: name = "Bullbar Chrome Lights";
        case 126: name = "Chrome";
        case 127: name = "Slamin";
        case 128: name = "Vinyl Hardtop";
        case 129: name = "Chrome";
        case 130: name = "Hardtop";
        case 131: name = "Softtop";
        case 132: name = "Slamin";
        case 133: name = "Chrome Strip";
        case 134: name = "Chrome Strip";
        case 135: name = "Slamin";
        case 136: name = "Chrome";
        case 137: name = "Chrome Strip";
        case 138: name = "Alien";
        case 139: name = "X-Flow";
        case 140: name = "X-Flow";
        case 141: name = "Alien";
        case 142: name = "Left Oval Vents";
        case 143: name = "Right Oval Vents";
        case 144: name = "Left Square Vents";
        case 145: name = "Right Square Vents";
        case 146: name = "X-Flow";
        case 147: name = "Alien";
        case 148: name = "X-Flow";
        case 149: name = "Alien";
        case 150: name = "Alien";
        case 151: name = "X-Flow";
        case 152: name = "X-Flow";
        case 153: name = "Alien";
        case 154: name = "Alien";
        case 155: name = "Alien";
        case 156: name = "X-Flow";
        case 157: name = "X-Flow";
        case 158: name = "X-Flow";
        case 159: name = "Alien";
        case 160: name = "Alien";
        case 161: name = "X-Flow";
        case 162: name = "Alien";
        case 163: name = "X-Flow";
        case 164: name = "Alien";
        case 165: name = "X-Flow";
        case 166: name = "Alien";
        case 167: name = "X-Flow";
        case 168: name = "Alien";
        case 169: name = "Alien";
        case 170: name = "X-Flow";
        case 171: name = "Alien";
        case 172: name = "X-Flow";
        case 173: name = "X-Flow";
        case 174: name = "Chrome";
        case 175: name = "Slamin";
        case 176: name = "Chrome";
        case 177: name = "Slamin";
        case 178: name = "Slamin";
        case 179: name = "Chrome";
        case 180: name = "Chrome";
        case 181: name = "Slamin";
        case 182: name = "Chrome";
        case 183: name = "Slamin";
        case 184: name = "Chrome";
        case 185: name = "Slamin";
        case 186: name = "Slamin";
        case 187: name = "Chrome";
        case 188: name = "Slamin";
        case 189: name = "Chrome";
        case 190: name = "Slamin";
        case 191: name = "Chrome";
        case 192: name = "Chrome";
        case 193: name = "Slamin";
    }
    return name;
}

enum Nombres
{
	_Componente,
	_Nombre[32],
	_Precio

};

static _tuneo[][Nombres] = {
	{1000, "Pro Spoiler", 3500},
	{1001, "Win Spoiler", 3500},
	{1002, "Drag Spoiler", 3500},
	{1003, "Alpha Spoiler", 3500},
	{1004, "Champ Scoop", 1250},
	{1005, "Fury Scoop", 1250},
	{1006, "Roof Scoop", 1250},
	{1007, "Right Sideskirt", 2500},
	{1008, "Nitrous x5", 12000},
	{1009, "Nitrous x2", 5000},
	{1010, "Nitrous x10", 20000},
	{1011, "Race Scoop", 1250},
	{1012, "Worx Scoop", 1250},
	{1013, "Round Fog Lights", 1500},
	{1014, "Champ Spoiler", 3500},
	{1015, "Race Spoiler", 3500},
	{1016, "Worx Spoiler", 3500},
	{1017, "Left Sideskirt", 2500},
	{1018, "Upswept Exhaust", 1000},
	{1019, "Twin Exhaust", 1000},
	{1020, "Large Exhaust", 1000},
	{1021, "Medium Exhaust", 1000},
	{1022, "Small Exhaust", 1000},
	{1023, "Fury Spoiler", 3500},
	{1024, "Square Fog Lights", 1500},
	{1025, "Offroad Wheels", 3000},
	{1026, "Right Alien Sideskirt", 2500},
	{1027, "Left Alien Sideskirt", 2500},
	{1028, "Alien Exhaust", 1000},
	{1029, "X-Flow Exhaust", 1000},
	{1030, "Right X-Flow Sideskirt", 2500},
	{1031, "Left X-Flow Sideskirt", 2500},
	{1032, "Alien Roof Vent", 2000},
	{1033, "X-Flow Roof Vent", 1500},
	{1034, "Alien Exhaust", 1000},
	{1035, "X-Flow Roof Vent", 1500},
	{1036, "Right Alien Sideskirt", 2500},
	{1037, "X-Flow Exhaust", 1000},
	{1038, "Alien Roof Vent", 2000},
	{1039, "Right X-Flow Sideskirt", 2500},
	{1040, "Left Alien Sideskirt", 2500},
	{1041, "Left X-Flow Sideskirt", 2500},
	{1042, "Right Chrome Sideskirt", 2500},
	{1043, "Slamin Exhaust", 1000},
	{1044, "Chrome Exhaust", 1000},
	{1045, "X-Flow Exhaust", 1000},
	{1046, "Alien Exhaust", 1000},
	{1047, "Right Alien Sideskirt", 2500},
	{1048, "Right X-Flow Sideskirt", 2500},
	{1049, "Alien Spoiler", 7500},
	{1050, "X-Flow Spoiler", 5000},
	{1051, "Left Alien Sideskirt", 2500},
	{1052, "Left X-Flow Sideskirt", 2500},
	{1053, "X-Flow Roof Vent", 1500},
	{1054, "Alien Roof Vent", 2000},
	{1055, "Alien Roof Vent", 2000},
	{1056, "Right Alien Sideskirt", 2500},
	{1057, "Right X-Flow Sideskirt", 2500},
	{1058, "X-Flow Spoiler", 5000},
	{1059, "X-Flow Exhaust", 1000},
	{1060, "Alien Spoiler", 7000},
	{1061, "X-Flow Roof Vent", 1500},
	{1062, "Left Alien Sideskirt", 2500},
	{1063, "Left X-Flow Sideskirt", 2500},
	{1064, "Alien Exhaust", 1000},
	{1065, "Alien Exhaust", 1000},
	{1066, "X-Flow Exhaust", 1000},
	{1067, "Alien Roof Vent", 2000},
	{1068, "X-Flow Roof Vent", 1500},
	{1069, "Right Alien Sideskirt", 2500},
	{1070, "Right X-Flow Sideskirt", 2500},
	{1071, "Left Alien Sideskirt", 2500},
	{1072, "Left X-Flow Sideskirt", 2500},
	{1073, "Shadow Wheels", 2000},
	{1074, "Mega Wheels", 2000},
	{1075, "Rimshine Wheels", 2000},
	{1076, "Wires Wheels", 2000},
	{1077, "Classic Wheels", 2000},
	{1078, "Twist Wheels", 2000},
	{1079, "Cutter Wheels", 2000},
	{1080, "Stitch Wheels", 2000},
	{1081, "Grove Wheels", 2000},
	{1082, "Import Wheels", 2000},
	{1083, "Dollar Wheels", 3500},
	{1084, "Trance Wheels", 2000},
	{1085, "Atomic Wheels", 2000},
	{1086, "Stereo", 2000},
	{1087, "Hydraulics", 6000},
	{1088, "Alien Roof Vent", 2000},
	{1089, "X-Flow Exhaust", 1000},
	{1090, "Right Alien Sideskirt", 2500},
	{1091, "X-Flow Roof Vent", 1500},
	{1092, "Alien Exhaust", 1000},
	{1093, "Left X-Flow Sideskirt", 2500},
	{1094, "Left Alien Sideskirt", 2500},
	{1095, "Right X-Flow Sideskirt", 2500},
	{1096, "Ahab Wheels", 2000},
	{1097, "Virtual Wheels", 2000},
	{1098, "Access Wheels", 2000},
	{1099, "Left Chrome Sideskirt", 2500},
	{1100, "Chrome Grill", 1500},
	{1101, "Left Chrome Flames Sideskirt", 2500},
	{1102, "Left Chrome Strip Sideskirt", 2500},
	{1103, "Convertible Roof", 1500},
	{1104, "Chrome Exhaust", 1000},
	{1105, "Slamin Exhaust", 1000},
	{1106, "Left Chrome Arches Sideskirt", 2500},
	{1107, "Left Chrome Strip Sideskirt", 2500},
	{1108, "Right Chrome Strip Sideskirt", 2500},
	{1109, "Chrome Rear Bullbars", 5000},
	{1110, "Slamin Rear Bullbars", 5000},
	{1111, "Front Sign", 1500},
	{1112, "Front Sign", 1500},
	{1113, "Chrome Exhaust", 1000},
	{1114, "Slamin Exhaust", 1000},
	{1115, "Chrome Front Bullbars", 5000},
	{1116, "Slamin Front Bullbars", 5000},
	{1117, "Chrome Front Bumper", 5000},
	{1118, "Right Chrome Trim Sideskirt", 2500},
	{1119, "Right Wheelcovers Sideskirt", 2500},
	{1120, "Left Chrome Trim Sideskirt", 2500},
	{1121, "Left Wheelcovers Sideskirt", 2500},
	{1122, "Right Chrome Flames Sideskirt", 2500},
	{1123, "Bullbar Chrome Bars", 1500},
	{1124, "Left Chrome Arches Sideskirt", 2500},
	{1125, "Bullbar Chrome Lights", 1500},
	{1126, "Chrome Exhaust", 1000},
	{1127, "Slamin Exhaust", 1000},
	{1128, "Vinyl Hardtop Roof", 1500},
	{1129, "Chrome Exhaust", 1000},
	{1130, "Hardtop Roof", 1500},
	{1131, "Softtop Roof", 1500},
	{1132, "Slamin Exhaust", 1000},
	{1133, "Right Chrome Strip Sideskirt", 2500},
	{1134, "Right Chrome Strip Sideskirt", 2500},
	{1135, "Slamin Exhaust", 1000},
	{1136, "Chrome Exhaust", 1000},
	{1138, "Alien Spoiler", 7000},
	{1139, "X-Flow Spoiler", 5000},
	{1140, "X-Flow Rear Bumper", 5000},
	{1141, "Alien Rear Bumper", 5000},
	{1142, "Left Oval Vents", 1250},
	{1143, "Right Oval Vents", 1250},
	{1144, "Left Square Vents", 1250},
	{1145, "Right Square Vents", 1250},
	{1146, "X-Flow Spoiler", 5000},
	{1147, "Alien Spoiler", 7000},
	{1148, "X-Flow Rear Bumper", 5000},
	{1149, "Alien Rear Bumper", 5000},
	{1150, "Alien Rear Bumper", 5000},
	{1151, "X-Flow Rear Bumper", 5000},
	{1152, "X-Flow Front Bumper", 5000},
	{1153, "Alien Front Bumper", 5000},
	{1154, "Alien Rear Bumper", 5000},
	{1155, "Alien Front Bumper", 5000},
	{1156, "X-Flow Rear Bumper", 5000},
	{1157, "X-Flow Front Bumper", 5000},
	{1158, "X-Flow Spoiler", 5000},
	{1159, "Alien Rear Bumper", 5000},
	{1160, "Alien Front Bumper", 5000},
	{1161, "X-Flow Rear Bumper", 5000},
	{1162, "Alien Spoiler", 7000},
	{1163, "X-Flow Spoiler", 5000},
	{1164, "Alien Spoiler", 7000},
	{1165, "X-Flow Front Bumper", 5000},
	{1166, "Alien Front Bumper", 5000},
	{1167, "X-Flow Rear Bumper", 5000},
	{1168, "Alien Rear Bumper", 5000},
	{1169, "Alien Front Bumper", 5000},
	{1170, "X-Flow Front Bumper", 5000},
	{1171, "Alien Front Bumper", 5000},
	{1172, "X-Flow Front Bumper", 5000},
	{1173, "X-Flow Front Bumper", 5000},
	{1174, "Chrome Front Bumper", 5000},
	{1175, "Slamin Front Bumper", 5000},
	{1176, "Chrome Rear Bumper", 5000},
	{1177, "Slamin Rear Bumper", 5000},
	{1178, "Slamin Rear Bumper", 5000},
	{1179, "Chrome Front Bumper", 5000},
	{1180, "Chrome Rear Bumper", 5000},
	{1181, "Slamin Front Bumper", 5000},
	{1182, "Chrome Front Bumper", 5000},
	{1183, "Slamin Rear Bumper", 5000},
	{1184, "Chrome Rear Bumper", 5000},
	{1185, "Slamin Front Bumper", 5000},
	{1186, "Slamin Rear Bumper", 5000},
	{1187, "Chrome Rear Bumper", 5000},
	{1188, "Slamin Front Bumper", 5000},
	{1189, "Chrome Front Bumper", 5000},
	{1190, "Slamin Front Bumper", 5000},
	{1191, "Chrome Front Bumper", 5000},
	{1192, "Chrome Rear Bumper", 5000},
	{1193, "Slamin Rear Bumper", 5000}
};

static VehiclesMods[][TOTAL_MODS] = {
	{400, 1008,1009,1010,1013,1018,1019,1020,1021,1024,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000},
	{401, 1001,1003,1004,1005,1006,1007,1008,1009,1010,1013,1017,1019,1020,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,1142,1143,1144,0000},
	{402, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{403, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{404, 1000,1002,1007,1008,1009,1010,1013,1016,1017,1019,1020,1021,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000},
	{405, 1000,1001,1008,1009,1010,1014,1018,1019,1020,1021,1023,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000},
	{406, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{407, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{408, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{409, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{410, 1001,1003,1007,1008,1009,1010,1013,1017,1019,1020,1021,1023,1024,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000},
	{411, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{412, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{413, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{414, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{415, 1001,1003,1007,1008,1009,1010,1017,1018,1019,1023,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000},
	{416, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{417, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{418, 1002,1006,1008,1009,1010,1016,1020,1021,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{419, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{420, 1001,1003,1004,1005,1008,1009,1010,1019,1021,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000},
	{421, 1000,1008,1009,1010,1014,1016,1018,1019,1020,1021,1023,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000},
	{422, 1007,1008,1009,1010,1013,1017,1019,1020,1021,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000},
	{423, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{424, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{425, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{426, 1001,1003,1004,1005,1006,1008,1009,1010,1019,1021,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000},
	{427, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{428, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{429, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{430, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{431, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{432, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{433, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{434, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{435, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{436, 1001,1003,1006,1007,1008,1009,1010,1013,1017,1019,1020,1021,1022,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000},
	{437, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{438, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{439, 1001,1003,1007,1008,1009,1010,1013,1017,1023,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,1142,1143,1144,1145,0000,0000,0000,0000},
	{440, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{441, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{442, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{443, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{444, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{445, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{446, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{447, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{448, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{449, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{450, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{451, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{452, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{453, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{454, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{455, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{456, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{457, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{458, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{459, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{460, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{461, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{462, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{463, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{464, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{465, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{466, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{467, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{468, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{469, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{470, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{471, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{472, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{473, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{474, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{475, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{476, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{477, 1006,1007,1008,1009,1010,1017,1018,1019,1020,1021,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000},
	{478, 1004,1005,1008,1009,1010,1012,1013,1020,1021,1022,1024,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000},
	{479, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{480, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{481, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{482, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{483, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{484, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{485, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{486, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{487, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{488, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{489, 1000,1002,1004,1005,1006,1008,1009,1010,1013,1016,1018,1019,1020,1024,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000},
	{490, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{491, 1003,1007,1008,1009,1010,1014,1017,1018,1019,1020,1021,1023,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,1142,1143,1144,1145,0000},
	{492, 1000,1004,1005,1006,1008,1009,1010,1016,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{493, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{494, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{495, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{496, 1001,1002,1003,1006,1007,1008,1009,1010,1011,1017,1019,1020,1023,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,1142,1143,0000,0000},
	//{497, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{498, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{499, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{500, 1008,1009,1010,1013,1019,1020,1021,1024,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{501, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{502, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{503, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{504, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{505, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{506, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{507, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{508, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{509, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{510, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{511, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{512, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{513, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{514, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{515, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{516, 1000,1002,1004,1007,1008,1009,1010,1015,1016,1017,1018,1019,1020,1021,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000},
	{517, 1002,1003,1007,1008,1009,1010,1016,1017,1018,1019,1020,1023,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,1142,1143,1144,1145,0000},
	{518, 1001,1003,1005,1006,1007,1008,1009,1010,1013,1017,1018,1020,1023,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,1142,1143,1144,1145},
	//{519, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{520, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{521, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{522, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{523, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{524, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{525, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{526, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{527, 1001,1007,1008,1009,1010,1014,1015,1017,1018,1020,1021,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000},
	{528, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{529, 1001,1003,1006,1007,1008,1009,1010,1011,1012,1017,1018,1019,1020,1023,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000},
	{530, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{531, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{532, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{533, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{534, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,1100,1101,1106,1122,1123,1124,1125,1126,1127,1178,1179,1180,1185,0000},
	{535, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,1109,1110,1113,1114,1115,1116,1117,1118,1119,1120,1121,0000,0000,0000},
	{536, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,1103,1104,1105,1107,1108,1128,1181,1182,1183,1184,0000,0000,0000,0000},
	//{537, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{538, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{539, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{540, 1001,1004,1006,1007,1008,1009,1010,1017,1018,1019,1020,1023,1024,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,1142,1143,1144,1145},
	{541, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{542, 1008,1009,1010,1014,1015,1018,1019,1020,1021,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,1144,1145,0000,0000,0000,0000,0000,0000},
	{543, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{544, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{545, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{546, 1001,1002,1004,1006,1007,1008,1009,1010,1017,1018,1019,1023,1024,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,1142,1143,1144,1145},
	{547, 1000,1003,1008,1009,1010,1016,1018,1019,1020,1021,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,1142,1143,0000,0000,0000,0000,0000},
	//{548, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{549, 1001,1003,1007,1008,1009,1010,1011,1012,1017,1018,1019,1020,1023,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,1142,1143,1144,1145},
	{550, 1001,1003,1004,1005,1006,1008,1009,1010,1018,1019,1020,1023,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,1142,1143,1144,1145,0000},
	{551, 1002,1003,1005,1006,1008,1009,1010,1016,1018,1019,1020,1021,1023,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000},
	{552, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{553, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{554, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{555, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{556, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{557, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{558, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1163,1164,1165,1166,1167,1168},
	{559, 1008,1009,1010,1025,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,1158,1159,1160,1161,1162,1173},
	{560, 1008,1009,1010,1025,1026,1027,1028,1029,1030,1031,1032,1033,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,1138,1139,1140,1141,1169,1170},
	{561, 1008,1009,1010,1025,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,1154,1155,1156,1157},
	{562, 1008,1009,1010,1025,1034,1035,1036,1037,1038,1039,1040,1041,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,1146,1147,1148,1149,1171,1172},
	//{563, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{564, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{565, 1008,1009,1010,1025,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,1150,1151,1152,1153},
	{566, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{567, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,1102,1129,1130,1131,1132,1133,1186,1187,1188,1189,0000,0000,0000,0000},
	{568, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{569, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{570, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{571, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{572, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{573, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{574, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{575, 1008,1009,1010,1025,1042,1043,1044,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,1099,1174,1175,1176,1177,0000,0000,0000,0000,0000,0000},
	{576, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,1134,1135,1136,1137,1190,1191,1192,1193,0000,0000,0000,0000,0000,0000},
	//{577, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{578, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{579, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{580, 1001,1006,1007,1008,1009,1010,1017,1018,1020,1023,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000},
	//{581, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{582, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{583, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{584, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{585, 1001,1003,1006,1007,1008,1009,1010,1013,1017,1018,1019,1020,1023,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,1142,1143,1144,1145},
	//{586, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{587, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{588, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{589, 1000,1004,1005,1006,1007,1008,1009,1010,1013,1016,1017,1018,1020,1024,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,1144,1145,0000},
	//{590, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{591, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{592, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{593, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{594, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	//{595, 0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{596, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{597, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{598, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{599, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{600, 1004,1005,1006,1007,1008,1009,1010,1013,1017,1018,1020,1022,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000},
	{601, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{602, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{603, 1001,1006,1007,1008,1009,1010,1017,1018,1019,1020,1023,1024,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,1142,1143,1144,1145,0000},
	{604, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{605, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{606, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{607, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{608, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{609, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{610, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{611, 1008,1009,1010,1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1087,1096,1097,1098,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000}
};

stock _infoFaccion(jugador, rango[64], division[64], faccion[64])
{
	switch (user[jugador][jMiembro])
	{
		case 1:
		{
			faccion = "LS-PD";
			if (user[jugador][jDivision] == 1)
			{
				switch (user[jugador][jRango])
				{
					case 1: rango = "Probatory Officer";
					case 2: rango = "Officer I";
					case 3: rango = "Officer II";
					case 4: rango = "Officer III";
					case 5: rango = "Officer III+";
					case 6: rango = "Sergeant I";
					case 7: rango = "Sergeant II";
					case 8: rango = "Sergeant III";
					case 9: rango = "Lieutenant II";
					case 10: rango = "Lieutenant III";
					case 11: rango = "Captain";
					case 12: rango = "Commander";
					default: rango = "Probatory Officer";
				}
				division = "SA-PD / SHERIFFS";
			}
			else if (user[jugador][jDivision] == 2)
			{
				switch (user[jugador][jRango])
				{
					case 1: rango = "Deputy S. I";
					case 2: rango = "Deputy S. II";
					case 3: rango = "Deputy S. III";
					case 4: rango = "Detective I";
					case 5: rango = "Detective II";
					case 6: rango = "Sargento I";
					case 7: rango = "Sargento II";
					case 8: rango = "Teniente";
					case 9: rango = "Capitán";
					case 10: rango = "Sub-Sheriff";
					case 11: rango = "Sheriff";
					default: rango = "Prácticas";
				}
				division = "Sheriff";
			}
			else if (user[jugador][jDivision] == 3)
			{
				switch (user[jugador][jRango])
				{
					case 1: rango = "Correctional Officer+";
					case 2: rango = "Sargento";
					default: rango = "Correctional Officer";
				}
				division = "SADOC";
			}
		}//
		case 2:
		{
			faccion = "Mecánico";
			switch (user[jugador][jRango])
			{
				case 1: rango = "Ayudante";
				case 2: rango = "Aprendiz";
				case 3: rango = "Profesional";
				case 4: rango = "Supervisor";
				case 5: rango = "Jefe";
				default: rango = "Ayudante";
			}
			division = "General";
		}
		case 3:
		{
			faccion = "Noticias";
			switch (user[jugador][jRango])
			{
				case 1: rango = "Becario";
				case 2: rango = "Fotógrafo";
				case 3: rango = "Redactor";
				case 4: rango = "Periodista";
				case 5: rango = "Gerente";
				case 6: rango = "Sub director";
				case 7: rango = "Director ejecutivo";
				default: rango = "Becario";
			}
			division = "General";
		}
		case 4:
		{
			faccion = "Gobierno";
			switch (user[jugador][jRango])
			{
				case 1: rango = "Oficinista";
				case 2: rango = "ATF Agent";
				case 3: rango = "Fiscalia";
				case 4: rango = "Senador";
				case 5: rango = "Juez";
				case 6: rango = "Vicepresidente";
				case 7: rango = "Presidente";
				default: rango = "Oficinista";
			}
			division = "General";
		}
		case 5:
		{
			faccion = "Emergencias";
			switch (user[jugador][jRango])
			{
				case 1: rango = "B. Auxiliar";
				case 2: rango = "Enfermero";
				case 3: rango = "Paramédico";
				case 4: rango = "Médico";
				case 5: rango = "Bombero prácticas";
				case 6: rango = "Bombero";
				case 7: rango = "Oficial II";
				case 8: rango = "Oficial III";
				case 9: rango = "Sargento";
				case 10: rango = "Teniente";
				case 11: rango = "Jefe de emergencias adjunto";
				case 12: rango = "Jefe de emergencias";
				default: rango = "B. Auxiliar";
			}
			division = "General";
		}
		default:
		{
			faccion = "Civil";
			division = "Sin división";
			rango = "Sin rango";
		}
	}
	return 1;
}

funcion _panelJ(jugador, jugador2)
{
	if (IsPlayerConnected(jugador) && IsPlayerConnected(jugador2))
	{
		//sexo
		new sexo[8];
		switch(user[jugador2][jSexo])
		{
			case 1: sexo = "Hombre";
			case 2: sexo = "Mujer";
		}

		//facciones
		new faccion[64], division[64], rango[64];
		_infoFaccion(jugador2, rango, division, faccion);

		//trabajos
		new jtext[21], jtext2[21];
		switch (user[jugador2][jTrabajo1])
		{
			case 0: jtext = "Ninguno";
			case 1: jtext = "Carguero";
			case 2: jtext = "Delincuente";
			case 3: jtext = "Pescador";
			case 4: jtext = "No disponible";
			case 5: jtext = "Ladrón de coches";
			case 6: jtext = "Carpintero";
			case 7: jtext = "Leñador";
			case 8: jtext = "Ninguno";
			case 9: jtext = "Ninguno";
			case 10: jtext = "Granjero";
			case 11: jtext = "Traficante";
			case 12: jtext = "Ninguno";
		}
		switch (user[jugador2][jTrabajo2])
		{
			case 0: jtext2 = "Ninguno";
			case 1: jtext2 = "Carguero";
			case 2: jtext2 = "Delincuente";
			case 3: jtext2 = "Pescador";
			case 4: jtext2 = "No disponible";
			case 5: jtext2 = "Ladrón de coches";
			case 6: jtext2 = "Carpintero";
			case 7: jtext2 = "Leñador";
			case 8: jtext2 = "Ninguno";
			case 9: jtext2 = "Ninguno";
			case 10: jtext2 = "Granjero";
			case 11: jtext2 = "Traficante";
			case 12: jtext2 = "Ninguno";
		}

		//
		new proximonvl = user[jugador2][jNivel] + 1, cantidadexp = proximonvl * nivelexp;
		new cuenta[200];

		format(cuenta, sizeof(cuenta), "[Cuenta/Personaje]: {ffffff}Edad: %d | Sexo: %s | Teléfono: %d | Documento: %d\n", user[jugador2][jEdad], sexo, user[jugador2][jTelefono], user[jugador2][jDocumento]);
		Mensaje_(jugador, 0xF0B884FF, cuenta);

		format(cuenta, sizeof(cuenta), "[Objetos Especiales]: {ffffff}Contrato: %d | Ganzúas: %d | Lineas: %d | Granadas: %d | Materiales: %d\n", user[jugador2][jContrato], user[jugador2][jGanzuas], user[jugador2][jLineas], user[jugador2][jCarnadas], user[jugador2][jMateriales]);
        Mensaje_(jugador, 0xF0B884FF, cuenta);

		format(cuenta, sizeof(cuenta), "[Nivel de Juego]: {ffffff}Nivel: %d | Experiencia: %d/%d | Horas jugando: %d\n", user[jugador2][jNivel], user[jugador2][jExperiencia], cantidadexp, user[jugador2][j_Horas]);
        Mensaje_(jugador, 0xF0B884FF, cuenta);

		format(cuenta, sizeof(cuenta), "[Dinero]: {ffffff}Efectivo: $%d | Banco: $%d | Número de cuenta: %d\n", ComprobarDineroJ(jugador2), user[jugador2][jBanco], user[jugador2][jDebito]);
        Mensaje_(jugador, 0xF0B884FF, cuenta);

		format(cuenta, sizeof(cuenta), "[Propiedades]: {ffffff}Casas: (%d) - (%d) - P: %d | Negocios: (%d) - (%d) - P: %d\n", user[jugador2][jCasaKey], user[jugador2][jCasaKey2], user[jugador2][jCasaLlaves], user[jugador2][jNegocioKey], user[jugador2][jNegocioKey2], user[jugador2][jNegocioLlaves]);
        Mensaje_(jugador, 0xF0B884FF, cuenta);

		format(cuenta, sizeof(cuenta), "[Facciones]: {ffffff}%s - %s - %s | %s - %d\n", faccion, rango, division, NombreFamilia(jugador2), user[jugador2][jRangoFam]);
        Mensaje_(jugador, 0xF0B884FF, cuenta);

		format(cuenta, sizeof(cuenta), "[Información]: {ffffff}Trabajos: (%s) - (%s) | Cárcel: %d min - (IC %d) - (OOC %d) | {fff3ab}Puntos de rol: %d {ffffff}\n", jtext, jtext2, user[jugador2][jTiempoCarcel], user[jugador2][jArrestos], user[jugador2][jSanciones], user[jugador2][jPuntosRol]);
        Mensaje_(jugador, 0xF0B884FF, cuenta);

	} //
	return 1;
}

funcion _panelC(jugador, jugador2) {
	new i_c = user[jugador2][jCasaKey], i_c2 = user[jugador2][jCasaKey2];
	new coordsstring[200];
	new DialogStatus[1000];
	if (user[jugador2][jCasaKey] == INVALID_CASA_ID && user[jugador2][jCasaKey2] == INVALID_CASA_ID) return _Mensaje(jugador, 0, "580", "No posees ninguna casa.");
	if (IsPlayerConnected(jugador) && IsPlayerConnected(jugador2)) {
		if (i_c != -1) {

			new location[MAX_ZONE_NAME];
			Get2DZone(location, MAX_ZONE_NAME, InfoCasa[i_c][cExteriorX], InfoCasa[i_c][cExteriorY], InfoCasa[i_c][cExteriorZ]);

			format(coordsstring, sizeof(coordsstring),
			"{FFFF00}NOMBRE:	{ffffff}(%d) %s\n\
			{FFFF00}ESPACIO:	{ffffff}%s\n\
			{FFFF00}DINERO:	{ffffff}$%d\n\
			{FFFF00}PUERTA:	{ffffff}%s\n\
			{FFFF00}DIRECCIÓN:	{ffffff}%s\n\n",
			i_c, InfoCasa[i_c][cNombre], _EspacioC(i_c), InfoCasa[i_c][cCasaDinero], _EstadoC(i_c,2), location);

			strcat(DialogStatus, coordsstring);
		}
		if (i_c2 != -1) {

			new location[MAX_ZONE_NAME];
			Get2DZone(location, MAX_ZONE_NAME, InfoCasa[i_c2][cExteriorX], InfoCasa[i_c2][cExteriorY], InfoCasa[i_c2][cExteriorZ]);

			format(coordsstring, sizeof(coordsstring),
			"{FFFF00}NOMBRE:	{ffffff}(%d) %s\n\
			{FFFF00}ESPACIO:	{ffffff}%s\n\
			{FFFF00}DINERO:	{ffffff}$%d\n\
			{FFFF00}PUERTA:	{ffffff}%s\n\
			{FFFF00}DIRECCIÓN:	{ffffff}%s\n\n",
			i_c2, InfoCasa[i_c2][cNombre], _EspacioC(i_c2), InfoCasa[i_c2][cCasaDinero], _EstadoC(i_c2,2), location);

			strcat(DialogStatus, coordsstring);
		}
	}
	Dialog(jugador, D_INVALIDO, DIALOG_STYLE_MSGBOX, "Información: {D6E1EB}Casas", DialogStatus, "Cerrar", "");
	return 1;
}

funcion _panelN(jugador, jugador2) {
	new i_n = user[jugador2][jNegocioKey], i_n2 = user[jugador2][jNegocioKey2];
	new coordsstring[300];
	new DialogStatus[3000];
	if (user[jugador2][jNegocioKey] == INVALID_NEGOCIO_ID && user[jugador2][jNegocioKey2] == INVALID_NEGOCIO_ID) return _Mensaje(jugador, 0, "580", "No posees ningún negocio.");
	if (IsPlayerConnected(jugador) && IsPlayerConnected(jugador2)) {
		if (i_n != -1) {

			new location[MAX_ZONE_NAME];
			Get2DZone(location, MAX_ZONE_NAME, i_Negocio[i_n][nExteriorX], i_Negocio[i_n][nExteriorY], i_Negocio[i_n][nExteriorZ]);

			format(coordsstring, sizeof(coordsstring),
			"{FFFF00}NOMBRE:    	{ffffff}%s (%d)\n\
			{FFFF00}TIPO:		{ffffff}%s\n\
			{FFFF00}DINERO:	{ffffff}$%d\n\
			{FFFF00}PUERTA:	{ffffff}%s\n\
			{FFFF00}PRODUCTOS:	{ffffff}%d\n\
			{FFFF00}CUOTAS:	{ff0000}-{ffffff}$%d\n\n",
			i_Negocio[i_n][nNombre], i_n,
			_tipoN(i_n),
			i_Negocio[i_n][nDinero],
			_estadoN(i_n, 2),
			i_Negocio[i_n][nProductos],
			i_Negocio[i_n][nCuotas]);

			strcat(DialogStatus, coordsstring);
		}
		if (i_n2 != -1) {

			new location[MAX_ZONE_NAME];
			Get2DZone(location, MAX_ZONE_NAME, i_Negocio[i_n2][nExteriorX], i_Negocio[i_n2][nExteriorY], i_Negocio[i_n2][nExteriorZ]);

			format(coordsstring, sizeof(coordsstring),
			"{FFFF00}NOMBRE:    	{ffffff}%s (%d)\n\
			{FFFF00}TIPO:		{ffffff}%s\n\
			{FFFF00}DINERO:	{ffffff}$%d\n\
			{FFFF00}PUERTA:	{ffffff}%s\n\
			{FFFF00}PRODUCTOS:	{ffffff}%d\n\
			{FFFF00}CUOTAS:	{ff0000}-{ffffff}$%d\n\n",
			i_Negocio[i_n2][nNombre], i_n2,
			_tipoN(i_n2),
			i_Negocio[i_n2][nDinero],
			_estadoN(i_n2, 2),
			i_Negocio[i_n2][nProductos],
			i_Negocio[i_n2][nCuotas]);

			strcat(DialogStatus, coordsstring);
		}
	}
	Dialog(jugador, D_INVALIDO, DIALOG_STYLE_MSGBOX, "Información: {FFFF00}Negocios", DialogStatus, "Listo", "");
	return 1;
}

funcion MenuConfiguracionCuenta(jugador) {
    new ListDialog[350], lenguaje[36];
    switch (user[jugador][jIdioma]) {
        case 0: lenguaje = "Castellano";
        case 1: lenguaje = "Esp. único";
        case 2: lenguaje = "Esp. único";
        case 3: lenguaje = "Esp. único";
        case 4: lenguaje = "Esp. único";
        case 5: lenguaje = "Esp. único";
        case 6: lenguaje = "Esp. único";
        case 7: lenguaje = "Esp. único";
        case 8: lenguaje = "Esp. único";
        case 9: lenguaje = "Esp. único";
    }
    format(ListDialog, sizeof(ListDialog),
        "{ffffff}Cambiar Contraseña\nCambiar Sexo\nCambiar Edad\nCambiar Idioma\t({FFFF00}%s{ffffff})", lenguaje);
    Dialog(jugador, D_CUENTA2, DIALOG_STYLE_LIST, "Usuario: {FFFF00}Configurar Cuenta", ListDialog, "Seleccionar", "Cancelar");
}

funcion CargarStuff() {
    new arrCoords[8][64];
    new strFromFile2[128];
    new File: file = fopen("Stuff.rp", io_read);
    if(file) {
        fread(file, strFromFile2);
        splits(strFromFile2, arrCoords, ',');
        DineroLoteria = strval(arrCoords[0]);
        DineroEstado = strval(arrCoords[1]);
        if(DineroEstado < 0) DineroEstado = 0;
        if(ValorImpuestos < 0) ValorImpuestos = 0;
        ValorImpuestos = strval(arrCoords[2]);
        SangreLSED = strval(arrCoords[3]);
        DobleExperiencia = strval(arrCoords[4]);
        if(TroncosDis < 0) TroncosDis = 1000;
        TroncosDis = strval(arrCoords[5]);
        fclose(file);
        print("» Sistema de status del servidor cargado.");
        ActualizarTroncoLabel();
    } else {
        print("» Error con el sistema de status.");
    }
    return 1;
}

stock ActualizarEst() {
    new coordsstring[128];
    format(coordsstring, sizeof(coordsstring), "%d,%d,%d,%d,%d,%d", DineroLoteria, DineroEstado, ValorImpuestos, SangreLSED, DobleExperiencia, TroncosDis);
    new File: file2 = fopen("Stuff.rp", io_write);
    fwrite(file2, coordsstring);
    fclose(file2);
    return 1;
}

funcion GuardarCuentas()
{
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (IsPlayerConnected(i))
		{
			GuardarCuenta(i);
		}
	}
	return 1;
}

public OnGameModeExit() {
	djson_GameModeExit();
    AntiAmx();
    GuardarCuentas();
    ActualizarEst();
    GuardarIncendios();
    ActualizarGasolineras();
    return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
	if (IsPlayerNPC(playerid)) return 1;
	SetSpawnInfo(playerid, 0, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
	if (user[playerid][State] == 0)
	{
		new time[3];
		gettime(time[0], time[1], time[2]);
		SetPlayerTime(playerid, time[0], time[1]);
		CargarTextLogin(playerid);
		_cIniciales(playerid, 2);
		LimpiarPantalla(playerid);
		new namepj[MAX_PLAYER_NAME], cuenta[120];
		GetPlayerName(playerid, namepj, sizeof(namepj));
		format(cuenta, sizeof(cuenta), DATOS_CUENTAS, namepj);
		new cuenta2[200], cuenta3[200];
		format(cuenta2, sizeof(cuenta2), "{ffffff}Acceso con el jugador: {00C200}%s\n\n{ffffff}Introduzca su contraseña para continuar:", NombreJugador(playerid));
		format(cuenta3, sizeof(cuenta3), "{ffffff}Acceso con el jugador: {00C200}%s\n\n{ffffff}Introduzca su contraseña para continuar:", NombreJugador(playerid));
		if(INI_Existe(cuenta)) Dialog(playerid, D_INGRESO, DIALOG_STYLE_PASSWORD, "Acceso: {FFFF00}Usuario registrado", cuenta2, "Conectar", "Desconectar");
		else { if (ActRegistro == 0) _Expulsar(playerid, 1, "Registro deshabilitado"); Dialog(playerid, D_REGISTRO, DIALOG_STYLE_PASSWORD, "{b0b0b0}Registro", cuenta3, "Registrar", "Desconectar"); }
	}
	return 1;
}

public OnPlayerConnect(playerid)
{
	LimpiarPantalla(playerid);
	new Nombre2[24], Pos_,playerIP[16];
	GetPlayerName(playerid, Nombre2, 24);
	Pos_ = strfind(Nombre2, "_");
	if(!Pos_ || Pos_ < 1 || Pos_ > (strlen(Nombre2)-2) || IlegalCharacterName(Nombre2))
	{
		SetPlayerName(playerid, "NombreInvalido");
		Dialog(playerid, D_INVALIDO, DIALOG_STYLE_MSGBOX, "{FF0000}[Sistema Información]: FORMATO INVALIDO", "> Su nombre contiene un formato inválido, el formato es {00c200}Nombre_Apellido.\n\n   {FFFFFF}- Las inciales del nombre, y el apellido deben estar si o si en MAYUSCULA\n   {FFFFFF}- Ademas, no se permiten nombres de famosos como por ejemplo Nicolas_Maduro.", "Aceptar", "");
		SetTimerEx("TimerKICK", 2000, false, "d", playerid);
		return 1;
	}
	//marca de agua
	textopantalla1[playerid] = CreatePlayerTextDraw(playerid, 552.888732, 3.484447, "GS:RP.ES");
    PlayerTextDrawLetterSize(playerid, textopantalla1[playerid], 0.449999, 1.600000);
    PlayerTextDrawAlignment(playerid, textopantalla1[playerid], 1);
    PlayerTextDrawColor(playerid, textopantalla1[playerid], -1);
    PlayerTextDrawSetShadow(playerid, textopantalla1[playerid], 0);
    PlayerTextDrawSetOutline(playerid, textopantalla1[playerid], 0);
    PlayerTextDrawBackgroundColor(playerid, textopantalla1[playerid], 51);
    PlayerTextDrawFont(playerid, textopantalla1[playerid], 3);
    PlayerTextDrawSetProportional(playerid, textopantalla1[playerid], 1);

    textopantalla2[playerid] = CreatePlayerTextDraw(playerid, 603.110900, 15.431114, "2.X");
    PlayerTextDrawLetterSize(playerid, textopantalla2[playerid], 0.449999, 1.600000);
    PlayerTextDrawAlignment(playerid, textopantalla2[playerid], 1);
    PlayerTextDrawColor(playerid, textopantalla2[playerid], -16776961);
    PlayerTextDrawSetShadow(playerid, textopantalla2[playerid], 0);
    PlayerTextDrawSetOutline(playerid, textopantalla2[playerid], 1);
    PlayerTextDrawBackgroundColor(playerid, textopantalla2[playerid], 51);
    PlayerTextDrawFont(playerid, textopantalla2[playerid], 0);
    PlayerTextDrawSetProportional(playerid, textopantalla2[playerid], 1);
    // TEXTDRAW Ingreso al servidor.

	PlayerTextDrawSetProportional(playerid, TextLogin[playerid][2], 1);	TextLogin[playerid][1] = CreatePlayerTextDraw(playerid, 318.111145, 90.249969, "version 2.X");
	PlayerTextDrawLetterSize(playerid, TextLogin[playerid][1], 0.670804, 2.381666);
	PlayerTextDrawAlignment(playerid, TextLogin[playerid][1], 2);
	PlayerTextDrawColor(playerid, TextLogin[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid, TextLogin[playerid][1], 1);
	PlayerTextDrawSetOutline(playerid, TextLogin[playerid][1], 1);
	PlayerTextDrawBackgroundColor(playerid, TextLogin[playerid][1], 255);
	PlayerTextDrawFont(playerid, TextLogin[playerid][1], 0);
	PlayerTextDrawSetProportional(playerid, TextLogin[playerid][1], 1);

	TextLogin[playerid][2] = CreatePlayerTextDraw(playerid, 319.048553, 58.750034, "Gangsters Roleplay");
	PlayerTextDrawLetterSize(playerid, TextLogin[playerid][2], 0.749984, 3.361668);
	PlayerTextDrawAlignment(playerid, TextLogin[playerid][2], 2);
	PlayerTextDrawColor(playerid, TextLogin[playerid][2], -1);
	PlayerTextDrawSetShadow(playerid, TextLogin[playerid][2], 1);
	PlayerTextDrawSetOutline(playerid, TextLogin[playerid][2], 1);
	PlayerTextDrawBackgroundColor(playerid, TextLogin[playerid][2], 255);
	PlayerTextDrawFont(playerid, TextLogin[playerid][2], 0);
	PlayerTextDrawSetProportional(playerid, TextLogin[playerid][2], 1);

	// Aqui Checkea que el Usuario esta Baneado. -- V.0.1 Courier. 2020
	GetPlayerIp(playerid, playerIP, sizeof(playerIP));
	if (CheckBan(playerIP) == 1)
	{
		SetPlayerName(playerid, "IP_Baneada");
		Dialog(playerid, D_INVALIDO, DIALOG_STYLE_MSGBOX, "{FF0000}[Sistema Información]: BLOQUEO DE IP", "> La IP con la cual ingresaste se encuentra bloqueada del servidor.\n\n   {FFFFFF}puede ingresar al foro: {00c200}www.gs-rp.es/foro", "Aceptar", "");
		SetTimerEx("TimerKICK", 3000, false, "d", playerid);
		return 1;
	}
	SetPlayerColor(playerid, C_PLAYERBLANCO);
	DataUserClean(playerid);
	SetPlayerVirtualWorld(playerid, 1);
	RemoveBuildingForPlayerEx(playerid);
	Update3DTextLabelText(estado[playerid], 0xBFC0C2FF, "null");
	Attach3DTextLabelToPlayer(estado[playerid], playerid, 0.0, 0.0, 1000.0);
	return 0;
}

public OnPlayerDisconnect(playerid, reason)
{
    if(pago_tune[playerid] != 0)
	{
		for(new x = 0; x < 11; x++) { RemoveVehicleComponent(veh_tune[playerid], pieza_tune[playerid][x]); pieza_tune[playerid][x] = 0; }
		for (new vid = 0; vid < MAX_VEHICULOS; vid++) { if(InfoVehiculo[vid][vID] == veh_tune[playerid]) { ActualizarMods(InfoVehiculo[vid][vID]); } }
		VehSeguro[veh_tune[playerid]] = 0;
		pago_tune[playerid] = 0;
		veh_tune[playerid] = 0;
	}
	if (r_negocio[playerid] != -1)
	{
		i_Negocio[r_negocio[playerid]][EnPedido] = 0;
		r_negocio[playerid] = -1;
	}
	B_SANMUSIC[playerid] = 0;
	if(user[playerid][jGraffitiE] != -1)
	{
		Graffiti[user[playerid][jGraffitiE]][gPosX] = 0.0;
	}
	if(_Pesca[playerid] == 1) DestroyObject(pescador[playerid]);
	if(UsandoOptiwand[playerid] != -1) {
		user[playerid][jInterior] = 0;
		user[playerid][jVirtualWorld] = 0;
	}
	if(checkcoche[playerid] != 0) {
	    DestroyVehicle(cocherobo[playerid]);
		checkcoche[playerid] = 0;
		cocherobo[playerid] = 0;
	}
    new year, month, day, hour, minute, second,plname[50 + MAX_PLAYER_NAME],string[128],name[50 + MAX_PLAYER_NAME];
    GetPlayerName(playerid, plname, sizeof(plname));
    if (!strcmp(plname, "NombreInvalido", true)) return 1;
    getdate(year, month, day); gettime(hour, minute, second);
    user[playerid][jMeses] = month; user[playerid][jDias] = day; user[playerid][jHoras] = hour; user[playerid][jMinutos] = minute;
    if (GetPVarInt(playerid, "UsandoNombreP") == 1) {
        GetPVarString(playerid, "NombreP", name, sizeof(name));
        SetPlayerName(playerid, name);
        SetPVarInt(playerid, "UsandoNombreP", 0);
    }
    if (GetPVarInt(playerid, "EnEvento") == 1) {
        user[playerid][jInterior] = jEvento[playerid][eInterior];
        user[playerid][jVirtualWorld] = jEvento[playerid][eVW];
        user[playerid][jPosicion_R] = jEvento[playerid][eVariable][0];
        user[playerid][jPosicion_X] = jEvento[playerid][eVariable][1];
        user[playerid][jPosicion_Y] = jEvento[playerid][eVariable][2];
        user[playerid][jPosicion_Z] = jEvento[playerid][eVariable][3];
        user[playerid][jSangre] = jEvento[playerid][eVariable][4];
        user[playerid][jChaleco] = jEvento[playerid][eVariable][5];
    }
    SetPlayerChatBubble(playerid, "", 0xBFC0C2FF, 50.0, 1000);
    if (GetPVarInt(playerid, "EnCrack") == 1) { user[playerid][jMuerto] = 1; EliminarHerido(playerid); }
    if (InfoFogata[playerid][fPosicionX] != 0.0) { DestroyDynamicObject(InfoFogata[playerid][fObjeto]); DestroyDynamicObject(InfoFogata[playerid][fObjeto2]); }
    switch (reason) {
        case 0: { format(string, sizeof(string), "[Server Sistema Conexión]: Jugador (%s) se ha desconectado del servidor. (pérdida de conexión)", NombreRJugador(playerid)); ProxDetector(30.0, playerid, string, 0x92936FFF, 0x92936FFF, 0x92936FFF, 0x92936FFF, 0x92936FFF); }
        case 1: { format(string, sizeof(string), "[Server Sistema Conexión]: Jugador (%s) se ha desconectado del servidor. (desconecto del juego [gta.exe])", NombreRJugador(playerid)); ProxDetector(30.0, playerid, string, 0x92936FFF, 0x92936FFF, 0x92936FFF, 0x92936FFF, 0x92936FFF); }
        case 2: { format(string, sizeof(string), "[Server Sistema Conexión]: Jugador (%s) se ha desconectado del servidor. (sancionado)", NombreRJugador(playerid)); ProxDetector(30.0, playerid, string, 0x92936FFF, 0x92936FFF, 0x92936FFF, 0x92936FFF, 0x92936FFF); }
    }
    if (user[playerid][jMuerto] > 0) { KillTimer(MuertoTimer[playerid]); }
    KillTimer(VisitaTimer[playerid]);
	KillTimer(ToqueLlamadaTimer[playerid]); //Sistema teléfono
    if(PersonaEnLlamada[playerid] != -1) KillTimer(ToqueLlamadaTimer[PersonaEnLlamada[playerid]]);
    if(EnLlamada[playerid] == 3) user[playerid][jSaldo] -= 3;
	if(PersonaEnLlamada[playerid] != -1) {
	    if(EnLlamada[PersonaEnLlamada[playerid]] == 3) {
			_Mensaje(PersonaEnLlamada[playerid], 2, "0", "Precio de la llamada: 1$");
			user[PersonaEnLlamada[playerid]][jSaldo] -= 1;
		}
	}
	if ( _sanCall == playerid ) {
		_MensajeSAN(0x00DC3AFF, "[SAN] Conexión telefónica finalizada.");
		_sanCall = -1;
	}
    for(new i=0; i<MAX_PLAYERS; i++) { if(PersonaEnLlamada[i] == playerid){_Mensaje(i, 2, "0", "Se ha cortado la línea..."); EnLlamada[i] = 0; PersonaEnLlamada[i] = -1; break;} }
    if (GetPVarType(playerid, "AreaVehPos")) {
        if (GetPVarType(playerid, "AreaVehMus")) {
            foreach(Player, i) {
                if (IsPlayerInDynamicArea(i, GetPVarInt(playerid, "AreaVehMus"))) {
                    PararMVeh(i);
                    _Mensaje(i, 2, "0", "El dueño de el vehículo a salido del servidor.");
                }
            }
        }
    }
	if (GetPVarType(playerid, "PlacedBB")) {
        DestroyDynamicObject(GetPVarInt(playerid, "PlacedBB"));
        DestroyDynamic3DTextLabel(Text3D: GetPVarInt(playerid, "BBLabel"));
        if (GetPVarType(playerid, "BBArea")) {
            foreach(Player, i) {
                if (IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) {
                    StopAudioStreamForPlayer(i);
                    _Mensaje(i, 2, "0", "El dueño del equipo de sonido a salido del servidor.");
                }
            }
        }
    }
    if (Spectate[playerid] < 553) {
        SpectadorID[Spectate[playerid]] = 999;
        Spectate[playerid] = 999;
    }
    foreach(Player, i)
	{
        if (_MedicAcept[i] == playerid)
		{
            _MedicAcept[playerid] = 999;
            GameTextForPlayer(i, "~w~Jugador~n~~r~se desconecto", 5000, 1);
            _Medic2Call[i] = 0;
            DisablePlayerCheckpoint(i);
        }
        if (_BombAcept[i] == playerid)
		{
            _BombAcept[playerid] = 999;
            GameTextForPlayer(i, "~w~Jugador~n~~r~se desconecto", 5000, 1);
            _Bomb2Call[i] = 0;
            DisablePlayerCheckpoint(i);
        }
    }
    if (EnServicio[playerid] == 1) {
		if (Es_Faccion(playerid, 2)) Fac2_ -= 1;
		if (Es_Faccion(playerid, 5)) Fac5_ -= 1;
	}
    PlayerTextDrawDestroy(playerid, TextTrabajo[playerid]);
    PlayerTextDrawDestroy(playerid, Velocimetro[playerid]);
    Guardarcoches(playerid);
    GuardarCuenta(playerid);
    return 1;
}

stock IlegalCharacterName(str[]) {
	static const IlegalC[] = {
		'0','1','2','3','4',
		'5','6','7','8','9',
		'[',']','$','(',')',
		'.', '-'
	};
	Loop(i, strlen(str),0) {
		Loop(c, sizeof IlegalC, 0) {
		    if(str[i] == IlegalC[c]) return true;
		}
	}
	return false;
}

funcion EditarAccesorio(playerid,ida) {
	new ObjetTitleName[128], NombreAcc[32];
	for(new i; i < sizeof(Accesorios); i++) {
		if(Accesorios[i][ModeloAccesorio] == InfoAccesorio[playerid][ida][aModelo]) {
	 		format(NombreAcc, sizeof(NombreAcc), "%s", Accesorios[i][NombreAccesorio]);
		}
	}
	format(ObjetTitleName, sizeof(ObjetTitleName), "Añadir al personaje: {D6E1EB}Accesorios{F5FF00}%s", NombreAcc);
	new Str[300];
	format(Str,sizeof(Str),"{ffffff}Dar accesorio\nTirar accesorio\nEdición personalizada\nEditar parte {00c200}(%s){ffffff}\nOcultar/Mostrar\nEliminar accesorio",ParteAccesorios[InfoAccesorio[playerid][ida][aParte]]);
	Dialog(playerid,D_ACCESORIOS2,DIALOG_STYLE_LIST,ObjetTitleName,Str,"Aceptar","Cancelar");
	return 1;
}

public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float: fOffsetX, Float: fOffsetY, Float: fOffsetZ, Float: fRotX, Float: fRotY, Float: fRotZ, Float: fScaleX, Float: fScaleY, Float: fScaleZ) {
    if(response) {
		InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionX] = fOffsetX;
    	InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionY] = fOffsetY;
   	    InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionZ] = fOffsetZ;
    	InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionX] = fRotX;
    	InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionY] = fRotY;
    	InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionZ] = fRotZ;
    	InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaX] = fScaleX;
    	if(fScaleX < 0.1) InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaX] = 0.1;
    	else if(fScaleX > 1.5) InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaX] = 1.5;
    	InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaY] = fScaleY;
    	if(fScaleY < 0.1) InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaY] = 0.1;
    	else if(fScaleY > 1.5) InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaY] = 1.5;
    	InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaZ] = fScaleZ;
    	if(fScaleZ < 0.1) InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaZ] = 0.1;
    	else if(fScaleZ > 1.5) InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaZ] = 1.5;
    	ColocarObject(playerid, RanuraSeleccionada[playerid], InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aModelo],
    	InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aParte], InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionX],
    	InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionY], InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionZ],
    	InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionX], InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionY],
    	InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionZ], InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaX],
    	InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaY], InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaZ]);
    	_Mensaje(playerid, 2, "0", "Edición del accesorio en tu personaje se efectuo correctamente.");
    	RanuraSeleccionada[playerid] = -1;
    	EditandoObjetoJ[playerid] = 0;
	}
    return 1;
}

ARegistrar(playerid) {
	LimpiarPantalla(playerid);
    SetPosEx(playerid, 1480.5188,-1757.5979,17.5313,359.2282, 0, 0);
	user[playerid][jNivel] = 1, SetPlayerScore(playerid, 1);
	user[playerid][jRegistrado] = 1;
	user[playerid][jBanco] = 85000, DarDineroGC(playerid, 8231);
	SetPlayerInterior(playerid, 0), SetPlayerVirtualWorld(playerid, 0);
	TogglePlayerControllable(playerid, 1);
	SetCameraBehindPlayer(playerid);
	if(user[playerid][jSexo] == 1) Skin_(playerid, 60);
	else if(user[playerid][jSexo] == 2) Skin_(playerid, 93);
    new year, month, day, hour, minute, second;
    getdate(year, month, day);
    gettime(hour, minute, second);
    user[playerid][jMeses] = month, user[playerid][jDias] = day, user[playerid][jHoras] = hour, user[playerid][jMinutos] = minute;
	GuardarCuenta(playerid);
	new InfoDlg[300];
	format(InfoDlg, sizeof(InfoDlg), "Hola jugador %s, te hemos adherido a tu cuenta 85.000$ de dólares + 8231$ en mano.", NombreJugador(playerid));
	_Mensaje(playerid, 4, "ffffff", InfoDlg);
	_Mensaje(playerid, 4, "ADC3E7", "Para más información visita: www.gs-rp.es ");
	BorrarTextLogin(playerid);
	GameTextForPlayer(playerid,"~w~Cuenta registrada~n~~r~Correctamente", 2000, 3);
	return 1;
}

Menu_Tuneo(playerid)
{
	new Str2[256], Str_[3000], i_ = 0;
	for (new i = 0; i < 11; i++) { if (pieza_tune[playerid][i] > 0) { i_++; } }
	Formato(Str2, "Piezas actuales ({33CCFF}%d{ffffff})\n\
	Acabar tuneo ({00c200}$%d{ffffff})\n\
	Capo\n\
	Techo\n\
	Tubos de escape\n\
	Parachoques delantero\n\
	Parachoques trasero\n\
	Protector delantero\n\
	Protector trasero\n\
	Aleron\n\
	Faros\n\
	Ruedas\n\
	Suspensión hidraulica\n\
	{b00000}Salir tuneo", i_, pago_tune[playerid]);
	strcat(Str_,Str2);
	Dialog(playerid, D_Tmecanico1, DIALOG_STYLE_LIST, "{D6E1EB}Tunning", Str_, "Seleccionar", "Ver Piezas");
	return 1;
}

ACertificar(playerid)
{
	_Pregunta(playerid, 1, 0);
	return 1;
}

funcion _Pregunta(playerid, pregunta, error) {
	new InfoDlg[300];
	if(error == 1) TestErrores[playerid] -= 1;
	switch (pregunta) {
		case 1:
			{
				new d_Testing[2500];
				strcat(d_Testing, "Respuestas\n", sizeof(d_Testing));
				strcat(d_Testing, "Voy al foro (www.samp.gs-rp.es) y realizo un reporte al administador por negligente.\n", sizeof(d_Testing));
				strcat(d_Testing, "Me creo otra cuenta y comienzo a insistir mi desbaneo al administrador, quizás me desbaneará.\n", sizeof(d_Testing));
				strcat(d_Testing, "Realizo una apelación en el foro con el formato correspondiente y espero respuesta.\n", sizeof(d_Testing));
				strcat(d_Testing, "Ingreso al TeamSpeak3 del servidor y comienzo a insultar a todos.", sizeof(d_Testing));
				Dialog(playerid, D_TEST0, DIALOG_STYLE_TABLIST_HEADERS, "{D6E1EB}> Un administrador me ha baneado y no estoy conforme con lo que hizo..", d_Testing, "Seleccionar", "");
			}
		case 2:
			{
				new d_Testing[2500];
				strcat(d_Testing, "Respuestas\n", sizeof(d_Testing));
				strcat(d_Testing, "Cuando quiero saber si hay algún policía conectado.\n", sizeof(d_Testing));
				strcat(d_Testing, "Para dudas relacionadas al gamemode.\n", sizeof(d_Testing));
				strcat(d_Testing, "Cuando quiero saludar a un administrador que es mi amigo.\n", sizeof(d_Testing));
				strcat(d_Testing, "¡Ese comando no existe!", sizeof(d_Testing));
				Dialog(playerid, D_TEST1, DIALOG_STYLE_TABLIST_HEADERS, "{D6E1EB}> ¿Para que sirve el comando /duda?", d_Testing, "Seleccionar", "");

            }
		case 3:
			{
				new d_Testing[2500];
				strcat(d_Testing, "Respuestas\n", sizeof(d_Testing));
				strcat(d_Testing, "Mandar un /duda para que me revivan y sancionen al usuario.\n", sizeof(d_Testing));
				strcat(d_Testing, "Decirle por mensaje privado (/mp) a un administrador lo que ha ocurrido.\n", sizeof(d_Testing));
				strcat(d_Testing, "La B y D son correctas.\n", sizeof(d_Testing));
				strcat(d_Testing, "Reporto al usuario con el comando /reportar y espero a ser atendido.", sizeof(d_Testing));
				Dialog(playerid, D_TEST2, DIALOG_STYLE_TABLIST_HEADERS, "{D6E1EB}> Si un usuario me mata sin motivo alguno ¿qué debo hacer?", d_Testing, "Seleccionar", "");
			}
		case 4:
			{
				new d_Testing[2500];
				strcat(d_Testing, "Respuestas\n", sizeof(d_Testing));
				strcat(d_Testing, "Le digo a un staff en servicio que encontré el bug, ellos lo arreglarán.\n", sizeof(d_Testing));
				strcat(d_Testing, "Aviso a mis colegas del bug y nos beneficiamos, total nadie lo sabrá.\n", sizeof(d_Testing));
				strcat(d_Testing, "Comienzo a usar el bug para mi beneficio, esta es mi recompensa por encontrarlo.\n", sizeof(d_Testing));
				strcat(d_Testing, "Puedo usar el bug mientras no haya otros usuarios cerca mio.", sizeof(d_Testing));
				Dialog(playerid, D_TEST3, DIALOG_STYLE_TABLIST_HEADERS, "{D6E1EB}> He encontrado un bug para obtener dinero fácil..", d_Testing, "Seleccionar", "");
			}
		case 5:
			{
				new d_Testing[2500];
				strcat(d_Testing, "Respuestas\n", sizeof(d_Testing));
				strcat(d_Testing, "Tomo un vehículo del algún trabajo, si total sobran en todos.\n", sizeof(d_Testing));
				strcat(d_Testing, "Pido servicio taxi o me voy caminando de paso hago ejercicio.\n", sizeof(d_Testing));
				strcat(d_Testing, "Le robo sin rol un vehículo a un usuario, seguro me lo presta.\n", sizeof(d_Testing));
				strcat(d_Testing, "Pido a un administrador que me haga teleport, el es bueno.", sizeof(d_Testing));
				Dialog(playerid, D_TEST4, DIALOG_STYLE_TABLIST_HEADERS, "{D6E1EB}> Soy nuevo y no tengo con que moverme por la ciudad, ¿qué hago?", d_Testing, "Seleccionar", "");
			}
		case 6:
			{
				new d_Testing[2500];
				strcat(d_Testing, "Respuestas\n", sizeof(d_Testing));
				strcat(d_Testing, "Le devuelvo el insulto, a mí nadie me puede insultar y menos en un juego.\n", sizeof(d_Testing));
				strcat(d_Testing, "C y D son correctas.\n", sizeof(d_Testing));
				strcat(d_Testing, "Uso el comando /reportar, sé que no está permitido insultar OOC.\n", sizeof(d_Testing));
				strcat(d_Testing, "Puedo tomar pruebas, reporto en el foro y espero a ser atendido por un staff. ", sizeof(d_Testing));
				Dialog(playerid, D_TEST5, DIALOG_STYLE_TABLIST_HEADERS, "{D6E1EB}> Un usuario me insulta por el comando /b", d_Testing, "Seleccionar", "");
			}
		case 7:
			{
				new d_Testing[2500];
				strcat(d_Testing, "Respuestas\n", sizeof(d_Testing));
				strcat(d_Testing, "Entro al servidor/ts3 y le digo a un administrador que acepte mi cuenta ahora.\n", sizeof(d_Testing));
				strcat(d_Testing, "Me voy del servidor ya que se demoran mucho y soy impaciente.\n", sizeof(d_Testing));
				strcat(d_Testing, "Mientras me la aceptan entro al servidor y uso cheats.\n", sizeof(d_Testing));
				strcat(d_Testing, "Espero el tiempo que sea necesario, mientras puedo ir conociendo el servidor.", sizeof(d_Testing));
				Dialog(playerid, D_TEST6, DIALOG_STYLE_TABLIST_HEADERS, "{D6E1EB}> Me registré en el foro pero aún no me aceptan la cuenta..", d_Testing, "Seleccionar", "");
			}
		case 8:
			{
				new d_Testing[2500];
				strcat(d_Testing, "Respuestas\n", sizeof(d_Testing));
				strcat(d_Testing, "Cuando reaparezca lo sigo y tomo venganza.\n", sizeof(d_Testing));
				strcat(d_Testing, "Le digo que lo que hizo esta mal por canales OOC.\n", sizeof(d_Testing));
				strcat(d_Testing, "Me desconecto antes de que me mate.\n", sizeof(d_Testing));
				strcat(d_Testing, "Sé que el DB con magnum eagle no está permitido, lo reporto.", sizeof(d_Testing));
				Dialog(playerid, D_TEST7, DIALOG_STYLE_TABLIST_HEADERS, "{D6E1EB}> Si un usuario me asesina con una Desert Eagle haciendo DriveBy..", d_Testing, "Seleccionar", "");
			}
		case 9:
			{
				new d_Testing[2500];
				strcat(d_Testing, "Respuestas\n", sizeof(d_Testing));
				strcat(d_Testing, "Mi arma en el maletero.\n", sizeof(d_Testing));
				strcat(d_Testing, "De rolear el entorno.\n", sizeof(d_Testing));
				strcat(d_Testing, "De avisarle a un staff que esté recon por si pasa algo.\n", sizeof(d_Testing));
				strcat(d_Testing, "El trabajo de delincuente y el pasamontañas.", sizeof(d_Testing));
				Dialog(playerid, D_TEST8, DIALOG_STYLE_TABLIST_HEADERS, "{D6E1EB}> Iré a realizar un robo y me coloco una máscara ¿qué me olvide?", d_Testing, "Seleccionar", "");
			}
		case 10:
			{
				new d_Testing[2500];
				strcat(d_Testing, "Respuestas\n", sizeof(d_Testing));
				strcat(d_Testing, "Me leí la normativa, se que no está permitido el uso de macros que den ventajas.\n", sizeof(d_Testing));
				strcat(d_Testing, "Las ventajas están prohibidas en el servidor.\n", sizeof(d_Testing));
				strcat(d_Testing, "Sirven para rolear sacar armas y choques.\n", sizeof(d_Testing));
				strcat(d_Testing, "La respuesta B y C son correctas.", sizeof(d_Testing));
				Dialog(playerid, D_TEST9, DIALOG_STYLE_TABLIST_HEADERS, "{D6E1EB}> Los macros en el servidor (HKB)..", d_Testing, "Seleccionar", "");
			}
		case 11:
			{
				if(TestErrores[playerid] == 10) {
					Dialog(playerid, D_RPARTE_2, DIALOG_STYLE_MSGBOX, "{ADC3E7}Resultados", "{b0b0b0}Obtuviste {00c200}10{ffffff}/{00c200}10{ffffff}\n\n  ¡Ya puedes ingresar correctamente!\n", "Siguiente", "");
					SetPVarInt(playerid, "pasadotest", 2);
				} else {
					format(InfoDlg, sizeof(InfoDlg), "{ffffff}Calificación: {ff0000}%d{ffffff}/{00c200}10{ffffff}.\n\n	Intenta de nuevo\n", TestErrores[playerid]);
					Dialog(playerid, D_RPARTE_2, DIALOG_STYLE_MSGBOX, "{ADC3E7}Resultados", InfoDlg, "Siguiente", "");
					TestErrores[playerid] = 10;
					SetPVarInt(playerid, "pasadotest", 1);
				}
			}
	}
	return 1;
}

funcion _Expulsar(jugador, tipo, mensaje[]) {
    new InfoMjs[150];
    switch (tipo) {
        case 0: // Dialogo
            {
                format(InfoMjs, sizeof(InfoMjs), "{ffffff}Usted ha sido expulsado del servidor\n\n{ADC3E7}Razón:{ffffff}\n %s.", mensaje);
            	Dialog(jugador, D_INVALIDO, DIALOG_STYLE_MSGBOX, "{B00000}SERVER:", InfoMjs, "Aceptar", "");
            	Expulsar(jugador, 1);
            }
        case 1: // Chat
            {
				format(InfoMjs, sizeof(InfoMjs), "[ServerInfoMensaje]: {ffffff} Usted ha sido expulsado del servidor, {ADC3E7}Razón:{ffffff} %s.", mensaje);
				SendClientMessage(jugador, 0xB00000FF, InfoMjs);
            	Expulsar(jugador, 1);
			}
    }
    return 1;
}

funcion _MarcarPos(playerid, Float: x, Float: y, Float: z, mensaje[]){
	SetPlayerCheckpoint(playerid, x, y, z, 2);
	_Mensaje(playerid, 4, "b0b0b0", mensaje);
	SetPVarInt(playerid, "EnCheckPoint", 1);
	TogglePlayerAllDynamicCPs(playerid, false);
    return 1;
}

stock _Gastar(playerid, nid, pagar, objeto, cantidad) {
	new string[128];
	if(ComprobarDineroJ(playerid) < pagar) { _Mensaje(playerid, 0, "32", "No tienes suficiente dinero."); return 1; }
	if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
	if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, objeto); user[playerid][jm_Derecha] = objeto, user[playerid][jm_DerechaCant] = cantidad;}
	else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, objeto); user[playerid][jm_Izquierda] = objeto, user[playerid][jm_IzquierdaCant] = cantidad;}
	Compra(playerid, pagar);
	i_Negocio[nid][nDinero] += pagar;
	i_Negocio[nid][nProductos]--;
	format(string, sizeof(string), "Compraste un(a) %s.", InfoObjeto[objeto][NombreObjeto]);
	_Mensaje(playerid, 4, "33CCFF", string);
    return 1;
}

stock _Pagar(playerid, nid, pagar) {
	Compra(playerid, pagar);
	i_Negocio[nid][nDinero] += pagar;
	i_Negocio[nid][nProductos]--;
    return 1;
}

stock Expulsar(jugador, seg = 0) {
    if(!seg) return Kick(jugador);
    else if(seg) SetTimerEx("Desconectar", seg * 1000, false, "i", jugador);
    return 1;
}
funcion Desconectar(jugador) return Kick(jugador);

funcion _boombox(playerid, music[]) {
	if(GetPVarType(playerid, "PlacedBB")) {
		foreach(Player, i) {
			if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) {
				PlayStream(i, music, GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
			}
		}
		SetPVarString(playerid, "BBStation", music);
	}
	return 1;
}

funcion _stereo(playerid, music[]) {
	if(GetPVarType(playerid, "AreaVehPos")) {
		foreach(Player, i) {
			if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "AreaVehMus"))) {
				ReproducirMVeh(i, music, GetPVarFloat(playerid, "AreaVehPosX"), GetPVarFloat(playerid, "AreaVehPosY"), GetPVarFloat(playerid, "AreaVehPosZ"), 50.0, 1);
			}
		}
		SetPVarString(playerid, "AreaVehAud", music);
	}
	return 1;
}

funcion _estereo(playerid, music[], id) {
	foreach(Player, i) if(GetPlayerVehicleID(i) == GetPlayerVehicleID(playerid)) {
		escuchandop[i] = 1;
		estacionp[i] = EscucharMusica(i, music);
	}
	estacionveh[GetPlayerVehicleID(playerid)] = id;
	return 1;
}


funcion _MusicTlf(playerid, music[], titulo[]) {
	StopAudioStreamForPlayer(playerid);
	EscucharMusica(playerid, music);
	_Mensaje(playerid, 4, "ADC3E7", titulo);
	MusicaEsc[playerid] = 1;
	return 1;
}

funcion _Agenda(playerid) {
	new dialog[1024], string[256];
	if(user[playerid][jContacto][0] != 0) format(string, sizeof(string), "\n{b0b0b0}Contacto #1{FFFFFF} | %s [%d]", user[playerid][jContactoN1], user[playerid][jContacto][0]);
	else format(string, sizeof(string), "\n{b0b0b0}Contacto #1{FFFFFF} | Vacío");
	strcat(dialog, string);
	if(user[playerid][jContacto][1] != 0) format(string, sizeof(string), "\n{b0b0b0}Contacto #2{FFFFFF} | %s [%d]", user[playerid][jContactoN2], user[playerid][jContacto][1]);
	else format(string, sizeof(string), "\n{b0b0b0}Contacto #2{FFFFFF} | Vacío");
	strcat(dialog, string);
	if(user[playerid][jContacto][2] != 0) format(string, sizeof(string), "\n{b0b0b0}Contacto #3{FFFFFF} | %s [%d]", user[playerid][jContactoN3], user[playerid][jContacto][2]);
	else format(string, sizeof(string), "\n{b0b0b0}Contacto #3{FFFFFF} | Vacío");
	strcat(dialog, string);
	if(user[playerid][jContacto][3] != 0) format(string, sizeof(string), "\n{b0b0b0}Contacto #4{FFFFFF} | %s [%d]", user[playerid][jContactoN4], user[playerid][jContacto][3]);
	else format(string, sizeof(string), "\n{b0b0b0}Contacto #4{FFFFFF} | Vacío");
	strcat(dialog, string);
	if(user[playerid][jContacto][4] != 0) format(string, sizeof(string), "\n{b0b0b0}Contacto #5{FFFFFF} | %s [%d]", user[playerid][jContactoN5], user[playerid][jContacto][4]);
	else format(string, sizeof(string), "\n{b0b0b0}Contacto #5{FFFFFF} | Vacío");
	strcat(dialog, string);
	if(user[playerid][jContacto][5] != 0) format(string, sizeof(string), "\n{b0b0b0}Contacto #6{FFFFFF} | %s [%d]", user[playerid][jContactoN6], user[playerid][jContacto][5]);
	else format(string, sizeof(string), "\n{b0b0b0}Contacto #6{FFFFFF} | Vacío");
	strcat(dialog, string);
	if(user[playerid][jContacto][6] != 0) format(string, sizeof(string), "\n{b0b0b0}Contacto #7{FFFFFF} | %s [%d]", user[playerid][jContactoN7], user[playerid][jContacto][6]);
	else format(string, sizeof(string), "\n{b0b0b0}Contacto #7{FFFFFF} | Vacío");
	strcat(dialog, string);
	if(user[playerid][jContacto][7] != 0) format(string, sizeof(string), "\n{b0b0b0}Contacto #8{FFFFFF} | %s [%d]", user[playerid][jContactoN8], user[playerid][jContacto][7]);
	else format(string, sizeof(string), "\n{b0b0b0}Contacto #8{FFFFFF} | Vacío");
	strcat(dialog, string);
	if(user[playerid][jContacto][8] != 0) format(string, sizeof(string), "\n{b0b0b0}Contacto #9{FFFFFF} | %s [%d]", user[playerid][jContactoN9], user[playerid][jContacto][8]);
	else format(string, sizeof(string), "\n{b0b0b0}Contacto #9{FFFFFF} | Vacío");
	strcat(dialog, string);
	if(user[playerid][jContacto][9] != 0) format(string, sizeof(string), "\n{b0b0b0}Contacto #10{FFFFFF} | %s [%d]", user[playerid][jContactoN10], user[playerid][jContacto][9]);
	else format(string, sizeof(string), "\n{b0b0b0}Contacto #10{FFFFFF} | Vacío");
	strcat(dialog, string);


	if(user[playerid][jContacto][10] != 0) format(string, sizeof(string), "\n{b0b0b0}Contacto #11{FFFFFF} | %s [%d]", user[playerid][jContactoN11], user[playerid][jContacto][10]);
	else format(string, sizeof(string), "\n{b0b0b0}Contacto #11{FFFFFF} | Vacío");
	strcat(dialog, string);
	if(user[playerid][jContacto][11] != 0) format(string, sizeof(string), "\n{b0b0b0}Contacto #12{FFFFFF} | %s [%d]", user[playerid][jContactoN12], user[playerid][jContacto][11]);
	else format(string, sizeof(string), "\n{b0b0b0}Contacto #12{FFFFFF} | Vacío");
	strcat(dialog, string);
	if(user[playerid][jContacto][12] != 0) format(string, sizeof(string), "\n{b0b0b0}Contacto #13{FFFFFF} | %s [%d]", user[playerid][jContactoN13], user[playerid][jContacto][12]);
	else format(string, sizeof(string), "\n{b0b0b0}Contacto #13{FFFFFF} | Vacío");
	strcat(dialog, string);
	if(user[playerid][jContacto][13] != 0) format(string, sizeof(string), "\n{b0b0b0}Contacto #14{FFFFFF} | %s [%d]", user[playerid][jContactoN14], user[playerid][jContacto][13]);
	else format(string, sizeof(string), "\n{b0b0b0}Contacto #14{FFFFFF} | Vacío");
	strcat(dialog, string);
	if(user[playerid][jContacto][14] != 0) format(string, sizeof(string), "\n{b0b0b0}Contacto #15{FFFFFF} | %s [%d]", user[playerid][jContactoN15], user[playerid][jContacto][14]);
	else format(string, sizeof(string), "\n{b0b0b0}Contacto #15{FFFFFF} | Vacío");
	strcat(dialog, string);
	if(user[playerid][jContacto][15] != 0) format(string, sizeof(string), "\n{b0b0b0}Contacto #16{FFFFFF} | %s [%d]", user[playerid][jContactoN16], user[playerid][jContacto][15]);
	else format(string, sizeof(string), "\n{b0b0b0}Contacto #16{FFFFFF} | Vacío");
	strcat(dialog, string);
	if(user[playerid][jContacto][16] != 0) format(string, sizeof(string), "\n{b0b0b0}Contacto #17{FFFFFF} | %s [%d]", user[playerid][jContactoN17], user[playerid][jContacto][16]);
	else format(string, sizeof(string), "\n{b0b0b0}Contacto #17{FFFFFF} | Vacío");
	strcat(dialog, string);
	if(user[playerid][jContacto][17] != 0) format(string, sizeof(string), "\n{b0b0b0}Contacto #18{FFFFFF} | %s [%d]", user[playerid][jContactoN18], user[playerid][jContacto][17]);
	else format(string, sizeof(string), "\n{b0b0b0}Contacto #18{FFFFFF} | Vacío");
	strcat(dialog, string);
	if(user[playerid][jContacto][18] != 0) format(string, sizeof(string), "\n{b0b0b0}Contacto #19{FFFFFF} | %s [%d]", user[playerid][jContactoN19], user[playerid][jContacto][18]);
	else format(string, sizeof(string), "\n{b0b0b0}Contacto #19{FFFFFF} | Vacío");
	strcat(dialog, string);
	if(user[playerid][jContacto][19] != 0) format(string, sizeof(string), "\n{b0b0b0}Contacto #20{FFFFFF} | %s [%d]", user[playerid][jContactoN20], user[playerid][jContacto][19]);
	else format(string, sizeof(string), "\n{b0b0b0}Contacto #20{FFFFFF} | Vacío");
	strcat(dialog, string);

	Dialog(playerid, D_AGENDA, DIALOG_STYLE_LIST, "Agenda: {b0b0b0}Contactos guardados", dialog, "Seleccionar", "Cancelar");
	return 1;
}
stock IsVarchard(const nombre[])
{
    new
        len = strlen(nombre),
        cont=0,
        pos;
    if(!(3 <= len <= 3)) return false;//Controlar que el nombre tenga mas de 8 caracteres
    for(new k = 0; k < len; k++)
    {
        switch(nombre[k])
        {
            case 'a' .. 'z': continue;
            case 'A' .. 'Z': continue;
            default: return false;
        }
    }
    return true;
}

PrecioEmpeno(idobject)
{
    switch(idobject)
    {
        case 30: return 1600;
        case 115..123: return 16;
        case 21: return 1900;
        case 72: return 600;
        case 82: return 50;
        case 81: return 600;
        case 38: return 17;
    }
	return 0;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	new idcar = GetPlayerVehicleID(playerid), string[256];
	if (dialogid == D_Repartos)
	{
		if(!response) { _Mensaje(playerid, 4, "b0b0b0", "Cerraste la lista de repartos."); return 1; }
		new ID = listitem,StrPVar[40];
		Formato(StrPVar,"GPS_Puto_%d",ID);
		new i = GetPVarInt(playerid,StrPVar);
		r_negocio[playerid] = i;
		if(i_Negocio[i][EnPedido] == 1) return _Mensaje(playerid, 4, "b0b0b0", "Pedido en espera, intenta más tarde o intenta con otro.");

		TogglePlayerAllDynamicCPs(playerid, false);
		new cajas = random(3);
		switch(cajas)
		{
			case 0: SetPlayerCheckpoint(playerid, -114.8255, -330.7507, 0.9912, 12);
			case 1: SetPlayerCheckpoint(playerid, -183.9354, -277.5449, 1.0257, 12);
			case 2: SetPlayerCheckpoint(playerid, 65.1676, -273.5888, 1.1238, 12);
		}
		SetPVarInt(playerid, "EnCheckPoint", 3);
		_Mensaje(playerid, 4, "A7CE00", "Busca la mercancía que debes llevar al negocio, se marcó en el radar la ubicación.");
		_Mensaje(playerid, 4, "A7CE00", "Recuerda ir en un vehículo con espacio, ten cuidado con chocarlo podrían despedirte.");
		i_Negocio[i][EnPedido] = 1;
		return 1;
	}
	if(dialogid == D_VehEmpresa)
	{
		if(!response) { _Mensaje(playerid, 4, "b0b0b0", "Cancelaste la compra de vehículos para tu empresa."); return 1; }
		new modelo, precio, e_id = user[playerid][jEmpresaKey];
		if (i_Empresa[e_id][eTipo] == 1)
		{
			switch(listitem)
			{
				case 0: if(RevisarDinero(playerid, 9500)) { modelo = 422; precio = 9500; }
				case 1: if(RevisarDinero(playerid, 11300)) { modelo = 428; precio = 11300; }
				case 2: if(RevisarDinero(playerid, 8200)) { modelo = 440; precio = 8200; }
				case 3: if(RevisarDinero(playerid, 8700)) { modelo = 468; precio = 8700; }
				case 4: if(RevisarDinero(playerid, 18000)) { modelo = 482; precio = 18000; }
				case 5: if(RevisarDinero(playerid, 22400)) { modelo = 498; precio = 22400; }
				case 6: if(RevisarDinero(playerid, 16700)) { modelo = 499; precio = 16700; }
				case 7: if(RevisarDinero(playerid, 20000)) { modelo = 525; precio = 20000; }
			}
		}
		else if (i_Empresa[e_id][eTipo] == 2)
		{
			switch(listitem)
			{
				case 0: if(RevisarDinero(playerid, 18500)) { modelo = 552; precio = 18500; }
				case 1: if(RevisarDinero(playerid, 20000)) { modelo = 525; precio = 20000; }
				case 2: if(RevisarDinero(playerid, 8700)) { modelo = 468; precio = 8700; }
				case 3: if(RevisarDinero(playerid, 18000)) { modelo = 426; precio = 18000; }
			}
		}
		new Float: X, Float: Y, Float: Z, Float: Angle;
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, Angle);
		for (new veh = 0; veh < 10; veh++)
		{
			if (!InfoVehEmp[user[playerid][jEmpresaKey]][veh][vPrecio])
			{
				DarDineroGC(playerid, -precio);
				crear_VehEmpresa(playerid, user[playerid][jEmpresaKey], veh, modelo, X, Y+3, Z, Angle, 1, 1, precio);
            	veh = 10;
            	return 1;
			}
		}
		_Mensaje(playerid, 4, "b0b0b0", "No fue posible adquirir el vehículo, ya tienes 10 en la empresa.");
	}
	if(dialogid == DIALOGO_EMPRESA)
	{
	    if(!response) return 1;
		new putamierda[35], putamierdita[22], nombre[25], horasjugadas, andaconectado;
		format(putamierdita, sizeof(putamierdita), "miembroinfo%d", listitem);
		GetPVarString(playerid, putamierdita, putamierda, 35);
		sscanf(putamierda, "s[25]d", nombre, horasjugadas);
		sscanf(nombre, "u", andaconectado);
		if (IsPlayerConnected(andaconectado))
		{
			ShowPlayerDialog(playerid, DIALOGO_EMPRESA2, DIALOG_STYLE_LIST, nombre, "Expulsar\nTransferir", "Aceptar", "Salir");
		}
		else
		{
			ShowPlayerDialog(playerid, DIALOGO_EMPRESA2, DIALOG_STYLE_LIST, nombre, "Expulsar", "Aceptar", "Salir");
		}
		SetPVarString(playerid,"nombredelemprendedor" , nombre);
		SetPVarInt(playerid,"iddelemprendedor", listitem);
	}

    if(dialogid == DIALOGO_EMPRESA2)
    {
        if(!response) return 1;
        switch(listitem)
        {
            case 0:
            {
                new putamierda[30], nombre[25], andaconectado, siono, linea;
                format(putamierda, sizeof(putamierda), "Empresas/iEmpresa_%d.pro", user[playerid][jEmpresaKey]);
               	GetPVarString(playerid, "nombredelemprendedor", nombre, 25);
				new File:llavesita = fopen(putamierda ,io_read);
				if(llavesita)
				{
					while(fread(llavesita, string))
					{
						linea++;
						if(strfind(string, nombre, true) != -1)
						{
							siono = linea;
							break;
						}
					}
					if(siono != -1) fdeleteline(putamierda, siono);
				}
				fclose(llavesita);
                i_Empresa[user[playerid][jEmpresaKey]][eMiembros]--;
                Mensaje_(playerid, -1, "Usuario removido de la empresa.");
                sscanf(nombre, "u", andaconectado);
                save_Empresa(user[playerid][jEmpresaKey]);
                if (IsPlayerConnected(andaconectado))
                {

					format(putamierda, sizeof(putamierda), "* %s(%d) fue expulsado de la empresa.", nombre, andaconectado);
					_Mensaje(playerid, 4, "33CCFF", putamierda);
					user[andaconectado][jContrato] = -1;
                    return 1;
                }
                else
                {
                    format(putamierda, sizeof(putamierda), DATOS_CUENTAS, nombre);
                    if(!fexist(putamierda)) _Mensaje(playerid, 0, "0", "No se encontró archivo del jugador.");
                    new INI: File = INI_Open(putamierda);
                    INI_WriteInt(File,"Contrato", -1);
                    INI_Close(File);
					format(putamierda, sizeof(putamierda), "* %s fue expulsado de la empresa.", nombre);
					_Mensaje(playerid, 4, "33CCFF", putamierda);
                    return 1;
                }
            }
            case 1:
            {
                new nombre[25], andaconectado;
                GetPVarString(playerid, "nombredelemprendedor", nombre, 25);
                sscanf(nombre, "u", andaconectado);
                if(IsPlayerConnected(andaconectado))
                {
                	SetPVarInt(playerid, "rdinero", andaconectado);
                	Dialog(playerid, D_BANCOT2, DIALOG_STYLE_INPUT, "{D6E1EB}Transferir [2]", "{FFFFFF}Ingrese la cantidad de dinero a transferir.", "Transferir", "Cancelar");
                }
                else _Mensaje(playerid, 0, "0", "Jugador no conectado.");
            }
        }
    }
    if(dialogid == D_GRAFFITI)
    {
		if(!response) { Graffiti[user[playerid][jGraffitiE]][gPosX] = 0.0; user[playerid][jGraffitiE] = -1; return 1; }
		switch(listitem)
		{
		    case 0: ShowPlayerDialog(playerid, D_GRAFFITI1, DIALOG_STYLE_INPUT, "Graffiti - Texto", "Escribe el texto del graffiti", "Aceptar", "Volver");
		    case 1: ShowPlayerDialog(playerid, D_GRAFFITI2, DIALOG_STYLE_LIST, "Graffiti - Color", "{00b8ff}Azul\n{002bff}Azul marino\n{41c100}Verde\n{df0000}Rojo\n{fff403}Amarillo\n{b103ff}Morado\n{ff8f03}Naranja", "Aceptar", "Volver");
		    case 2: ShowPlayerDialog(playerid, D_GRAFFITI3, DIALOG_STYLE_LIST, "Graffiti - Letra", "Comic Sans\nCorbel\nCourier New\nDotum\nConsolas", "Aceptar", "Volver");
		    case 3: ShowPlayerDialog(playerid, D_GRAFFITI4, DIALOG_STYLE_INPUT, "Graffiti - Tamaño", "Escribe el tamaño del graffiti", "Aceptar", "Volver");
		    case 4:
		    {
		        if(isnull(Graffiti[user[playerid][jGraffitiE]][gTexto])) format(Graffiti[user[playerid][jGraffitiE]][gTexto], 50, "Graffiti");
		        GetPlayerPos(playerid, Graffiti[user[playerid][jGraffitiE]][gPosX], Graffiti[user[playerid][jGraffitiE]][gPosY], Graffiti[user[playerid][jGraffitiE]][gPosZ]);
				new Font[30], Color;
				switch(Graffiti[user[playerid][jGraffitiE]][gColor])
				{
				    case 0: Color = HexToInt("0xFF00B8FF");
				    case 1: Color = HexToInt("0xFF002BFF");
				    case 2: Color = HexToInt("0xFF41C100");
				    case 3: Color = HexToInt("0xFFDF0000");
				    case 4: Color = HexToInt("0xFFFFF403");
				    case 5: Color = HexToInt("0xFFB103FF");
				    case 6: Color = HexToInt("0xFFFF8F03");
				}
				switch(Graffiti[user[playerid][jGraffitiE]][gFont])
				{
				    case 0: format(Font, 30, "Comic Sans MS");
				    case 1: format(Font, 30, "Corbel");
				    case 2: format(Font, 30, "Courier New");
				    case 3: format(Font, 30, "Dotum");
				    case 4: format(Font, 30, "Consolas");
				}
				Graffiti[user[playerid][jGraffitiE]][gObjeto] = CreateDynamicObject(11359, Graffiti[user[playerid][jGraffitiE]][gPosX], Graffiti[user[playerid][jGraffitiE]][gPosY], Graffiti[user[playerid][jGraffitiE]][gPosZ], 0.0, 0.0, 0.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, MAX_RADIO_STREAM_MIN);
				SetDynamicObjectMaterialText(Graffiti[user[playerid][jGraffitiE]][gObjeto], 0, Graffiti[user[playerid][jGraffitiE]][gTexto], OBJECT_MATERIAL_SIZE_512x512, Font, Graffiti[user[playerid][jGraffitiE]][gSize], 0, Color, 0x00000000, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
				EditDynamicObject(playerid, Graffiti[user[playerid][jGraffitiE]][gObjeto]);
			}
		}
    }

    if(dialogid == D_GRAFFITI1)
    {
        if(!response) ShowPlayerDialog(playerid, D_GRAFFITI, DIALOG_STYLE_LIST, "Graffiti", "Texto\nColor\nFuente\nTamaño\nCrear", "Aceptar", "Salir");
        if(isnull(inputtext))
        {
        	_Mensaje(playerid, 0, "151", "Escribe algo.");
            return ShowPlayerDialog(playerid, D_GRAFFITI, DIALOG_STYLE_LIST, "Graffiti", "Texto\nColor\nFuente\nTamaño\nCrear", "Aceptar", "Salir");
        }
        if(strlen(inputtext) > 48)
        {
        	_Mensaje(playerid, 0, "151", "El texto del graffiti no puede llevar más de 48 carácteres.");
            return ShowPlayerDialog(playerid, D_GRAFFITI, DIALOG_STYLE_LIST, "Graffiti", "Texto\nColor\nFuente\nTamaño\nCrear", "Aceptar", "Salir");
        }
        format(Graffiti[user[playerid][jGraffitiE]][gTexto], 50, "%s", inputtext);
        _Mensaje(playerid, 4, "ffffff", "Texto cambiado.");
        ShowPlayerDialog(playerid, D_GRAFFITI, DIALOG_STYLE_LIST, "Graffiti", "Texto\nColor\nFuente\nTamaño\nCrear", "Aceptar", "Salir");
    }

    if(dialogid == D_GRAFFITI2)
	{
	    if(!response) return ShowPlayerDialog(playerid, D_GRAFFITI, DIALOG_STYLE_LIST, "Graffiti", "Texto\nColor\nFuente\nTamaño\nCrear", "Aceptar", "Salir");
		switch(listitem)
		{
		    case 0: Graffiti[user[playerid][jGraffitiE]][gColor] = 0;
		    case 1: Graffiti[user[playerid][jGraffitiE]][gColor] = 1;
		    case 2: Graffiti[user[playerid][jGraffitiE]][gColor] = 2;
		    case 3: Graffiti[user[playerid][jGraffitiE]][gColor] = 3;
		    case 4: Graffiti[user[playerid][jGraffitiE]][gColor] = 4;
		    case 5: Graffiti[user[playerid][jGraffitiE]][gColor] = 5;
		    case 6: Graffiti[user[playerid][jGraffitiE]][gColor] = 6;
		}
		_Mensaje(playerid, 4, "ffffff", "Color cambiado.");
		ShowPlayerDialog(playerid, D_GRAFFITI, DIALOG_STYLE_LIST, "Graffiti", "Texto\nColor\nFuente\nTamaño\nCrear", "Aceptar", "Salir");
	}

    if(dialogid == D_GRAFFITI3)
	{
	    if(!response) return ShowPlayerDialog(playerid, D_GRAFFITI, DIALOG_STYLE_LIST, "Graffiti", "Texto\nColor\nFuente\nTamaño\nCrear", "Aceptar", "Salir");
		switch(listitem)
		{
		    case 0: Graffiti[user[playerid][jGraffitiE]][gFont] = 0;
		    case 1: Graffiti[user[playerid][jGraffitiE]][gFont] = 1;
		    case 2: Graffiti[user[playerid][jGraffitiE]][gFont] = 2;
		    case 3: Graffiti[user[playerid][jGraffitiE]][gFont] = 3;
		    case 4: Graffiti[user[playerid][jGraffitiE]][gFont] = 4;
		}
		_Mensaje(playerid, 4, "ffffff", "Fuente cambiada.");
		ShowPlayerDialog(playerid, D_GRAFFITI, DIALOG_STYLE_LIST, "Graffiti", "Texto\nColor\nFuente\nTamaño\nCrear", "Aceptar", "Salir");
	}

	if(dialogid == D_GRAFFITI4)
	{
	    if(!response) return ShowPlayerDialog(playerid, D_GRAFFITI, DIALOG_STYLE_LIST, "Graffiti", "Texto\nColor\nFuente\nTamaño\nCrear", "Aceptar", "Salir");
		new pro = strval(inputtext);
		{
		    if(pro < 10 || pro > 99)
		    {
		        _Mensaje(playerid, 0, "151", "El tamaño debe de ser mayor a 10 y menor de 100.");
		    	return ShowPlayerDialog(playerid, D_GRAFFITI, DIALOG_STYLE_LIST, "Graffiti", "Texto\nColor\nFuente\nTamaño\nCrear", "Aceptar", "Salir");
		    }
		}
		Graffiti[user[playerid][jGraffitiE]][gSize] = pro;
		_Mensaje(playerid, 4, "ffffff", "Tamaño cambiado.");
		ShowPlayerDialog(playerid, D_GRAFFITI, DIALOG_STYLE_LIST, "Graffiti", "Texto\nColor\nFuente\nTamaño\nCrear", "Aceptar", "Salir");
	}


	if(dialogid == D_Empeno2)
	{
	    if(!response) return 1;
	    if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0) return _Mensaje(playerid, 0, "151", "No tienes ninguna mano vacia.");
	    if(user[playerid][jEmpeno][listitem] != 0)
	    {
	        if(ComprobarDineroJ(playerid) >= PrecioEmpeno(user[playerid][jEmpeno][listitem]))
	        {
	            DarDineroGC(playerid, -PrecioEmpeno(user[playerid][jEmpeno][listitem]));
	            if(user[playerid][jm_Derecha] == 0)
	            {
              		user[playerid][jm_Derecha] = user[playerid][jEmpeno][listitem];
              		user[playerid][jm_DerechaCant] = 1;
              		PonerObjeto(playerid, 1, user[playerid][jm_Derecha]);
	            }
	            else
	            {
              		user[playerid][jm_Izquierda] = user[playerid][jEmpeno][listitem];
              		user[playerid][jm_IzquierdaCant] = 1;
              		PonerObjeto(playerid, 2, user[playerid][jm_Derecha]);
	            }
	            new pro[144];
	            format(pro, sizeof(pro), "Rick dice: aquí está tu %s.", InfoObjeto[user[playerid][jEmpeno][listitem]][NombreObjeto]);
	            Mensaje_(playerid, -1, pro);
                user[playerid][jEmpeno][listitem] = 0;
                user[playerid][jEmpeno2][listitem] = 0;
                update_Manos(playerid);
	        }
	    }
	}

	if(dialogid == D_Empeno)
	{
	    if(!response) return 1;
	    new obj, price, time;
	    switch(listitem)
	    {
		    case 0:
		    {
		        new pro[500], pro2[60];
		        format(pro, sizeof(pro), "Objeto\tPrecio\n");
				if(user[playerid][jEmpeno][0] != 0) format(pro2, sizeof(pro2), "%s\t%d$\n", InfoObjeto[user[playerid][jEmpeno][0]][NombreObjeto], PrecioEmpeno(user[playerid][jEmpeno][0]));
				else format(pro2, sizeof(pro2), "Nada\t0$\n");
				strcat(pro, pro2);
				if(user[playerid][jEmpeno][1] != 0) format(pro2, sizeof(pro2), "%s\t%d$\n", InfoObjeto[user[playerid][jEmpeno][1]][NombreObjeto], PrecioEmpeno(user[playerid][jEmpeno][1]));
				else format(pro2, sizeof(pro2), "Nada\t0$\n");
				strcat(pro, pro2);
				if(user[playerid][jEmpeno][2] != 0) format(pro2, sizeof(pro2), "%s\t%d$\n", InfoObjeto[user[playerid][jEmpeno][2]][NombreObjeto], PrecioEmpeno(user[playerid][jEmpeno][2]));
				else format(pro2, sizeof(pro2), "Nada\t0$\n");
				strcat(pro, pro2);
				if(user[playerid][jEmpeno][3] != 0) format(pro2, sizeof(pro2), "%s\t%d$\n", InfoObjeto[user[playerid][jEmpeno][3]][NombreObjeto], PrecioEmpeno(user[playerid][jEmpeno][3]));
				else format(pro2, sizeof(pro2), "Nada\t0$\n");
				strcat(pro, pro2);
				if(user[playerid][jEmpeno][4] != 0) format(pro2, sizeof(pro2), "%s\t%d$", InfoObjeto[user[playerid][jEmpeno][4]][NombreObjeto], PrecioEmpeno(user[playerid][jEmpeno][4]));
				else format(pro2, sizeof(pro2), "Nada\t0$");
				strcat(pro, pro2);
				ShowPlayerDialog(playerid, D_Empeno2, DIALOG_STYLE_TABLIST_HEADERS, "Desempeñar", pro,
				"Aceptar", "Cancelar");
				return 1;
		    }

		    case 1:
		    {
				obj = 30;
				time = 20;
				price = 1000;
		    }
		    case 2:
		    {
		        obj = 1919;
		        price = 8;
				time = 2;
		    }
		    case 3:
		    {
		        obj = 72;
		        time = 8;
		        price = 300;
		    }
		    case 4:
		    {
		        obj = 82;
		        price = 35;
		        time = 3;
		    }
		    case 5:
		    {
		        price = 450;
		        obj = 81;
		        time = 16;
		    }
		    case 6:
		    {
		        obj = 38;
		        price = 10;
		        time = 3;
		    }
	    }
		new x = -1;
		for(new a = 0; a < 5; a++)
		{
			if(user[playerid][jEmpeno][a] == 0) x = a;
		}
		if(x == -1) return _Mensaje(playerid, 0, "151", "Solo puedes empeñar 5 objetos.");
	    if(obj == 1919)
	    {
	        switch(user[playerid][jm_Derecha])
	        {
	            case 115..123:
	            {
	                user[playerid][jEmpeno][x] = user[playerid][jm_Derecha];
	                user[playerid][jEmpeno2][x] = time;
	                user[playerid][jm_Derecha] = 0;
	                user[playerid][jm_DerechaCant] = 0;
	                DarDineroGC(playerid, 8);
	                Mensaje_(playerid, -1, "Rick dice: Tienes 2 horas para pagar o el teléfono será mío.");
	                return 1;
	            }
	        }
	        switch(user[playerid][jm_Izquierda])
	        {
	            case 115..123:
	            {
	                user[playerid][jEmpeno][x] = user[playerid][jm_Izquierda];
	                user[playerid][jEmpeno2][x] = time;
	                user[playerid][jm_Izquierda] = 0;
	                user[playerid][jm_IzquierdaCant] = 0;
	                DarDineroGC(playerid, 8);
	                Mensaje_(playerid, -1, "Rick dice: Tienes 2 horas para pagar o el teléfono será mío.");
	                return 1;
	            }
	        }
	    }
	    if(user[playerid][jm_Derecha] == obj || user[playerid][jm_Izquierda] == obj)
	    {
	        new pro3[144];
	        if(obj == 72)
	        {
				if(user[playerid][jm_Derecha] == obj)
				{
				    if(user[playerid][jm_DerechaCant] < 50) return _Mensaje(playerid, 0, "151", "Este chaleco está muy dañado.");
				}
				else
				{
				    if(user[playerid][jm_IzquierdaCant] < 50) return _Mensaje(playerid, 0, "151", "Este chaleco está muy dañado.");
				}
	        }
	        if(user[playerid][jm_Derecha] == obj)
	        {
	            user[playerid][jm_Derecha] = 0;
	            user[playerid][jm_DerechaCant] = 0;
	        }
	        else
	        {
	            user[playerid][jm_Izquierda] = 0;
	            user[playerid][jm_IzquierdaCant] = 0;
	        }
	        format(pro3, sizeof(pro3), "Rick dice: tienes %d horas para pagar o el/la %s será mío/mía.", time, InfoObjeto[obj][NombreObjeto]);
	        Mensaje_(playerid, -1, pro3);
	        DarDineroGC(playerid, price);
         	user[playerid][jEmpeno][x] = obj;
         	user[playerid][jEmpeno2][x] = time;
         	ResetPlayerWeapons(playerid);
	        update_Manos(playerid);
	        return 1;
	    }
	}
	if(dialogid == 600)
	{
		if(!response) return _Mensaje(playerid, 4, "b0b0b0", " Cancelaste el menú.");

		new objeto, precio;

		switch(listitem)
		{
			case 0: objeto = 93, precio = 7;
			case 1: objeto = 90, precio = 8;
			case 2: objeto = 91, precio = 6;
			case 3: objeto = 101, precio = 10;
		}
        if(user[playerid][jTickets] >= precio) {
			new text_[128];
			if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
			if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, objeto); user[playerid][jm_Derecha] = objeto, user[playerid][jm_DerechaCant] = 1;}
			else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, objeto); user[playerid][jm_Izquierda] = objeto, user[playerid][jm_IzquierdaCant] = 1;}
			format(text_, sizeof(text_), "Canjeaste %d tickets por %s.", precio, InfoObjeto[objeto][NombreObjeto]);
			_Mensaje(playerid, 4, "0ED39E", text_);
			user[playerid][jTickets] -= precio;
			return 1;
		} else return _Mensaje(playerid, 4, "ADC3E7", "Error:{ffffff} No posees suficientes tickets.");
	}
	if(dialogid == 601)
	{
		if(!response) return _Mensaje(playerid, 4, "b0b0b0", " Cancelaste el menú.");

		new objeto, precio, unidad;

		switch(listitem)
		{
			case 0: objeto = 87, precio = 20, unidad = 3;
			case 1: objeto = 88, precio = 36, unidad = 6;
			case 2: objeto = 126, precio = 9, unidad = 1;
			case 3: objeto = 115, precio = 290, unidad = 1;
			case 4: {
				if(user[playerid][jTickets] >= 100) {
					user[playerid][jSaldo] += 10;
					user[playerid][jTickets] -= 100;
					_Mensaje(playerid, 4, "0ED39E", "Canjeaste 100 tickets por un chip con 10 de crédito.");
					return 1;
				} else return _Mensaje(playerid, 4, "ADC3E7", "Error:{ffffff} No posees suficientes tickets.");
			}
		}

        if(user[playerid][jTickets] >= precio) {
			new text_[128];
			if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
			if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, objeto); user[playerid][jm_Derecha] = objeto, user[playerid][jm_DerechaCant] = unidad;}
			else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, objeto); user[playerid][jm_Izquierda] = objeto, user[playerid][jm_IzquierdaCant] = unidad;}
			format(text_, sizeof(text_), "Canjeaste %d tickets por %s (%d).", precio, InfoObjeto[objeto][NombreObjeto], unidad);
			_Mensaje(playerid, 4, "0ED39E", text_);
			user[playerid][jTickets] -= precio;
			return 1;
		} else return _Mensaje(playerid, 4, "ADC3E7", "Error:{ffffff} No posees suficientes tickets.");
	}

	switch (dialogid) {
		case D_INGRESO:
			{
	  			BorrarTextLogin(playerid);
				if (!response) return _Expulsar(playerid, 1, "Conexión al servidor cancelada (desconexión automática del  jugador).");
				INI_ParseFile(U_Usuario(playerid), "C_data", .bExtra = true, .extra = playerid);
				if(!strcmp(user[playerid][jClave], inputtext)) {
					CargarCuenta(playerid);
					JugadorEnSeccion {playerid} = 1;
					SetPVarInt(playerid, "Logueado", 1);
				} else {
					LimpiarPantalla(playerid);
					if (_Logeo[playerid] == 3)
					{
						_Expulsar(playerid, 1, "Ingreso falso");
						return 1;
					}
					new cuenta2[200];
					format(cuenta2, sizeof(cuenta2), "{ffffff}Acceso con el jugador: {00C200}%s\n\n{ffffff}Introduzca su contraseña para continuar:", NombreJugador(playerid));
					Dialog(playerid, D_INGRESO, DIALOG_STYLE_PASSWORD, "Acceso: {FFFF00}Usuario registrado", cuenta2, "Conectar", "Desconectar");
					_Mensaje(playerid, 4, "b0b0b0", "AVISO: La contraseña escrita no es válida, intente de nuevo, al tercer intento fallido se bloqueará la cuenta.");
					_Mensaje(playerid, 4, "b0b0b0", "AVISO: Asegúrese de la configuración del teclado: {CB2700}BLOQ MAYÚSCULAS / BLOQ NUM. no está activada.");
					_Logeo[playerid] += 1;
				}
			}
		case D_REGISTRO:
			{
				if (!response) return _Expulsar(playerid, 1, "Conexión al servidor cancelada (desconexión automática del  jugador).");
				if(strlen(inputtext) > 18) {
					_Mensaje(playerid, 4, "b0b0b0", "La contraseña debe ser de un máximo de 18 carácteres.");
					new cuenta2[200];
					format(cuenta2, sizeof(cuenta2), "{CB2700}GS:RP.ES V.2X - {ffffff}Acceso con el jugador: {00C200}%s\n\n{ffffff}Introduzca su contraseña para continuar:", NombreJugador(playerid));
					Dialog(playerid, D_REGISTRO, DIALOG_STYLE_PASSWORD, "Acceso: {FFFF00}Registrar cuenta", cuenta2, "Registrar", "Desconectar");
				}
				CrearCuenta(playerid, inputtext);
				SetPVarInt(playerid,"Logueado",1);
				return 1;
		}
		case D_EDAD:
			{
				if (response == 1) {
					if (strval(inputtext) < 15 || strval(inputtext) > 85) return Dialog(playerid, D_EDAD, DIALOG_STYLE_INPUT, "{ADC3E7}Registrar edad", "{F0F0F0}Introduce tu edad (15-85)", "Aceptar", "Atrás"); {
						user[playerid][jEdad] = strval(inputtext);
						Dialog(playerid, D_NACIONALIDAD, DIALOG_STYLE_LIST, "{ADC3E7}Nacionalidad", "{ffffff}Los Santos\nLas Venturas\nSan Fierro", "Seleccionar", "Atrás");
					}
				} else Dialog(playerid, D_SEXO, DIALOG_STYLE_MSGBOX, "{ADC3E7}Registrar Sexo", "{FFFF00}Seleccionar sexo", "Hombre", "Mujer");
			}
		case D_SEXO:
			{
				if (response == 1) {
					user[playerid][jSexo] = 1;
					Dialog(playerid, D_EDAD, DIALOG_STYLE_INPUT, "{ADC3E7}Registrar Edad", "{FFFF00}Introduce tu edad (15-85)", "Aceptar", "Atrás");
				} else {
					user[playerid][jSexo] = 2;
					Dialog(playerid, D_EDAD, DIALOG_STYLE_INPUT, "{ADC3E7}Registrar Edad", "{FFFF00}Introduce tu edad (15-85)", "Aceptar", "Atrás");
				}
			}
		case D_NACIONALIDAD:
			{
				new tDialogo[300];
				if(response) switch(listitem) {
					case 0: {
						user[playerid][jCiudad] = 1;
						format(tDialogo, sizeof(tDialogo), "{FFFFFF}Edad: %d\n Sexo: %s\n Nacionalidad: Los Santos\n\n{FFFF00}Para cambiar, use {B00000}Volver", user[playerid][jEdad], user[playerid][jSexo] == 1 ? ("Hombre") : ("Mujer"));
						Dialog(playerid, D_RPARTE_1, DIALOG_STYLE_MSGBOX, "{ADC3E7}Registro", tDialogo, "Siguiente", "Volver");
					}
					case 1: {
						user[playerid][jCiudad] = 2;
						format(tDialogo, sizeof(tDialogo), "{FFFFFF}Edad: %d\n Sexo: %s\n Nacionalidad: Las Venturas\n\n{FFFF00}Para cambiar, use {B00000}Volver", user[playerid][jEdad], user[playerid][jSexo] == 1 ? ("Hombre") : ("Mujer"));
						Dialog(playerid, D_RPARTE_1, DIALOG_STYLE_MSGBOX, "{ADC3E7}Registro", tDialogo, "Siguiente", "Volver");
					}
					case 2: {
						user[playerid][jCiudad] = 3;
						format(tDialogo, sizeof(tDialogo), "{FFFFFF} Edad: %d\n Sexo: %s\n Nacionalidad: San Fierro\n\n{FFFF00}Para cambiar, use {B00000}Volver", user[playerid][jEdad], user[playerid][jSexo] == 1 ? ("Hombre") : ("Mujer"));
						Dialog(playerid, D_RPARTE_1, DIALOG_STYLE_MSGBOX, "{ADC3E7}Registrar cuenta: GS:RP.ES", tDialogo, "Siguiente", "Volver");
					}
				} else Dialog(playerid, D_EDAD, DIALOG_STYLE_INPUT, "{ADC3E7}Registrar Edad", "{FFFF00}Introduce tu edad (15-85)", "Aceptar", "Volver");
			}
		case D_RPARTE_1:
			{
				if(response == 1) {
					if (ActTest == 0) ARegistrar(playerid);
					else ACertificar(playerid);
				} else Dialog(playerid, D_NACIONALIDAD, DIALOG_STYLE_LIST, "{ADC3E7}Nacionalidad", "{ffffff}Los Santos\nLas Venturas\nSan Fierro", "Seleccionar", "Volver");
			}
		case D_RPARTE_2:
			{
				if(response == 1)
				{
					if (GetPVarInt(playerid, "pasadotest") == 1) ACertificar(playerid);
					else ARegistrar(playerid);
				}
			}
		case D_TEST0:
			{
				if (!response) return _Expulsar(playerid, 1, "Cancelar test de rol");
				switch(listitem) {
					case 0: _Pregunta(playerid, 2, 1);
					case 1: _Pregunta(playerid, 2, 1);
					case 2: _Pregunta(playerid, 2, 0);
					case 3: _Pregunta(playerid, 2, 1);
				}
			}
		case D_TEST1:
			{
				if (!response) return _Expulsar(playerid, 1, "Cancelar test de rol");
				switch(listitem) {
					case 0: _Pregunta(playerid, 3, 1);
					case 1: _Pregunta(playerid, 3, 0);
					case 2: _Pregunta(playerid, 3, 1);
					case 3: _Pregunta(playerid, 3, 1);
				}
			}
		case D_TEST2:
			{
				if (!response) return _Expulsar(playerid, 1, "Cancelar test de rol");
				switch(listitem) {
					case 0: _Pregunta(playerid, 4, 1);
					case 1: _Pregunta(playerid, 4, 1);
					case 2: _Pregunta(playerid, 4, 1);
					case 3: _Pregunta(playerid, 4, 0);
				}
			}
		case D_TEST3:
			{
				if (!response) return _Expulsar(playerid, 1, "Cancelar test de rol");
				switch(listitem) {
					case 0: _Pregunta(playerid, 5, 0);
					case 1: _Pregunta(playerid, 5, 1);
					case 2: _Pregunta(playerid, 5, 1);
					case 3: _Pregunta(playerid, 5, 1);
				}
			}
		case D_TEST4:
			{
				if (!response) return _Expulsar(playerid, 1, "Cancelar test de rol");
				switch(listitem) {
					case 0: _Pregunta(playerid, 6, 1);
					case 1: _Pregunta(playerid, 6, 0);
					case 2: _Pregunta(playerid, 6, 1);
					case 3: _Pregunta(playerid, 6, 1);
				}
			}
		case D_TEST5:
			{
				if (!response) return _Expulsar(playerid, 1, "Cancelar test de rol");
				switch(listitem) {
					case 0: _Pregunta(playerid, 7, 1);
					case 1: _Pregunta(playerid, 7, 0);
					case 2: _Pregunta(playerid, 7, 1);
					case 3: _Pregunta(playerid, 7, 1);
				}
			}
		case D_TEST6:
			{
				if (!response) return _Expulsar(playerid, 1, "Cancelar test de rol");
				switch(listitem) {
					case 0: _Pregunta(playerid, 8, 1);
					case 1: _Pregunta(playerid, 8, 1);
					case 2: _Pregunta(playerid, 8, 1);
					case 3: _Pregunta(playerid, 8, 0);
				}
			}
		case D_TEST7:
			{
				if (!response) return _Expulsar(playerid, 1, "Cancelar test de rol");
				switch(listitem) {
					case 0: _Pregunta(playerid, 9, 1);
					case 1: _Pregunta(playerid, 9, 1);
					case 2: _Pregunta(playerid, 9, 1);
					case 3: _Pregunta(playerid, 9, 0);
				}
			}
		case D_TEST8:
			{
				if (!response) return _Expulsar(playerid, 1, "Cancelar test de rol");
				switch(listitem) {
					case 0: _Pregunta(playerid, 10, 1);
					case 1: _Pregunta(playerid, 10, 1);
					case 2: _Pregunta(playerid, 10, 1);
					case 3: _Pregunta(playerid, 10, 0);
				}
			}
		case D_TEST9:
			{
				if (!response) return _Expulsar(playerid, 1, "Cancelar test de rol");
				switch(listitem) {
					case 0: _Pregunta(playerid, 11, 0);
					case 1: _Pregunta(playerid, 11, 1);
					case 2: _Pregunta(playerid, 11, 1);
					case 3: _Pregunta(playerid, 11, 1);
				}
			}
		case D_Cuotas:
			{
				if(response == 1)
				{
					switch(listitem)
					{
						case 0:
						{
						    new neg = user[playerid][jNegocioKey];
						    if(user[playerid][jNegocioKey] == -1) return _Mensaje(playerid, 0, "68", "No posees un negocio en esta ranura.");
						    if(i_Negocio[neg][nCuotas] == 0) return _Mensaje(playerid, 0, "68", "No posees ninguna cuota.");
						    if(RevisarDinero(playerid, i_Negocio[neg][nCuotas]))
							{
							    format(string, sizeof(string), "Pagaste $%d, tu negocio está libre de cuotas!", i_Negocio[neg][nCuotas]);
								_Mensaje(playerid, 4, "33CCFF", string);
							    Compra(playerid, i_Negocio[neg][nCuotas]);
							    i_Negocio[neg][nCuotas] = 0;
							    i_Negocio[neg][nSeguro] = 1;
							    return 1;
						    }
						}
						case 1:
						{
						    new neg2 = user[playerid][jNegocioKey2];
							if(user[playerid][jNegocioKey2] == -1) return _Mensaje(playerid, 0, "68", "No posees un negocio en esta ranura (2).");
							if(i_Negocio[neg2][nCuotas] == 0) return _Mensaje(playerid, 0, "68", "No posees ninguna cuota.");
							if(RevisarDinero(playerid, i_Negocio[neg2][nCuotas]))
							{
							    format(string, sizeof(string), "Pagaste $%d, tu negocio está libre de cuotas!", i_Negocio[neg2][nCuotas]);
								_Mensaje(playerid, 4, "33CCFF", string);
							    Compra(playerid, i_Negocio[neg2][nCuotas]);
							    i_Negocio[neg2][nCuotas] = 0;
							    i_Negocio[neg2][nSeguro] = 1;
							    return 1;
						    }

						}
					}
				}
			}
		case D_VEHMENU2:
			{
				if(response == 1) {
					for(new i = 0; i < 6; i++) {
						if(listitem == i) {
							new veh = user[playerid][jLlaveCochePrestado][i];
							if(veh == INVALID_PLAYER_VEHICLE_ID) return _Mensaje(playerid, 0, "68", "No se puede en un vehículo que no existe.");
							if(InfoVehiculo[veh-1000][vSpawned] == 0) {
							    new spawnr = 0;
							    for(new x = 0; x < 6; x++) {
									new veh2 = user[playerid][jLlaveCochePrestado][x];
							        if(veh2 != 0) if(InfoVehiculo[veh2-1000][vSpawned] == 1) spawnr++;
								}
								if(spawnr > 2) return _Mensaje(playerid, 4, "ADC3E7", "Error:{ffffff} El máximo de vehículos spawneados es de 3, guarda uno.");
								VehiculoSacar(veh-1000);
								_Mensaje(playerid, 4, "b0b0b0", "{FFFF00}[Sist.Info/Vehículos]: {ffffff}El vehículo aparecio correctamente en la última posición.");
								return 1;
							} else if(InfoVehiculo[veh-1000][vSpawned] == 1) {
							    new Float: vx, Float: vy, Float: vz;
							    GetVehiclePos(InfoVehiculo[veh-1000][vID], vx, vy, vz);
                                if(!_enPos(playerid,10,vx, vy, vz)) return _Mensaje(playerid, 4, "ADC3E7", "Error:{ffffff} No estás cerca del vehículo, debes estar al menos 10 metros.");
								if(IsVehicleBusy(InfoVehiculo[veh-1000][vID])) return _Mensaje(playerid, 2, "0", "El vehículo tiene jugadores dentro de el y no podrá ser guardado.");
								VehiculoGuardar(veh-1000);
								_Mensaje(playerid, 4, "b0b0b0", "El vehículo indicado fue guardado correctamente.");
								return 1;
							}
						}
					}
				}
			}
		case D_CUENTA:
			if(response) switch(listitem) {
				case 0: _panelJ(playerid, playerid);
				case 1: _panelC(playerid, playerid);
				case 2: _panelN(playerid, playerid);
				case 3: return cmd_coches(playerid);
				case 4: return cmd_coches2(playerid);
                case 5: MenuConfiguracionCuenta(playerid);
            }

		case D_CUENTA2:
			if(response) switch(listitem) {
				case 0: Dialog(playerid, D_CUENTA3, DIALOG_STYLE_PASSWORD, "{D6E1EB}Confirmación", "{FFFF00}Ingrese su contraseña actual\n", "Confirmar", "Volver");
				case 1: Dialog(playerid, D_CUENTA4, DIALOG_STYLE_MSGBOX, "{D6E1EB}Sexo", "{FFFF00}¿Qué sexo desea para su personaje ahora?", "Hombre", "Mujer");
				case 2: Dialog(playerid, D_CUENTA5, DIALOG_STYLE_INPUT, "{D6E1EB}Edad", "{FFFF00}Seleccione una nueva edad para su personaje", "Cambiar", "Volver");
            }
		case D_CUENTA3:
			{
				if(response) {
					if(!strcmp(user[playerid][jClave], inputtext)) {
						Dialog(playerid, D_CUENTA6, DIALOG_STYLE_PASSWORD, "(GS:RP) Editar: {D6E1EB}Nueva contraseña", "{FFFF00}Ingrese su nueva contraseña\n{F0F0F0}y ya la habrá cambiado.", "Cambiar", "Atrás");
					} else {
						Dialog(playerid, D_CUENTA3, DIALOG_STYLE_PASSWORD, "(GS:RP) Editar: {D6E1EB}Confirmación", "{FFFF00}Ingrese su contraseña actual", "Confirmar", "Volver");
						_Mensaje(playerid, 0, "105", "La contraseña actual no coincide con la que ingresó, intentelo de nuevo.");
					}
                }
                return 1;
            }
		case D_CUENTA4:
			{
				if(!response) { user[playerid][jSexo] = 2; }
				else { user[playerid][jSexo] = 1; }
				new MsgDialogSexo[150],sexo[18];
				switch(user[playerid][jSexo]){
					case 1: sexo = "Hombre";
					case 2: sexo = "Mujer";
				}
				format(MsgDialogSexo, sizeof(MsgDialogSexo), "{00F50A}Cambios efectuados.\n\n{FFFF00}El nuevo sexo de su personaje es: {00F50A}%s ", sexo);
				Dialog(playerid, D_INVALIDO, DIALOG_STYLE_MSGBOX, "(GS:RP) Editar: {D6E1EB}Sexo", MsgDialogSexo, "Aceptar", "");
				GuardarCuenta(playerid);
			}
		case D_CUENTA5:
			{
				if(response == 1) {
					if(strval(inputtext) >= 15 && strval(inputtext) <= 85) {
						user[playerid][jEdad] = strval(inputtext);
						new MsgDialogEdad[150];
						format(MsgDialogEdad, sizeof(MsgDialogEdad), "{00F50A}Cambios efectuados.\n\n{FFFF00}La nueva edad de su personaje es: {00F50A}%i ", user[playerid][jEdad]);
						Dialog(playerid, D_INVALIDO, DIALOG_STYLE_MSGBOX, "(GS:RP) Editar: {D6E1EB}Edad", MsgDialogEdad, "Aceptar", "");
						GuardarCuenta(playerid);
					} else {
						_Mensaje(playerid, 0, "108", "La edad tiene que estar comprendida entre 15 y 85 años.");
						Dialog(playerid, D_CUENTA5, DIALOG_STYLE_INPUT, "(GS:RP) Editar: {D6E1EB}Edad", "{FFFF00}Edad no válida, intentalo de nuevo.", "Cambiar", "Volver");
					}
				} else MenuConfiguracionCuenta(playerid);
			}
		case D_CUENTA6:
			{
				if(strlen(inputtext) >= 18) { _Mensaje(playerid, 0, "106", "No puedes cambiar una password a más de 18 carácteres."); }
				else {
					if(strlen(inputtext) >= 1) {
						if(!response) {
							_Mensaje(playerid, 0, "107", "No has cambiado tu contraseña.");
						} else {
							strmid(user[playerid][jClave], inputtext, 0, strlen(inputtext), 24);
							format(string, sizeof(string), "Ha cambiado su contraseña correctamente. {FFFF00}Su nueva contraseña es: %s", inputtext);
							_Mensaje(playerid, 2, "0", string);
							GuardarCuenta(playerid);
							MenuConfiguracionCuenta(playerid);
						}
					} else _Mensaje(playerid, 0, "107", "No cambiaste tu contraseña (sigues teniendo la misma).");
				}
			}
		case D_INVENTARIO:
			{
				if(!response) { return 1;}
				new i = listitem;
				if(i >= 0 && i <= 9) {
					if (idrobado[playerid] == -1) S_Bol(playerid, i);
					else RobarBol(playerid, idrobado[playerid], i);
				}
				else if(i == 10) return 1;
				else if(i == 11) G_Bol(playerid, 1);
				else if(i == 12) G_Bol(playerid, 2);
				else if(i == 13) C_Mano(playerid);
			}
		case D_CINTURON:
			{
				if(!response) { return 1; }
				new i = listitem;
				if(i >= 0 && i <= 7) { S_Cinturon(playerid, i); }
				else if(i == 8) return 1;
				else if(i == 9) G_Cinturon(playerid, 1);
				else if(i == 10) G_Cinturon(playerid, 2);
				else if(i == 11) C_Mano(playerid);
			}
		case D_TELEFONO:
			{
				if(!response) return 1;
				switch(listitem) {
					case 0: {
						if (!B_Telefono[playerid]) { B_Telefono[playerid] = 1,_Mensaje(playerid, 2, "0", "Smarthphone {FFFF00}apagado{ffffff}, no recibirás llamadas ni mensajes.");
						} else B_Telefono[playerid] = 0, _Mensaje(playerid, 2, "0", "Smartphone {00c200}encendido{ffffff}, ahora podrás recibir llamadas y mensajes.");
					}
					case 1: Dialog(playerid, D_TELEFONO2, DIALOG_STYLE_LIST, "Smartphone: {33CCFF}Llamadas", "Llamar\nRegistros", "Seleccionar", "Inicio");
					case 2: _Agenda(playerid);
					case 3: Dialog(playerid, D_TELEFONO4, DIALOG_STYLE_LIST, "Smartphone: {33CCFF}WhatsApp", "Enviar WhatsApp\nChats WhatsApp", "Seleccionar", "Inicio");
					case 4: cmd_saldo(playerid);
					case 5: {
						new StationsDialog[2500];
						strcat(StationsDialog, "Número\tNombre\tGénero\n", sizeof(StationsDialog));
						strcat(StationsDialog, "{F50000}||\t{F50000}Detener música\t{F50000}||\n", sizeof(StationsDialog));
						strcat(StationsDialog, "{00C200}1\t{FFFFFF}54 House\t{00A2FF}Electro\n", sizeof(StationsDialog));
						strcat(StationsDialog, "{00C200}2\t{FFFFFF}Top Latino\t{00A2FF}Variado\n", sizeof(StationsDialog));
						strcat(StationsDialog, "{00C200}3\t{FFFFFF}Dubbase.FM\t{00A2FF}Dubstep\n", sizeof(StationsDialog));
						strcat(StationsDialog, "{00C200}4\t{FFFFFF}Reggae Hits\t{00A2FF}Reggaeton\n", sizeof(StationsDialog));
						strcat(StationsDialog, "{00C200}5\t{FFFFFF}MBradio.FM\t{00A2FF}Reggaeton\n", sizeof(StationsDialog));
						strcat(StationsDialog, "{00C200}6\t{FFFFFF}113 FM TEagle\t{00A2FF}Classic rock\n", sizeof(StationsDialog));
						strcat(StationsDialog, "{00C200}7\t{FFFFFF}181 FM\t{00A2FF}Classic rock\n", sizeof(StationsDialog));
						strcat(StationsDialog, "{00C200}8\t{FFFFFF}Soft Rock Cafe\t{00A2FF}Heavy Metal\n", sizeof(StationsDialog));
						strcat(StationsDialog, "{00C200}9\t{FFFFFF}HardRadio.com\t{00A2FF}Rock\n", sizeof(StationsDialog));
						strcat(StationsDialog, "{00C200}10\t{FFFFFF}Aural Moon\t{00A2FF}Punk\n", sizeof(StationsDialog));
						strcat(StationsDialog, "{00C200}11\t{FFFFFF}Idobi Radio\t{00A2FF}Electronic\n", sizeof(StationsDialog));
						strcat(StationsDialog, "{00C200}12\t{FFFFFF}www.Hot108.com\t{00A2FF}Hip Hop\n", sizeof(StationsDialog));
						strcat(StationsDialog, "{00C200}13\t{FFFFFF}Sensacion Peru\t{00A2FF}Pop\n", sizeof(StationsDialog));
						strcat(StationsDialog, "{00C200}14\t{FFFFFF}BluePoint\t{00A2FF}Metal\n", sizeof(StationsDialog));
						strcat(StationsDialog, "{00C200}15\t{FFFFFF}PaganMetalRadio\t{00A2FF}Extreme Metal\n", sizeof(StationsDialog));
						strcat(StationsDialog, "{00C200}16\t{FFFFFF}Dirty Beats Radio 24/7\t{00A2FF}Extreme Metal\n", sizeof(StationsDialog));
						strcat(StationsDialog, "{00C200}17\t{FFFFFF}The Trip\t{00A2FF}Music Usa\n", sizeof(StationsDialog));
						strcat(StationsDialog, "{00C200}18\t{FFFFFF}Latina FM (Arg)\t{00A2FF}Variado\n", sizeof(StationsDialog));
						strcat(StationsDialog, "{00C200}19\t{FFFFFF}Amor latino\t{00A2FF}Variado\n", sizeof(StationsDialog));
						strcat(StationsDialog, "{00C200}20\t{FFFFFF}Hotmixradio\t{00A2FF}Hip Hop\n", sizeof(StationsDialog));
						strcat(StationsDialog, "{00C200}21\t{FFFFFF}Naxi Café Radio\t{00A2FF}Variado\n", sizeof(StationsDialog));
						strcat(StationsDialog, "{00C200}22\t{FFFFFF}Radio Hunter\t{00A2FF}Electrónica\n", sizeof(StationsDialog));
						strcat(StationsDialog, "{00C200}23\t{FFFFFF}181.0 - BCEver\t{00A2FF}Rock Clásico\n", sizeof(StationsDialog));
						strcat(StationsDialog, "{00A2FF}»\t{FFFFFF}URL Internet", sizeof(StationsDialog));
						Dialog(playerid, D_TELEFONO7, DIALOG_STYLE_TABLIST_HEADERS, "{00C200}Radios", StationsDialog, "Seleccionar", "Cancelar");
						AccionesRol(playerid, 0, "selecciona una música del menú de su teléfono.");
						MusicaEsc[playerid] = 0;
					}
					case 6: cmd_transferir(playerid, "\1");
				}
			}
		case D_TELEFONO2:
			{
				if(!response) return cmd_telefono(playerid, "\1");
				switch(listitem) {
					case 0: Dialog(playerid, D_TELEFONO3, DIALOG_STYLE_INPUT, "Smarthphone: {33CCFF}Llamar", "Introduce el numero:", "Llamar", "Inicio");
					case 1: _Mensaje(playerid, 0, "0", "Error.");
				}
			}
		case D_TELEFONO3:
			{
				if (response) {
					if (isnull(inputtext) || !isnumeric(inputtext)) return Dialog(playerid, D_TELEFONO3, DIALOG_STYLE_INPUT, "Smartphone: {D6E1EB}Llamar", "Introduce el número:", "Llamar", "Inicio");
					format(string, 16, "%d", strval(inputtext));
					cmd_llamar(playerid, string);
				} else cmd_telefono(playerid, "\1");
			}
		case D_TELEFONO4:
			{
				if(!response) return cmd_telefono(playerid, "\1");
				switch(listitem) {
					case 0: Dialog(playerid, D_TELEFONO5, DIALOG_STYLE_INPUT, "Smarthphone: {33CCFF}WhatsApp", "Introduce el número:", "Siguiente", "Inicio");
					case 1: _Mensaje(playerid, 0, "0", "Error.");
				}
			}
		case D_TELEFONO5:
			{
				if (response) {
					if (isnull(inputtext) || !isnumeric(inputtext)) return Dialog(playerid, D_TELEFONO5, DIALOG_STYLE_INPUT, "{D6E1EB}Mensajes", "Introduce el número:", "Siguiente", "Inicio");
					format(string, 16, "%d", strval(inputtext));
					NumeroMensaje[playerid] = strval(inputtext);
					Dialog(playerid, D_TELEFONO6, DIALOG_STYLE_INPUT, "Smarthphone: {33CCFF}WhatsApp", "Introduce el WhatsApp que vas a enviar:", "Enviar", "Inicio");
				} else cmd_telefono(playerid, "\1");
			}
		case D_TELEFONO6:
			{
				if (response) {
					if (isnull(inputtext)) return Dialog(playerid, D_TELEFONO6, DIALOG_STYLE_INPUT, "Smarthphone: {D6E1EB}WhatsApp", "Introduce el texto que vas a enviar:", "Enviar", "Inicio");
					new phonenumb = NumeroMensaje[playerid], text[256];
					alm(text, inputtext);
					if (user[playerid][jSaldo] < 2) return _Mensaje(playerid, 0, "40", "¡Vaya parece que no has pagado la factura! ¡Recarga tu móvil en una tienda!");
					foreach(Player, i) {
	        			if (user[i][jTelefono] == phonenumb && phonenumb != 0) {
	            			new playerid2 = i;
	            			if (IsPlayerConnected(playerid2)) {
	                    		if (B_Telefono[playerid2] > 0) return _Mensaje(playerid, 0, "276", "Ese jugador tiene el teléfono apagado o fuera de cobertura.");
	                    		format(string, sizeof(string), "[WhatsApp Envíado de %d] mensaje: %s", user[playerid][jTelefono], text);
	                    		_Mensaje(playerid2, 4, "FFEA5F", string);
	                    		format(string, sizeof(string), "[Envíado WhatsApp al %d] mensaje: %s", phonenumb, text);
	                    		_Mensaje(playerid, 4, "b0b0b0", string);
								new Float: cx, Float: cy, Float: cz;
								GetPlayerPos(playerid, cx, cy, cz);
 								PlayerPlaySound(playerid, 1053, cx, cy, cz);
								GetPlayerPos(playerid2, cx, cy, cz);
 								PlayerPlaySound(playerid2, 1053, cx, cy, cz);
	                    		TextoPantalla(playerid, "~r~$-1~w~ Saldo", 5000, 1);
	                    		user[playerid][jSaldo] -= 1;
	        					NumeroMensaje[playerid] = -1;
	                    		return 1;
	                		}
	            		}
        			}
    				_Mensaje(playerid, 2, "0", "El número que ha marcado no existe o no está disponible.");
  				} else cmd_telefono(playerid, "\1");
			}
		case D_TELEFONO7:
			{
				if(response) {
					if(listitem == 0) {
						StopAudioStreamForPlayer(playerid);
						_Mensaje(playerid, 2, "0", "Paraste la música.");
						MusicaEsc[playerid] = 0;
					}
					else if(listitem == 1) _MusicTlf(playerid, "http://54house.stream-balancer.de:80", "Escuchando: 54 House");
					else if(listitem == 2) _MusicTlf(playerid, "http://184.154.94.194:8028/listen.pls", "Escuchando: Top Latino");
					else if(listitem == 3) _MusicTlf(playerid, "http://148.251.91.15:7004", "Escuchando: Dubbase.FM");
					else if(listitem == 4) _MusicTlf(playerid, "http://listen.shoutcast.com/reggaetonhits.m3u", "Escuchando: Reggae Hits");
					else if(listitem == 5) _MusicTlf(playerid, "http://216.230.231.122:8000/MP3128", "Escuchando: MBradio.FM");
					else if(listitem == 6) _MusicTlf(playerid, "http://listen.shoutcast.com/113fmtheeagle.m3u", "Escuchando: 113 FM TEagle");
					else if(listitem == 7) _MusicTlf(playerid, "http://108.61.73.119:8028", "Escuchando: 181 FM");
					else if(listitem == 8) _MusicTlf(playerid, "http://173.244.215.163:8380", "Escuchando: Soft Rock Cafe");
					else if(listitem == 9) _MusicTlf(playerid, "http://69.4.232.118:80", "Escuchando: HardRadio.com");
					else if(listitem == 10) _MusicTlf(playerid, "http://64.202.98.133:2010", "Escuchando: Aural Moon");
					else if(listitem == 11) _MusicTlf(playerid, "http://50.117.115.211:80", "Escuchando: Idobi Radio");
					else if(listitem == 12) _MusicTlf(playerid, "http://108.61.30.179:4010", "Escuchando: www.Hot108.com");
					else if(listitem == 13) _MusicTlf(playerid, "http://50.7.64.226:80/frisky_mp3_hi", "Escuchando: Sensacion Peru");
					else if(listitem == 14) _MusicTlf(playerid, "http://5.135.223.251:9000", "Escuchando: BluePoint");
					else if(listitem == 15) _MusicTlf(playerid, "http://62.210.209.179:8030/stream", "Escuchando: PaganMetalRadio");
					else if(listitem == 16) _MusicTlf(playerid, "http://198.211.102.165:8000", "Escuchando: Dirty Beats Radio 24/7");
					else if(listitem == 17) _MusicTlf(playerid, "http://somafm.com/tags.pls", "Escuchando: The Trip");
					else if(listitem == 18) _MusicTlf(playerid, "http://streaming.latina101.com.ar/listen.pls", "Latina FM (Arg)");
					else if(listitem == 19) _MusicTlf(playerid, "http://s3.voscast.com:8002/;.m3u", "Escuchando: Amor latino");
					else if(listitem == 20) _MusicTlf(playerid, "http://listen.radionomy.com/hotmixradio-hiphop-128.m3u", "Hotmixradio");
					else if(listitem == 21) _MusicTlf(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=139278", "Naxi Café Radio");
					else if(listitem == 22) _MusicTlf(playerid, "http://listen.shoutcast.com:80/RadioHunter-TheHitzChannel", "Radio Hunter");
					else if(listitem == 23) _MusicTlf(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=654138", "181.0 - BCEver");
					else if(listitem == 24) Dialog(playerid, D_TELEFONO8, DIALOG_STYLE_INPUT, "{D6E1EB}Youtube", "{FFFFFF}Escribe el titulo del vídeo para reproducir:", "Continuar", "Cancelar");
                } else _Mensaje(playerid, 2, "0", "Saliste del menú de música.");
            }
		case D_TELEFONO8:
			{
				if(response == 1) {
					if(strlen(inputtext)) {
						new chao[255];
						StopAudioStreamForPlayer(playerid);
						format(chao, sizeof(chao), "https://6t.pe/?song=%s", inputtext);
						EscucharMusica(playerid, chao);
						format(chao, sizeof(chao), "Escuchando actualmente: {FFFFFF}%s", inputtext);
						_Mensaje(playerid, 5, "0", chao);
						MusicaEsc[playerid] = 1;
					}
				} else return 1;
			}
		case D_AYUDA: { if(response) Dialog(playerid, D_AYUDA2, DIALOG_STYLE_LIST, "Ayuda: {D6E1EB}Lista Comandos", "{FFFFFF}Principal\nInventario\nCanales\nCasa\nVehículo\nFaccion\nEmpresa\nNegocio\nAccesorios\nTrabajo\nPremium\nAcciones", "Ver Comandos", "Salir"); }
		case D_AYUDA2:
			{
				if(!response) { return 1; }
				switch(listitem) {
					case 0: Ayuda(playerid, 0);
					case 1: Ayuda(playerid, 1);
					case 2: Ayuda(playerid, 2);
					case 3: Ayuda(playerid, 3);
					case 4: Ayuda(playerid, 4);
					case 5: Ayuda(playerid, 5);
					case 6: Ayuda(playerid, 6);
					case 7: Ayuda(playerid, 7);
					case 8: Ayuda(playerid, 8);
					case 9: Ayuda(playerid, 9);
					case 10: Ayuda(playerid, 10);
					case 11: Ayuda(playerid, 11);
					case 12: Ayuda(playerid, 12);
					case 13: Ayuda(playerid, 13);
					case 14: Ayuda(playerid, 14);
					case 15: Ayuda(playerid, 15);
					case 16: Ayuda(playerid, 16);
					case 17: Ayuda(playerid, 17);
					case 18: Ayuda(playerid, 18);
					case 19: Ayuda(playerid, 19);
					case 20: Ayuda(playerid, 20);

				}
			}
		case D_BANCO:
			{
				if (response) {
					if (listitem == 0) { //--- Aquí abre cuenta y ya les asigna el número de cuenta a los stats.
						if (user[playerid][jDebito] != -1) return _Mensaje(playerid, 0, "246", "Ya tienes una tarjeta de débito registrada en el Banco Nacional.");
						new clave = Random(1000, 9999);
						user[playerid][jDebito] = clave;
						format(string, sizeof(string), "Bienvenido a nuestro banco, es un placer tenerle como cliente. Su número de cuenta (%d).", clave);
						_Mensaje(playerid, 2, "0", string);
                        return 1;
					} else if (listitem == 1) { //- Aquí le da el objeto de la tarjeta
						if (user[playerid][jm_Derecha] > 0 && user[playerid][jm_Izquierda] > 0) return _Mensaje(playerid, 0, "9", "¡Desocupa las manos! ¡Debes tenerlas vacías!");
						if (user[playerid][jm_Derecha] == 0) {
							user[playerid][jm_Derecha] = 84;
							user[playerid][jm_DerechaCant] = 1;
							PonerObjeto(playerid, 1, 84);
						} else if (user[playerid][jm_Derecha] != 0) {
							user[playerid][jm_Izquierda] = 84;
							user[playerid][jm_IzquierdaCant] = 1;
							PonerObjeto(playerid, 2, 84);
						}
						DarDineroGC(playerid, -15);
						DineroEstado += 15;
						_Mensaje(playerid, 2, "0", "El coste gestión de la tarjata bancaria ha sido (15$). Deberás activar la tarjeta para poder utilizarla.");
						return 1;
					} else if (listitem == 2) Dialog(playerid, D_BANCOR, DIALOG_STYLE_INPUT, "Sistema Bancario: {D6E1EB}Retirar", "{FFFFFF}Ingrese la cantidad de dinero a retirar.", "Retirar", "Cancelar");
					else if (listitem == 3) Dialog(playerid, D_BANCOD, DIALOG_STYLE_INPUT, "Sistema Bancario: {D6E1EB}Depositar", "{FFFFFF}Ingrese la cantidad de dinero a depositar.", "Depositar", "Cancelar");
					else if (listitem == 4) {
						if(user[playerid][j_Horas] < 2) return _Mensaje(playerid, 0, "9", "No puedes transferir debido a tu restricción de dos horas de juego.");
						if (user[playerid][jDebito] == -1) return _Mensaje(playerid, 0, "245", "No posees una cuenta bancaria.");
						Dialog(playerid, D_BANCOT, DIALOG_STYLE_INPUT, "Sistema Bancario: {D6E1EB}Transferir dinero", "{FFFFFF}Ingrese la ID del Jugador", "Siguiente", "Cancelar");
					}
				}
				return 1;
			}
		case D_BANCOR:
			{
				if (!response) return _Mensaje(playerid, 4, "D7D7D4", "Cancelaste la operación.");
				new money = strval(inputtext);
				if (!isnumeric(inputtext)) return _Mensaje(playerid, 0, "71", "La cantidad tiene que ser números.");
				if (money > user[playerid][jBanco] || money < 1) return _Mensaje(playerid, 0, "72", "Cantidad de dinero incorrecta.");
				if (money < 0) return _Mensaje(playerid, 0, "73", "No puedes retirar menos de 0.");
				Ganancia(playerid, money);
				user[playerid][jBanco] -= money;
				format(string, sizeof(string), "Retiraste de tu cuenta $%d, saldo actual: $%d.", money, user[playerid][jBanco]);
				_Mensaje(playerid, 4, "FAE800", string);
				format(string, sizeof(string), "Registros: El jugador %s retiro del banco $%d cantidad de dinero.", NombreRJugador(playerid), money);
				Log("Registros/RetirarBanco.log", string);
				return 1;
			}
		case D_BANCOD:
			{
				if (!response) return _Mensaje(playerid, 4, "D7D7D4", "Cancelaste la operación.");
				new money = strval(inputtext);
				if (!isnumeric(inputtext)) return _Mensaje(playerid, 0, "71", "La cantidad tiene que ser números.");
				if (money > ComprobarDineroJ(playerid) || money < 1) return _Mensaje(playerid, 0, "72", "Cantidad de dinero incorrecta.");
				if (money < 0) return _Mensaje(playerid, 0, "73", "No puedes depositar menos de 0.");
				Compra(playerid, money);
				user[playerid][jBanco] += money;
				format(string, sizeof(string), "Depositaste a tu cuenta $%d, total de dinero $%d.", money, user[playerid][jBanco]);
				_Mensaje(playerid, 4, "D7D7D4", string);
				format(string, sizeof(string), "Registros: El jugador %s depósito en el banco $%d cantidad de dinero.", NombreRJugador(playerid), money);
				Log("Registros/DepositarBanco.log", string);
				return 1;
			}
		case D_BANCOT:
			{
				if (!response) return _Mensaje(playerid, 4, "D7D7D4", "Cancelaste la operación.");
				if (!isnumeric(inputtext)) return _Mensaje(playerid, 0, "43", "Sólo números por favor, vuelve a intentarlo.");
				new idjugador = strval(inputtext);
				if (playerid == idjugador) return _Mensaje(playerid, 0, "74", "No puedes transferirte dinero a ti mismo.");
				if (!IsPlayerConnected(idjugador)) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
				SetPVarInt(playerid, "rdinero", idjugador);
				Dialog(playerid, D_BANCOT2, DIALOG_STYLE_INPUT, "Banca Online: {D6E1EB}Transferir Wallet", "{FFFFFF}Ingrese la cantidad de dinero a transferir.", "Transferir", "Cancelar");
				return 1;
			}
		case D_BANCOT2:
			{
				if (!response) return _Mensaje(playerid, 4, "D7D7D4", "Cancelaste la operación.");
				if (!isnumeric(inputtext)) return _Mensaje(playerid, 0, "43", "Sólo números porfavor, vuelve a intentarlo.");
				new playerid2 = GetPVarInt(playerid, "rdinero"), money = strval(inputtext);
				if (money > user[playerid][jBanco]) return _Mensaje(playerid, 0, "77", "Cantidad incorrecta.");
				if (money < 0) return _Mensaje(playerid, 0, "78", "No puedes transferir menos de 0.");
				DeletePVar(playerid, "rdinero");
				user[playerid][jBanco] -= money;
				user[playerid2][jBanco] += money;
				format(string, sizeof(string), "Enviaste la cantidad de $%d a %s.", money, NombreRJugador(playerid2));
				_Mensaje(playerid, 4, "FAE800", string);
				format(string, sizeof(string), "Recibiste la cantidad de $%d por %s", money, NombreRJugador(playerid));
				_Mensaje(playerid2, 4, "D7D7D4", string);
				if(!strcmp(user[playerid][jIP], user[playerid2][jIP], false) && user[playerid][jMulticuenta] == 0 && user[playerid2][jMulticuenta] == 0)
				{
					new ipc[32], stringlog[180]; GetPlayerIp(playerid, ipc, 32);
					format(stringlog, sizeof(stringlog), "[AvisoAdmin]: {FFFFFF} Jugador '%s' hizo una transferencia de ($%d) al jugador '%s', posibles multicuentas [IP: %s]", NombreRJugador(playerid), money, NombreRJugador(playerid2), ipc);
					MensajeAdmin(stringlog);
					format(stringlog, sizeof(stringlog), "Registros: El jugador %s transfiere hizo una transferencia de $%d al jugador %s. [IP: %s] (transferencia con misma IP)", NombreRJugador(playerid), money, NombreRJugador(playerid2), ipc);
					Log("Registros/multicuentas.log", stringlog);
				} else {
					format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF} Jugador '%s' hizo una transferencia de ($%d) al jugador '%s' [IP: %s]", NombreRJugador(playerid), money, NombreRJugador(playerid2));
					MensajeAdmin(string);
					format(string, sizeof(string), "Registros: El jugador %s transfiere $%d al jugador %s [IP: %s] (SQL ID: Misma IP reconocida)", NombreRJugador(playerid), money, NombreRJugador(playerid2));
					Log("Registros/TransferirBanco.log", string);
				}
				return 1;
			}
		case D_Carmario:
			{
				if(response) switch(listitem) {
					case 0: {
							new rStr[18 * MAX_ROPA], Ropa[MAX_ROPA][20], strI[20], ropita;
							if(user[playerid][jPremium] == 0) ropita = 4;
							else if(user[playerid][jPremium] == 1) ropita = 5;
							else if(user[playerid][jPremium] == 2) ropita = 6;
							else if(user[playerid][jPremium] == 3) ropita = MAX_ROPA;
							Loop(i, ropita, 0) {
								if(!user[playerid][jRopaArmario][i]) {
									Ropa[i] = "Nada";
								} else format(Ropa[i], 20, "%d", user[playerid][jRopaArmario][i]);
								format(strI, sizeof(strI), "Ranura %d - '%s'\n", i, Ropa[i]);
								strins(rStr, strI, strlen(rStr));
							}
							SetPVarInt(playerid, "ROPA_EDITAR", 0);
							Dialog(playerid, D_EDITARROPA, DIALOG_STYLE_LIST, "{D6E1EB}Escoge la ranura a editar", rStr, "Elegir", "Atrás");
						}
					case 1: ver_Armario(playerid, DentroCasa[playerid]);
				}
			}
		case D_Carmario2:
			{
				if(!response) { return 1; }
				new i = listitem, cid = DentroCasa[playerid];
				if(i >= 0 && i <= 14){
					S_Armario(playerid, cid, i);
					ActualizarCasa(cid);
				}
				else if(i == 15) return 1;
				else if(i == 16) {
					G_Armario(playerid, cid, 1);
					ActualizarCasa(cid);
				} else if(i == 17) {
					G_Armario(playerid, cid, 2);
					ActualizarCasa(cid);
				}
			}
		case D_PDarmario:
			{
				if(!response) { return 1; }
				new i = listitem;
				if(i >= 0 && i <= 14) {
					S_Armario(playerid, EnCasaID[playerid], i);
					ActualizarCasa(EnCasaID[playerid]);
				}
				else if(i == 16) return 1;
			}
		case D_ArmarioN:
			{
				if(!response) { return 1; }
				new i = listitem, nid = DentroNegocio[playerid];
				if(i >= 0 && i <= 9){
					S_nArmario(playerid, nid, i);
					save_Negocio(nid);
				}
				else if(i == 10) return 1;
				else if(i == 11) {
					G_nArmario(playerid, nid, 1);
					save_Negocio(nid);
				} else if(i == 12) {
					G_nArmario(playerid, nid, 2);
					save_Negocio(nid);
				}
			}
		case D_Farmario:
			{
				if(!response) { return 1; }
				new i = listitem;
				if(i >= 0 && i <= 11) {
					S_fArmario(playerid, user[playerid][jMiembroFam], i);
					ActualizarFamilia(user[playerid][jMiembroFam]);
				}
				else if(i == 12) return 1;
				else if(i == 13) {
					G_fArmario(playerid, user[playerid][jMiembroFam], 1);
					ActualizarFamilia(user[playerid][jMiembroFam]);
				} else if(i == 14) {
					G_fArmario(playerid, user[playerid][jMiembroFam], 2);
					ActualizarFamilia(user[playerid][jMiembroFam]);
				}
			}
		case D_TRABAJOS:
			{
				if(response) {
					if(listitem == 0) { //- Carguero
						Dialog(playerid, D_TRABAJOS2, DIALOG_STYLE_MSGBOX, "Google Maps: {D6E1EB}Carguero",
						"{FFFFFF}Información:\n\n\
						 Tipo: {00A2FF}Legal{FFFFFF}.\n\
						 Con Habilidad: {00A2FF}No{FFFFFF}.\n\
						 Licencia Necesaria: {C57BBB}Ninguna{FFFFFF}\n\
						 Paga: varía depende de habilidad\n\
						 Ubicación: Para ir al trabajo pulsa '{00C200}Marcar{FFFFFF}'.\n\n", "Marcar", "Cerrar");
						BuscarTrabajo[playerid] = 0;
					} else if(listitem == 1) { //- Delincuente
						Dialog(playerid, D_TRABAJOS2, DIALOG_STYLE_MSGBOX, "Un amigo te dijo: {D6E1EB}Delincuente",
						"{FFFFFF}Información:\n\n\
						 Tipo: {FF0000}Ilegal{FFFFFF}.\n\
						 Con Habilidad: {00A2FF}Si{FFFFFF}.\n\
						 Licencia Necesaria: {C57BBB}Ninguna{FFFFFF}\n\
						 Paga: ¡Depende de tu valentía!.\n\
						 Ubicación: ¡Encuentralo!.\n\n", "", "Cerrar");
						BuscarTrabajo[playerid] = 1;
					} else if(listitem == 2) { //- Pescador
						Dialog(playerid, D_TRABAJOS2, DIALOG_STYLE_MSGBOX, "Google Maps: {D6E1EB}Pescador",
						"{FFFFFF}Información:\n\n\
						 Tipo: {00A2FF}Legal{FFFFFF}.\n\
						 Con Habilidad: {00A2FF}No{FFFFFF}.\n\
						 Licencia Necesaria: {C57BBB}Conducir{FFFFFF}\n\
						 Paga: Mínimo {00c200}18${FFFFFF}, Máximo {00c200}35${FFFFFF}.\n\
						 Ubicación: Para ir al trabajo pulsa '{00C200}Marcar{FFFFFF}'.\n\n", "Marcar", "Cerrar");
						BuscarTrabajo[playerid] = 2;
					} else if(listitem == 3) { //- Camionero
						Dialog(playerid, D_TRABAJOS2, DIALOG_STYLE_MSGBOX, "Google Maps: {D6E1EB}Camionero",
						"{FFFFFF}Información:\n\n\
						 Tipo: {00A2FF}Legal{FFFFFF}.\n\
						 Con Habilidad: {00A2FF}Si{FFFFFF}.\n\
						 Licencia Necesaria: {C57BBB}Camionero{FFFFFF}\n\
						 Paga: {00c200}¡Eres autonomo!\n\
						 Ubicación: Para ir al trabajo pulsa '{00C200}Marcar{FFFFFF}'.\n\n", "Marcar", "Cerrar");
						BuscarTrabajo[playerid] = 3;
					} else if(listitem == 4) { //- Carpintero
						Dialog(playerid, D_TRABAJOS2, DIALOG_STYLE_MSGBOX, "Google Maps: {D6E1EB}Carpintero",
						"{FFFFFF}Información:\n\n\
						 Tipo: {00A2FF}Legal{FFFFFF}.\n\
						 Con Habilidad: {00A2FF}Si{FFFFFF}.\n\
						 Licencia Necesaria: {C57BBB}Ninguna{FFFFFF}\n\
						 Paga: varía depende de habilidad\n\
						 Ubicación: Para ir al trabajo pulsa '{00C200}Marcar{FFFFFF}'.\n\n", "Marcar", "Cerrar");
						BuscarTrabajo[playerid] = 5;
					} else if(listitem == 5) { //- Leñador
						Dialog(playerid, D_TRABAJOS2, DIALOG_STYLE_MSGBOX, "Google Maps: {D6E1EB}Leñador",
						"{FFFFFF}Información:\n\n\
						 Tipo: {00A2FF}Legal{FFFFFF}.\n\
						 Con Habilidad: {00A2FF}No{FFFFFF}.\n\
						 Licencia Necesaria: {C57BBB}Ninguna{FFFFFF}\n\
						 Paga: Variada.\n\
						 Ubicación: Para ir al trabajo pulsa '{00C200}Marcar{FFFFFF}'.\n\n", "Marcar", "Cerrar");
						BuscarTrabajo[playerid] = 6;
					} else if(listitem == 6) { //- Granjero
						Dialog(playerid, D_TRABAJOS2, DIALOG_STYLE_MSGBOX, "{D6E1EB}Granjero",
						"{FFFFFF}Información:\n\n\
						 Tipo: {00A2FF}Legal{FFFFFF}.\n\
						 Con Habilidad: {00A2FF}No{FFFFFF}.\n\
						 Licencia Necesaria: {C57BBB}Conducir{FFFFFF}\n\
						 Paga: Más de 600$.\n\
						 Ubicación: Para ir al trabajo pulsa '{00C200}Marcar{FFFFFF}'.\n\n", "Macar", "Cerrar");
						BuscarTrabajo[playerid] = 9;
					} else if(listitem == 7) { //- Traficante
						Dialog(playerid, D_INVALIDO, DIALOG_STYLE_MSGBOX, "{D6E1EB}Traficante",
						"{FFFFFF}Información:\n\n\
						 Tipo: {FF0000}Ilegal{FFFFFF}.\n\
						 Con Habilidad: {00A2FF}Si{FFFFFF}.\n\
						 Licencia Necesaria: {C57BBB}Ninguna{FFFFFF}\n\
						 Paga: varía por habilidad.\n\
						 Ubicación: ¡Encuentralo!.\n\n", "", "Cerrar");
						BuscarTrabajo[playerid] = 10;
					}
				}
			}
		case D_TRABAJOS2:
			{
				if(response) {
					if(BuscarTrabajo[playerid] == 0) _MarcarPos(playerid, 2137.6953, -2282.5144, 20.7174, "{00c200}Google Maps: El trabajo de carguero fue marcado en el radar.");
					else if(BuscarTrabajo[playerid] == 2) _MarcarPos(playerid, 2753.2439, -2551.0959, 13.6205, "{00c200}Google Maps: El trabajo de pescador fue marcado en el radar.");
					else if(BuscarTrabajo[playerid] == 3) _MarcarPos(playerid, 2429.3569, -2108.7351, 13.5563, "{00c200}Google Maps: El trabajo de camionero fue marcado en el radar.");
					else if(BuscarTrabajo[playerid] == 4) _MarcarPos(playerid, 2117.0188,-1790.6642,13.5547, "{00c200}Google Maps: El trabajo de repartidor de pizza fue marcado en el radar.");
					else if(BuscarTrabajo[playerid] == 5) _MarcarPos(playerid, 2143.5129, -2161.9673, 13.5084, "{00c200}Google Maps: El trabajo de carpintero fue marcado en el radar.");
					else if(BuscarTrabajo[playerid] == 6) _MarcarPos(playerid, -418.6058, -1759.5006, 6.2169, "{00c200}Google Maps: El trabajo de leñador fue marcado en el radar.");
					else if(BuscarTrabajo[playerid] == 7) _MarcarPos(playerid, 1377.8206, -1753.1219, 14.1406, "{00c200}Google Maps: El trabajo de ninguno fue marcado en el radar.");
					else if(BuscarTrabajo[playerid] == 8) _MarcarPos(playerid, 2327.2114, -1337.9492, 24.1971, "{00c200}Google Maps: El trabajo de ninguno fue marcado en el radar.");
					else if(BuscarTrabajo[playerid] == 9) _MarcarPos(playerid, -383.2412, -1438.8146, 26.3249, "{00c200}Google Maps: El trabajo de granjero fue marcado en el radar.");
					else if(BuscarTrabajo[playerid] == 10) _MarcarPos(playerid, 2457.5034,-1901.9773,13.5469, "{00c200}Google Maps: El trabajo de traficante fue marcado en el radar.");
				}
			}
		case D_GPS:
			{
				if(response) switch(listitem) {
					case 0: {
							new dialog[1024], stext[62];
							for(new i = 0; i < 6; i++) {
								new veh = user[playerid][jLlaveCoche][i];
								if(veh == 0) { format(string, sizeof(string), "\n{b0b0b0}Sin vehículos (ranura vacía)"); }
								else {
									switch(InfoVehiculo[veh-1000][vSpawned]) {
										case 0: stext = "{ff0000}Guardado (oculto){ffffff}";
										case 1: format(stext, sizeof(stext), "{FFFF00}ID Activa: %d", InfoVehiculo[veh-1000][vID]);
									}
									if(InfoVehiculo[veh-1000][vEnDeposito] == 1) format(string, sizeof(string), "\n{ffffff}%s - Modelo: %s - {CA3022}Embargado", stext, nombre_vehiculo[InfoVehiculo[veh-1000][vModelo] - 400]);
									else format(string, sizeof(string), "\n{ffffff}%s - Modelo: %s - ID Llave: {00CDFF}%d", stext, nombre_vehiculo[InfoVehiculo[veh-1000][vModelo] - 400], veh);
								}
								strcat(dialog, string);
							}
							Dialog(playerid, D_LOCALIZAR, DIALOG_STYLE_LIST, "Google Maps: {D6E1EB}Vehículos", dialog, "Seleccionar", "Cancelar");
						}
					case 1: Dialog(playerid, D_LUGARES, DIALOG_STYLE_LIST, "Google Maps: {D6E1EB}Locales", "{FFFFFF}24/7\nLocal de ropa\nResturante\nCluckin Bell\nPizzeria\nBurger Shot\nAmmu-Nation\nPeluquería\nSex Shop\nGasolinera\nTienda electrónica\nBar\nFerreteria\nAlhambra\nStrip club\nClub private\nTienda de empeño", "Marcar", "Salir");
					case 2: {
							Dialog(playerid, D_TRABAJOS, DIALOG_STYLE_TABLIST_HEADERS, "Bolsa de Empleo: {D6E1EB}Trabajos", "Nombre\n\
							Carguero\n\
							Delincuente\n\
							Pescador\n\
							No Operat\n\
							Carpintero\n\
							Leñador\n\
							Granjero\n\
							Traficante", "Seleccionar", "");
						}
					case 3: Dialog(playerid, D_LUGARES_2, DIALOG_STYLE_LIST, "Servicios (LS): {D6E1EB}Centrales", "{FFFFFF}LSPD\nAyuntamiento\nHospital", "Seleccionar", "Cancelar");
					case 4: Dialog(playerid, D_LUGARES_3, DIALOG_STYLE_LIST, "Google Maps: {D6E1EB}Concesionarios", "{FFFFFF}Concesionario de Motos\nConcesionario Coutt And Schutz\nConcesionario Grotti\nConcesionario de Camionetas\nConcesionario Aéreo\nConcesionario Los Santos\nConcesionario de ocasión", "Marcar", "Salir");
					case 5: _MarcarPos(playerid, 2795.9546, -2569.3674, 2.9869, "{00c200}Google Maps: El punto de pescador fue marcado en el radar.");
					case 6: _MarcarPos(playerid, 1263.2308, -1270.1278, 13.5345, "{00c200}Google Maps: El punto del casino fue marcado en el radar.");
				}
			}
		case D_LUGARES_4:
			{
				if(response) switch(listitem) {
					case 0: Dialog(playerid, D_LUGARES, DIALOG_STYLE_LIST, "Google Maps: {D6E1EB}Tiendas", "{FFFFFF}24/7\nLocal de ropa\nResturante\nCluckin Bell\nPizzeria\nBurger Shot\nAmmu-Nation\nPeluquería\nSex Shop\nGasolinera\nTienda electrónica\nBar\nFerreteria\nAlhambra\nStrip club\nClub private\nTienda de empeño", "Marcar", "Salir");
					case 1: {
							Dialog(playerid, D_TRABAJOS, DIALOG_STYLE_TABLIST_HEADERS, "Bolsa de Empleo: {D6E1EB}Trabajos", "Nombre\n\
							Carguero\n\
							Delincuente\n\
							Pescador\n\
							Camionero\n\
							Carpintero\n\
							Leñador\n\
							Granjero\n\
							Traficante", "Seleccionar", "");
						}
					case 2: _MarcarPos(playerid, -489.9008, -555.7960, 25.5029, "Google Maps: El depósito de embargos fue marcado en el radar.");
					case 3: _MarcarPos(playerid, 1481.7535, -1772.4050, 18.7829, "Google Maps: El ayuntamiento fue marcado en el radar.");
					case 4: _MarcarPos(playerid, 1382.1340, -1088.8351, 28.1970, "Google Maps: El banco de Los Santos fue marcado en el radar.");
				}
			}
		case D_LUGARES:
			{
				if(response) {
					new Str[256],Str_[3000],i_;
					SetPVarInt(playerid,"GPS_TipoNEG",listitem+1);
					new TIPO = GetPVarInt(playerid,"GPS_TipoNEG");
					for (new i = 0; i < MAX_NEGOCIOS; i++) {
						if(i_Negocio[i][nTipo] == TIPO) {
							new Float:Distancia = GetPlayerDistanceFromPoint(playerid,i_Negocio[i][nExteriorX],i_Negocio[i][nExteriorY],i_Negocio[i][nExteriorZ]);
							Formato(Str,"» %s {33CCFF}(Distancia: %0.2f M)\n",i_Negocio[i][nNombre],Distancia);
							strcat(Str_,Str);
							Formato(Str,"GPS_Neg_%d",i_);
							SetPVarInt(playerid,Str,i);
							i_++;
						}
					}
					Dialog(playerid,D_LUGARES_5,DIALOG_STYLE_LIST,"Google Maps: {D6E1EB}Tiendas",Str_,"Marcar","Salir");
				}
			}
		case D_LUGARES_5:
			{
				if(!response) return 1;
				new ID = listitem,StrPVar[40];
				Formato(StrPVar,"GPS_Neg_%d",ID);
				new i = GetPVarInt(playerid,StrPVar);
				SetPlayerCheckpoint(playerid, i_Negocio[i][nExteriorX],i_Negocio[i][nExteriorY],i_Negocio[i][nExteriorZ], 3);
				SetPVarInt(playerid, "EnCheckPoint", 1);
				return 1;
			}
		case D_LUGARES_2:
			{
                if(response) {
                    if(listitem == 0) _MarcarPos(playerid, 1284.1802, -1647.8237, 13.4780, "La central LSPD fue marcada en el radar.");
					else if(listitem == 1) _MarcarPos(playerid, 1481.7535, -1772.4050, 18.7829, "El ayuntamiento fue marcado en el radar.");
					else if(listitem == 2) _MarcarPos(playerid, 1508.4857, -1585.0031, 13.7156, "El hospital principal fue marcado en el radar.");
					else if(listitem == 3) _MarcarPos(playerid, 635.6021, -570.6527, 16.3044, "La central de la sheriff fue marcada en el radar.");
				}
			}
		case D_LUGARES_3:
			{
				if(response)
				{
					if(listitem == 0) _MarcarPos(playerid, 1981.1210, -2100.5159, 13.4231, "Google Maps: El concesionario de motos fue marcado en el radar.");
					else if(listitem == 1) _MarcarPos(playerid, 2131.8674, -1151.0360, 23.8920, "Google Maps: El concesionario Coutt And Schutz fue marcado en el radar.");
					else if(listitem == 2) _MarcarPos(playerid, 519.0496, -1293.6548, 17.2224, "Google Maps: El concesionario Grotti fue marcado en el radar.");
					else if(listitem == 3) _MarcarPos(playerid, 2793.1045, -1087.5013, 30.6801, "Google Maps: El concesionario de camionetas fue marcado en el radar.");
					else if(listitem == 4) _MarcarPos(playerid, 2006.0568, -2271.4482, 13.5344, "Google Maps: El concesionario del aeropuerto fue marcado en el radar.");
					else if(listitem == 5) _MarcarPos(playerid, 2515.4216, -1957.9753, 16.7286, "Google Maps: El concesionario de Los Santos fue marcado en el radar.");
					else if(listitem == 6) _MarcarPos(playerid, 2589.1169, -2219.4470, 13.5184, "Google Maps: El concesionario de ocasión fue marcado en el radar.");
				}
			}
		case D_LOCALIZAR:
			{
				if(response == 1) {
					for(new i = 0; i < 6; i++) {
						if(listitem == i) {
							new veh = user[playerid][jLlaveCoche][i], Float: carPos[3], zone[MAX_ZONE_NAME];
							if(veh == INVALID_PLAYER_VEHICLE_ID) return _Mensaje(playerid, 0, "68", "N¡o se puede en un vehículo que no existe!");
							if(InfoVehiculo[veh-1000][vEnDeposito] == 1) return _Mensaje(playerid, 0, "67", "No se puede en un vehículo confiscado (acude a LS-PD).");
							if(InfoVehiculo[veh-1000][vSpawned] == 0) return _Mensaje(playerid, 0, "67", "No puedes localizar vehículos guardados (usa '/coches').");
							GetVehiclePos(InfoVehiculo[veh-1000][vID], carPos[0], carPos[1], carPos[2]);
							GetCar3DZone(InfoVehiculo[veh-1000][vID], zone, sizeof(zone));
							format(string, sizeof(string), "Google Maps (vehículos): Tu vehículo fue localizado en %s. {ff0000}(vé al punto rojo).", zone);
							_Mensaje(playerid, 2, "0", string);
							SetPlayerCheckpoint(playerid, carPos[0], carPos[1], carPos[2], 15.0);
							SetPVarInt(playerid, "EnCheckPoint", 1);
							ActualizarVehiculo(veh-1000);
							TogglePlayerAllDynamicCPs(playerid, false);
							return 1;
						}
					}
				}
			}
		case D_LOCALIZAR2:
			{
				if(response == 1) {
					for(new i = 0; i < 6; i++) {
						if(listitem == i) {
							new veh = user[playerid][jLlaveCochePrestado][i], Float: carPos[3], zone[MAX_ZONE_NAME];
							if(veh == INVALID_PLAYER_VEHICLE_ID) return _Mensaje(playerid, 0, "68", "No se puede en un vehículo que no existe.");
							if(InfoVehiculo[veh-1000][vEnDeposito] == 1) return _Mensaje(playerid, 0, "67", "No se puede en un vehículo confiscado.");
							if(InfoVehiculo[veh-1000][vSpawned] == 0) return _Mensaje(playerid, 0, "67", "No puedes localizar vehículos guardados.");
							GetVehiclePos(InfoVehiculo[veh-1000][vID], carPos[0], carPos[1], carPos[2]);
							GetCar3DZone(InfoVehiculo[veh-1000][vID], zone, sizeof(zone));
							format(string, sizeof(string), "Tu vehículo fue localizado en %s. {ff0000}(Vé al punto rojo).", zone);
							_Mensaje(playerid, 2, "0", string);
							SetPlayerCheckpoint(playerid, carPos[0], carPos[1], carPos[2], 15.0);
							SetPVarInt(playerid, "EnCheckPoint", 1);
							ActualizarVehiculo(veh-1000);
							return 1;
						}
					}
				}
			}
		case D_AGENDA:
			{
				if(!response) { return 1;}
				new i = listitem;
				if(i >= 0 && i <= 19) { RanuraSeleccionadaA[playerid] = i; Dialog(playerid, D_AGENDA2, DIALOG_STYLE_LIST, "{D6E1EB}Opciones:", "{00CDFF}Agregar contacto\n{CA3022}Eliminar contacto\n{00c200}Llamar contacto", "Seleccionar", "Cancelar"); }
			}
		case D_AGENDA2:
			if(response) switch(listitem) {
				case 0: Dialog(playerid, D_AGENDA3, DIALOG_STYLE_INPUT, "{D6E1EB}Número", "{FFFFFF}> Escribe el número de teléfono", "Aceptar", "Cancelar");
				case 1: {
						if(user[playerid][jContacto][RanuraSeleccionadaA[playerid]] == 0) return _Mensaje(playerid, 0, "430", "No hay ningún contacto en esa ranura.");
						if(RanuraSeleccionadaA[playerid] == 0) alm(user[playerid][jContactoN1], "Vacío");
						else if(RanuraSeleccionadaA[playerid] == 1) alm(user[playerid][jContactoN2], "Vacío");
						else if(RanuraSeleccionadaA[playerid] == 2) alm(user[playerid][jContactoN3], "Vacío");
						else if(RanuraSeleccionadaA[playerid] == 3) alm(user[playerid][jContactoN4], "Vacío");
						else if(RanuraSeleccionadaA[playerid] == 4) alm(user[playerid][jContactoN5], "Vacío");
						else if(RanuraSeleccionadaA[playerid] == 5) alm(user[playerid][jContactoN6], "Vacío");
						else if(RanuraSeleccionadaA[playerid] == 6) alm(user[playerid][jContactoN7], "Vacío");
						else if(RanuraSeleccionadaA[playerid] == 7) alm(user[playerid][jContactoN8], "Vacío");
						else if(RanuraSeleccionadaA[playerid] == 8) alm(user[playerid][jContactoN9], "Vacío");
						else if(RanuraSeleccionadaA[playerid] == 9) alm(user[playerid][jContactoN10], "Vacío");
						else if(RanuraSeleccionadaA[playerid] == 10) alm(user[playerid][jContactoN11], "Vacío");
						else if(RanuraSeleccionadaA[playerid] == 11) alm(user[playerid][jContactoN12], "Vacío");
						else if(RanuraSeleccionadaA[playerid] == 12) alm(user[playerid][jContactoN13], "Vacío");
						else if(RanuraSeleccionadaA[playerid] == 13) alm(user[playerid][jContactoN14], "Vacío");
						else if(RanuraSeleccionadaA[playerid] == 14) alm(user[playerid][jContactoN15], "Vacío");
						else if(RanuraSeleccionadaA[playerid] == 15) alm(user[playerid][jContactoN16], "Vacío");
						else if(RanuraSeleccionadaA[playerid] == 16) alm(user[playerid][jContactoN17], "Vacío");
						else if(RanuraSeleccionadaA[playerid] == 17) alm(user[playerid][jContactoN18], "Vacío");
						else if(RanuraSeleccionadaA[playerid] == 18) alm(user[playerid][jContactoN19], "Vacío");
						else if(RanuraSeleccionadaA[playerid] == 19) alm(user[playerid][jContactoN20], "Vacío");
						user[playerid][jContacto][RanuraSeleccionadaA[playerid]] = 0;
						_Mensaje(playerid, 4, "ADC3E7", "Contacto eliminado de la agenda.");
						RanuraSeleccionadaA[playerid] = -1;
						return 1;
					}
				case 2: {
						if (user[playerid][jContacto][RanuraSeleccionadaA[playerid]] == 0) return _Mensaje(playerid, 0, "430", "No hay ningún contacto en esa ranura.");
						if (user[playerid][jSaldo] < 3) return _Mensaje(playerid, 0, "40", "No tienes saldo suficiente para realizar esta llama.");
						if (B_Telefono[playerid] > 0) return _Mensaje(playerid, 0, "279", "Tu teléfono se encuentra apagado, escribe /encendermovil para encenderlo.");
						if (EnLlamada[playerid] != 0){_Mensaje(playerid, 0, "279", "Ya estás en una llamada."); return 1;}
						if(user[playerid][jContacto][RanuraSeleccionadaA[playerid]] == user[playerid][jTelefono]){_Mensaje(playerid, 0, "281", "No te puedes llamar a tí mismo."); return 1;}
						LlamarTelefono(playerid, user[playerid][jContacto][RanuraSeleccionadaA[playerid]]);
						RanuraSeleccionadaA[playerid] = -1;
					}
			}
		case D_AGENDA3:
			{
				new amount = strval(inputtext);
				if(!isnumeric(inputtext)) return _Mensaje(playerid, 0, "43", "Sólo números porfavor, vuelve a intentarlo.");
				if(amount > 999999 || amount < 1000) return _Mensaje(playerid, 0, "430", "Número no puede ser mayor a 999999 o menor a 1000.");
				if(user[playerid][jContacto][RanuraSeleccionadaA[playerid]] != 0) return _Mensaje(playerid, 0, "430", "Ya tienes un contacto en esa ranura.");
				user[playerid][jContacto][RanuraSeleccionadaA[playerid]] = amount;
				Dialog(playerid, D_AGENDA4, DIALOG_STYLE_INPUT, "{D6E1EB}Nombre", "{FFFFFF}> Escribe el nombre del contacto", "Aceptar", "Cancelar");
			}
		case D_AGENDA4:
			{
				if (!response) return 1;
				if (!strlen(inputtext)) return 1;
				if (strlen(inputtext) > 20 || strlen(inputtext) < 0) { _Mensaje(playerid, 0, "106", "No puedes poner el nombre con más de 20 carácteres."); return 1; }
				if(RanuraSeleccionadaA[playerid] == 0) alm(user[playerid][jContactoN1], inputtext);
				else if(RanuraSeleccionadaA[playerid] == 1) alm(user[playerid][jContactoN2], inputtext);
				else if(RanuraSeleccionadaA[playerid] == 2) alm(user[playerid][jContactoN3], inputtext);
				else if(RanuraSeleccionadaA[playerid] == 3) alm(user[playerid][jContactoN4], inputtext);
				else if(RanuraSeleccionadaA[playerid] == 4) alm(user[playerid][jContactoN5], inputtext);
				else if(RanuraSeleccionadaA[playerid] == 5) alm(user[playerid][jContactoN6], inputtext);
				else if(RanuraSeleccionadaA[playerid] == 6) alm(user[playerid][jContactoN7], inputtext);
				else if(RanuraSeleccionadaA[playerid] == 7) alm(user[playerid][jContactoN8], inputtext);
				else if(RanuraSeleccionadaA[playerid] == 8) alm(user[playerid][jContactoN9], inputtext);
				else if(RanuraSeleccionadaA[playerid] == 9) alm(user[playerid][jContactoN10], inputtext);
				else if(RanuraSeleccionadaA[playerid] == 10) alm(user[playerid][jContactoN11], inputtext);
				else if(RanuraSeleccionadaA[playerid] == 11) alm(user[playerid][jContactoN12], inputtext);
				else if(RanuraSeleccionadaA[playerid] == 12) alm(user[playerid][jContactoN13], inputtext);
				else if(RanuraSeleccionadaA[playerid] == 13) alm(user[playerid][jContactoN14], inputtext);
				else if(RanuraSeleccionadaA[playerid] == 14) alm(user[playerid][jContactoN15], inputtext);
				else if(RanuraSeleccionadaA[playerid] == 15) alm(user[playerid][jContactoN16], inputtext);
				else if(RanuraSeleccionadaA[playerid] == 16) alm(user[playerid][jContactoN17], inputtext);
				else if(RanuraSeleccionadaA[playerid] == 17) alm(user[playerid][jContactoN18], inputtext);
				else if(RanuraSeleccionadaA[playerid] == 18) alm(user[playerid][jContactoN19], inputtext);
				else if(RanuraSeleccionadaA[playerid] == 19) alm(user[playerid][jContactoN20], inputtext);
				_Mensaje(playerid, 4, "ADC3E7", "Nuevo contacto agregado a tu agenda telefónica.");
				RanuraSeleccionadaA[playerid] = -1;
				return 1;
            }
		case D_SALDO:
			{
				new amount = strval(inputtext);
				new nid = GetPlayerVirtualWorld(playerid) - 300;
				if(amount < 1) { _Mensaje(playerid, 0, "22", "No puedes recargar menos de un dolar."); return 1; }
				if(ComprobarDineroJ(playerid) >= amount) {
					i_Negocio[nid][nDinero] += amount;
					user[playerid][jSaldo] += amount;
					DarDineroGC(playerid, -amount);
					format(string, sizeof(string), "Recargaste $%d, ahora tienes $%d de saldo en tu teléfono.", amount, user[playerid][jSaldo]);
					_Mensaje(playerid, 2, "0", string);
				} else _Mensaje(playerid, 0, "23", "No tienes tanto dinero para recargar.");
			}
		case D_AYUNTAMIENTO:
			{
				if(response) {
					if(listitem == 0) {
						if (user[playerid][jDocumento] != 0) return _Mensaje(playerid, 0, "1", "Ya tienes un documento registrado en el estado de los santos.");
						new documento = Random(100000, 499999);
						user[playerid][jDocumento] = documento;
						format(string, sizeof(string), "Acabas de obtener un documento el cual te identifica como ciudadano, número %d.", documento);
						_Mensaje(playerid, 2, "0", string);
						DarDineroGC(playerid, -10);
						DineroEstado += 10;
						return 1;
					} else if(listitem == 1) {
						Dialog(playerid, D_LICENCIAS, DIALOG_STYLE_TABLIST_HEADERS, "{D6E1EB}Centro de Licencias", "Tipo Licencia\tPrecio\n\
						Conducir\t$500\n\
						Navegación\t$2000\n\
						Vuelo\t$25000\n\
						Trans. Mercancias\t$4500", "Seleccionar", "Cancelar");
					} else if(listitem == 2) {
						new dialog[1024], multad, stext[62];
						if (user[playerid][jLicencias][1] == 0) return _Mensaje(playerid, 0, "1", "Una licencia de conducir válida es necesaria para liberar su vehículo del depósito municipal.");
						for(new i = 0; i < 6; i++) {
							new veh = user[playerid][jLlaveCoche][i];
							if(veh == 0) { format(string, sizeof(string), "\n{b0b0b0}"); }
							else {
								switch(InfoVehiculo[veh-1000][vSpawned]) {
									case 0: stext = "{ff0000}Guardado{ffffff}";
									case 1: format(stext, sizeof(stext), "{FFFF00}ID Activa %d", InfoVehiculo[veh-1000][vID]);
								}
								if(InfoVehiculo[veh-1000][vEnDeposito] == 1) { format(string, sizeof(string), "\n{FFFF00}ID: %d - Vehículo: %s - {CA3022}Embargado{ffffff} $%d", InfoVehiculo[veh-1000][vID], nombre_vehiculo[InfoVehiculo[veh-1000][vModelo] - 400], InfoVehiculo[veh-1000][vMulta] + (user[playerid][jNivel] * 3)); ++multad; }
								else if(InfoVehiculo[veh-1000][vMulta]) { format(string, sizeof(string), "\n{FFFF00}ID: %d - Modelo: %s - Multa: {00c200}%d", InfoVehiculo[veh-1000][vID], nombre_vehiculo[InfoVehiculo[veh-1000][vModelo] - 400], InfoVehiculo[veh-1000][vMulta]); ++multad; }
								else format(string, sizeof(string), "\n{FFFF00}ID Activa: %d - Vehículo: %s - Llave ID: {00CDFF}%d", InfoVehiculo[veh-1000][vID], nombre_vehiculo[InfoVehiculo[veh-1000][vModelo] - 400], veh);
							}
							strcat(dialog, string);
						}
						if (multad) {
							Dialog(playerid, D_MULTA, DIALOG_STYLE_LIST, "{D6E1EB}Vehículos en propiedad", dialog, "Seleccionar", "Cancelar");
						} else _Mensaje(playerid, 0, "1", "No tienes multas para pagar o vehículos embargados.");
					} else if(listitem == 3) {
						new casai, negi, vehi = 0, neg = user[playerid][jNegocioKey], casa = user[playerid][jCasaKey];
						if(user[playerid][jCasaKey] != -1) {
							if (InfoCasa[casa][cTipo] == 1) casai += 20;
							else if (InfoCasa[casa][cTipo] == 2) casai += 40;
							else if (InfoCasa[casa][cTipo] == 3) casai += 75;
							else if (InfoCasa[casa][cTipo] == 4) casai += 80;
							else if (InfoCasa[casa][cTipo] == 5) casai += 100;
						} else casai = 0;
						if(neg != -1) {
							if (i_Negocio[neg][nTipo] == 1) negi += 20;
							else if (i_Negocio[neg][nTipo] == 2) negi += 20;
							else if (i_Negocio[neg][nTipo] == 3) negi += 30;
							else if (i_Negocio[neg][nTipo] == 4) negi += 20;
							else if (i_Negocio[neg][nTipo] == 5) negi += 20;
							else if (i_Negocio[neg][nTipo] == 6) negi += 20;
							else if (i_Negocio[neg][nTipo] == 7) negi += 50;
							else if (i_Negocio[neg][nTipo] == 8) negi += 50;
							else if (i_Negocio[neg][nTipo] == 9) negi += 30;
							else if (i_Negocio[neg][nTipo] == 10) negi += 12;
							else if (i_Negocio[neg][nTipo] == 11) negi += 50;
							else if (i_Negocio[neg][nTipo] == 12) negi += 50;
							else if (i_Negocio[neg][nTipo] == 13) negi += 20;
							else if (i_Negocio[neg][nTipo] == 14) negi += 60;
							else if (i_Negocio[neg][nTipo] == 15) negi += 40;
							else if (i_Negocio[neg][nTipo] == 16) negi += 50;
						} else negi = 0;
						if(user[playerid][jLlaveCoche][0] != 0) { vehi += 25; }
						if(user[playerid][jLlaveCoche][1] != 0) { vehi += 25; }
						if(user[playerid][jLlaveCoche][2] != 0) { vehi += 25; }
						if(user[playerid][jLlaveCoche][3] != 0) { vehi += 25; }
						if(user[playerid][jLlaveCoche][4] != 0) { vehi += 25; }
						if(user[playerid][jLlaveCoche][5] != 0) { vehi += 25; }
						new coordsstring[300], DialogStatus[3000];
						format(coordsstring, sizeof(coordsstring), "\n{ffffff}{D6E1EB} Viviendas:\n{ff0000}%d${ffffff} - pago de agua/luz\n\n", casai);
						strcat(DialogStatus, coordsstring);
						format(coordsstring, sizeof(coordsstring), "{ffffff}{D6E1EB} Locales:\n{ff0000}%d${ffffff} - pago de agua/luz\n\n", negi);
						strcat(DialogStatus, coordsstring);
						format(coordsstring, sizeof(coordsstring), "{ffffff}{D6E1EB} Vehículos:\n{ff0000}%d${ffffff} - impuestos\n\n", vehi);
						strcat(DialogStatus, coordsstring);
						new coordsstring2[300];
						format(coordsstring2, sizeof(coordsstring2), "{b0b0b0}Impuestos de %s", NombreRJugador(playerid));
						Dialog(playerid, D_INVALIDO, DIALOG_STYLE_MSGBOX, coordsstring2, DialogStatus, "Cerrar", "");
					} else if(listitem == 4) {
						new neg = user[playerid][jNegocioKey], neg2 = user[playerid][jNegocioKey2], dialog[1024], stext[128];
						if(neg != -1) {
							if(i_Negocio[neg][nCuotas] == 0) format(stext, sizeof(stext), "\n{ffffff}#1 - %s - {ADC3E7}Libre de cuotas{ffffff}", i_Negocio[neg][nNombre]);
							else format(stext, sizeof(stext), "\n{ffffff}#1 - %s - {BA1E00}Cuota:{ffffff} $%d", i_Negocio[neg][nNombre], i_Negocio[neg][nCuotas]);

						} else format(stext, sizeof(stext), "\n{b0b0b0}#1 Ranura vacía");
						strcat(dialog, stext);
						if(neg2 != -1) {
							if(i_Negocio[neg2][nCuotas] == 0) format(stext, sizeof(stext), "\n{ffffff}#2 - %s - {ADC3E7}Libre de cuotas{ffffff}", i_Negocio[neg2][nNombre]);
							else format(stext, sizeof(stext), "\n{ffffff}#2 - %s - {BA1E00}Cuota:{ffffff} $%d", i_Negocio[neg2][nNombre], i_Negocio[neg2][nCuotas]);
							strcat(dialog, stext);
						}
						Dialog(playerid, D_Cuotas, DIALOG_STYLE_LIST, "{D6E1EB}Cuotas de negocios", dialog, "Seleccionar", "Cancelar");
						return 1;
					}

				}
			}
        case D_LICENCIAS:
			{
				if(response) switch(listitem) {
					case 0: {
							if(user[playerid][jLicencias][1] == 1) return _Mensaje(playerid, 0, "12", "Ya posees una licencia de conducción.");
							if(ComprobarDineroJ(playerid) < 500) return _Mensaje(playerid, 0, "9", "No puedes pagar esta licencia de conducir.");
							DarDineroGC(playerid, -500);
							user[playerid][jLicencias][1] = 1;
							_Mensaje(playerid, 4, "ADC3E7", "Enhorabuena has obtenido una licencia de conducir por el precio de 500$");
						}
					case 1: {
							if(user[playerid][jLicencias][5] == 1) _Mensaje(playerid, 0, "13", "Ya posees una licencia de navegación.");
							if(ComprobarDineroJ(playerid) < 2000) return _Mensaje(playerid, 0, "10", "No puedes pagar esta licencia de navegación.");
							DarDineroGC(playerid, -2000);
       						user[playerid][jLicencias][5] = 1;
							_Mensaje(playerid, 4, "ADC3E7", "Enhorabuena has obtenido una licencia de navegación por el precio de 2000$.");
						}
					case 2: {
							if(user[playerid][jLicencias][4] == 1) _Mensaje(playerid, 0, "15", "Ya posees una licencia aérea.");
							if(user[playerid][jNivel] >= 3) {
								if(ComprobarDineroJ(playerid) < 25000) return _Mensaje(playerid, 0, "11", "No puedes pagar esta licencia aérea.");
								DarDineroGC(playerid, -25000);
								user[playerid][jLicencias][4] = 1;
								_Mensaje(playerid, 4, "ADC3E7", "Enhorabuena has obtenido la licencia aérea por 25.000$ ¡Ahora podrás recorrer los cielos!.");
							} else _Mensaje(playerid, 0, "14", "Necesitas ser nivel 3 para comprar la licencia de aérea.");
						}
					case 3: {
							if(user[playerid][jLicencias][2] == 1) _Mensaje(playerid, 0, "21", "Ya posees el permiso de transporte de mercancías.");
							if(ComprobarDineroJ(playerid) < 4500) return _Mensaje(playerid, 0, "19", "No puedes pagar el permiso de transporte de mercancías.");
							DarDineroGC(playerid, -4500);
							user[playerid][jLicencias][2] = 1;
							_Mensaje(playerid, 4, "ADC3E7", "Enhorabuena has obtenido el permiso de transporte de mercancías por carretera de San Andreas.");
						}
					}
			}
		case D_PUERTO:
			{
				if(response) {
					if(listitem == 0) {
						if(user[playerid][jCarnadas] > 50) return _Mensaje(playerid, 0, "126", "Ya has comprado 50 carnadas para pescar, gastalas primero.");
						if(ComprobarDineroJ(playerid) < 10) { _Mensaje(playerid, 0, "32", "No tienes suficiente dinero."); return 1; }
						Compra(playerid, 10);
						_Mensaje(playerid, 5, "0", "Compraste una lata de carnadas de 15 unidades.");
						user[playerid][jCarnadas] += 15;
						return 1;
					} else if(listitem == 1) {
						if(user[playerid][jLineas] > 30) return _Mensaje(playerid, 0, "126", "Ya has comprado 30 lineas para pescar, gastalas primero.");
						if(ComprobarDineroJ(playerid) < 5) { _Mensaje(playerid, 0, "32", "No tienes suficiente dinero."); return 1; }
						Compra(playerid, 5);
						_Mensaje(playerid, 5, "0", "Compraste diez lineas de caña de pescar.");
						user[playerid][jLineas] += 10;
						return 1;
					} else if(listitem == 2) {
						if(ComprobarDineroJ(playerid) < 25) { _Mensaje(playerid, 0, "32", "No tienes suficiente dinero."); return 1; }
						new objeto = 85;
						if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
						if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, objeto); user[playerid][jm_Derecha] = objeto, user[playerid][jm_DerechaCant] = 1;}
						else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, objeto); user[playerid][jm_Izquierda] = objeto, user[playerid][jm_IzquierdaCant] = 1;}
						Compra(playerid, 25);
						_Mensaje(playerid, 5, "0", "Compraste una caña de pescar.");
						return 1;
					} else if(listitem == 3) {
						if (user[playerid][jPescados] > 10)
						{
							format(string, sizeof(string), "* Vendiste %d peces al restaurante y sumaste $%i a tu bolsillo.", user[playerid][jPescados], user[playerid][jPescados]);
							_Mensaje(playerid, 4, "33CCFF", string);
							DarDineroGC(playerid, user[playerid][jPescados]);
							user[playerid][jPescados] = 0;
							return 1;
						} else return _Mensaje(playerid, 0, "423", "Lo mínimo para vender son diez peces.");
					}
				}
			}
		case D_BOOMBOX:
			{
				if(!response) return _Mensaje(playerid, 2, "0", "Has cancelado la selección de emisoras de radio.");
				switch(listitem) {
					case 0: {
							if(GetPVarType(playerid, "BBArea")) {
								foreach(Player, i) {
									if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) { StopStream(i); }
								}
								DeletePVar(playerid, "BBStation");
							}
							_Mensaje(playerid, 2, "0", "Has apagado tu equipo sonido.");
						}
					case 1: {
							new StationsDialog[2500];
							strcat(StationsDialog, "Número\tNombre\tGénero\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}1\t{FFFFFF}54 House\t{00A2FF}Electro\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}2\t{FFFFFF}Top Latino\t{00A2FF}Variado\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}3\t{FFFFFF}Dubbase.FM\t{00A2FF}Dubstep\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}4\t{FFFFFF}Reggae Hits\t{00A2FF}Reggaeton\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}5\t{FFFFFF}MBradio.FM\t{00A2FF}Reggaeton\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}6\t{FFFFFF}113 FM TEagle\t{00A2FF}Classic rock\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}7\t{FFFFFF}181 FM\t{00A2FF}Classic rock\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}8\t{FFFFFF}Soft Rock Cafe\t{00A2FF}Heavy Metal\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}9\t{FFFFFF}HardRadio.com\t{00A2FF}Rock\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}10\t{FFFFFF}Aural Moon\t{00A2FF}Punk\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}11\t{FFFFFF}Idobi Radio\t{00A2FF}Electronic\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}12\t{FFFFFF}www.Hot108.com\t{00A2FF}Hip Hop\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}13\t{FFFFFF}Sensacion Peru\t{00A2FF}Pop\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}14\t{FFFFFF}BluePoint\t{00A2FF}Metal\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}15\t{FFFFFF}PaganMetalRadio\t{00A2FF}Extreme Metal\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}16\t{FFFFFF}Dirty Beats Radio 24/7\t{00A2FF}Extreme Metal\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}17\t{FFFFFF}The Trip\t{00A2FF}Music Usa\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}18\t{FFFFFF}Latina FM (Arg)\t{00A2FF}Variado\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}19\t{FFFFFF}Amor latino\t{00A2FF}Variado\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}20\t{FFFFFF}Hotmixradio\t{00A2FF}Hip Hop\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}21\t{FFFFFF}Naxi Café Radio\t{00A2FF}Variado\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}22\t{FFFFFF}Radio Hunter\t{00A2FF}Electrónica\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}23\t{FFFFFF}181.0 - BCEver\t{00A2FF}Rock Clásico", sizeof(StationsDialog));
							Dialog(playerid, D_BOOMBOX1, DIALOG_STYLE_TABLIST_HEADERS, "{00C200}Radios", StationsDialog, "Seleccionar", "Atrás");
						}
					case 2: Dialog(playerid, D_BOOMBOX2, DIALOG_STYLE_INPUT, "{D6E1EB}Url - Internet", "{FFFFFF}Inserta un Stream (www.offliberty.com) para reproducirlo", "Continuar", "Cancelar");
				}
			}
		case D_BOOMBOX1:
			{
				if(!response) Dialog(playerid, D_BOOMBOX, DIALOG_STYLE_LIST, "{D6E1EB}Lista de emisoras", "Radio Online\nURL - Internet\nApagar equipo sonido", "Seleccionar", "Cancelar");
				if(response) {
					if(listitem == 0) _boombox(playerid, "http://54house.stream-balancer.de:80");
					else if(listitem == 1) _boombox(playerid, "http://184.154.94.194:8028/listen.pls");
					else if(listitem == 2) _boombox(playerid, "http://148.251.91.15:7004");
					else if(listitem == 3) _boombox(playerid, "http://listen.shoutcast.com/reggaetonhits.m3u");
					else if(listitem == 4) _boombox(playerid, "http://216.230.231.122:8000/MP3128");
					else if(listitem == 5) _boombox(playerid, "http://listen.shoutcast.com/113fmtheeagle.m3u");
					else if(listitem == 6) _boombox(playerid, "http://108.61.73.119:8028");
					else if(listitem == 7) _boombox(playerid, "http://173.244.215.163:8380");
					else if(listitem == 8) _boombox(playerid, "http://69.4.232.118:80");
					else if(listitem == 9) _boombox(playerid, "http://64.202.98.133:2010");
					else if(listitem == 10) _boombox(playerid, "http://50.117.115.211:80");
					else if(listitem == 11) _boombox(playerid, "http://108.61.30.179:4010");
					else if(listitem == 12) _boombox(playerid, "http://50.7.64.226:80/frisky_mp3_hi");
					else if(listitem == 13) _boombox(playerid, "http://5.135.223.251:9000");
					else if(listitem == 14) _boombox(playerid, "http://62.210.209.179:8030/stream");
					else if(listitem == 15) _boombox(playerid, "http://198.211.102.165:8000");
					else if(listitem == 16) _boombox(playerid, "http://somafm.com/tags.pls");
					else if(listitem == 17) _boombox(playerid, "http://streaming.latina101.com.ar/listen.pls");
					else if(listitem == 18) _boombox(playerid, "http://s3.voscast.com:8002/;.m3u");
					else if(listitem == 19) _boombox(playerid, "http://listen.radionomy.com/hotmixradio-hiphop-128.m3u");
					else if(listitem == 20) _boombox(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=139278");
					else if(listitem == 21) _boombox(playerid, "http://listen.shoutcast.com:80/RadioHunter-TheHitzChannel");
					else if(listitem == 22) _boombox(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=654138");
				}
			}
		case D_BOOMBOX2:
			{
				if(response == 1) {
					if(isnull(inputtext)) { return _Mensaje(playerid, 2, "0", "No has introducido ningun URL."); }
					if(strlen(inputtext)) { _boombox(playerid, inputtext); }
				}
			}
		case D_FOpciones:
			{
				if(response) switch(listitem) {
					case 1: Dialog(playerid, D_Fdinero, DIALOG_STYLE_LIST, "{D6E1EB}Dinero de familia", "{FFFFFF}Retirar\nDepositar", "Seleccionar", "Atrás");
					case 2: ver_fArmario(playerid, user[playerid][jMiembroFam]);
				}
			}
		case D_Fdinero:
			{
				new tDialogo[300];
				if(response) {
					switch(listitem) {
						case 0: {
								new family = user[playerid][jMiembroFam];
								format(tDialogo, sizeof(tDialogo), "Ingresa la cantidad que deseas retirar:\n\n{FFFF00}Disponible: %d", InfoFamilia[family][fDinero]);
								Dialog(playerid, D_FdineroR, DIALOG_STYLE_INPUT, "{D6E1EB}Retirar:", tDialogo, "Retirar", "Atrás");
							}
						case 1: {
								new family = user[playerid][jMiembroFam];
								format(tDialogo, sizeof(tDialogo), "Ingresa la cantidad que deseas depositar:\n\n{FFFF00}Disponible: %d", InfoFamilia[family][fDinero]);
								Dialog(playerid, D_FdineroD, DIALOG_STYLE_INPUT, "{D6E1EB}Depósito:", tDialogo, "Depositar", "Atrás");
							}
						}
				} else {
					new family = user[playerid][jMiembroFam];
					format(tDialogo, sizeof(tDialogo), "{FFFFFF}Familia: {00C200}(%s){FFFFFF}\nDinero: {00C200}($%d)\n{FFFFFF}Armario", InfoFamilia[family][fNombre], InfoFamilia[family][fDinero]);
					Dialog(playerid, D_FOpciones, DIALOG_STYLE_LIST, "{D6E1EB}Tu familia:", tDialogo, "Seleccionar", "Salir");
				}
			}
		case D_FdineroR:
			{
				if(response) {
					new amount = strval(inputtext);
					if(!isnumeric(inputtext)) return _Mensaje(playerid, 0, "43", "Sólo números por favor, vuelve a intentarlo.");
					if(amount < 1) return _Mensaje(playerid, 0, "24", "No puedes retirar menos de un dolar.");
					new family = user[playerid][jMiembroFam];
					if(amount > InfoFamilia[family][fDinero]) return _Mensaje(playerid, 2, "0", "No hay esa cantidad en la caja fuerte.");
					InfoFamilia[family][fDinero] -= amount;
					DarDineroGC(playerid, amount);
					format(string, sizeof(string), "Retiraste $%d de la caja fuerte de tu familia.", amount);
					_Mensaje(playerid, 2, "0", string);
					format(string, sizeof(string), "* %s retiro %d de la caja fuerte.", NombreRJugador(playerid), amount);
					MensajeFamilia(family, C_LIGHTBLUE, string);
					format(string, sizeof(string), "Registros: %s retiró $%d de la cajafuerte de la familia %d.", NombreRJugador(playerid), amount, user[playerid][jMiembroFam] + 1);
					Log("Registros/Familias.log", string);
					ActualizarFamilia(user[playerid][jMiembroFam]);
				} else Dialog(playerid, D_Fdinero, DIALOG_STYLE_LIST, "{D6E1EB}Dinero de familia", "{FFFFFF}Retirar\nDepositar", "Seleccionar", "Atrás");
			}
		case D_FdineroD:
			{
				if(response) {
					new amount = strval(inputtext);
					if(!isnumeric(inputtext)) return _Mensaje(playerid, 0, "43", "Sólo números porfavor, vuelve a intentarlo.");
					if(amount < 1) return _Mensaje(playerid, 2, "0", "No puedes depositar menos de un dolar.");
					new family = user[playerid][jMiembroFam];
					if(ComprobarDineroJ(playerid) < amount) return _Mensaje(playerid, 2, "0", "No tienes la cantidad ingresada para depositar.");
					InfoFamilia[family][fDinero] += amount;
					DarDineroGC(playerid, -amount);
					format(string, sizeof(string), "Depositaste $%d en la caja fuerte de tu familia.", amount);
					_Mensaje(playerid, 2, "0", string);
					ActualizarFamilia(user[playerid][jMiembroFam]);
				} else Dialog(playerid, D_Fdinero, DIALOG_STYLE_LIST, "{D6E1EB}Dinero de familia", "{FFFFFF}Retirar\nDepositar", "Seleccionar", "Atrás");
			}
		case D_Mnegro:
			{
				if(response)
				{
					if(listitem == 0)
					{
						if(ComprobarDineroJ(playerid) < 35) return _Mensaje(playerid, 0, "102", "No puedes pagar $35 dólares.");
						if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
						if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, 1); user[playerid][jm_Derecha] = 1, user[playerid][jm_DerechaCant] = 1;}
						else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, 1); user[playerid][jm_Izquierda] = 1, user[playerid][jm_IzquierdaCant] = 1;}
						Compra(playerid, 35);
						_Mensaje(playerid, 2, "0", "Compraste un puño americano.");
						return 1;
					}
					else if(listitem == 1)
					{
						if(ComprobarDineroJ(playerid) < 500) return _Mensaje(playerid, 0, "102", "No puedes pagar $500 dólares.");
						if(user[playerid][jMascara] == 1) return _Mensaje(playerid, 0, "229", "Ya posees una mascara.");
      					Compra(playerid, 500);
						_Mensaje(playerid, 2, "0", "Compraste una Máscara, comandos: /mascara.");
						user[playerid][jMascara] = 1;
						return 1;
					}
					else if(listitem == 2)
					{
						if(ComprobarDineroJ(playerid) < 250) return _Mensaje(playerid, 0, "102", "No puedes pagar $250 dólares.");
						if(user[playerid][jNivel] <= 3) return _Mensaje(playerid, 0, "87", "Debes ser mayor a nivel de 4.");
						user[playerid][jGanzuas] += 1;
						Compra(playerid, 250);
						_Mensaje(playerid, 2, "0", "Compraste unas ganzúas, comandos: /puente.");
						return 1;
					}
					else if(listitem == 3)
					{
						if(ComprobarDineroJ(playerid) < 60) return _Mensaje(playerid, 0, "102", "No puedes pagar $60 dólares.");
						if(user[playerid][jNivel] <= 3) return _Mensaje(playerid, 0, "87", "Debes ser mayor a nivel de 4.");
						_Mensaje(playerid, 2, "0", "Compraste un kit de secuestro, comandos: /atar - /vendar.");
						VendasYSoga[playerid] = 1;
						Compra(playerid, 8);
						return 1;
					}
					else if(listitem == 4)
					{
						if(ComprobarDineroJ(playerid) < 2000) return _Mensaje(playerid, 0, "102", "No puedes pagar $2,000 dólares.");
						if(user[playerid][jf_Dni] > 0) return _Mensaje(playerid, 0, "89", "No puedes comprar otro documento falso, usa /tirardni.");
						Dialog(playerid, D_Cdnifalso, DIALOG_STYLE_INPUT, "{FFFFFF}Falsificación 1", "Escribe el 'Nombre Apellido' que tendrá el documento:", "Siguiente", "Cancelar");
					}
					else if(listitem == 5)
					{
						if(!_Telefono(playerid)){_Mensaje(playerid, 0, "9","No tienes un teléfono en ninguna mano."); return 1;}
						if (_Telefono2(playerid, 1)) { user[playerid][jm_DerechaCant] = 0; user[playerid][jm_Derecha] = 0; }
						else if (_Telefono2(playerid, 2)) { user[playerid][jm_IzquierdaCant] = 0;user[playerid][jm_Izquierda] = 0; }
						DarDineroGC(playerid, 8);
						_Mensaje(playerid, 2, "0", "Vendiste el teléfono robado por 8$.");
						return 1;
					}
				}
			}
			
		case D_Cdnifalso:
			{
				if (!response) return _Mensaje(playerid, 4, "D7D7D4", "Cancelaste la operación.");
				if(strlen(inputtext) < 1 || strlen(inputtext) > 18 || strfind(inputtext, "_", true) != -1)
				{
					Dialog(playerid, D_Cdnifalso, DIALOG_STYLE_INPUT, "{FFFFFF}Falsificación 1", "Escribe el 'Nombre Apellido', ejemplo: Jorge Mendoza:", "Siguiente", "Cancelar");
				}
				else
				{
					Dialog(playerid, D_Cdnifalso2, DIALOG_STYLE_INPUT, "{FFFFFF}Falsificación 2", "Ingresa la edad falsa del documento:", "Siguiente", "Cancelar");
   					strmid(DocumentoNombre[playerid], inputtext, 0, strlen(inputtext), 18);
				}
			}
		case D_Cdnifalso2:
			{
				if (!response) return _Mensaje(playerid, 4, "D7D7D4", "Cancelaste la operación.");
				if (!isnumeric(inputtext)) return _Mensaje(playerid, 0, "43", "Sólo números porfavor, vuelve a intentarlo.");
				new edad = strval(inputtext);
				user[playerid][jf_Edad] = edad;
				format(string, sizeof(string), "¿Estás seguro que quieres usar el nombre de\n\t%s, edad: %d en tu DNI falso? Precio: 2.000$", DocumentoNombre[playerid], edad);
				Dialog(playerid, D_Cdnifalso3, DIALOG_STYLE_MSGBOX, "{D6E1EB}Falsificación 3", string, "Aceptar", "Cancelar");
				return 1;
			}
		case D_Cdnifalso3:
			{
				if (!response) return _Mensaje(playerid, 4, "D7D7D4", "Cancelaste la operación.");
				strmid(user[playerid][jf_Nombre], DocumentoNombre[playerid], 0, strlen(DocumentoNombre[playerid]), 32);
				new dni = 555 + random(91017);
				user[playerid][jf_Dni] = dni;
				_Mensaje(playerid, 5, "0", "Adquiriste un documento falso, para usarlo (/dnifalso).");
				DarDineroGC(playerid, -2000);
			}
		case D_Iempresa:
			{
				if(response == 1)
				{
					if (i_Empresa[NumeroEmpresa[playerid]][eMiembros] >= MAX_MEMBERS)
					{
						_Mensaje(TomandoTrabajo[playerid], 4, "b0b0b0", " Rechazaron la solicitud de empleo, razón: ya tienes 20 empleados.");
						_Mensaje(playerid, 4, "b0b0b0", " Rechazaste el contrato de la empresa, razón: no hay cupos.");
						NumeroEmpresa[playerid] = -1;
						TomandoTrabajo[playerid] = -1;
						return 1;
					}

					format(string, sizeof(string), "¡Felicidades! Ahora trabajas en {b0b0b0}%s{FFFFFF}, aceptaste el contrato!", i_Empresa[NumeroEmpresa[playerid]][eNombre]);
					_Mensaje(playerid, 4, "ffffff", string);
					format(string, sizeof(string), " %s aceptó el contrato.", NombreRJugador(playerid));
					_Mensaje(TomandoTrabajo[playerid], 4, "b0b0b0", string);
					format(string, sizeof(string), "Registros: El jugador %s acepto el trabajo en la empresa %s (%d).", NombreRJugador(playerid), i_Empresa[NumeroEmpresa[playerid]][eNombre],NumeroEmpresa[playerid]);
					Log("Registros/i_Empresas.log", string);
					user[playerid][jContrato] = NumeroEmpresa[playerid];
					i_Empresa[NumeroEmpresa[playerid]][eMiembros] ++;
					save_Empresa(NumeroEmpresa[playerid]);
					NumeroEmpresa[playerid] = -1;
					TomandoTrabajo[playerid] = -1;
     				new cosapro[70];
                    format(cosapro, sizeof(cosapro), "Empresas/iEmpresa_%d.pro",  user[playerid][jContrato]);
                    format(string, sizeof(string), "%s 0\r\n", N_Apellido(playerid));
                    new File: archivo = fopen(cosapro, io_append);
                    fwrite(archivo, string);
                    fclose(archivo);
				}
				else
				{
					_Mensaje(TomandoTrabajo[playerid], 4, "b0b0b0", " Rechazaron la solicitud de empleo.");
					_Mensaje(playerid, 4, "b0b0b0", " Rechazaste el contrato de la empresa.");
					NumeroEmpresa[playerid] = -1;
					TomandoTrabajo[playerid] = -1;
				}
			}
		case D_Ifamilia:
			{
				if(response == 1)
				{
					format(string, sizeof(string), "¡Felicidades! Ahora formas parte de {b0b0b0}%s{FFFFFF}, aceptaste la invitación!", InfoFamilia[NumeroFamilia[playerid]][fNombre]);
					_Mensaje(playerid, 4, "FFFFFF", string);
					format(string, sizeof(string), " %s aceptó la invitación.", NombreRJugador(playerid));
					_Mensaje(TomandoTrabajo[playerid], 4, "b0b0b0", string);
					format(string, sizeof(string), "Registros: El jugador %s acepto unirse a %s id familia %d.", NombreRJugador(playerid), InfoFamilia[NumeroFamilia[playerid]][fNombre],NumeroFamilia[playerid]);
					Log("Registros/FamiliasUnirse.log", string);
					user[playerid][jMiembroFam] = NumeroFamilia[playerid];
					user[playerid][jRangoFam] = 1;
					InfoFamilia[NumeroFamilia[playerid]][fMiembros] ++;
					ActualizarFamilia(NumeroFamilia[playerid]);
					NumeroFamilia[playerid] = 0;
					TomandoTrabajo[playerid] = -1;
					user[playerid][jI_fabrica] = 3;
					user[playerid][jT_fabrica] = 900;
					user[playerid][jI_fabrica2] = 2;
					user[playerid][jT_fabrica2] = 360;
				}
				else
				{
					_Mensaje(TomandoTrabajo[playerid], 4, "b0b0b0", "Rechazaron tu petición de ingreso.");
					_Mensaje(playerid, 4, "b0b0b0", "Rechazaste el ingreso a la familia.");
					NumeroFamilia[playerid] = 0;
					TomandoTrabajo[playerid] = -1;
				}
			}
		case D_Ifaccion:
			{
				if(response == 1)
				{
					format(string, sizeof(string), "¡Felicidades! Ahora eres miembro de {b0b0b0}%s{FFFFFF}.", NombreFaccion[playerid]);
					_Mensaje(playerid, 4, "ffffff", string);
					format(string, sizeof(string), " %s aceptó el ingreso.", NombreRJugador(playerid));
					_Mensaje(TomandoTrabajo[playerid], 4, "b0b0b0", string);
					format(string, sizeof(string), "Registros:´El jugador %s ingreso a %s (%s). (Registro de facciones)", NombreRJugador(TomandoTrabajo[playerid]), NombreRJugador(playerid), NombreFaccion[playerid]);
					Log("Registros/inviteFAC.log", string);

					user[playerid][jMiembro] = NumeroFaccion[playerid];
					user[playerid][jRango] = 0;
					user[playerid][jDivision] = 0;

					NombreFaccion[playerid] = "N-F";
					NumeroFaccion[playerid] = 0;
					TomandoTrabajo[playerid] = -1;
				}
				else
				{
					_Mensaje(TomandoTrabajo[playerid], 4, "b0b0b0", "Rechazaron tu petición de ingreso.");
					_Mensaje(playerid, 4, "b0b0b0", "Rechazaste el ingreso a la facción.");
					NombreFaccion[playerid] = "N-F";
					NumeroFaccion[playerid] = 0;
					TomandoTrabajo[playerid] = -1;
				}
			} // corresponde con comando /taller
		case D_OpTaller:
			{
				if(response) switch(listitem) {
					case 0: {
							if(!IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "130", "No estás en ningún vehículo.");
							Dialog(playerid, D_Treparacion, DIALOG_STYLE_LIST, "{D6E1EB}Tipos de reparación", "Motor (200$)\nCarrocería (500$)\nRuedas(75$)", "Seleccionar", "Cancelar");
						}
					case 1: {
							if(ComprobarDineroJ(playerid) < 150) return _Mensaje(playerid, 0, "102", "No puedes pagar $150 dólares.");
						    if(!IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "130", "No estás en ningún vehículo.");
							GameTextForPlayer(playerid,"~w~llenando ~p~tanque...",5000,3);
							SetTimerEx("_Mecanico", 5000, false, "iii", playerid, 2, idcar);
							_Tusando[playerid] = 1;
						}
					case 2: Dialog(playerid,D_Color1,DIALOG_STYLE_LIST,"{D6E1EB}Primer color","- Blanco\n- Negro\n- Rojo\n- Amarillo\n- Verde\n- Azul\n- Celeste\n- Naranja\n- Rosa\n- Violeta\n- Verde Fluor\n- Rojo Fluor\n- Celeste claro\n- Gris","Seleccionar","");
				}
			}
		case D_Color1:
			{
				if(!response) return 0;
				if(!IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "130", "No estás en ningún vehículo.");
				new vehiculo = GetPlayerVehicleID(playerid);
				for(new v = 0; v < MAX_VEHICULOS; v++) {
					if(InfoVehiculo[v][vID] == vehiculo) {
						switch(listitem) {
							case 0: InfoVehiculo[v][vColor_1] = 1;
							case 1:	InfoVehiculo[v][vColor_1] = 0;
							case 2:	InfoVehiculo[v][vColor_1] = 3;
							case 3:	InfoVehiculo[v][vColor_1] = 6;
							case 4:	InfoVehiculo[v][vColor_1] = 16;
							case 5:	InfoVehiculo[v][vColor_1] = 103;
							case 6:	InfoVehiculo[v][vColor_1] = 118;
							case 7:	InfoVehiculo[v][vColor_1] = 131;
							case 8:	InfoVehiculo[v][vColor_1] = 126;
							case 9:	InfoVehiculo[v][vColor_1] = 149;
							case 10: InfoVehiculo[v][vColor_1] = 144;
							case 11: InfoVehiculo[v][vColor_1] = 151;
							case 12: InfoVehiculo[v][vColor_1] = 130;
							case 13: InfoVehiculo[v][vColor_1] = 11;
						}
					}
				}
				Dialog(playerid,D_Color2,DIALOG_STYLE_LIST,"{D6E1EB}Segundo color","- Blanco\n- Negro\n- Rojo\n- Amarillo\n- Verde\n- Azul\n- Celeste\n- Naranja\n- Rosa\n- Violeta\n- Verde Fluor\n- Rojo Fluor\n- Celeste claro\n- Gris","Seleccionar","");
			}
		case D_Color2:
			{
				if(!response) return 0;
				if(!IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "130", "No estás en ningún vehículo.");
				new vehiculo = GetPlayerVehicleID(playerid);
				for(new v = 0; v < MAX_VEHICULOS; v++) {
					if(InfoVehiculo[v][vID] == vehiculo) {
						switch(listitem) {
							case 0: InfoVehiculo[v][vColor_2] = 1;
							case 1:	InfoVehiculo[v][vColor_2] = 0;
							case 2:	InfoVehiculo[v][vColor_2] = 3;
							case 3:	InfoVehiculo[v][vColor_2] = 6;
							case 4:	InfoVehiculo[v][vColor_2] = 16;
							case 5:	InfoVehiculo[v][vColor_2] = 103;
							case 6:	InfoVehiculo[v][vColor_2] = 118;
							case 7:	InfoVehiculo[v][vColor_2] = 131;
							case 8:	InfoVehiculo[v][vColor_2] = 126;
							case 9:	InfoVehiculo[v][vColor_2] = 149;
							case 10: InfoVehiculo[v][vColor_2] = 144;
							case 11: InfoVehiculo[v][vColor_2] = 151;
							case 12: InfoVehiculo[v][vColor_2] = 130;
							case 13: InfoVehiculo[v][vColor_2] = 11;
						}
						GameTextForPlayer(playerid,"~w~pintando ~p~vehiculo...",10000,3);
						SetTimerEx("_Mecanico", 10000, false, "iii", playerid, 1, v);
						_Tusando[playerid] = 1;
					}
				}
			}
		case D_Treparacion:
			{
				if(response == 1) {
					new Float: cx, Float: cy, Float: cz;
					GetVehiclePos(idcar, cx, cy, cz);
					PlayerPlaySound(playerid, 1133, cx, cy, cz);
					switch(listitem) {
						case 0: {
								if(ComprobarDineroJ(playerid) < 150) return _Mensaje(playerid, 0, "102", "No puedes pagar $150 dólares.");
								GameTextForPlayer(playerid,"~w~reparando ~r~vehiculo...",15000,3);
								SetTimerEx("_Mecanico", 15000, false, "iii", playerid, 3, idcar);
								_Tusando[playerid] = 1;
								_rVeh[playerid] = 1;
							}
						case 1: {
								if(ComprobarDineroJ(playerid) < 500) return _Mensaje(playerid, 0, "102", "No puedes pagar 500 dólares.");
								GameTextForPlayer(playerid,"~w~cambiando ~y~carroceria...",8000,3);
								SetTimerEx("_Mecanico", 8000, false, "iii", playerid, 4, idcar);
								_Tusando[playerid] = 1;
								_rVeh[playerid] = 1;
							}
						case 2: {
								if(ComprobarDineroJ(playerid) < 100) return _Mensaje(playerid, 0, "102", "No puedes pagar $100 dólares.");
								GameTextForPlayer(playerid,"~w~cambiando ~b~ruedas...",6000,3);
								SetTimerEx("_Mecanico", 6000, false, "iii", playerid, 5, idcar);
								_Tusando[playerid] = 1;
								_rVeh[playerid] = 1;
						}
					}
				}
			}
		case D_PDmecanico:
			{
				if(response == 1) {
					new Float: cx, Float: cy, Float: cz;
					GetVehiclePos(idcar, cx, cy, cz);
					PlayerPlaySound(playerid, 1133, cx, cy, cz);
					switch(listitem) {
						case 0: {
								SetVehicleHealth(idcar, 1000);
								GameTextForPlayer(playerid, "~g~Motor nuevo", 3000, 3);
                            }
						case 1: {
								new Float: cvida;
								GetVehicleHealth(idcar, cvida);
								new panels, doors, lights, tires, tires2;
								GetVehicleDamageStatus(idcar, panels, doors, lights, tires);
								RepairVehicle(idcar);
								SetVehicleHealth(idcar, cvida);
								GetVehicleDamageStatus(idcar, panels, doors, lights, tires2);
								if(tires != 0) {
									tires = encode_tires(1, 1, 1, 1);
									UpdateVehicleDamageStatus(idcar, panels, doors, lights, tires);
								}
								GameTextForPlayer(playerid, "~g~Carroceria nueva", 3000, 3);
                            }
						case 2: {
								new panels, doors, lights, tires;
								GetVehicleDamageStatus(idcar, panels, doors, lights, tires);
								tires = encode_tires(0, 0, 0, 0);
								UpdateVehicleDamageStatus(idcar, panels, doors, lights, tires);
								GameTextForPlayer(playerid, "~g~Ruedas nuevas", 3000, 3);
							}
					}
				}
			}
		case D_Tmecanico0:
			{
				if(response)
				{
					Menu_Tuneo(playerid);
				}
				else
				{
					Menu_Tuneo(playerid);
				}
			}
		case D_Tmecanico1:
			{
				new tune, iVeh = GetPlayerVehicleID(playerid);
				if(response)
				{
					switch(listitem)
					{
					    case 0:
					    {
							new Str[256], Str2[256], Str_[3000], i_ = 0;
							for (new i = 0; i < 11; i++)
							{
								if (pieza_tune[playerid][i] > 0)
								{
									Formato(Str, "{ffffff}%s ($%d)\n", GetComponentName(pieza_tune[playerid][i]), GetComponentPrice(pieza_tune[playerid][i]));
									strcat(Str_, Str);
									Formato(Str, "tuneo%d", i_);
									SetPVarInt(playerid, Str, i);
									i_++;
								}
							}
							Formato(Str2, "{D6E1EB}Piezas actuales (Total: $%d)\n", pago_tune[playerid]);
							if (i_ == 0) Dialog(playerid, D_Tmecanico0, DIALOG_STYLE_MSGBOX, "{D6E1EB}Piezas actuales", "No has colocado ningún componente aún.", "Volver", "");
							else Dialog(playerid, D_Tmecanico3, DIALOG_STYLE_LIST, Str2, Str_, "Retirar", "Volver");
					    }
					    case 1:
					    {
							new Str[256], Str_[3000], i_ = 0;
             				strcat(Str_, "\n{ffffff}Piezas:\n");
							for (new i = 0; i < 11; i++)
							{
								if (pieza_tune[playerid][i] > 0)
								{
									Formato(Str, "{ffffff}%s ($%d)\n", GetComponentName(pieza_tune[playerid][i]), GetComponentPrice(pieza_tune[playerid][i]));
									strcat(Str_, Str);
									i_++;
								}
							}
							Formato(Str, "\n{ffffff}Total: {00c200}$%d\n", pago_tune[playerid]);
							strcat(Str_, Str);
							if (i_ == 0) Dialog(playerid, D_Tmecanico0, DIALOG_STYLE_MSGBOX, "{D6E1EB}Finalizar tuneo", "No has colocado ningún componente aún.", "Volver", "");
							else Dialog(playerid, D_Tmecanico4, DIALOG_STYLE_MSGBOX, "{D6E1EB}Finalizar tuneo", Str_, "Instalar", "Volver");
					    }
						case 2: SetPVarInt(playerid,"tuneando", 0), tune = 1, MenuComponentes(playerid, GetVehicleModel(iVeh), ((tune == -1) ? (false) : (true)), tune);
						case 3: SetPVarInt(playerid,"tuneando", 1), tune = 2, MenuComponentes(playerid, GetVehicleModel(iVeh), ((tune == -1) ? (false) : (true)), tune);
						case 4: SetPVarInt(playerid,"tuneando", 2), tune = 6, MenuComponentes(playerid, GetVehicleModel(iVeh), ((tune == -1) ? (false) : (true)), tune);
						case 5: SetPVarInt(playerid,"tuneando", 3), tune = 10, MenuComponentes(playerid, GetVehicleModel(iVeh), ((tune == -1) ? (false) : (true)), tune);
						case 6: SetPVarInt(playerid,"tuneando", 4), tune = 11, MenuComponentes(playerid, GetVehicleModel(iVeh), ((tune == -1) ? (false) : (true)), tune);
						case 7: SetPVarInt(playerid,"tuneando", 5), tune = 12, MenuComponentes(playerid, GetVehicleModel(iVeh), ((tune == -1) ? (false) : (true)), tune);
						case 8: SetPVarInt(playerid,"tuneando", 6), tune = 13, MenuComponentes(playerid, GetVehicleModel(iVeh), ((tune == -1) ? (false) : (true)), tune);
						case 9: SetPVarInt(playerid,"tuneando", 7), tune = 0, MenuComponentes(playerid, GetVehicleModel(iVeh), ((tune == -1) ? (false) : (true)), tune);
						case 10: SetPVarInt(playerid,"tuneando", 8), tune = 4, MenuComponentes(playerid, GetVehicleModel(iVeh), ((tune == -1) ? (false) : (true)), tune);
						case 11: SetPVarInt(playerid,"tuneando", 9), tune = 7, MenuComponentes(playerid, GetVehicleModel(iVeh), ((tune == -1) ? (false) : (true)), tune);
						case 12: SetPVarInt(playerid,"tuneando", 10), tune = 9, MenuComponentes(playerid, GetVehicleModel(iVeh), ((tune == -1) ? (false) : (true)), tune);
						case 13:
						{
							new vehicleid = GetPlayerVehicleID(playerid);
							_Mensaje(playerid, 4, "b0b0b0", "Cancelaste el menú de tuneo.");
							_Mensaje(id_tune[playerid], 4, "b0b0b0", "El sujeto cancelo la operación.");
							id_tune[playerid] = -1;
							e_tune[playerid] = -1;
							veh_tune[playerid] = 0;
							pago_tune[playerid] = 0;
							VehSeguro[vehicleid] = 0;
							for(new x = 0; x < 11; x++) { RemoveVehicleComponent(vehicleid, pieza_tune[playerid][x]); pieza_tune[playerid][x] = 0; }
							for (new vid = 0; vid < MAX_VEHICULOS; vid++) { if(InfoVehiculo[vid][vID] == vehicleid) { ActualizarMods(InfoVehiculo[vid][vID]); } }
						    return 1;
						}
					}
				}
				else
				{
					_Mensaje(playerid, 5, "0", "Cuando termines de ver las piezas escribe /tuneo.");
				}
			}
		case D_Tmecanico2:
		{
			if(response)
			{
				new viejo = pieza_tune[playerid][GetPVarInt(playerid,"tuneando")], componentid = TipoTunning[playerid][listitem], vehicleid = GetPlayerVehicleID(playerid);
				if (pieza_tune[playerid][GetPVarInt(playerid,"tuneando")] == 0)
				{
					pago_tune[playerid] += GetComponentPrice(componentid);
				}
				else
				{
					pago_tune[playerid] -= GetComponentPrice(viejo);
					pago_tune[playerid] += GetComponentPrice(componentid);
				}
				pieza_tune[playerid][GetPVarInt(playerid,"tuneando")] = componentid;
				AddVehicleComponent(vehicleid, componentid);
				format(string, sizeof(string), "Componente %s colocado con éxito.", GetComponentName(componentid));
				_Mensaje(playerid, 4, "33CCFF", string);
				Menu_Tuneo(playerid);
			}
			else
			{
				Menu_Tuneo(playerid);
			}
		}
		case D_Tmecanico3:
		{
			if(response)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				new ID = listitem, StrPVar[40];
				Formato(StrPVar,"tuneo%d",ID);
				new e = GetPVarInt(playerid,StrPVar);
				Menu_Tuneo(playerid);
				format(string, sizeof(string), "Componente %s retirado con éxito.", GetComponentName(pieza_tune[playerid][e]));
				_Mensaje(playerid, 4, "b00000", string);
				pago_tune[playerid] -= GetComponentPrice(pieza_tune[playerid][e]);
				RemoveVehicleComponent(vehicleid, pieza_tune[playerid][e]);
				pieza_tune[playerid][e] = 0;
				return 1;
			}
			else
			{
				Menu_Tuneo(playerid);
			}
		}
		case D_Tmecanico4:
		{
			if(response)
			{
				new vehicleid = GetPlayerVehicleID(playerid), i_ = 0;
				if(pago_tune[playerid] == 0)
				{
    				_Mensaje(id_tune[playerid], 4, "b0b0b0", "No coloco ningún componente a su vehículo.");
					_Mensaje(playerid, 4, "b0b0b0", "Cancelaste la selección de componentes.");
					for(new x = 0; x < 11; x++) { pieza_tune[playerid][x] = 0; }
					id_tune[playerid] = -1;
					e_tune[playerid] = -1;
					veh_tune[playerid] = 0;
					pago_tune[playerid] = 0;
					VehSeguro[vehicleid] = 0;
					return 1;
				}
				if(ComprobarDineroJ(playerid) < pago_tune[playerid])
				{
					_Mensaje(playerid, 4, "b0b0b0", "No tienes dinero para pagar.");
					_Mensaje(id_tune[playerid], 4, "b0b0b0", "El sujeto no tiene dinero para pagar, se cancelo todo.");
					id_tune[playerid] = -1;
					e_tune[playerid] = -1;
					veh_tune[playerid] = 0;
					pago_tune[playerid] = 0;
					VehSeguro[vehicleid] = 0;
					for(new x = 0; x < 11; x++) { RemoveVehicleComponent(vehicleid, pieza_tune[playerid][x]); pieza_tune[playerid][x] = 0; }
					for (new vid = 0; vid < MAX_VEHICULOS; vid++) { if(InfoVehiculo[vid][vID] == vehicleid) { ActualizarMods(InfoVehiculo[vid][vID]); } }
					return 1;
				}
				for (new i = 0; i < 11; i++)
				{
					if (pieza_tune[playerid][i] > 0)
					{
						AddVehicleComponent(vehicleid, pieza_tune[playerid][i]);
						i_++;
		 			}
		 		}
				format(string, sizeof(string), "Has pagado la factura del tuneo por valor de $%d en concepto de %d piezas.", pago_tune[playerid], i_);
				if(i_ != 0) _Mensaje(playerid, 5, "0", string);
				ActualizarMods(vehicleid);
				i_Empresa[e_tune[playerid]][eDinero] += floatround(pago_tune[playerid]*0.7);
				DarDineroGC(id_tune[playerid], floatround(pago_tune[playerid]*0.3));
				DarDineroGC(playerid, -pago_tune[playerid]);
				id_tune[playerid] = -1;
				e_tune[playerid] = -1;
				veh_tune[playerid] = 0;
				pago_tune[playerid] = 0;
				VehSeguro[vehicleid] = 0;
				ActualizarMods(vehicleid);
				return 1;
			}
			else
			{
				Menu_Tuneo(playerid);
			}
		}
		case D_VEHMENU:
			{
				if(response == 1) {
					for(new i = 0; i < 6; i++) {
						if(listitem == i) {
							new veh = user[playerid][jLlaveCoche][i];
							if(veh == INVALID_PLAYER_VEHICLE_ID) return _Mensaje(playerid, 0, "68", "No se puede en un vehículo que no existe.");
							if(InfoVehiculo[veh-1000][vSpawned] == 0) {
							    new spawnr = 0;
							    for(new x = 0; x < 6; x++) {
									new veh2 = user[playerid][jLlaveCoche][x];
							        if(veh2 != 0) if(InfoVehiculo[veh2-1000][vSpawned] == 1) spawnr++;
								}
								if(spawnr > 2) return _Mensaje(playerid, 4, "ADC3E7", "Error:{ffffff} Solo puedes tener un máximo de (3) vehículos cargados.");
								VehiculoSacar(veh-1000);
								_Mensaje(playerid, 4, "b0b0b0", "{FFFF00}[Sist.Info/Vehículos]: {ffffff}El vehículo aparecio correctamente en la última posición.");
								return 1;
							} else if(InfoVehiculo[veh-1000][vSpawned] == 1) {
							    new Float: vx, Float: vy, Float: vz;
							    GetVehiclePos(InfoVehiculo[veh-1000][vID], vx, vy, vz);
                                if(!_enPos(playerid,10,vx, vy, vz)) return _Mensaje(playerid, 4, "ADC3E7", "Error:{ffffff} No estás cerca del vehículo, debes estar al menos 10 metros.");
								if(IsVehicleBusy(InfoVehiculo[veh-1000][vID])) return _Mensaje(playerid, 2, "0", "El vehículo tiene jugadores dentro de el y no podrá ser guardado.");
								VehiculoGuardar(veh-1000);
								_Mensaje(playerid, 4, "b0b0b0", "Has guardado el vehículo correctamente (se encuentra oculto).");
								return 1;
							}
						}
					}
				}
			}
		case D_MusiCar:
			{
				if(!response) return _Mensaje(playerid, 2, "0", "Has cancelado la radio.");
				switch(listitem) {
					case 0: {
							if(GetPVarType(playerid, "AreaVehMus")) {
								foreach(Player, i) {
									if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "AreaVehMus"))) {
										PararMVeh(i);
									}
								}
								DeletePVar(playerid, "AreaVehMus");
							}
							_Mensaje(playerid, 2, "0", "Apagaste el stereo.");
							DeletePVar(playerid, "AreaVehPos");
						}
					case 1: {
							new StationsDialog[2500];
							strcat(StationsDialog, "Número\tNombre\tGénero\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}1\t{FFFFFF}54 House\t{00A2FF}Electro\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}2\t{FFFFFF}Top Latino\t{00A2FF}Variado\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}3\t{FFFFFF}Dubbase.FM\t{00A2FF}Dubstep\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}4\t{FFFFFF}Reggae Hits\t{00A2FF}Reggaeton\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}5\t{FFFFFF}MBradio.FM\t{00A2FF}Reggaeton\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}6\t{FFFFFF}113 FM TEagle\t{00A2FF}Classic rock\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}7\t{FFFFFF}181 FM\t{00A2FF}Classic rock\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}8\t{FFFFFF}Soft Rock Cafe\t{00A2FF}Heavy Metal\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}9\t{FFFFFF}HardRadio.com\t{00A2FF}Rock\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}10\t{FFFFFF}Aural Moon\t{00A2FF}Punk\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}11\t{FFFFFF}Idobi Radio\t{00A2FF}Electronic\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}12\t{FFFFFF}www.Hot108.com\t{00A2FF}Hip Hop\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}13\t{FFFFFF}Sensacion Peru\t{00A2FF}Pop\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}14\t{FFFFFF}BluePoint\t{00A2FF}Metal\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}15\t{FFFFFF}PaganMetalRadio\t{00A2FF}Extreme Metal\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}16\t{FFFFFF}Dirty Beats Radio 24/7\t{00A2FF}Extreme Metal\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}17\t{FFFFFF}The Trip\t{00A2FF}Music Usa\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}18\t{FFFFFF}Latina FM (Arg)\t{00A2FF}Variado\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}19\t{FFFFFF}Amor latino\t{00A2FF}Variado\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}20\t{FFFFFF}Hotmixradio\t{00A2FF}Hip Hop\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}21\t{FFFFFF}Naxi Café Radio\t{00A2FF}Variado\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}22\t{FFFFFF}Radio Hunter\t{00A2FF}Electrónica\n", sizeof(StationsDialog));
							strcat(StationsDialog, "{00C200}23\t{FFFFFF}181.0 - BCEver\t{00A2FF}Rock Clásico", sizeof(StationsDialog));
							Dialog(playerid, D_MusiCar3, DIALOG_STYLE_TABLIST_HEADERS, "{00C200}Radios", StationsDialog, "Seleccionar", "Cancelar");
						}
					case 2: Dialog(playerid, D_MusiCar2, DIALOG_STYLE_INPUT, "{D6E1EB}Url - Internet", "{FFFFFF}Inserta un Stream (www.offliberty.com) para reproducirlo", "Continuar", "Cancelar");
				}
				return 1;
			}
		case D_MusiCar2:
			{
				if(response == 1) {
					if(isnull(inputtext)) return _Mensaje(playerid, 2, "0", "No has puesto ningun URL.");
					if(strlen(inputtext)) {
						_stereo(playerid, inputtext);
					}
				} else return 1;
			}
		case D_MusiCar3:
			{
				if(!response) return _Mensaje(playerid, 2, "0", "Has cancelado la radio.");
				switch(listitem) {
					case 0: _stereo(playerid, "http://54house.stream-balancer.de:80");
					case 1: _stereo(playerid, "http://184.154.94.194:8028/listen.pls");
					case 2: _stereo(playerid, "http://148.251.91.15:7004");
					case 3: _stereo(playerid, "http://listen.shoutcast.com/reggaetonhits.m3u");
					case 4: _stereo(playerid, "http://216.230.231.122:8000/MP3128");
					case 5: _stereo(playerid, "http://listen.shoutcast.com/113fmtheeagle.m3u");
					case 6: _stereo(playerid, "http://108.61.73.119:8028");
					case 7: _stereo(playerid, "http://173.244.215.163:8380");
					case 8: _stereo(playerid, "http://69.4.232.118:80");
					case 9: _stereo(playerid, "http://64.202.98.133:2010");
					case 10: _stereo(playerid, "http://50.117.115.211:80");
					case 11: _stereo(playerid, "http://108.61.30.179:4010");
					case 12: _stereo(playerid, "http://50.7.64.226:80/frisky_mp3_hi");
					case 13: _stereo(playerid, "http://5.135.223.251:9000");
					case 14: _stereo(playerid, "http://62.210.209.179:8030/stream");
					case 15: _stereo(playerid, "http://198.211.102.165:8000");
					case 16: _stereo(playerid, "http://somafm.com/tags.pls");
					case 17: _stereo(playerid, "http://streaming.latina101.com.ar/listen.pls");
					case 18: _stereo(playerid, "http://s3.voscast.com:8002/;.m3u");
					case 19: _stereo(playerid, "http://listen.radionomy.com/hotmixradio-hiphop-128.m3u");
					case 20: _stereo(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=139278");
					case 21: _stereo(playerid, "http://listen.shoutcast.com:80/RadioHunter-TheHitzChannel");
					case 22: _stereo(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=654138");
				}
				return 1;
			}
		case D_Ilista:
			{
				if(response == 1)
				{
					if(DestroyFire(user[playerid][SaveAfterAgenda][listitem]))
					{
						Dialog(playerid, D_INVALIDO, DIALOG_STYLE_MSGBOX, "{D6E1EB}Incendios - Información", "{00C200}Incendio eliminado correctamente.", "Aceptar", "");
					}
					else Dialog(playerid, D_INVALIDO, DIALOG_STYLE_MSGBOX, "{D6E1EB}Incendios - Información", "{F50000}Este incendio ya fue eliminado!", "Aceptar", "");
				}
			}
		case D_Ibuscar:
			{
				if(response == 1)
				{
				    new i = user[playerid][SaveAfterAgenda][listitem];
				    if(Incendios[i][pIDI] == 0) return _Mensaje(playerid, 2, "0", "El incendio ya fue destruido.");
				    SetPVarInt(playerid, "EnCheckPoint", 1);
				    if(Incendios[i][pType] == 0) SetPlayerCheckpoint(playerid, InfoCasa[Incendios[i][pIDI]][cExteriorX], InfoCasa[Incendios[i][pIDI]][cExteriorY], InfoCasa[Incendios[i][pIDI]][cExteriorZ], 2);
					else SetPlayerCheckpoint(playerid, i_Negocio[Incendios[i][pIDI]][nExteriorX], i_Negocio[Incendios[i][pIDI]][nExteriorY], i_Negocio[Incendios[i][pIDI]][nExteriorZ], 2);
					_Mensaje(playerid, 2, "0", "El incendio fue marcado en el mapa.");
				}
			}
		case D_ACCESORIOS:
			{
				if(!response) return 0;
				if(InfoAccesorio[playerid][listitem][aModelo] == 0) {
					Dialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{D6E1EB}Error", "No tiene nada en esa Ranura.", "Cerrar", "");
				} else {
					EditarAccesorio(playerid,listitem);
					RanuraSeleccionada[playerid] = listitem;
				}
			}
		case D_ACCESORIOS2:
				if(response) switch(listitem) {
					case 0: Dialog(playerid, D_ACCESORIOS4, DIALOG_STYLE_INPUT, "{D6E1EB}Dar accesorio", "{FFFFFF}Por favor ingrese la {00C200}ID del jugador", "Siguiente", "Cancelar");
					case 1: { // Tirar accesorio
								new Float: X, Float: Y, Float: Z;
								GetPlayerPos(playerid, X, Y, Z);
								new World = GetPlayerVirtualWorld(playerid), Interior = GetPlayerInterior(playerid);
								TirarAcc(InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aModelo], X, Y - 0.3, Z, World, Interior, playerid);
								new NombreAcc[32];
								for(new ir; ir < sizeof(Accesorios); ir++) {
									if(Accesorios[ir][ModeloAccesorio] == InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aModelo]) {
										format(NombreAcc, sizeof(NombreAcc), "%s", Accesorios[ir][NombreAccesorio]);
									}
								}
								new MsgCheckMe[MAX_TEXT_CHAT];
								format(MsgCheckMe, sizeof(MsgCheckMe), "tiró al suelo el accesorio '%s'.", NombreAcc);
								AccionesRol(playerid, 0, MsgCheckMe);
								InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aModelo] = 0;
								InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aParte] = 0;
								InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionX] = 0.0;
								InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionY] = 0.0;
								InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionZ] = 0.0;
								InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionX] = 0.0;
								InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionY] = 0.0;
								InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionZ] = 0.0;
								InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaZ] = 0.0;
								InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaY] = 0.0;
								InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaX] = 0.0;
								InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aColocado] = 0;
								if(IsPlayerAttachedObjectSlotUsed(playerid, RanuraSeleccionada[playerid])) RemovePlayerAttachedObject(playerid, RanuraSeleccionada[playerid]);
								format(string, sizeof(string), "Usted ha tirado el accesorio {00c200}%s #%d{ffffff}.", NombreAcc, RanuraSeleccionada[playerid]);
								_Mensaje(playerid, 2, "0", string);
								RanuraSeleccionada[playerid] = 0;
								return 1;
							}
						case 2: { // Editar accesorio
								ColocarObject(playerid, RanuraSeleccionada[playerid], InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aModelo],
								InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aParte], InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionX],
								InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionY], InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionZ],
								InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionX], InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionY],
								InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionZ], InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaX],
								InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaY], InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaZ]);
								EditAttachedObject(playerid, RanuraSeleccionada[playerid]);
								EditandoObjetoJ[playerid] = 1;
								InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aColocado] = 1;
								_Mensaje(playerid, 2, "0", "Mantén presionado {00C200}~k~~PED_SPRINT~{FFFFFF} para cambiar la posición de la cámara.");
							}
						case 3: Dialog(playerid, D_ACCESORIOS3, DIALOG_STYLE_LIST, "{D6E1EB}Selecciona una Parte", "Columna\nCabeza\nBrazo Izq\nBrazo Der\nMano Izq\nMano Derecha\nMuslo Izq\nMuslo Der\nPie Izq\nPie Der\nRight calf\nLeft calf\nAnteBrazo Izq\nAnteBrazo Der\nClavicula Izq\nClavicula Der\nCuello\nQuijada", "Elegir", "Salir");
						case 4: { // Poner/Quitar accesorio
								if(IsPlayerAttachedObjectSlotUsed(playerid, RanuraSeleccionada[playerid])) {
									_Mensaje(playerid, 2, "0", "Te quitaste correctamente el accesorio.");
									RemovePlayerAttachedObject(playerid, RanuraSeleccionada[playerid]);
									InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aColocado] = 0;
									RanuraSeleccionada[playerid] = 0;
									return 1;
								} else {
									ColocarObject(playerid, RanuraSeleccionada[playerid],
									InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aModelo],
									InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aParte],
									InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionX],
									InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionY],
									InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionZ],
									InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionX],
									InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionY],
									InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionZ],
									InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaX],
									InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaY],
									InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaZ]);
									InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aColocado] = 1;
									_Mensaje(playerid, 2, "0", "Te pusiste correctamente el accesorio.");
									RanuraSeleccionada[playerid] = 0;
									return 1;
								}
							}
						case 5: { // Borrar accesorio
								InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aModelo] = 0;
								InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aParte] = 0;
								InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionX] = 0.0;
								InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionY] = 0.0;
								InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionZ] = 0.0;
								InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionX] = 0.0;
								InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionY] = 0.0;
								InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionZ] = 0.0;
								InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaZ] = 0.0;
								InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaY] = 0.0;
								InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaX] = 0.0;
								InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aColocado] = 0;
								if(IsPlayerAttachedObjectSlotUsed(playerid, RanuraSeleccionada[playerid])) RemovePlayerAttachedObject(playerid, RanuraSeleccionada[playerid]);
								format(string, sizeof(string), "Usted ha eliminado su accesorio de la Ranura %d", RanuraSeleccionada[playerid]);
								RanuraSeleccionada[playerid] = 0;
								_Mensaje(playerid, 2, "0", string);
								return 1;
							}
            }
		case D_ACCESORIOS3:
				if(response) InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aParte] = listitem + 1;
		case D_ACCESORIOS4:
			{
				if(!response) return 0;
				if(!isnumeric(inputtext)) return _Mensaje(playerid, 0, "43", "Sólo números porfavor, vuelve a intentarlo.");
				new idjugador = strval(inputtext);
				if(playerid == idjugador) return _Mensaje(playerid, 0, "74", "No puedes dar el accesorio a ti mismo.");
				if(!IsPlayerConnected(idjugador)) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
				if (!CercaDelWeon(8.0, playerid, idjugador)) return _Mensaje(playerid, 0, "9", "La persona que seleccionaste no está cerca tuyo.");
				for (new ida = 0; ida < 4; ida++) {
					if (InfoAccesorio[idjugador][ida][aModelo] == 0) {
						new NombreAcc[32];
						for(new ir; ir < sizeof(Accesorios); ir++) {
							if(Accesorios[ir][ModeloAccesorio] == InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aModelo]) {
								format(NombreAcc, sizeof(NombreAcc), "%s", Accesorios[ir][NombreAccesorio]);
							}
						}
						new MsgCheckMe[MAX_TEXT_CHAT];
						format(MsgCheckMe, sizeof(MsgCheckMe), "cede a %s el accesorio '%s'.", NombreJugador(idjugador), NombreAcc);
						AccionesRol(playerid, 0, MsgCheckMe);
						InfoAccesorio[idjugador][ida][aModelo] = InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aModelo];
						InfoAccesorio[idjugador][ida][aParte] = InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aParte];
						InfoAccesorio[idjugador][ida][aPosicionX] = InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionX];
						InfoAccesorio[idjugador][ida][aPosicionY] = InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionY];
						InfoAccesorio[idjugador][ida][aPosicionZ] = InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionZ];
						InfoAccesorio[idjugador][ida][aRotacionX] = InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionX];
						InfoAccesorio[idjugador][ida][aRotacionY] = InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionY];
						InfoAccesorio[idjugador][ida][aRotacionZ] = InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionZ];
						InfoAccesorio[idjugador][ida][aEscalaZ] = InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaZ];
						InfoAccesorio[idjugador][ida][aEscalaY] = InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaY];
						InfoAccesorio[idjugador][ida][aEscalaX] = InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaX];
						InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aModelo] = 0;
						InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aParte] = 0;
						InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionX] = 0.0;
						InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionY] = 0.0;
						InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionZ] = 0.0;
						InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionX] = 0.0;
						InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionY] = 0.0;
						InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionZ] = 0.0;
						InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaZ] = 0.0;
						InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaY] = 0.0;
						InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaX] = 0.0;
						InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aColocado] = 0;
						if(IsPlayerAttachedObjectSlotUsed(playerid, RanuraSeleccionada[playerid])) RemovePlayerAttachedObject(playerid, RanuraSeleccionada[playerid]);
						RanuraSeleccionada[playerid] = 0;
						RanuraSeleccionada[idjugador] = 0;
						_Mensaje(idjugador, 2, "0", "Revisa /accesorios.");
						_Mensaje(playerid, 2, "0", "Diste tu accesorio.");
						return 1;
					}
				}
			}

		case D_Peluqueria1:
			{
				if(response) {
					new TextAcc[512];
					for(new ida; ida < MAX_ACCESORIOS; ida++) {
						new NombreAcc[128];
						format(NombreAcc, sizeof(NombreAcc), "{00a2ff}[Nada]");
						for(new i; i < sizeof(Accesorios); i++) {
							if(Accesorios[i][ModeloAccesorio] == InfoAccesorio[playerid][ida][aModelo]) {
								format(NombreAcc, sizeof(NombreAcc), "{00c200}[%s]", Accesorios[i][NombreAccesorio]);
							}
						}
						format(TextAcc, sizeof(TextAcc), "%s{ffffff}Ranura %d - %s\n", TextAcc, ida, NombreAcc);
					}
					Dialog(playerid, D_Peluqueria2, DIALOG_STYLE_LIST, "{D6E1EB}Selecciona una ranura", TextAcc, "Seleccionar", "Cancelar");
				}
			}
		case D_Peluqueria2:
			{
				if(response)
				{
					if(InfoAccesorio[playerid][listitem][aModelo] != 0) return _Mensaje(playerid, 0, "39", "Ya tienes en uso esa ranura.");
					RanuraSeleccionada[playerid] = listitem;

					new peluca[7]; peluca[0] = 19077; peluca[1] = 19136; peluca[2] = 19274;
				    peluca[3] = 18975; peluca[4] = 18640; peluca[5] = 19350; peluca[6] = 19351;
					ShowModelSelectionMenuEx(playerid, peluca, 7, "Peluqueria", D_Peluqueria3);

				} else return Dialog(playerid, D_Peluqueria1, DIALOG_STYLE_MSGBOX, "Productos de venta", "\n{ffffff}A continuación debes elegir la..\nranura donde quieres el {00a2ff}accesorio{ffffff}.\n\n   - Recuerda que cada {00a2ff}accesorio{ffffff} tiene un costo de {00c200}25{ffffff}$.\n\n", "Continuar", "Cancelar"); //- Accesorios
			}
		case D_COMPRARTOY:
			{
				if(response) {
					new TextAcc[512];
					for(new ida; ida < MAX_ACCESORIOS; ida++) {
						new NombreAcc[128];
						format(NombreAcc, sizeof(NombreAcc), "{00a2ff}[Nada]");
						for(new i; i < sizeof(Accesorios); i++) {
							if(Accesorios[i][ModeloAccesorio] == InfoAccesorio[playerid][ida][aModelo]) {
								format(NombreAcc, sizeof(NombreAcc), "{00c200}[%s]", Accesorios[i][NombreAccesorio]);
							}
						}
						format(TextAcc, sizeof(TextAcc), "%s{ffffff}Ranura %d - %s\n", TextAcc, ida, NombreAcc);
					}
					Dialog(playerid, D_COMPRARTOY2, DIALOG_STYLE_LIST, "{D6E1EB}Selecciona una ranura", TextAcc, "Seleccionar", "Cancelar");
				}
			}
		case D_COMPRARTOY2:
			{
				if(response) {
					if(InfoAccesorio[playerid][listitem][aModelo] != 0) return _Mensaje(playerid, 0, "39", "Ya tienes en uso esa ranura.");
					RanuraSeleccionada[playerid] = listitem;
					ShowModelSelectionMenu(playerid, AccesoriosN, "Accesorios");
				} else return Dialog(playerid, D_COMPRARTOY, DIALOG_STYLE_MSGBOX, "{D6E1EB}Tienda de accesorios", "\n{ffffff}A continuación debes elegir la..\nranura donde quieres el {00a2ff}accesorio{ffffff}.\n\n   - Recuerda que cada {00a2ff}accesorio{ffffff} tiene un costo de {00c200}18{ffffff}$.\n\n", "Continuar", "Cancelar"); //- Accesorios
			}
		case D_COMPRARTOYVIP:
			{
				if(response) {
					if(user[playerid][jPremium] < 2) return _Mensaje(playerid, 0, "40", "No tienes acceso a este comando.");
					new TextAcc[512];
					for(new ida; ida < MAX_ACCESORIOS; ida++) {
						new NombreAcc[128];
                    	format(NombreAcc, sizeof(NombreAcc), "{00a2ff}[Nada]");
						for(new i; i < sizeof(Accesorios); i++) {
							if(Accesorios[i][ModeloAccesorio] == InfoAccesorio[playerid][ida][aModelo]) {
								format(NombreAcc, sizeof(NombreAcc), "{00c200}[%s]", Accesorios[i][NombreAccesorio]);
							}
						}
						format(TextAcc, sizeof(TextAcc), "%s{ffffff}Ranura %d - %s\n", TextAcc, ida, NombreAcc);
					}
					Dialog(playerid, D_COMPRARTOYVIP2, DIALOG_STYLE_LIST, "{D6E1EB}Selecciona una ranura", TextAcc, "Seleccionar", "Cancelar");
				}
			}
		case D_COMPRARTOYVIP2:
				if(response) {
					if(user[playerid][jPremium] < 2) return _Mensaje(playerid, 0, "40", "No tienes acceso a este comando.");
					RanuraSeleccionada[playerid] = listitem;
					ShowModelSelectionMenu(playerid, AccesoriosVIP, "Accesorios vip's");
				} else return 1;
		case D_COMPRARTOYPD:
			{
				if(response) {
					new TextAcc[512];
					for(new ida; ida < MAX_ACCESORIOS; ida++) {
						new NombreAcc[128];
						format(NombreAcc, sizeof(NombreAcc), "{00a2ff}[Nada]");
						for(new i; i < sizeof(Accesorios); i++) {
							if(Accesorios[i][ModeloAccesorio] == InfoAccesorio[playerid][ida][aModelo]) {
								format(NombreAcc, sizeof(NombreAcc), "{00c200}[%s]", Accesorios[i][NombreAccesorio]);
							}
						}
						format(TextAcc, sizeof(TextAcc), "%s{ffffff}Ranura %d - %s\n", TextAcc, ida, NombreAcc);
					}
					Dialog(playerid, D_COMPRARTOYPD2, DIALOG_STYLE_LIST, "{D6E1EB}Selecciona una ranura", TextAcc, "Seleccionar", "Cancelar");
				}
			}
		case D_COMPRARTOYPD2:
			{
				if(response) {
					if(listitem >= 8 && user[playerid][jPremium] <= 1 || listitem >= 8) return _Mensaje(playerid, 0, "38", "Debes ser un nivel mayor de VIP para usar este slot.");
					if(InfoAccesorio[playerid][listitem][aModelo] != 0) return _Mensaje(playerid, 0, "39", "Ya tienes algo en esa ranura.");
					RanuraSeleccionada[playerid] = listitem;
					new stringg[700];
					for(new x; x < sizeof(AccesoriosPD); x++) {
						format(stringg, sizeof(stringg), "%s%s ($%d)\n", stringg, AccesoriosPD[x][NombreAccesorio], AccesoriosPD[x][PrecioAccesorio]);
					}
					Dialog(playerid, D_COMPRARTOYPD3, DIALOG_STYLE_LIST, "{D6E1EB}Selecciona un accesorio", stringg, "Comprar", "Cancelar");
				}
			}
		case D_COMPRARTOYPD3:
			{
				if(response) {
					if(ComprobarDineroJ(playerid) < AccesoriosPD[listitem][PrecioAccesorio]) {
						_Mensaje(playerid, 0, "41", "No puedes pagar eso.");
					} else {
						DarDineroGC(playerid, -AccesoriosPD[listitem][PrecioAccesorio]);
						InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aModelo] = AccesoriosPD[listitem][ModeloAccesorio];
						DineroEstado += AccesoriosPD[listitem][PrecioAccesorio];
						new modelid = InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aModelo];
						if((modelid >= 19006 && modelid <= 19035) || (modelid >= 19138 && modelid <= 19140)) {
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aParte] = 2;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionX] = 0.9;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionY] = 0.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionZ] = 0.35;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionX] = 90.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionY] = 90.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionZ] = 0.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaX] = 1;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaY] = 1;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaZ] = 1;
						} else if(modelid >= 18891 && modelid <= 18910) {
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aParte] = 2;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionX] = 0.15;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionY] = 0.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionZ] = 0.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionX] = 90.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionY] = 180.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionZ] = 90.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaX] = 1;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaY] = 1;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaZ] = 1;
						} else if(modelid >= 18926 && modelid <= 18935) {
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aParte] = 2;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionX] = 0.1;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionY] = 0.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionZ] = 0.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionX] = 0.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionY] = 0.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionZ] = 0.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaX] = 1;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaY] = 1;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaZ] = 1;
						} else if(modelid >= 18911 && modelid <= 18920) {
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aParte] = 2;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionX] = 0.1;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionY] = 0.035;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionZ] = 0.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionX] = 90.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionY] = 180.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionZ] = 90.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaX] = 1;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaY] = 1;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaZ] = 1;
						} else if(modelid == 19078 || modelid == 19078) {
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aParte] = 16;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionX] = 0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionY] = 0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionZ] = 0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionX] = 180.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionY] = 180.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionZ] = 0.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaX] = 1;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaY] = 1;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaZ] = 1;
						} else if((modelid >= 18641 && modelid <= 18644) || (modelid >= 19080 && modelid <= 19084) || modelid == 18890) {
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aParte] = 6;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionX] = 0.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionY] = 0.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionZ] = 0.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionX] = 0.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionY] = 0.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionZ] = 0.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaX] = 1;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaY] = 1;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaZ] = 1;
						} else {
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aParte] = 2;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionX] = 0.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionY] = 0.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aPosicionZ] = 0.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionX] = 0.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionY] = 0.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aRotacionZ] = 0.0;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaX] = 1;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaY] = 1;
							InfoAccesorio[playerid][RanuraSeleccionada[playerid]][aEscalaZ] = 1;
						}
						format(string, sizeof(string), "Has comprado un %s por $%d (Ranura: %d), comandos: /accesorios.", AccesoriosPD[listitem][NombreAccesorio], AccesoriosPD[listitem][PrecioAccesorio], RanuraSeleccionada[playerid]);
						_Mensaje(playerid, 2, "0", string);
					}
				}
			}
		case D_QUITARTUNNING:
			if(response) {
				new count = GetPVarInt(playerid, "modCount");
				for(new v = 0; v < MAX_VEHICULOS; v++) if(IsPlayerInVehicle(playerid, InfoVehiculo[v][vID])) for(new i = 0; i < count; i++) if(listitem == i) {
					new vid = InfoVehiculo[v][vLlave]-1000, vehiculo = InfoVehiculo[v][vID];
					format(string, sizeof(string), "partList%i", i);
					new partID = GetPVarInt(playerid, string);
					if(partID == 999) {
						for(new f = 0; f < MAX_MODVEHICULOS; f++) {
							RemoveVehicleComponent(vehiculo, GetVehicleComponentInSlot(vehiculo, f));
							InfoVehiculo[vid][vModificaciones][f] = 0;
							ActualizarVehiculo(vid);
						}
						return _Mensaje(playerid, 2, "0", "Todas las modificaciones se han eliminado de tu vehículo");
					}
					RemoveVehicleComponent(vehiculo, partID);
					InfoVehiculo[vid][vModificaciones][GetVehicleComponentType(partID)] = 0;
					ActualizarVehiculo(vid);
					return _Mensaje(playerid, 2, "0", "La modificación que has seleccionado ha sido eliminado.");
				}
			}
		case D_ESTEREO:
			{
				if(!response) return _Mensaje(playerid, 2, "0", "Has cancelado la selección de emisoras de radio.");
				switch(listitem) {
					case 0: {
							AccionesRol(playerid, 0, "apaga la radio del vehículo.");
							foreach(Player, i) if(GetPlayerVehicleID(i) == GetPlayerVehicleID(i)) {
								StopAudioStreamForPlayer(i);
								estacionp[i] = 0;
								estacionveh[GetPlayerVehicleID(i)] = 0;
							}
						}
					case 1: _estereo(playerid, "http://54house.stream-balancer.de:80", 1), AccionesRol(playerid, 0, "cambia la estación de radio a 54 House.");
					case 2: _estereo(playerid, "http://184.154.94.194:8028/listen.pls", 2), AccionesRol(playerid, 0, "cambia la estación de radio a Top Latino.");
					case 3: _estereo(playerid, "http://148.251.91.15:7004", 3), AccionesRol(playerid, 0, "cambia la estación de radio a Dubbase.FM.");
					case 4: _estereo(playerid, "http://listen.shoutcast.com/reggaetonhits.m3u", 4), AccionesRol(playerid, 0, "cambia la estación de radio a Reggae Hits.");
					case 5: _estereo(playerid, "http://216.230.231.122:8000/MP3128", 5), AccionesRol(playerid, 0, "cambia la estación de radio a MBradio.FM");
					case 6: _estereo(playerid, "http://listen.shoutcast.com/113fmtheeagle.m3u", 6), AccionesRol(playerid, 0, "cambia la estación de radio a 113 FM TEagle");
					case 7: _estereo(playerid, "http://108.61.73.119:8028", 7), AccionesRol(playerid, 0, "cambia la estación de radio a 181 FM.");
					case 8: _estereo(playerid, "http://173.244.215.163:8380", 8), AccionesRol(playerid, 0, "cambia la estación de radio a Soft Rock Cafe.");
					case 9: _estereo(playerid, "http://69.4.232.118:80", 9), AccionesRol(playerid, 0, "cambia la estación de radio a HardRadio.com.");
					case 10: _estereo(playerid, "http://64.202.98.133:2010", 10), AccionesRol(playerid, 0, "cambia la estación de radio a Aural Moon.");
					case 11: _estereo(playerid, "http://50.117.115.211:80", 11), AccionesRol(playerid, 0, "cambia la estación de radio a Idobi Radio.");
					case 12: _estereo(playerid, "http://108.61.30.179:4010", 12), AccionesRol(playerid, 0, "cambia la estación de radio a www.Hot108.com.");
					case 13: _estereo(playerid, "http://50.7.64.226:80/frisky_mp3_hi", 13), AccionesRol(playerid, 0, "cambia la estación de radio a Sensacion Peru.");
					case 14: _estereo(playerid, "http://5.135.223.251:9000", 14), AccionesRol(playerid, 0, "cambia la estación de radio a BluePoint.");
					case 15: _estereo(playerid, "http://62.210.209.179:8030/stream", 15), AccionesRol(playerid, 0, "cambia la estación de radio a PaganMetalRadio.");
					case 16: _estereo(playerid, "http://198.211.102.165:8000", 16), AccionesRol(playerid, 0, "cambia la estación de radio a Dirty Beats Radio 24/7.");
					case 17: _estereo(playerid, "http://somafm.com/tags.pls", 17), AccionesRol(playerid, 0, "cambia la estación de radio a The Trip.");
					case 18: _estereo(playerid, "http://streaming.latina101.com.ar/listen.pls", 18), AccionesRol(playerid, 0, "cambia la estación de radio a Amor latino.");
					case 19: _estereo(playerid, "http://s3.voscast.com:8002/;.m3u", 19), AccionesRol(playerid, 0, "cambia la estación de radio a The Trip.");
					case 20: _estereo(playerid, "http://listen.radionomy.com/hotmixradio-hiphop-128.m3u", 20), AccionesRol(playerid, 0, "cambia la estación de radio a Hotmixradio.");
					case 21: _estereo(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=139278", 21), AccionesRol(playerid, 0, "cambia la estación de radio a Naxi Café Radio.");
					case 22: _estereo(playerid, "http://listen.shoutcast.com:80/RadioHunter-TheHitzChannel", 22), AccionesRol(playerid, 0, "cambia la estación de radio a Radio Hunter.");
					case 23: _estereo(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=654138", 23), AccionesRol(playerid, 0, "cambia la estación de radio a 181.0 - BCEver.");
				}
			}
		case D_PREMIUMS:
			if(response) switch(listitem) {
				case 0: {
						new DialogStatus[3000];
						strcat(DialogStatus, "\n{C93CCE}{FFFFFF} +50$ en pago diario.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} Acceso al chat /chatvip.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} Color dorado in game.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} 2 ranura extra en /ropa.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} 1 ranura extra en vehículos.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} 2 ranura extra en maleteros.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} Acceso al /casillero y salón premium.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} Acceso a skins gratis en /casillero.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} Descuento de 10% en vehículos en venta.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} Descuento de 25% en productos de negocios.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} Descuento de 25% en repuestos de talleres.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} Dinero de regalo por comprar: 300.000{00c200}$\n\n");
						strcat(DialogStatus, "{FF0000}Precio:{FFFFFF} 5{00c200}{FFFFFF} dolares/euros(paypal/bizum/mastercard)\n\n");
						Dialog(playerid, D_INVALIDO, DIALOG_STYLE_MSGBOX, "{D6E1EB}Básico", DialogStatus, "Cerrar", "");
					}
				case 1: {
						new DialogStatus[3000];
						strcat(DialogStatus, "\n{C93CCE}{FFFFFF} +100$ en pago diario.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} Acceso al chat /chatvip.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} Color dorado in game.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} 3 ranura extra en /ropa.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} 1 ranura extra en /trabajos.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} 2 ranura extra en vehículos.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} 3 ranura extra en maleteros.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} 1 ranura extra para /comprarcasa.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} 1 ranura extra para /comprarnegocio.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} Acceso al /casillero y salón premium.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} Acceso a skins gratis en /casillero.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} Acceso a accesorios(premium) /prendas.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} Descuento de 25% en vehículos en venta.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} Descuento de 25% en productos de negocios.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} Descuento de 25% en repuestos de talleres.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} Acceso al regalo(cada 12hrs) en /casillero.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} Dinero de regalo por comprar: 500.000{00c200}$\n\n");
						strcat(DialogStatus, "{FF0000}Precio:{FFFFFF} 10{00c200}{FFFFFF}dolares/euros(paypal/bizum/mastercard)\n\n");
						Dialog(playerid, D_INVALIDO, DIALOG_STYLE_MSGBOX, "{D6E1EB}Avanzado", DialogStatus, "Cerrar", "");
					}
				case 2: {
						new DialogStatus[3000];
						strcat(DialogStatus, "\n{C93CCE}{FFFFFF} +150$ en pago diario.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} Acceso al chat /chatvip.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} Color dorado in game.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} 4 ranura extra en /ropa.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} 1 ranura extra en /trabajos.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} 3 ranura extra en vehículos.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} 3 ranura extra en maleteros.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} 1 ranura extra para /comprarcasa.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} 1 ranura extra para /comprarnegocio.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} Acceso al /casillero y salón premium.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} Acceso a skins gratis en /casillero.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} Acceso a accesorios(premium) /prendas.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} Descuento de 42% en vehículos en venta.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} Descuento de 25% en productos de negocios.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} Descuento de 25% en repuestos de talleres.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} Acceso al regalo(cada 12hrs) en /casillero.\n");
						strcat(DialogStatus, "{C93CCE}{FFFFFF} Dinero de regalo por comprar: 1.000.000{00c200}$\n\n");
						strcat(DialogStatus, "{FF0000}Precio:{FFFFFF} 10{00c200}{FFFFFF}dolares/euros(paypal/bizum/mastercard)\n\n");
						Dialog(playerid, D_INVALIDO, DIALOG_STYLE_MSGBOX, "{D6E1EB}Ultra Gold", DialogStatus, "Cerrar", "");
					}
			}
		case D_CASIVIPSKIN:
		{
			if(response)
			{
				new skinid = strval(inputtext);
				if(!SeleccionSkin(skinid)) return _Mensaje(playerid, 0, "124", "Selección de skin del ¡1 al (311)!. (sistema premium)");
				user[playerid][jRopa] = skinid;
				SetPlayerSkin(playerid, user[playerid][jRopa]);
			}
		}
		case D_VIPCASILLERO:
			{
				if(!response) return 1;
				switch(listitem) {
					case 0: {
							if(user[playerid][jSexo] == 1) ShowModelSelectionMenu(playerid, SkinsHombre, "Selecciona skin");
							else if(user[playerid][jSexo] == 2) ShowModelSelectionMenu(playerid, SkinsMujer, "Selecciona skin");
						}
					case 1: {
							new Float: health;
							GetPlayerHealth(playerid, health);
							new hpint = floatround(health, floatround_round);
							if(hpint >= 100) return _Mensaje(playerid, 0, "100", "Ya tienes la vida a full ventajas de ser premium. (sistema premium)");
							Sangre_(playerid, 100);
							_Mensaje(playerid, 4, "C93CCE", "[Sistema Premium]: {ffffff} Restauraste tu vida a 100.");
							return 1;
						}
					case 2: {
							if(ComprobarDineroJ(playerid) < 100) return _Mensaje(playerid, 0, "102", "No puedes pagar $100, por el chaleco.");
							Chaleco_(playerid, 100);
							DarDineroGC(playerid, -100);
							_Mensaje(playerid, 4, "C93CCE", "[Sistema Premium]: {ffffff} Restauraste tu chaleco a 100, por 100$.");
							return 1;
						}
					case 3: Dialog(playerid, D_VIPTRABAJO, DIALOG_STYLE_LIST, "[Membresía Premium]: {D6E1EB}Trabajos", "Carguero\nDelincuente\nPescador\nNoDisponible\nPizzero\nCarpintero\nLeñador\nNinguno\nTaxista\nGranjero\nTraficante\nJardinero", "Seleccionar", "Cancelar");
					case 4: {
							if (user[playerid][jTiempos][5] != 0) {
								format(string, sizeof(string), "* Necesitas esperar %i minuto(s) para abrir de nuevo el regalo.", user[playerid][jTiempos][5]);
								return _Mensaje(playerid, 2, "0", string);
							}
							user[playerid][jTiempos][5] = 720;
							DarDineroGC(playerid, 10000);
							user[playerid][jExperiencia] += 5;
							_Mensaje(playerid, 5, "0", "Felicidades recibiste: 10.000$, +cinco(5) puntos de experiencia.");
							return 1;
						}
					}
			}
		case D_VIPTRABAJO:
			{
				if(!response) return 1;
				switch(listitem) {
					case 0: SetPVarInt(playerid, "Trabajo_S", 1);
					case 1: SetPVarInt(playerid, "Trabajo_S", 2);
					case 2: SetPVarInt(playerid, "Trabajo_S", 3);
					case 3: SetPVarInt(playerid, "Trabajo_S", 4);
					case 4: SetPVarInt(playerid, "Trabajo_S", 5);
					case 5: SetPVarInt(playerid, "Trabajo_S", 6);
					case 6: SetPVarInt(playerid, "Trabajo_S", 7);
					case 7: SetPVarInt(playerid, "Trabajo_S", 8);
					case 8: SetPVarInt(playerid, "Trabajo_S", 9);
					case 9: SetPVarInt(playerid, "Trabajo_S", 10);
					case 10: SetPVarInt(playerid, "Trabajo_S", 11);
					case 11: SetPVarInt(playerid, "Trabajo_S", 12);
				}
				Dialog(playerid, D_VIPTRABAJO2, DIALOG_STYLE_LIST, "{D6E1EB}Premium: Trabajos", "Ranura 1\nRanura 2\nRanura 3", "Seleccionar", "Cancelar");
			}
		case D_VIPTRABAJO2:
			{
				if(!response) return 1;
				switch(listitem) {
					case 0: {
							user[playerid][jTrabajo1] = GetPVarInt(playerid, "Trabajo_S");
							_Mensaje(playerid, 4, "C93CCE", "[SistemaPremium]: {ffffff} Cambiaste tu primer trabajo!");
						}
					case 1: {
							user[playerid][jTrabajo2] = GetPVarInt(playerid, "Trabajo_S");
							_Mensaje(playerid, 4, "C93CCE", "[SistemaPremium]: {ffffff} Cambiaste tu segundo trabajo!");
						}
					case 2: {
							user[playerid][jTrabajo3] = GetPVarInt(playerid, "Trabajo_S");
							_Mensaje(playerid, 4, "C93CCE", "[SistemaPremium]: {ffffff} Cambiaste tu tercer trabajo!");
						}
				}
			}
	
		case D_MULTA:
			{
				if(response == 1) {
					if(user[playerid][jEstrellas] != 0) {
						format(string, sizeof(string), "**[CH|911|Central S: ON]: El sospechoso %s intenta pagar los cargos de un vehículo | Nivel de búsqueda: %i. **", NombreRJugador(playerid), user[playerid][jEstrellas]);
						_MensajeRfac(1, 0xF2D674E0, string, 1, 2);
						return _Mensaje(playerid, 2, "0", "Los oficiales fueron comunicados al intentar pagar multas siendo buscado.");
					}
					for(new i = 0; i < 6; i++) {
						if(listitem == i) {
							new veh = user[playerid][jLlaveCoche][i];
							if(veh == INVALID_PLAYER_VEHICLE_ID) return _Mensaje(playerid, 0, "68", "No se puede en un vehículo que no existe.");
							new vid = veh-1000;
							if(InfoVehiculo[vid][vEnDeposito]) {
								new multa = InfoVehiculo[vid][vMulta] + (user[playerid][jNivel] * 3);
								if(ComprobarDineroJ(playerid) < multa) { return _Mensaje(playerid, 0, "689", "No tienes suficiente dinero para pagar la multa."); }
								format(string, sizeof(string), "* Pagaste la multa para liberar tu %s por $%i.", nombre_vehiculo[InfoVehiculo[vid][vModelo] - 400], multa);
								_Mensaje(playerid, 4, "33CCFF", string);
								_Mensaje(playerid, 5, "0", "Tu vehículo se encuentra en el depósito, puedes abrir la reja usa /deposito.");
								DarDineroGC(playerid, -multa);
								DineroEstado += multa;
								InfoVehiculo[vid][vEnDeposito] = 0;
								InfoVehiculo[vid][vMulta] = 0;
								ActualizarVehiculo(vid);
							} else if(InfoVehiculo[vid][vMulta]) {
								if(ComprobarDineroJ(playerid) < InfoVehiculo[vid][vMulta]) { return _Mensaje(playerid, 0, "689", "No tienes suficiente dinero para pagar la multa."); }
								DarDineroGC(playerid, -InfoVehiculo[vid][vMulta]);
								DineroEstado += InfoVehiculo[vid][vMulta];
								format(string, sizeof(string), "* Pagaste la multa de $%d de tu %s.", InfoVehiculo[vid][vMulta], nombre_vehiculo[InfoVehiculo[vid][vModelo] - 400]);
								_Mensaje(playerid, 4, "33CCFF", string);
								InfoVehiculo[vid][vMulta] = 0;
								ActualizarVehiculo(vid);
							} else _Mensaje(playerid, 0, "689", "Este vehículo se encuentra limpio en el sistema.");
							return 1;
						}
					}
				}
			}
		case D_CAMELLO:
				if (response) {
					new location[MAX_ZONE_NAME], avisapd = random(3);
					if (listitem == 0) //- Crack
					{
						if (RevisarDinero(playerid, 9000))
						{
							Get2DZone(location, MAX_ZONE_NAME, 2315.2449, 33.6971, 27.3995);
							format(string, sizeof(string), "[SMS Anónimo]: Necesito que vengas por el crack en %s.", location);
							_Mensaje(playerid, 4, "FFEA5F", string);
							Pedido[playerid] = 2;
							TogglePlayerAllDynamicCPs(playerid, false);
							SetPlayerCheckpoint(playerid, 2315.2449, 33.6971, 27.3995, 2);
							switch (avisapd)
							{
								case 0: return 1;
								case 1: {
									format(string, sizeof(string), "**[CH|911|Central S: ON]: Un anónimo ha denunciado que se está haciendo un tráfico droga en %s. *", location);
									_MensajeRfac(1, 0xF2D674E0, string, 1, 2);
									return 1;
								}
								case 2: return 1;
							}
						}
					}
					else if (listitem == 1) //- Cocaina
					{
						if (RevisarDinero(playerid, 10000))
						{
							Get2DZone(location, MAX_ZONE_NAME, 1281.0088, 305.0030, 19.5505);
							format(string, sizeof(string), "[SMS Anónimo]: Necesito que vengas por la cocaína en %s.", location);
							_Mensaje(playerid, 4, "FFEA5F", string);
							Pedido[playerid] = 3;
							TogglePlayerAllDynamicCPs(playerid, false);
							SetPlayerCheckpoint(playerid, 1281.0088, 305.0030, 19.5505, 2);
							switch (avisapd)
							{
								case 0: return 1;
								case 1: {
									format(string, sizeof(string), "**[CH|911|Central S: ON]: Un anónimo ha denunciado que se está haciendo un tráfico droga en %s. *", location);
									_MensajeRfac(1, 0xF2D674E0, string, 1, 2);
									return 1;
								}
								case 2: return 1;
							}
						}
					}
					else if (listitem == 2) //- Heroina
					{
						if (RevisarDinero(playerid, 8000))
						{
							Get2DZone(location, MAX_ZONE_NAME, 2195.8572, -1971.3330, 13.7833);
							format(string, sizeof(string), "[SMS Anónimo]: Necesito que vengas por la heroína en %s.", location);
							_Mensaje(playerid, 4, "FFEA5F", string);
							Pedido[playerid] = 4;
							TogglePlayerAllDynamicCPs(playerid, false);
							SetPlayerCheckpoint(playerid, 2195.8572, -1971.3330, 13.7833, 2);
							switch (avisapd)
							{
								case 0: return 1;
								case 1: {
									format(string, sizeof(string), "**[CH|911|Central S: ON]: Un anónimo ha denunciado que se está haciendo un tráfico droga en %s.", location);
									_MensajeRfac(1, 0xF2D674E0, string, 1, 2);
									return 1;
								}
								case 2: return 1;
							}
						}
					}
					else if (listitem == 3) //- LSD
					{
						if (RevisarDinero(playerid, 5000))
						{
							Get2DZone(location, MAX_ZONE_NAME, 1667.4683, -2095.2505, 13.7241);
							format(string, sizeof(string), "[SMS Anónimo]: Necesito que vengas por la droga LSD en %s.", location);
							_Mensaje(playerid, 4, "FFEA5F", string);
							Pedido[playerid] = 5;
							TogglePlayerAllDynamicCPs(playerid, false);
							SetPlayerCheckpoint(playerid, 1667.4683, -2095.2505, 13.7241, 2);
							switch (avisapd)
							{
								case 0: return 1;
								case 1: {
									format(string, sizeof(string), "**[CH|911|Central S: ON]: Un anónimo ha denunciado que se está haciendo un tráfico de droga en %s.", location);
									_MensajeRfac(1, 0xF2D674E0, string, 1, 2);
									return 1;
								}
								case 2: return 1;
							}
						}
					}
					else if (listitem == 4) // MARIHUANA
					{
						if (RevisarDinero(playerid, 2200))
						{
							Get2DZone(location, MAX_ZONE_NAME, 2494.1326, -1464.6361, 24.0107);
							format(string, sizeof(string), "[SMS Anónimo]: Necesito que vengas por las semillas en %s.", location);
							_Mensaje(playerid, 4, "FFEA5F", string);
							Pedido[playerid] = 6;
							TogglePlayerAllDynamicCPs(playerid, false);
							SetPlayerCheckpoint(playerid, 2494.1326, -1464.6361, 24.0107, 2);
							switch (avisapd)
							{
								case 0: return 1;
								case 1: {
									format(string, sizeof(string), "**[CH|911|Central S: ON]: Un anónimo ha denunciado que se está haciendo un tráfico de drogas en %s.", location);
									_MensajeRfac(1, 0xF2D674E0, string, 1, 2);
									return 1;
								}
								case 2: return 1;
							}
						}
					}
				}
		case D_FABRICA:
			{
				if (!_Fabrica(playerid)) return _Mensaje(playerid, 4, "ffffff", "{ADC3E7}Ya no estás en un punto de fábrica.");
				new obj, material, Cops, tipo;
				for(new i=0;i<MAX_PLAYERS;i++) {
					if(user[i][jMiembro] == 1 || user[i][jMiembro] == 6 && EnServicioPD[i] > 0) {
						Cops++;
					}
				}

				if (response) {
					if(user[playerid][jT_fabrica] == -1 && user[playerid][jI_fabrica] < 3)
					{
						if (listitem == 0) { //- Caja de Pistola 45. Colt
							if(user[playerid][jMateriales] >= 40){
								material = 40;
								obj = 51;
								tipo = 1;
							} else return _Mensaje(playerid, 0, "9", "No tienes suficientes materiales.");
						} else if (listitem == 1) { //- Caja de D. Eagle
							if(user[playerid][jMateriales] >= 75){
								material = 75;
								obj = 52;
								tipo = 1;
							} else return _Mensaje(playerid, 0, "9", "No tienes suficientes materiales.");
						} else if (listitem == 2) { //- Caja de Tec-9
							if(user[playerid][jMateriales] >= 98){
								material = 98;
								obj = 53;
								tipo = 1;
							} else return _Mensaje(playerid, 0, "9", "No tienes suficientes materiales.");
						} else if (listitem == 3) { //- Caja de UZI
							if(user[playerid][jMateriales] >= 100){
								material = 100;
								obj = 54;
								tipo = 1;
							} else return _Mensaje(playerid, 0, "9", "No tienes suficientes materiales.");
						} else if (listitem == 4) { //- Caja de MP5K
							if(user[playerid][jMateriales] >= 150){
								material = 150;
								obj = 55;
								tipo = 1;
							} else return _Mensaje(playerid, 0, "9", "No tienes suficientes materiales.");
						} else if (listitem == 5) { //- Caja de Escopeta
							if(user[playerid][jMateriales] >= 200){
								material = 200;
								obj = 56;
								tipo = 1;
							} else return _Mensaje(playerid, 0, "9", "No tienes suficientes materiales.");
						} else if (listitem == 6) { //- Caja de Escopeta Recortada
							if(user[playerid][jMateriales] >= 220){
								material = 220;
								obj = 57;
								tipo = 1;
							} else return _Mensaje(playerid, 0, "9", "No tienes suficientes materiales.");
						} else if (listitem == 7) { //- Caja de Ak-47
							if(user[playerid][jMateriales] >= 350){
								material = 350;
								obj = 59;
								tipo = 1;
							} else return _Mensaje(playerid, 0, "9", "No tienes suficientes materiales.");
						}
					}
					if(user[playerid][jT_fabrica2] == -1 && user[playerid][jI_fabrica2] < 3)
					{
						if (listitem == 8) { //- Cargas de 45. Colt
							if(user[playerid][jMateriales] >= 8){
								material = 8;
								obj = 63;
								tipo = 2;
							} else return _Mensaje(playerid, 0, "9", "No tienes suficientes materiales.");
						} else if (listitem == 9) { //- Cargas de D. Eagle
							if(user[playerid][jMateriales] >= 10){
								material = 10;
								obj = 64;
								tipo = 2;
							} else return _Mensaje(playerid, 0, "9", "No tienes suficientes materiales.");
						} else if (listitem == 10) { //- Cargas de Tec-9
							if(user[playerid][jMateriales] >= 12){
								material = 12;
								obj = 65;
								tipo = 2;
							} else return _Mensaje(playerid, 0, "9", "No tienes suficientes materiales.");
						} else if (listitem == 11) { //- Cargas de UZI
							if(user[playerid][jMateriales] >= 14){
								material = 14;
								obj = 66;
								tipo = 2;
							} else return _Mensaje(playerid, 0, "9", "No tienes suficientes materiales.");
						} else if (listitem == 12) { //- Cargas de MP5K
							if(user[playerid][jMateriales] >= 18){
								material = 18;
								obj = 67;
								tipo = 2;
							} else return _Mensaje(playerid, 0, "9", "No tienes suficientes materiales.");
						} else if (listitem == 13) { //- Cargas de Ak-47
							if(user[playerid][jMateriales] >= 20){
								material = 20;
								obj = 68;
								tipo = 2;
							} else return _Mensaje(playerid, 0, "9", "No tienes suficientes materiales.");
						} else if (listitem == 14) { //- Cargas de Escopeta
							if(user[playerid][jMateriales] >= 30){
								material = 30;
								obj = 108;
								tipo = 2;
							} else return _Mensaje(playerid, 0, "9", "No tienes suficientes materiales.");
						}
					}
					if(tipo != 0)
					{
					if (user[playerid][jm_Derecha] != 50 && user[playerid][jm_Izquierda] != 50) return _Mensaje(playerid, 0, "9", "Debes tener una caja en las manos. Comprala en una ferretería, pero mete bastantes al maletero.");
					if (user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0) return _Mensaje(playerid, 0, "9", "Tienes que tener una mano vacia.");
					if(user[playerid][jMateriales] <= material) return _Mensaje(playerid, 0, "9", "No tienes los suficientes materiales.");
					jPt_fabrica[playerid] = SetTimerEx("PedidoFabrica", 35000, false, "iiiii", playerid, obj, material, 4, tipo);
					_Mensaje(playerid, 4, "ffffff", "Jorge Sanchez dice: Estense calmados amigos... ahora viene el carnal con su mercancía.");
					_Mensaje(playerid, 4, "ffffff", "(( NO TE ALEJES DEL /FABRICA HASTA QUE LLEGUE EL PEDIDO NI TE COLOQUES COSAS EN LA MANO O SE CANCELARÁ ))");
					if(user[playerid][jm_Izquierda] == 50) user[playerid][jm_IzquierdaCant] --;
					else user[playerid][jm_DerechaCant] --;
					}
					return 1;
				}
			}
		case D_DrogaP:
			if (response) switch (listitem) {
				case 0: {
						if (GetPVarInt(playerid, "SeleccionDroga") == 0) return _Mensaje(playerid, 0, "458", "No estás traficando drogas.");
						new mypoint = -1;
						if (_enPos(playerid, 4.0, 655.2497, -502.9607, 16.3102)) { mypoint = 5; }
						if (mypoint == -1) return _Mensaje(playerid, 0, "458", "No estás en el punto especificado.");
						if (user[playerid][jPaquetes]) {
							_Mensaje(playerid, 0, "458", "No se puede sostener más paquetes de drogas.");
							SetPVarInt(playerid, "SeleccionDroga", 0);
							return 1;
						}
						if (ComprobarDineroJ(playerid) > 8) {
							_Mensaje(playerid, 2, "0", "Pagaste $8 por el paquete de marihuana.");
							DarDineroGC(playerid, -8);
							user[playerid][jPaquetes] = 1;
							SetPVarInt(playerid, "TipoDroga", 1);
							SetPVarInt(playerid, "SeleccionDroga", 0);
							SetPVarInt(playerid, "TeleportTafricante", 25);
							SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TIPO_TELEPORTTRAFICANTE);
							_Mensaje(playerid, 2, "0", "Ahora déjalo en lugar indicado para tu paga. {FF0000}(Vé al punto rojo)");
							SetPlayerCheckpoint(playerid, 633.3113, -1776.1129, 14.1459, 2);
							SetPVarInt(playerid, "EnCheckPoint", 5);
							return 1;
						} else {
							_Mensaje(playerid, 0, "458", "No tienes $8 dólares.");
							SetPVarInt(playerid, "SeleccionDroga", 0);
							return 1;
						}
					}
				case 1: {
						if (GetPVarInt(playerid, "SeleccionDroga") == 0) return _Mensaje(playerid, 0, "458", "No estás traficando drogas.");
						new mypoint = -1;
						if (_enPos(playerid, 4.0, 655.2497, -502.9607, 16.3102)) { mypoint = 5; }
						if (mypoint == -1) return _Mensaje(playerid, 0, "458", "No estás en el punto especificado.");
						if (user[playerid][jPaquetes]) {
							_Mensaje(playerid, 0, "458", "No se puede sostener más paquetes de drogas.");
							SetPVarInt(playerid, "SeleccionDroga", 0);
							return 1;
						}
						if (ComprobarDineroJ(playerid) > 400) {
							_Mensaje(playerid, 2, "0", "Pagaste $400 por el paquete de crack.");
							DarDineroGC(playerid, -400);
							user[playerid][jPaquetes] = 1;
							SetPVarInt(playerid, "TipoDroga", 2);
							SetPVarInt(playerid, "SeleccionDroga", 0);
							SetPVarInt(playerid, "TeleportTafricante", 25);
							SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TIPO_TELEPORTTRAFICANTE);
							SetPlayerCheckpoint(playerid, 990.2177, -1349.8931, 13.3322, 2);
							_Mensaje(playerid, 2, "0", "Ahora déjalo en lugar indicado para tu paga. {FF0000}(Vé al checkpoint)");
							SetPVarInt(playerid, "EnCheckPoint", 5);
							return 1;
						} else {
							_Mensaje(playerid, 0, "458", "No tienes $400 dólares.");
							SetPVarInt(playerid, "SeleccionDroga", 0);
							return 1;
						}
					}
				case 2: {
						if (GetPVarInt(playerid, "SeleccionDroga") == 0) return _Mensaje(playerid, 0, "458", "No estás traficando drogas.");
						new mypoint = -1;
						if (_enPos(playerid, 4.0, 655.2497, -502.9607, 16.3102)) { mypoint = 5; }
						if (mypoint == -1) return _Mensaje(playerid, 0, "458", "No estás en el punto especificado.");
						if (user[playerid][jPaquetes]) {
							_Mensaje(playerid, 0, "458", "No se puede sostener más paquetes de drogas.");
							SetPVarInt(playerid, "SeleccionDroga", 0);
							return 1;
						}
						if (ComprobarDineroJ(playerid) > 600) {
							_Mensaje(playerid, 2, "0", "Pagaste $600 por el paquete de heroína.");
							DarDineroGC(playerid, -600);
							user[playerid][jPaquetes] = 1;
							SetPVarInt(playerid, "TipoDroga", 3);
							SetPVarInt(playerid, "SeleccionDroga", 0);
							SetPVarInt(playerid, "TeleportTafricante", 25);
							SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TIPO_TELEPORTTRAFICANTE);
							SetPlayerCheckpoint(playerid, 2199.9021, -1259.1571, 24.0084, 2);
							_Mensaje(playerid, 2, "0", "Ahora déjalo en lugar indicado para tu paga. {FF0000}(Vé al checkpoint)");
							SetPVarInt(playerid, "EnCheckPoint", 5);
							return 1;
						} else {
							_Mensaje(playerid, 0, "458", "No tienes $7 dólares.");
							SetPVarInt(playerid, "SeleccionDroga", 0);
							return 1;
						}
					}
				case 3: {
						if (GetPVarInt(playerid, "SeleccionDroga") == 0) return _Mensaje(playerid, 0, "458", "No estás traficando drogas.");
						new mypoint = -1;
						if (_enPos(playerid, 4.0, 655.2497, -502.9607, 16.3102)) { mypoint = 5; }
						if (mypoint == -1) return _Mensaje(playerid, 0, "458", "No estás en el punto especificado.");
						if (user[playerid][jPaquetes]) {
							_Mensaje(playerid, 0, "458", "No se puede sostener más paquetes de drogas.");
							SetPVarInt(playerid, "SeleccionDroga", 0);
							return 1;
						}
						if (ComprobarDineroJ(playerid) > 900) {
							_Mensaje(playerid, 2, "0", "Pagaste $900 por el paquete de LSD.");
							DarDineroGC(playerid, -900);
							user[playerid][jPaquetes] = 1;
							SetPVarInt(playerid, "TipoDroga", 4);
							SetPVarInt(playerid, "SeleccionDroga", 0);
							SetPVarInt(playerid, "TeleportTafricante", 25);
							SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TIPO_TELEPORTTRAFICANTE);
							SetPlayerCheckpoint(playerid, 2537.6741, -1469.8153, 23.9680, 2);
							_Mensaje(playerid, 2, "0", "Ahora déjalo en lugar indicado para tu paga. {FF0000}(Vé al checkpoint)");
							SetPVarInt(playerid, "EnCheckPoint", 5);
							return 1;
						} else {
							_Mensaje(playerid, 0, "458", "No tienes $900 dólares.");
							SetPVarInt(playerid, "SeleccionDroga", 0);
							return 1;
						}
					}
				case 4: {
						if (GetPVarInt(playerid, "SeleccionDroga") == 0) return _Mensaje(playerid, 0, "458", "No estás traficando drogas.");
						new mypoint = -1;
						if (_enPos(playerid, 4.0, 655.2497, -502.9607, 16.3102)) { mypoint = 5; }
						if (mypoint == -1) return _Mensaje(playerid, 0, "458", "No estás en el punto especificado.");
						if (user[playerid][jPaquetes]) {
							_Mensaje(playerid, 0, "458", "No se puede sostener más paquetes de drogas.");
							SetPVarInt(playerid, "SeleccionDroga", 0);
							return 1;
						}
						if (ComprobarDineroJ(playerid) > 1200) {
							_Mensaje(playerid, 2, "0", "Pagaste $1200 por el paquete de cocaina.");
							DarDineroGC(playerid, -1200);
							user[playerid][jPaquetes] = 1;
							SetPVarInt(playerid, "TipoDroga", 5);
							SetPVarInt(playerid, "SeleccionDroga", 0);
							SetPVarInt(playerid, "TeleportTafricante", 25);
							SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TIPO_TELEPORTTRAFICANTE);
							SetPlayerCheckpoint(playerid, 2280.2500, -1937.8478, 13.5463, 2);
							_Mensaje(playerid, 2, "0", "Ahora déjalo en lugar indicado para tu paga. {FF0000}(Vé al checkpoint)");
							SetPVarInt(playerid, "EnCheckPoint", 5);
							return 1;
						} else {
							_Mensaje(playerid, 0, "458", "No tienes $1200 dólares.");
							SetPVarInt(playerid, "SeleccionDroga", 0);
							return 1;
						}
					}
			}
		case D_Praticar:
			{
				if (response) switch (listitem) {
					case 0: {
							if(RevisarDinero(playerid, 40)) {
								Compra(playerid, 40);
								user[playerid][jPelea] = 6;
								SetPlayerFightingStyle(playerid, user[playerid][jPelea]);
								_Mensaje(playerid, 4, "00c200", "[Profesor]: {ffffff} Felicidades! Has aprendido Kung Fu.");
								ApplyAnimation(playerid, "benchpress", "gym_bp_celebrate", 4.0, 1, 1, 1, 1, 500, 1);
							}
						}
					case 1: {
							if(RevisarDinero(playerid, 30)) {
								Compra(playerid, 30);
								user[playerid][jPelea] = 5;
								SetPlayerFightingStyle(playerid, user[playerid][jPelea]);
								_Mensaje(playerid, 4, "00c200", "[Profesor]:{ffffff} Felicidades! Has aprendido a Boxear.");
								ApplyAnimation(playerid, "benchpress", "gym_bp_celebrate", 4.0, 1, 1, 1, 1, 500, 1);
							}
						}
				}
			}
		case D_MENUGUANTERA:
			{
				if(!response) return 1;
				new i = listitem;
				if(i == 3) return 1; //Selecciona la barra separadora
				if(i >= 0 && i <= 2) S_Guantera(playerid, VehGuanteraPlayer[playerid], i); //Selecciona un bolsillo
				if(i == 4) G_Guantera(playerid, VehGuanteraPlayer[playerid], 1); //Selecciona mano derecha
				if(i == 5) G_Guantera(playerid, VehGuanteraPlayer[playerid], 2); //Selecciona mano izquierda
			}
		case D_MENUMALETERO:
			{
				if(!response) return 1;
				new i = listitem, vip = user[playerid][jPremium];
				if(i == 12+vip) return 1; //Selecciona la barra separadora
				if(i >= 0 && i <= 11+vip) S_Maletero(playerid, VehMaleteroPlayer[playerid], i); //Selecciona un bolsillo
				if(i == 13+vip) G_Maletero(playerid, VehMaleteroPlayer[playerid], 1); //Selecciona mano derecha
				if(i == 14+vip) G_Maletero(playerid, VehMaleteroPlayer[playerid], 2); //Selecciona mano izquierda
			}
		case D_MENUMALETERO2:
			{
				if(!response) return 1;
				new i = listitem, vip = user[playerid][jPremium];
				if(i == 7+vip) return 1; //Selecciona la barra separadora
				if(i >= 0 && i <= 6+vip) S_Maletero(playerid, VehMaleteroPlayer[playerid], i); //Selecciona un bolsillo
				if(i == 8+vip) G_Maletero(playerid, VehMaleteroPlayer[playerid], 1); //Selecciona mano derecha
				if(i == 9+vip) G_Maletero(playerid, VehMaleteroPlayer[playerid], 2); //Selecciona mano izquierda
			}
		case D_MENUMALETERO3:
			{
				if(!response) return 1;
				new i = listitem, vip = user[playerid][jPremium];
				if(i == 2+vip) return 1; //Selecciona la barra separadora
				if(i >= 0 && i <= 1+vip) S_Maletero(playerid, VehMaleteroPlayer[playerid], i); //Selecciona un bolsillo
				if(i == 3+vip) G_Maletero(playerid, VehMaleteroPlayer[playerid], 1); //Selecciona mano derecha
				if(i == 4+vip) G_Maletero(playerid, VehMaleteroPlayer[playerid], 2); //Selecciona mano izquierda
			}
		case D_MENUMALETERO4:
			{
				if(!response) return 1;
				new i = listitem, vip = user[playerid][jPremium];
				if(i == 9+vip) return 1; //Selecciona la barra separadora
				if(i >= 0 && i <= 8+vip) S_Maletero(playerid, VehMaleteroPlayer[playerid], i); //Selecciona un bolsillo
				if(i == 10+vip) G_Maletero(playerid, VehMaleteroPlayer[playerid], 1); //Selecciona mano derecha
				if(i == 11+vip) G_Maletero(playerid, VehMaleteroPlayer[playerid], 2); //Selecciona mano izquierda
			}
		case D_MENUMALETERO5:
			{
				if(!response) return 1;
				new i = listitem;
				if(i == 15) return 1; //Selecciona la barra separadora
				if(i >= 0 && i <= 14) S_Maletero(playerid, VehMaleteroPlayer[playerid], i); //Selecciona un bolsillo
				if(i == 16) G_Maletero(playerid, VehMaleteroPlayer[playerid], 1); //Selecciona mano derecha
				if(i == 17) G_Maletero(playerid, VehMaleteroPlayer[playerid], 2); //Selecciona mano izquierda
			}
		case D_MENUMALETEROF:
			{
				if(!response) return 1;
				new i = listitem;
				if(i == 12) return 1; //Selecciona la barra separadora
				if(i >= 0 && i <= 11) S_MaleteroF(playerid, VehMaleteroPlayer[playerid], i); //Selecciona un bolsillo
				if(i == 13) G_MaleteroF(playerid, VehMaleteroPlayer[playerid], 1); //Selecciona mano derecha
				if(i == 14) G_MaleteroF(playerid, VehMaleteroPlayer[playerid], 2); //Selecciona mano izquierda
			}
		case D_Cvehiculo1:
		{
			if(!response) { _Mensaje(playerid, 4, "b0b0b0", "Cerraste el catalogo de compras."); return 1; }
			new ID = listitem,StrPVar[40];
			Formato(StrPVar,"GPS_vehC_%d",ID);
			new i = GetPVarInt(playerid,StrPVar);
			compra_Veh[playerid] = i;
			format(string, sizeof(string),
			"{ffffff}¿Estás seguro que quieres comprar este vehículo?\n\n\
			{ffffff}     Modelo: %s - Precio: {1CB54C}$%d\n", nombre_vehiculo[i_Conce[i][eModeloVeh] - 400], i_Conce[i][ePrecioVeh]);
			Dialog(playerid, D_Cvehiculo2, DIALOG_STYLE_MSGBOX, "{D6E1EB}Adquirir vehículo", string, "Comprar", "Cancelar");
			return 1;
		}
		case D_Cvehiculo2:
		{
			if(!response) { _Mensaje(playerid, 4, "b0b0b0", "Cerraste el catalogo de compras."); compra_Veh[playerid] = -1; return 1; }
			if (compra_Veh[playerid] == -1) return _Mensaje(playerid, 4, "b0b0b0", "Cerraste el catalogo de compras.");
			new d = compra_Veh[playerid];
			if(i_Conce[d][eDisponibles] == 0) return _Mensaje(playerid, 4, "b0b0b0", "No hay más vehículos de este modelo.");
			new max_vehs = CVehiculos(playerid);
			if(user[playerid][jPremium] == 0 && max_vehs >= 3)
			{
			    compra_Veh[playerid] = -1;
				_Mensaje(playerid, 4, "b0b0b0", "Sólo puedes tener 3 vehículos.");
				return 1;
			}
			if(user[playerid][jPremium] == 1 && max_vehs >= 4)
			{
			    compra_Veh[playerid] = -1;
				_Mensaje(playerid, 4, "b0b0b0", "Sólo puedes tener 4 vehículos.");
				return 1;
			}
			if(user[playerid][jPremium] == 2 && max_vehs >= 5)
			{
			    compra_Veh[playerid] = -1;
				_Mensaje(playerid, 4, "b0b0b0", "Sólo puedes tener 5 vehículos.");
				return 1;
			}
			new costo = i_Conce[d][ePrecioVeh], originac = i_Conce[d][ePrecioVeh];
			if (user[playerid][jPremium] == 1) costo = (i_Conce[d][ePrecioVeh] * 90) / (100);
			else if (user[playerid][jPremium] == 2) costo = (i_Conce[d][ePrecioVeh] * 75) / (100);
			else if (user[playerid][jPremium] == 3) costo = (i_Conce[d][ePrecioVeh] * 58) / (100);
			if (ComprobarDineroJ(playerid) < costo)
			{
			    compra_Veh[playerid] = -1;
				_Mensaje(playerid, 4, "b0b0b0", "No tienes dinero para comprar ese vehículo.");
				return 1;
			}
			new tipo = i_Conce[d][eTipo], Float: xv, Float: yv, Float: zv, Float: av;

			if (tipo == 1) { xv=1999.2615; yv=-2096.8396; zv=13.2972; av=180.0000; }
			else if (tipo == 2) { xv=2121.6123; yv=-1127.4148; zv=25.0506; av=-34.8000; }
			else if (tipo == 3) { xv=554.6847; yv=-1283.4102; zv=16.8277; av=0.0000; }
			else if (tipo == 4) { xv=2905.0713; yv=-1129.6624; zv=10.8713; av=180.0000; }
			else if (tipo == 5) { xv=1885.031616; yv=-2445.458251; zv=13.808096; av=-221.160003; }
			else if (tipo == 6) { xv=2498.2854; yv=-1948.6980; zv=13.1011; av=90.0000; }
			DarDineroGC(playerid, -costo);
			DineroEstado += (i_Conce[d][ePrecioVeh] * 50) / (100); // Da dinero al estado
			new Coche = CrearCoche(playerid, i_Conce[d][eModeloVeh], xv, yv, zv, av, 1, 1, originac);
			i_Conce[d][eDisponibles]--;
			_Mensaje(playerid, 4, "33CCFF", "¡Enhorabuena ahora eres propietario de un vehículo!");
			_Mensaje(playerid, 4, "33CCFF", "Para conocer todos los comandos de tu vehículo utiliza el comando '/ayuda'");
			SetVehicleMatricula(Coche);
			compra_Veh[playerid] = -1;

			return 1;
		}
		case D_Uvehiculo1:
		{
			if(!response) { _Mensaje(playerid, 4, "b0b0b0", "Cerraste el catalogo de compras."); return 1; }
			new ID = listitem,StrPVar[40];
			Formato(StrPVar,"GPS_vehC_%d",ID);
			new i = GetPVarInt(playerid,StrPVar);
			compra_Veh[playerid] = i;
			format(string, sizeof(string),
			"{ffffff}¿Estás seguro que quieres comprar este vehículo?\n\n\
			{ffffff}     Modelo: %s - Precio: {1CB54C}$%d\n", nombre_vehiculo[i_Usado[i][uModeloVeh] - 400], i_Usado[i][uPrecioVeh]);
			Dialog(playerid, D_Uvehiculo2, DIALOG_STYLE_MSGBOX, "{D6E1EB}Adquirir vehículo", string, "Comprar", "Cancelar");
			return 1;
		}
		case D_Uvehiculo2:
		{
			if(!response) { _Mensaje(playerid, 4, "b0b0b0", "Cerraste el catalogo de compras."); compra_Veh[playerid] = -1; return 1; }
			if (compra_Veh[playerid] == -1) return _Mensaje(playerid, 4, "b0b0b0", "Cerraste el catalogo de compras.");
			new d = compra_Veh[playerid];

			new max_vehs = CVehiculos(playerid);
			if(user[playerid][jPremium] == 0 && max_vehs >= 3)
			{
			    compra_Veh[playerid] = -1;
				_Mensaje(playerid, 4, "b0b0b0", "Sólo puedes tener 3 vehículos.");
				return 1;
			}
			if(user[playerid][jPremium] == 1 && max_vehs >= 4)
			{
			    compra_Veh[playerid] = -1;
				_Mensaje(playerid, 4, "b0b0b0", "Sólo puedes tener 4 vehículos.");
				return 1;
			}
			if(user[playerid][jPremium] == 2 && max_vehs >= 5)
			{
			    compra_Veh[playerid] = -1;
				_Mensaje(playerid, 4, "b0b0b0", "Sólo puedes tener 5 vehículos.");
				return 1;
			}
			new costo = i_Usado[d][uPrecioVeh];
			if (ComprobarDineroJ(playerid) < costo)
			{
			    compra_Veh[playerid] = -1;
				_Mensaje(playerid, 4, "b0b0b0", "No tienes dinero para comprar ese vehículo.");
				return 1;
			}
			DarDineroGC(playerid, -costo);
			DineroEstado += (costo * 50) / (100); // Da dinero al estado
			new Coche = CrearUCoche(playerid, i_Usado[d][uModeloVeh], 2605.9143, -2212.0251, 13.1689, 180.0000, i_Usado[d][uColor_1], i_Usado[d][uColor_2], costo * 2, d);
			bV_usado(d);
			_Mensaje(playerid, 4, "33CCFF", "¡Felicitaciones! Compraste un vehículo usado.");
			_Mensaje(playerid, 4, "33CCFF", "Recuerda /estacionar el vehículo, para más comandos /ayuda.");
			SetVehicleMatricula(Coche);
			compra_Veh[playerid] = -1;
			return 1;
		}
		case D_FOGATA:
			{
				if (response) {
					if (listitem == 0) { //- Colocar
						if(user[playerid][jm_Derecha] != 87 && user[playerid][jm_Izquierda] != 87){ _Mensaje(playerid, 0, "9", "Necesitas un encendedor con gas para encender la fogata."); return 1;}
						if(user[playerid][jTroncos] >= 50){
							if (InfoFogata[playerid][fObjeto] != 0) return _Mensaje(playerid, 0, "106", "Ya has creado una fogata.");
							if (GetPlayerVirtualWorld(playerid) != 0) return _Mensaje(playerid, 0, "106", "No puedes crear fogatas en interiores.");
							new Float: Positionss[3];
							GetPlayerPos(playerid, Positionss[0], Positionss[1], Positionss[2]);
							InfoFogata[playerid][fPosicionX] = Positionss[0];
							InfoFogata[playerid][fPosicionY] = Positionss[1];
							InfoFogata[playerid][fPosicionZ] = Positionss[2];
							InfoFogata[playerid][fObjeto] = CreateDynamicObject(1463, Positionss[0], Positionss[1], Positionss[2], 0.000, 0.000, 0.000);
							EditDynamicObject(playerid, InfoFogata[playerid][fObjeto]);
							SetPVarInt(playerid,"Editando_F", 1);
							_Mensaje(playerid, 2, "0", "Has tomado unos troncos con el cual estás armando una fogata.");
							user[playerid][jTroncos] -= 30;
							if(user[playerid][jm_Derecha] == 87){user[playerid][jm_DerechaCant] --;}
							else if(user[playerid][jm_Izquierda] == 87){user[playerid][jm_IzquierdaCant] --;}
						} else return _Mensaje(playerid, 0, "9", "No tienes suficientes troncos (50).");
					} else if (listitem == 1) { //- Editar
						if (InfoFogata[playerid][fObjeto] == 0) return _Mensaje(playerid, 0, "106", "No has creado una fogata.");
						EditDynamicObject(playerid, InfoFogata[playerid][fObjeto]);
						SetPVarInt(playerid,"Editando_F", 1);
						_Mensaje(playerid, 2, "0", "Edición de fogata.");
					} else if (listitem == 2) { //- Borrar
						if (InfoFogata[playerid][fObjeto] == 0) return _Mensaje(playerid, 0, "106", "No has creado una fogata.");
						DestroyDynamicObject(InfoFogata[playerid][fObjeto]);
						DestroyDynamicObject(InfoFogata[playerid][fObjeto2]);
						InfoFogata[playerid][fPosicionX] = 0.0;
						InfoFogata[playerid][fPosicionX] = 0.0;
						InfoFogata[playerid][fPosicionX] = 0.0;
						InfoFogata[playerid][fPosicionRX] = 0.0;
						InfoFogata[playerid][fPosicionRY] = 0.0;
						InfoFogata[playerid][fPosicionRZ] = 0.0;
						InfoFogata[playerid][fObjeto] = 0;
						InfoFogata[playerid][fObjeto2] = 0;
						_Mensaje(playerid, 2, "0", "Apagaste la fogata con dos bales de agua.");
						return 1;
					}
				}
			}
		case D_PCLSPD0: {
			if(!response) return _ordenador(playerid);
			_ordenador(playerid);
		}
		case D_PCLSPD1: {
			if(!response) return _Mensaje(playerid, 5, "0", " Saliste del ordenador policial.");
			switch(listitem) {
				case 0: Dialog(playerid, D_PCLSPD2, DIALOG_STYLE_INPUT, "{D6E1EB}Búsqueda de información		", "Introduzca el documento de la persona:", "Buscar", "Cancelar");
				case 1: Dialog(playerid, D_PCLSPD3, DIALOG_STYLE_INPUT, "{D6E1EB}Historial delictivo		", "Introduzca el documento de la persona:", "Buscar", "Cancelar");
				case 2: Dialog(playerid, D_PCLSPD4, DIALOG_STYLE_INPUT, "{D6E1EB}Información de vehículo		", "Introduzca el número de matrícula del vehículo:", "Buscar", "Cancelar");
				case 3: {
						PlayerPlaySound(playerid, 1058, 0, 0, 0);
						if (EnLlamada[playerid] != 0) { _Mensaje(playerid, 0, "9", "Ya estás en una llamada."); return 1; }
						if (user[playerid][jMiembro] == 1 || user[playerid][jMiembro] == 5) {
							new oyente = -1;
							for (new i; i < MAX_PLAYERS; i++) {
								if (EnLlamada[i] == 911) {
									oyente = i;
									break;
								}
            				}
            				if (oyente != -1) {
								PersonaEnLlamada[playerid] = oyente;
								PersonaEnLlamada[oyente] = playerid;
								_Mensaje(oyente, 2, "0", "Han respondido al teléfono.");
								EnLlamada[playerid] = 2;
								EnLlamada[oyente] = 912;
								AccionesRol(playerid, 0, "contestó la llamada de emergencia.");
								return 1;
							}
						}
						_ordenador(playerid);
						_Mensaje(playerid, 4, "b00000", " Parece no haber llamadas entrantes.");
				}
				case 4: {
						new _dialog1[3000], _dialog2[300], so_s;
						strcat(_dialog1, "{ffffff}Listado:\n\n");
						foreach(Player, _i) if (user[_i][jEstrellas] != 0) {

							format(_dialog2, sizeof(_dialog2), "{ffffff}Nombre completo: %s | Nivel de búsqueda: %d\n", NombreJugador(_i), user[_i][jEstrellas]);
							strcat(_dialog1, _dialog2);
							++so_s;

						}
						if (so_s) {
			        		Dialog(playerid, D_PCLSPD0, DIALOG_STYLE_MSGBOX, "{b0b0b0}Sospechosos		", _dialog1, "Cerrar", "");
						} else Dialog(playerid, D_PCLSPD0, DIALOG_STYLE_MSGBOX, "{b0b0b0}Sospechosos		", "No se encuentran sospechosos en este momento", "Cerrar", "");
				}
				case 5: {
						if (user[playerid][jDivision] == 0 || user[playerid][jDivision] == 3) return _Mensaje(playerid, 0, "229", "No eres de la división PD o SD.");
						PlayerPlaySound(playerid, 1058, 0, 0, 0);
						if (SolicitaRefuerzos[playerid] == 0) {
							new Float: px, Float: py, Float: pz;
							GetPlayerPos(playerid, px, py, pz);
							SolicitaRefuerzos[playerid] = 1;
							format(string, sizeof(string), "*[CH|911|Central, S: 4A: Se avisan a las unidades operativas que el oficial (%s) requiere apoyo en su posición.", NombreJugador(playerid));
							_MensajeRfac(1, C_COLORRADIO, string, 1, 2);
							for (new i = 0; i < MAX_PLAYERS; i++) {
								if (IsPlayerConnected(i)) {
									if (Es_Faccion(i, 1) && EnServicioPD[i] == 1) {
									    if (user[i][jDivision] == 1 || user[i][jDivision] == 2) {
											SetPVarInt(i, "EnCheckPoint", 5);
											if (user[playerid][jDivision] == 1)SetPlayerMarkerForPlayer(i, playerid, 0x1229FAFF);
				    						if (user[playerid][jDivision] == 2)SetPlayerMarkerForPlayer(i, playerid, 0x00C200FF);
		   								}
									}
								}
							}
							NoRefAuto[playerid] = SetTimerEx("NoRefAutoF", 600000, false, "i", playerid);
						} else {
							SolicitaRefuerzos[playerid] = 0;
							format(string, sizeof(string), "*[CH|911|Central, S: 4A: A todas las unidades que están de apoyo, se canceló el pedido, los que estén presente esperar código 4 del superior.");
							_MensajeRfac(1, C_COLORRADIO, string, 1, 2);
							for (new i = 0; i < MAX_PLAYERS; i++) {
								if (IsPlayerConnected(i)) {
									if (Es_Faccion(i, 1) && EnServicioPD[i] == 1) {
										if (user[i][jDivision] == 1 || user[i][jDivision] == 2) {
											DisablePlayerCheckpoint(i);
											DeletePVar(i, "EnCheckPoint");
											SetPlayerMarkerForPlayer(i, playerid, 0xFFFFFF00);
										}
									}
								}
							}
							KillTimer(NoRefAuto[playerid]);
						}
				}
			}
		}
		case D_PCLSPD2:
			{
				if(!response) {
					_ordenador(playerid);
				} else {
					if(!isnumeric(inputtext)) return Dialog(playerid, D_PCLSPD2, DIALOG_STYLE_INPUT, "{D6E1EB}Búsqueda de información		", "Introduzca el documento de la persona:\n\n{ff0000} Documento inválido (coloco palabras)", "Buscar", "Cancelar");
					new x212 = strval(inputtext);
					if (x212 == 0) return Dialog(playerid, D_PCLSPD2, DIALOG_STYLE_INPUT, "{D6E1EB}Búsqueda de información		", "Introduzca el documento de la persona:\n\n{ff0000} Documento inválido (coloco número 0)", "Buscar", "Cancelar");
					foreach(Player, idjugador) if (user[idjugador][jDocumento] == x212) {
						new car[5], fly[5], boat[5], gun[5], cam[5];
						new _dialog1[3000], _dialog2[300], _dialog3[300];
						if (user[idjugador][jLicencias][0] == 1) gun = "Si";
						else gun = "No";
						if (user[idjugador][jLicencias][1] == 1) car = "Si";
						else car = "No";
						if (user[idjugador][jLicencias][2] == 1) cam = "Si";
						else cam = "No";
						if (user[idjugador][jLicencias][4] == 1) fly = "Si";
						else fly = "No";
						if (user[idjugador][jLicencias][5] == 1) boat = "Si";
						else boat = "No";

						strcat(_dialog1, "{ffffff}Resultados de búsqueda:\n\n");

						format(_dialog2, sizeof(_dialog2),
						"{ffffff}Nombre completo: %s\nEdad: %d\nTeléfono: %d\nDocumento: %d\n\n", NombreJugador(idjugador), user[idjugador][jEdad], user[idjugador][jTelefono], user[idjugador][jDocumento]);
						strcat(_dialog1, _dialog2);

						if(user[idjugador][jCasaKey] != -1)
						{
						Get2DZone(_dialog2, MAX_ZONE_NAME, InfoCasa[user[idjugador][jCasaKey]][cExteriorX], InfoCasa[user[idjugador][jCasaKey]][cExteriorY], InfoCasa[user[idjugador][jCasaKey]][cExteriorZ]);
						format(_dialog2, sizeof(_dialog2),
						"{ffffff}Casa 1: %s - %d\n\n", _dialog2, user[idjugador][jCasaKey]);
						strcat(_dialog1, _dialog2);
						}
						if(user[idjugador][jCasaKey2] != -1)
						{
						Get2DZone(_dialog2, MAX_ZONE_NAME, InfoCasa[user[idjugador][jCasaKey2]][cExteriorX], InfoCasa[user[idjugador][jCasaKey2]][cExteriorY], InfoCasa[user[idjugador][jCasaKey2]][cExteriorZ]);
						format(_dialog2, sizeof(_dialog2),
						"{ffffff}Casa 2: %s - %d\n\n", _dialog2, user[idjugador][jCasaKey2]);
						strcat(_dialog1, _dialog2);
						}

						format(_dialog2, sizeof(_dialog2),
						"{ffffff}Licencia de conducir: %s\nLicencia de vuelo: %s\nLicencia de bote: %s\nLicencia de armas: %s\nLicencia de camionero: %s\n\n", car, fly, boat, gun, cam);
						strcat(_dialog1, _dialog2);

						format(_dialog3, sizeof(_dialog3), "{b0b0b0}Información de %s		", NombreJugador(idjugador));
			        	Dialog(playerid, D_PCLSPD0, DIALOG_STYLE_MSGBOX, _dialog3, _dialog1, "Cerrar", "");
						return 1;
					}
					Dialog(playerid, D_PCLSPD2, DIALOG_STYLE_INPUT, "{D6E1EB}Búsqueda de información		", "Introduzca el documento de la persona:\n\n{ff0000} Documento inválido (user desconectado)", "Buscar", "Cancelar");
				}
			}
		case D_PCLSPD3:
			{
				if(!response) {
					_ordenador(playerid);
				} else {
					if(!isnumeric(inputtext)) return Dialog(playerid, D_PCLSPD3, DIALOG_STYLE_INPUT, "{D6E1EB}Historial delictivo		", "Introduzca el documento de la persona:\n\n{ff0000} Documento inválido (coloco palabras)", "Buscar", "Cancelar");
					new x212 = strval(inputtext);
					if (x212 == 0) return Dialog(playerid, D_PCLSPD2, DIALOG_STYLE_INPUT, "{D6E1EB}Historial delictivo		", "Introduzca el documento de la persona:\n\n{ff0000} Documento inválido (coloco número 0)", "Buscar", "Cancelar");
					foreach(Player, idjugador) if (user[idjugador][jDocumento] == x212) {
						new _dialog1[3000], _dialog2[300], _dialog3[300];

						format(_dialog2, sizeof(_dialog2),
						"{ffffff}Nombre completo: %s\n\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n\nNivel de búsqueda: %d\n\n",
						NombreJugador(idjugador),
						user[idjugador][jDelito1],
						user[idjugador][jDelito2],
						user[idjugador][jDelito3],
						user[idjugador][jDelito4],
						user[idjugador][jDelito5],
						user[idjugador][jDelito6],
						user[idjugador][jDelito7],
						user[idjugador][jDelito8],
						user[idjugador][jDelito9],
						user[idjugador][jDelito10],
						user[idjugador][jEstrellas]);
						strcat(_dialog1, _dialog2);

						format(_dialog3, sizeof(_dialog3), "{b0b0b0}Historial de %s		", NombreJugador(idjugador));
			        	Dialog(playerid, D_PCLSPD0, DIALOG_STYLE_MSGBOX, _dialog3, _dialog1, "Cerrar", "");
						return 1;
					}
					Dialog(playerid, D_PCLSPD2, DIALOG_STYLE_INPUT, "{D6E1EB}Historial delictivo		", "Introduzca el documento de la persona:\n\n{ff0000} Documento inválido (user desconectado)", "Buscar", "Cancelar");
				}
			}
		case D_PCLSPD4:
			{
				if (!response) {
					_ordenador(playerid);
				} else {
					if (!isnumeric(inputtext)) return Dialog(playerid, D_PCLSPD4, DIALOG_STYLE_INPUT, "{D6E1EB}Información de vehículo		", "Introduzca el número de matrícula del vehículo:\n\n{ff0000} Matrícula inválida (coloco palabras)", "Buscar", "Cancelar");
					new vehicleid = strval(inputtext);
					if (vehicleid != INVALID_VEHICLE_ID) {
						for(new veh = 0; veh < MAX_VEHICULOS; veh++) {
							if(InfoVehiculo[veh][vLlave] == vehicleid) {
							    new _dialog1[3000], _dialog2[300], _dialog3[300];

								format(_dialog2, sizeof(_dialog2),
								"{ffffff}Información:\n\nModelo: %s\nPropetario: %s\nMulta: %d\n\n",
								nombre_vehiculo[InfoVehiculo[veh][vModelo] - 400],
								InfoVehiculo[veh][vDueno],
								InfoVehiculo[veh][vMulta]);
								strcat(_dialog1, _dialog2);

								format(_dialog3, sizeof(_dialog3), "{b0b0b0}Matrícula LS-%d		", vehicleid);
								Dialog(playerid, D_PCLSPD0, DIALOG_STYLE_MSGBOX, _dialog3, _dialog1, "Cerrar", "");
								return 1;
							}
						}
						Dialog(playerid, D_PCLSPD4, DIALOG_STYLE_INPUT, "{D6E1EB}Información de vehículo", "Introduzca el número de matrícula del vehículo:\n\n{ff0000} Matrícula inválida (vehículo sin dueño)", "Buscar", "Cancelar");
					}
				}
			}
		case D_ELEGIRROPA:
			{
				if(!response) return 1;
				CambiarRopa(playerid, GetPVarInt(playerid, "ROPA_SELECCIONADA"), listitem);
			}
		case D_EDITARROPA:
			{
				if(!response) return 1;
				if(user[playerid][jRopaArmario][listitem] == 0) return _Mensaje(playerid, 0, "59", "No tienes nada en ese slot.");
				SetPVarInt(playerid, "ROPA_EDITAR", listitem);
				Dialog(playerid, D_EDITARROPA2, DIALOG_STYLE_LIST, "{D6E1EB}Vestuario", "Colocar ropa\nEliminar ropa", "Aceptar", "Cancelar");
			}
		case D_EDITARROPA2:
			{
				if(!response) return 1;
				new R = GetPVarInt(playerid, "ROPA_EDITAR");
				if(listitem == 0) {
					CambiarRopa(playerid, user[playerid][jRopaArmario][R], R);
				} else if(listitem == 1) {
					user[playerid][jRopaArmario][R] = 0;
					_Mensaje(playerid, 2, "0", "Ropa eliminada");
					if(GetPlayerSkin(playerid) == user[playerid][jRopa]) {
						switch(user[playerid][jSexo]) {
							case 1: Skin_(playerid, 252);
							case 2: Skin_(playerid, 140);
						}
					}
				}
			}
		case D_MUEBLES:
			{
				if(response) {
					new modelid = MuebleActual[playerid], cid = DentroCasa[playerid], price = PrecioMuebleDeCasas(modelid);
					if(RevisarDinero(playerid, price)) {
						ComprarMuebleC(playerid, cid, modelid, price);
					} else {
						MuebleActual[playerid] = 0;
						_Mensaje(playerid, 0, "86", "Cancelaste la compra del mueble.");
						return 1;
					}
				}
			}
		case D_MUEBLES2:
			{
				if(response) {
					new modelid = MuebleActual[playerid], nid = DentroNegocio[playerid], price = PrecioMuebleDeNegocios(modelid);
					if(RevisarDinero(playerid, price)) {
						ComprarMuebleN(playerid, nid, modelid, price);
					} else {
						MuebleActual[playerid] = 0;
						_Mensaje(playerid, 0, "86", "Cancelaste la compra del mueble.");
						return 1;
					}
				}
			}
		case D_MUEBLES3:
			{
				if(response) {
					new modelid = MuebleActual[playerid], gid = DentroGarage[playerid], price = random(200);
					if(RevisarDinero(playerid, price)) {
						ComprarMuebleG(playerid, gid, modelid, price);
					} else {
						MuebleActual[playerid] = 0;
						_Mensaje(playerid, 0, "86", "Cancelaste la compra del mueble.");
						return 1;
					}
				}
			}
		case D_MUEBLES4:
			{
				if(response) {
					new modelid = MuebleActual[playerid], e_id = DentroEmpresa[playerid], price = random(300);
					if(RevisarDinero(playerid, price))
					{
						ComprarMuebleE(playerid, e_id, modelid, price);
					}
					else
					{
						MuebleActual[playerid] = 0;
						_Mensaje(playerid, 0, "86", "Cancelaste la compra del mueble.");
						return 1;
					}
				}
			}
		case D_TIENDA247:
			{
				new nid = GetPlayerVirtualWorld(playerid) - 300;
				if(response == 1) {
					switch(listitem) {
						case 0: {
								if (user[playerid][jTelefono] == 0) return _Mensaje(playerid, 0, "93", "No tienes un número de teléfono asignado a tu cuenta, compra uno en una tienda de electrónica o 24/7.");
								Dialog(playerid, D_SALDO, DIALOG_STYLE_INPUT, "{D6E1EB}Cantidad de saldo", "{FFFFFF}Por favor, escribe la cantidad de saldo que desea recargar a tu teléfono.\n\n{FFFFFF}- Escribe únicamente la{00C200}CANTIDAD (EN NUMEROS){FFFFFF}.", "Aceptar", "");
							}
						case 1: {
								if(RevisarDinero(playerid, 6)) {
									new randphone = 40000 + random(69999);
									user[playerid][jTelefono] = randphone;
									format(string, sizeof(string), "Has comprado un número de teléfono.", user[playerid][jTelefono]);
									_Mensaje(playerid, 2, "0", string);
									if(user[playerid][jPremium] == 0) _Pagar(playerid, nid, 6);
									else _Pagar(playerid, nid, 4), _Mensaje(playerid, 4, "C93CCE", "Descuento premium! precio original $6, a ti te costó $4.");
								}
							}
						case 2: {
								if(RevisarDinero(playerid, 10)) {
									new movil24[9]; movil24[0] = 18865; movil24[1] = 18866; movil24[2] = 18867; movil24[3] = 18868;
									movil24[4] = 18869; movil24[5] = 18870; movil24[6] = 18871; movil24[7] = 18872; movil24[8] = 18873;
									ShowModelSelectionMenuEx(playerid, movil24, 9, "Modelos", D_MODELOS);
								}
							}
						case 3: {
								if(RevisarDinero(playerid, 2)) {
									Dialog(playerid, D_LOTERIA, DIALOG_STYLE_INPUT, "{D6E1EB}Loteria Nacional", "Inserta un número entre 1 y 120. Éxitos!", "Comprar", "Cancelar");
									_Pagar(playerid, nid, 2);
								}
							}
						case 4: {
								if(RevisarDinero(playerid, 4)) {
									new objeto = 88;
									if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
									if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, objeto); user[playerid][jm_Derecha] = objeto, user[playerid][jm_DerechaCant] = 5;}
									else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, objeto); user[playerid][jm_Izquierda] = objeto, user[playerid][jm_IzquierdaCant] = 5;}
									_Mensaje(playerid, 2, "0", "Has comprado una caja de cigarro, comandos: /fumar - /cfumar");
									_Pagar(playerid, nid, 4);
								}
							}
						case 5: {
								if(RevisarDinero(playerid, 12)) {
									new objeto = 38;
									if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
									if(user[playerid][jm_Derecha] == 0){
									PonerObjeto(playerid, 1, objeto);
									user[playerid][jm_Derecha] = objeto;
									user[playerid][jm_DerechaCant] = 30;
									if (InfoObjeto[objeto][IDArma] > 0) { _GiveWeapon(playerid, InfoObjeto[objeto][IDArma], 30); } }
									else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, objeto); user[playerid][jm_Izquierda] = objeto, user[playerid][jm_IzquierdaCant] = 30;}
									_Mensaje(playerid, 2, "0", "Has comprado una cámara.");
									if(user[playerid][jPremium] == 0) _Pagar(playerid, nid, 12);
									else _Pagar(playerid, nid, 10), _Mensaje(playerid, 4, "C93CCE", "Descuento premium! precio original $12, a ti te costó $10.");
								}
							}
						case 6: {
								if(RevisarDinero(playerid, 3)) {
									new objeto = 87;
									if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
									if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, objeto); user[playerid][jm_Derecha] = objeto, user[playerid][jm_DerechaCant] = 10;}
									else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, objeto); user[playerid][jm_Izquierda] = objeto, user[playerid][jm_IzquierdaCant] = 10;}
									_Mensaje(playerid, 2, "0", "Has comprado un encendedor.");
									_Pagar(playerid, nid, 3);
								}
							}
						case 7: {
								if(ComprobarDineroJ(playerid) < 4) { _Mensaje(playerid, 0, "32", "No tienes suficiente dinero."); return 1; }
								new objeto = 93;
								if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
								if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, objeto); user[playerid][jm_Derecha] = objeto, user[playerid][jm_DerechaCant] = 1;}
								else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, objeto); user[playerid][jm_Izquierda] = objeto, user[playerid][jm_IzquierdaCant] = 1;}
								_Pagar(playerid, nid, 4);
							}
						case 8: {
								if(ComprobarDineroJ(playerid) < 1) { _Mensaje(playerid, 0, "32", "No tienes suficiente dinero."); return 1; }
								new objeto = 95;
								if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
								if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, objeto); user[playerid][jm_Derecha] = objeto, user[playerid][jm_DerechaCant] = 1;}
								else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, objeto); user[playerid][jm_Izquierda] = objeto, user[playerid][jm_IzquierdaCant] = 1;}
								_Pagar(playerid, nid, 1);
							}
						case 9: {
								if(ComprobarDineroJ(playerid) < 2) { _Mensaje(playerid, 0, "32", "No tienes suficiente dinero."); return 1; }
								new objeto = 90;
								if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
								if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, objeto); user[playerid][jm_Derecha] = objeto, user[playerid][jm_DerechaCant] = 3;}
								else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, objeto); user[playerid][jm_Izquierda] = objeto, user[playerid][jm_IzquierdaCant] = 3;}
								_Pagar(playerid, nid, 2);
							}
						case 10: {
								if(ComprobarDineroJ(playerid) < 2) { _Mensaje(playerid, 0, "32", "No tienes suficiente dinero."); return 1; }
								new objeto = 91;
								if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
								if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, objeto); user[playerid][jm_Derecha] = objeto, user[playerid][jm_DerechaCant] = 3;}
								else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, objeto); user[playerid][jm_Izquierda] = objeto, user[playerid][jm_IzquierdaCant] = 3;}
								_Pagar(playerid, nid, 2);
							}
						case 11: {
								if(ComprobarDineroJ(playerid) < 2) { _Mensaje(playerid, 0, "32", "No tienes suficiente dinero."); return 1; }
								new objeto = 92;
								if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
								if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, objeto); user[playerid][jm_Derecha] = objeto, user[playerid][jm_DerechaCant] = 3;}
								else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, objeto); user[playerid][jm_Izquierda] = objeto, user[playerid][jm_IzquierdaCant] = 3;}
								_Pagar(playerid, nid, 2);
							}
						case 12: {
								if(ComprobarDineroJ(playerid) < 3) { _Mensaje(playerid, 0, "32", "No tienes suficiente dinero."); return 1; }
								new objeto = 83;
								if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
								if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, objeto); user[playerid][jm_Derecha] = objeto, user[playerid][jm_DerechaCant] = 3;}
								else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, objeto); user[playerid][jm_Izquierda] = objeto, user[playerid][jm_IzquierdaCant] = 3;}
								_Pagar(playerid, nid, 3);
							}
						case 13: {
								if(ComprobarDineroJ(playerid) < 3) { _Mensaje(playerid, 0, "32", "No tienes suficiente dinero."); return 1; }
								new objeto = 125;
								if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
								if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, objeto); user[playerid][jm_Derecha] = objeto, user[playerid][jm_DerechaCant] = 2;}
								else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, objeto); user[playerid][jm_Izquierda] = objeto, user[playerid][jm_IzquierdaCant] = 2;}
								_Pagar(playerid, nid, 3);
							}
					}
				}
			}
		case D_LOTERIA:
			{
				if(response == 1) {
					new lenght = strlen(inputtext);
					if(lenght > 0 && lenght < 4) {
						user[playerid][jLoteria] = strval(inputtext);
						format(string, sizeof string, "Has comprado el boleta número %d, muchos éxitos.", user[playerid][jLoteria]);
						_Mensaje(playerid, 2, "0", string);
					}
				}
			}
		case D_ROPA:
		{
			if (response) //skins
			{
				if(user[playerid][jSexo] == 1) ShowModelSelectionMenu(playerid, SkinsHombre, "Ropa de hombre");
				else if(user[playerid][jSexo] == 2) ShowModelSelectionMenu(playerid, SkinsMujer, "Ropa de mujer");
			}
			else //accesorios
			{
				Dialog(playerid, D_COMPRARTOY, DIALOG_STYLE_MSGBOX, "{D6E1EB}Tienda de accesorios", "\n{ffffff}A continuación debes elegir la..\nranura donde quieres el {00a2ff}accesorio{ffffff}.\n\n   - Recuerda que cada {00a2ff}accesorio{ffffff} tiene un precio de {00c200}18{ffffff}$.\n\n", "Continuar", "Cancelar"); //- Accesorios
			}
		}
		case D_RESTAURANTES:
			{
				new nid = GetPlayerVirtualWorld(playerid) - 300;
				if(response == 1) {
					switch(listitem) {
						case 0: _Gastar(playerid, nid, 2, 96, 1); //- Botella de cerveza
						case 1: _Gastar(playerid, nid, 3, 97, 1); //- Copa de vino
						case 2: _Gastar(playerid, nid, 4, 98, 1); //- Vaso de whisky
						case 3: _Gastar(playerid, nid, 5, 99, 1); //- Vaso de ron
						case 4: _Gastar(playerid, nid, 3, 100, 1); //- Kids meal
						case 5: _Gastar(playerid, nid, 2, 91, 1); //- Bolsa patatas
						case 6: _Gastar(playerid, nid, 2, 101, 2); //- Burrito
						case 7: _Gastar(playerid, nid, 4, 102, 2); //- Pizza jamón y queso
						case 8: _Gastar(playerid, nid, 4, 101, 1); //- Parilla vegetariana
					}
				}
			}
		case D_CLUCKINBELL:
			{
				new nid = GetPlayerVirtualWorld(playerid) - 300;
				if(response == 1) {
					switch(listitem) {
						case 0: _Gastar(playerid, nid, 2, 101, 1); //- The Little
						case 1: _Gastar(playerid, nid, 2, 101, 2); //- Cluker
						case 2: _Gastar(playerid, nid, 3, 100, 1); //- Kids Meal
						case 3: _Gastar(playerid, nid, 4, 100, 2); //- Cluker Mediana
						case 4: _Gastar(playerid, nid, 5, 100, 3); //- Super Cluker
						case 5: _Gastar(playerid, nid, 3, 100, 2); //- Cluker' Bell + Coca Cola
						case 6: _Gastar(playerid, nid, 4, 100, 3); //- Especial Bell
					}
				}
			}
		case D_BURGERSHOT:
			{
				new nid = GetPlayerVirtualWorld(playerid) - 300;
				if(response == 1) {
					switch(listitem) {
						case 0: _Gastar(playerid, nid, 2, 100, 1); //- Simple Shot
						case 1: _Gastar(playerid, nid, 3, 100, 2); //- Doble Barreled
						case 2: _Gastar(playerid, nid, 4, 100, 3); //- Buckshot Especial
						case 3: _Gastar(playerid, nid, 2, 101, 1); //- Parilla vegetariana
						case 4: _Gastar(playerid, nid, 5, 100, 4); //- Filete de Mariscos
						case 5: _Gastar(playerid, nid, 3, 101, 2); //- Pollo Bits
					}
				}
			}
		case D_PIZZASTACK:
			{
				new nid = GetPlayerVirtualWorld(playerid) - 300;
				if(response == 1) {
					switch(listitem) {
						case 0: _Gastar(playerid, nid, 2, 102, 1); //- The Bustert
						case 1: _Gastar(playerid, nid, 3, 102, 2); //- The Double D-Lux
						case 2: _Gastar(playerid, nid, 3, 102, 2); //- The Full Rack
						case 3: _Gastar(playerid, nid, 4, 102, 3); //- Pizza Jamon y Queso
						case 4: _Gastar(playerid, nid, 5, 102, 3); //- Pizza Completa + Coca Cola
						case 5: _Gastar(playerid, nid, 4, 102, 2); //- Plato Del Hoy
						case 6: _Gastar(playerid, nid, 6, 102, 4); //- Especial Pizza Familiar
					}
				}
			}
		case D_NEG_CLUBS:
			{
				new nid = GetPlayerVirtualWorld(playerid) - 300;
				if(response == 1) {
					switch(listitem) {
						case 0: _Gastar(playerid, nid, 2, 95, 1); //- Agua
						case 1: _Gastar(playerid, nid, 15, 97, 1); //- Copa de vino
						case 2: _Gastar(playerid, nid, 20, 98, 1); //- Vaso de whisky
						case 3: _Gastar(playerid, nid, 14, 99, 1); //- Vaso de ron
						case 4: _Gastar(playerid, nid, 8, 96, 2); //- Cerveza
						case 5: _Gastar(playerid, nid, 100, 104, 10); //- Botella de whisky
						case 6: _Gastar(playerid, nid, 20, 88, 8); //- Cigarros
						case 7: _Gastar(playerid, nid, 10, 87, 10); //- Encendedor
						case 8: _Gastar(playerid, nid, 6, 101, 1); //- Burrito
						case 9: _Gastar(playerid, nid, 85, 105, 10); //- Botella de vino
						case 10: _Gastar(playerid, nid, 81, 103, 10); //- Botella de ron
					}
				}
			}
		case D_SEXSHOP:
			{
				if(response == 1) {
					switch(listitem) {
						case 0: if(RevisarDinero(playerid, 15)) Dialog(playerid, D_SEXSHOP3, DIALOG_STYLE_LIST, "{D6E1EB}Ropa sexual de mujer", "{ffffff}Ropa de Sexo 1\nRopa de Sexo 2\nRopa de Sexo 3\nRopa de Sexo 4\nRopa de Sexo 5\nRopa de Sexo 6\nRopa de Sexo 7\nRopa de Sexo 8", "Seleccionar", "Cancelar");
						case 1: if(RevisarDinero(playerid, 15)) Dialog(playerid, D_SEXSHOP2, DIALOG_STYLE_LIST, "{D6E1EB}Ropa sexual de hombre", "{ffffff}Ropa de Sexo 1\nRopa de Sexo 2\nRopa de Sexo 3\nRopa de Sexo 4", "Seleccionar", "Cancelar");
						case 2: if(RevisarDinero(playerid, 15)) Dialog(playerid, D_SEXSHOP4, DIALOG_STYLE_LIST, "{D6E1EB}Juguetes sexuales", "{ffffff}Dildo Doble punta\nDildo pequeño\nDildo vibrador\nDildo vibrador pequeño", "Seleccionar", "Cancelar");
					}
				}
			}
		case D_SEXSHOP2:
			{
				if(response) {
					new nid = GetPlayerVirtualWorld(playerid) - 300;
					switch(listitem) {
						case 0: ElegirRopa(playerid, 18);
						case 1: ElegirRopa(playerid, 97);
						case 2: ElegirRopa(playerid, 154);
						case 3: ElegirRopa(playerid, 252);
					}
					_Mensaje(playerid, 5, "0", "Has comprado un traje de sexo masculino.");
					if(user[playerid][jPremium] == 0) _Pagar(playerid, nid, 15);
					else _Pagar(playerid, nid, 12), _Mensaje(playerid, 4, "C93CCE", "Descuento premium! precio original $15, a ti te costó $12.");
					return 1;
				}
			}
		case D_SEXSHOP3:
			{
				if(response) {
					new nid = GetPlayerVirtualWorld(playerid) - 300;
					switch(listitem) {
						case 0: ElegirRopa(playerid, 63);
						case 1: ElegirRopa(playerid, 75);
						case 2: ElegirRopa(playerid, 85);
						case 3: ElegirRopa(playerid, 87);
						case 4: ElegirRopa(playerid, 152);
						case 5: ElegirRopa(playerid, 178);
						case 6: ElegirRopa(playerid, 256);
						case 7: ElegirRopa(playerid, 257);
					}
					_Mensaje(playerid, 5, "0", "Has comprado un traje de sexo femenino.");
					if(user[playerid][jPremium] == 0) _Pagar(playerid, nid, 15);
					else _Pagar(playerid, nid, 12), _Mensaje(playerid, 4, "C93CCE", "Descuento premium! precio original $15, a ti te costó $12.");
					return 1;
				}
			}
		case D_SEXSHOP4:
			{
				new nid = GetPlayerVirtualWorld(playerid) - 300;
				if(response == 1) {
					switch(listitem) {
						case 0: _Gastar(playerid, nid, 10, 10, 1); //- dildo
						case 1: _Gastar(playerid, nid, 8, 11, 1); //- dildo
						case 2: _Gastar(playerid, nid, 12, 12, 1); //- dildo
						case 3: _Gastar(playerid, nid, 8, 13, 1); //- dildo
					}
				}
			}
		case D_GASOLINERA:
			{
				new nid = GetPlayerVirtualWorld(playerid) - 300;
				if(response == 1)
				{
					switch(listitem)
					{
						case 0: _Gastar(playerid, nid, 3, 89, 1); //- bidón de gasolina
						case 1: _Gastar(playerid, nid, 2, 91, 1); //- -
						case 2: _Gastar(playerid, nid, 2, 93, 1); //- -
						case 3: _Gastar(playerid, nid, 3, 88, 5); //- -
						case 4: _Gastar(playerid, nid, 3, 88, 5); //- -
						case 5:
						{
							if(RevisarDinero(playerid, 50))
							{
								_Mensaje(playerid, 4, "33CCFF", "Compraste unas piezas de recambio, comandos: /repararveh.");
								Compra(playerid, 50);
								i_Negocio[nid][nDinero] += 50;
								i_Negocio[nid][nProductos]--;
								ObjetosRep[playerid] = 1;
								return 1;
							}
						}
					}
				}
			}
		case D_EQUIPOLSED: {
                if(response) {
                    switch(listitem) {
                        case 0: {
                                new obj = 37;
                                if (user[playerid][jm_Derecha] > 0 && user[playerid][jm_Izquierda] > 0) return _Mensaje(playerid, 0, "9", "Debes tener una mano vacía.");
                    			if (user[playerid][jm_Derecha] == 0) {
                    			    user[playerid][jm_Derecha] = obj;
                    			    user[playerid][jm_DerechaCant] = InfoObjeto[obj][Capacidad];
                    			    PonerObjeto(playerid, 1, obj);
                    			    if (InfoObjeto[obj][IDArma] > 0) { _GiveWeapon(playerid, InfoObjeto[obj][IDArma], InfoObjeto[obj][Capacidad]); }
                    			} else if (user[playerid][jm_Derecha] != 0) {
                    			    user[playerid][jm_Izquierda] = obj;
                    			    user[playerid][jm_IzquierdaCant] = InfoObjeto[obj][Capacidad];
                    			    PonerObjeto(playerid, 2, obj);
                    			}
                               	AccionesRol(playerid, 0, "toma un extintor del armario.");
                                return 1;
                            }
                        case 1: {
                                new UniformesES[10]; UniformesES[0] = 275; UniformesES[1] = 276; UniformesES[2] = 274; UniformesES[3] = 277;
								UniformesES[4] = 279; UniformesES[5] = 278; UniformesES[6] = 70; UniformesES[7] = 311; UniformesES[8] = 309; UniformesES[9] = 61;
                                ShowModelSelectionMenuEx(playerid, UniformesES, 10, "Uniformes", D_UNIFORMESES);
                            }
						case 2: Sangre_(playerid, 100);
						case 3: SetPlayerSkin(playerid, user[playerid][jRopa]);
						case 4:
						{
							if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0) return _Mensaje(playerid, 0, "9", "Debes tener una mano vacía.");
							if(user[playerid][jm_Derecha] == 0)
							{
							    user[playerid][jm_Derecha] = 130;
							    user[playerid][jm_DerechaCant] = 1;
							    PonerObjeto(playerid, 1, 130);
							}
							else
							{
							    user[playerid][jm_Izquierda] = 130;
							    user[playerid][jm_IzquierdaCant] = 1;
							    PonerObjeto(playerid, 2, 130);
							}
						}
                    }
                }
            }
      case D_EQUIPOSAN: {
                if(response == 1) {
                    switch(listitem) {
                        case 0: {
	                            if (user[playerid][jm_Derecha] > 0 && user[playerid][jm_Izquierda] > 0) return _Mensaje(playerid, 0, "9", "Debes tener una mano vacía.");
	                            if (user[playerid][jm_Derecha] == 0) {
	                                user[playerid][jm_Derecha] = 38;
	                                user[playerid][jm_DerechaCant] = 100;
	                                PonerObjeto(playerid, 1, 38);
	                                if (InfoObjeto[38][IDArma] > 0) { _GiveWeapon(playerid, InfoObjeto[38][IDArma], 100); }
	                                return 1;
	                            } else if (user[playerid][jm_Derecha] != 0) {
	                                user[playerid][jm_Izquierda] = 38;
	                                user[playerid][jm_IzquierdaCant] = 100;
	                                PonerObjeto(playerid, 2, 38);
	                                return 1;
	                            }
							}
                        case 1: Sangre_(playerid, 100);
                        case 2: {
                            	new UniformesSAN[7]; UniformesSAN[0] = 189; UniformesSAN[1] = 40; UniformesSAN[2] = 217;
								UniformesSAN[3] = 211; UniformesSAN[4] = 223; UniformesSAN[5] = 171; UniformesSAN[6] = 290;
                                ShowModelSelectionMenuEx(playerid, UniformesSAN, 7, "Uniformes", D_UNIFORMESSAN);
                            }
						case 3: SetPlayerSkin(playerid, user[playerid][jRopa]);
                    }
                }
            }
        case D_EQUIPOALC: {
                if (!response) return _Mensaje(playerid, 2, "0", "Has cancelado el menú del gobierno.");
                switch (listitem) {
                    case 0: Sangre_(playerid, 100);
                    case 1: {
					        new UniformesALC[10]; UniformesALC[0] = 147; UniformesALC[1] = 150;
							UniformesALC[2] = 163; UniformesALC[3] = 164; UniformesALC[4] = 165; UniformesALC[5] = 166;
						    UniformesALC[6] = 223; UniformesALC[7] = 216; UniformesALC[8] = 290;  UniformesALC[9] = 305;
						    ShowModelSelectionMenuEx(playerid, UniformesALC, 10, "Uniformes", D_UNIFORMESALC);
                        }
                    case 2: {
                            if(user[playerid][jRango] < 7) return _Mensaje(playerid, 0, "124", "No eres rango 7 o superior.");
                            if (user[playerid][jm_Derecha] > 0 && user[playerid][jm_Izquierda] > 0) return _Mensaje(playerid, 0, "9", "Debes tener una mano vacía.");
                            if (user[playerid][jm_Derecha] == 0) {
                                user[playerid][jm_Derecha] = 72;
                                user[playerid][jm_DerechaCant] = 100;
                                PonerObjeto(playerid, 1, 72);
                                return 1;
                            } else if (user[playerid][jm_Derecha] != 0) {
                                user[playerid][jm_Izquierda] = 72;
                                user[playerid][jm_IzquierdaCant] = 100;
                                PonerObjeto(playerid, 2, 72);
                                return 1;
                            }
                        }
                    case 3: SetPlayerSkin(playerid, user[playerid][jRopa]);
                }
            }
        case D_EQUIPOLSPD1: {
                if(response) {
                    if(listitem == 0) { //- Servicio
                        if(EnServicioPD[playerid] == 0) {
                            AccionesRol(playerid, 0, "termina de vestirse y acto seguido se coloca su chaleco kevlar para comenzar su servicio.");
                            Chaleco_(playerid, 350.0);
                            Sangre_(playerid, 100);
                            EnServicioPD[playerid] = 1;
                        } else if(EnServicioPD[playerid] == 1) {
                            AccionesRol(playerid, 0, "se quita su chaleco kevlar y acto seguido va cambiándose de ropa después de una jornada de servicio.");
                            user[playerid][jm_Derecha] = 0;
                            user[playerid][jm_DerechaCant] = 0;
                            user[playerid][jm_Izquierda] = 0;
                            user[playerid][jm_IzquierdaCant] = 0;
                            RemovePlayerAttachedObject(playerid, 6);
                            RemovePlayerAttachedObject(playerid, 7);
                            ResetPlayerWeapons(playerid);
                            Chaleco_(playerid, 0.0);
                            EnServicioPD[playerid] = 0;
                        }
                    } else if(listitem == 1){ //- Armería
                        new cadena[500];
                        strcat(cadena, "Chaleco Antibalas\n"); //Lista 1
                        strcat(cadena, "Nightstick\n");
                        strcat(cadena, "Gas Pimienta\n");
                        strcat(cadena, "Táser\n");
                        strcat(cadena, "Pistola Glock\n");
                        strcat(cadena, "Cargador Glock\n");
                        strcat(cadena, "Pistola Magnum Eagle .90\n");
                        strcat(cadena, "Cargador Magnum Eagle .90\n");
                        strcat(cadena, "Escopeta Remington 870\n");
                        strcat(cadena, "Cartuchos Rmgton.870\n");
                        strcat(cadena, "Cargador MP5 Heckler\n");
                        strcat(cadena, "Subfusil MP5 Heckler\n");
                        strcat(cadena, "Fusil M4Al CM518\n");
                        strcat(cadena, "Fusil M4Al CM518\n");
                        strcat(cadena, "Granada de Humo\n");
                        strcat(cadena, "Esposas\n");
                        strcat(cadena, "Rifle Weihrauch HW 97\n");
                        strcat(cadena, "Cargador Weihrauch HW 97\n");
                        strcat(cadena, "Sniper AS. Gran precisión. \n");
                        strcat(cadena, "Alcoholimetro Tráfico\n");
						strcat(cadena, "Botiquin Emergencias\n");
                        if(Es_Faccion(playerid, 1)) Dialog(playerid, D_EQUIPOLSPD2, 2, "Armería", cadena, "Seleccionar", "Cancelar");
                    } else if(listitem == 2){ //- Uniformes
                        new UniformesPD[21];
                        UniformesPD[0] = 71; UniformesPD[1] = 141; UniformesPD[2] = 280; UniformesPD[3] = 266; UniformesPD[4] = 281;
                        UniformesPD[5] = 265; UniformesPD[6] = 267; UniformesPD[7] = 284; UniformesPD[8] = 285; UniformesPD[9] = 282;
                        UniformesPD[10] = 283; UniformesPD[11] = 288; UniformesPD[12] = 300; UniformesPD[13] = 301; UniformesPD[14] = 302;
						UniformesPD[15] = 306; UniformesPD[16] = 307; UniformesPD[17] = 309; UniformesPD[18] = 310; UniformesPD[19] = 311;
						UniformesPD[20] = user[playerid][jRopa];
		                ShowModelSelectionMenuEx(playerid, UniformesPD, 21, "Uniformes", D_UNIFORMESPD);
                    } else if(listitem == 3){ //- Accessorios
                        Dialog(playerid, D_COMPRARTOYPD, DIALOG_STYLE_MSGBOX, "{D6E1EB}Accessorios", "Bienvenido al casillero de accesorios", "Continuar", "Cancelar");
                    } else if(listitem == 4){ //- Ropa normal
                        Dialog(playerid, D_EQUIPOLSPD3, DIALOG_STYLE_INPUT, "{D6E1EB}Menú de ropa","Introduce el ID de ropa a colocar.", "Siguiente", "Cancelar");
                    }
                }
            }
          /* 	case P_CAMIONERO: {
                if(response == 1) {
                    switch(listitem) {
                        case 0: {
                                if(enrecocamion1[playerid] == 1) return _Mensaje(playerid, 4, "FFE900", "[Jefe de Tráfico]: {FFFFFF} ¡Ya tienes una carga!");
                                {
   	                                new vehiculo = GetPlayerVehicleID(playerid);
	                                if (!Camionero_Vehicle(vehiculo)) return _Mensaje(playerid, 4, "FFE900", "[Jefe de Tráfico]: {ffffff} Sé rápido al descargarlo. ");
	                                if(GetVehicleModel(vehiculo) == 499)
	                                SetPlayerCheckpoint(playerid, 1221.680541, 303.388549, 19.554687,4);
	                                enrecocamion1[playerid] = 1;
	                                GameTextForPlayer(playerid,"~w~Camion ~g~Cargado por los empleados...",12000,3);
	                                _Mensaje(playerid, 4, "FFE900", "[Jefe de Tráfico]: {ffffff} Haz la entrega de los palets de medicinas al destino requerido.");
	                                _Mensaje(playerid, 4, "ADC3E7", "[Servidor Información]: {ffffff} (Cuando llegues al CheckPoint) usa {FFE900}/descargar{FFFFFF} Para seguir el recorrido.");
	                                return 1;
	                            }
					        }
						case 1: {
                                if(enrecocamion2[playerid] == 1) return _Mensaje(playerid, 4, "FFE900", "[Jefe de Tráfico]: {FFFFFF} ¡Ya tienes una carga!");
                                {
   	                                new vehiculo = GetPlayerVehicleID(playerid);
	                                if (!Camionero_Vehicle(vehiculo)) return _Mensaje(playerid, 4, "FFE900", "[Jefe de Tráfico]: {ffffff} Sé rápido al descargarlo.");
	                                if(GetVehicleModel(vehiculo) == 499)
	                                SetPlayerCheckpoint(playerid, 1381.692016, 11.717464, 34.183998,4);
	                                enrecocamion2[playerid] = 1;
	                                GameTextForPlayer(playerid,"~w~Camion ~g~Cargado por los empleados...",12000,3);
	                                _Mensaje(playerid, 4, "FFE900", "[Jefe de Tráfico]:{ffffff} Haz la entrega de los palets de chalecos a la comisaría al destino requerido.");
	                                _Mensaje(playerid, 4, "ADC3E7", "[Servidor Información]: {ffffff} (Cuando llegues al CheckPoint) usa {FFE900}/descargar{FFFFFF} Para seguir el recorrido.");
	                                return 1;
	                            }
							}
						case 2: {
                                if(enrecocamion3[playerid] == 1) return _Mensaje(playerid, 4, "FFE900", "[Jefe de Tráfico]: {FFFFFF} ¡Ya tienes una carga!");
                                {
   	                                new vehiculo = GetPlayerVehicleID(playerid);
	                                if (!Camionero_Vehicle(vehiculo)) return _Mensaje(playerid, 4, "FFE900", "[Jefe de Tráfico]: {ffffff} ¿Sé rápido al descargarlo.");
	                                if(GetVehicleModel(vehiculo) == 499)
	                                SetPlayerCheckpoint(playerid, 2278.222412, 63.559417, 26.484375,4);
	                                enrecocamion3[playerid] = 1;
	                                GameTextForPlayer(playerid,"~w~Camion ~g~Cargado por los empleados...",12000,3);
	                                _Mensaje(playerid, 4, "FFE900", "[Jefe de Tráfico]: {ffffff} Está entrega es especial tu no des mucha información... llevala al destino requerido.");
	                                _Mensaje(playerid, 4, "ADC3E7", "[Servidor Información]: {ffffff} (Cuando llegues al CheckPoint) usa {FFE900}/descargar{FFFFFF} Para seguir el recorrido.");
	                                return 1;
	                            }
							}
                       }
                  }
             } */
        case D_EQUIPOLSPD3: {
 			if(response) {
	 	        new skinid = strval(inputtext);
 		        if(!SeleccionSkin(skinid)) return _Mensaje(playerid, 0, "124", "Selección de skin del 1 al 311.");
				user[playerid][jRopa] = skinid;
				SetPlayerSkin(playerid, user[playerid][jRopa]);
			}
		}
        case D_EQUIPOLSPD2: {
                if(!response) { return 1; }
                new obj;
                switch(listitem) {
                    case 0: { //- Chaleco antibalas
                            AccionesRol(playerid, 0, "coge un chaleco antibalas.");
                            Chaleco_(playerid, 350.0);
                            return 1;
                        }
                    case 1: obj = 3;
                    case 2: obj = 36;
                    case 3: obj = 40;
                    case 4: obj = 19;
                    case 5: obj = 41;
                    case 6:
                     {
					    if (user[playerid][jRango] < 2) return _Mensaje(playerid, 0, "124", "No eres rango 2 o superior.");
					    obj = 21;
					}
                    case 7: obj = 42;
                    case 8: {
					   	if (user[playerid][jRango] < 2) return _Mensaje(playerid, 0, "124", "No eres rango 2 o superior.");
					    obj = 22;
					}
                    case 9: {
					    if (user[playerid][jRango] < 4) return _Mensaje(playerid, 0, "124", "No eres rango 4 o superior.");
					    obj = 49;
					}
                    case 10: {
					    if (user[playerid][jRango] < 4) return _Mensaje(playerid, 0, "124", "No eres rango 4 o superior.");
					    obj = 26;
					}
                    case 11: {
					    if (user[playerid][jRango] < 4) return _Mensaje(playerid, 0, "124", "No eres rango 4 o superior.");
					    obj = 44;
					}
                    case 12: {
					    if (user[playerid][jRango] < 4) return _Mensaje(playerid, 0, "124", "No eres rango 4 o superior.");
					    obj = 28;
					}
                    case 13: {
					    if (user[playerid][jRango] < 4) return _Mensaje(playerid, 0, "124", "No eres rango 4 o superior.");
					    obj = 47;
					}
                    case 14: obj = 17;
                    case 15: obj = 73;
                    case 16: {
					    if (user[playerid][jRango] < 3) return _Mensaje(playerid, 0, "124", "No eres rango 3 o superior.");
					    obj = 31;
					}
                    case 17: {
					    if (user[playerid][jRango] < 3) return _Mensaje(playerid, 0, "124", "No eres rango 3 o superior.");
					    obj = 48;
					}
					case 18:{
					    if (user[playerid][jRango] < 2) return _Mensaje(playerid, 0, "124", "No eres rango 2 o superior.");
						obj = 109;
					}
					case 19:{
					    if (user[playerid][jRango] < 1) return _Mensaje(playerid, 0, "124", "No eres rango 1 o superior.");
						obj = 129;
					}
					case 20:{
					    if (user[playerid][jRango] < 1) return _Mensaje(playerid, 0, "124", "No eres rango 1 o superior.");
						obj = 130;
					}
                }
                if(obj == 3 || obj == 38 || obj == 19 || obj == 21 || obj == 109) { //- Si ya tiene un objeto así
                    for(new x = 0; x < 10; x++) {
                        if(user[playerid][jBolsillo][x] == obj) {
                            _Mensaje(playerid, 0, "9", "Solo puedes llevar un arma de ese tipo.");
                            return 1;
                        }
                    }
                }
                if(obj == 22 || obj == 26 || obj == 28 || obj == 30 || obj == 31 || obj == 109) { //- Si posee arma grande
                    if(user[playerid][jm_Derecha] == obj || user[playerid][jm_Izquierda] == obj || user[playerid][jEspalda]) {
                        _Mensaje(playerid, 0, "9", "Ya portas un arma grande de este tipo.");
                        return 1;
                    }
                }
                if(obj == 22 || obj == 26 || obj == 28 || obj == 30 || obj == 31 || obj == 109) { //- Cede arma grande
                    if(user[playerid][jEspalda] == 0) {
                        user[playerid][jEspalda] = obj;
                        user[playerid][jEspaldaCant] = InfoObjeto[obj][Capacidad];
                        format(string, sizeof(string), "%s coge un(a) %s de la armería.", NombreJugador(playerid), InfoObjeto[obj][NombreObjeto]);
                        ProxDetector(15.0, playerid, string, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF);
                        PonerObjeto(playerid, 3, obj);
                        return 1;
                    } else if(user[playerid][jm_Derecha] == 0) {
                        user[playerid][jm_Derecha] = obj;
                        user[playerid][jm_DerechaCant] = InfoObjeto[obj][Capacidad];
                        format(string, sizeof(string), "%s coge un(a) %s de la armería.", NombreJugador(playerid), InfoObjeto[obj][NombreObjeto]);
                        ProxDetector(15.0, playerid, string, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF);
                        PonerObjeto(playerid, 1, obj);
                        return 1;
                    } else if(user[playerid][jm_Izquierda] == 0) {
                        user[playerid][jm_Izquierda] = obj;
                        user[playerid][jm_IzquierdaCant] = InfoObjeto[obj][Capacidad];
                        format(string, sizeof(string), "%s coge un(a) %s de la armería.", NombreJugador(playerid), InfoObjeto[obj][NombreObjeto]);
                        ProxDetector(15.0, playerid, string, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF);
                        PonerObjeto(playerid, 2, obj);
                        return 1;
                    }
                }
				else
				{
                    for(new x = 0; x < 10; x++)
					{
                        if(user[playerid][jBolsillo][x] == 0)
						{
                            user[playerid][jBolsillo][x] = obj;
                            user[playerid][jBolsilloCant][x] = InfoObjeto[obj][Capacidad];
                            format(string, sizeof(string), "%s coge un(a) %s de la armería.", NombreJugador(playerid), InfoObjeto[obj][NombreObjeto]);
                            ProxDetector(15.0, playerid, string, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF);
                            return 1;
                        }
                    }
                }
            }
        case D_EQUIPOLSPD4: {
                if(!response) { return 1; }
                new obj;
                switch(listitem) {
                    case 0: { //- Chaleco antibalas
                            AccionesRol(playerid, 0, "coge un chaleco antibalas.");
                            Chaleco_(playerid, 350.0);
                            return 1;
                        }
                    case 1: obj = 3;
                    case 2: obj = 36;
                    case 3: obj = 40;
                    case 4: obj = 19;
                    case 5: obj = 41;
                    case 6: obj = 21;
                    case 7: obj = 42;
                    case 8: {
					    if (user[playerid][jRango] < 2) return _Mensaje(playerid, 0, "124", "No eres rango 2 o superior.");
						obj = 22;
					}
                    case 9: {
					    if (user[playerid][jRango] < 2) return _Mensaje(playerid, 0, "124", "No eres rango 2 o superior.");
						obj = 49;
					}
                    case 10: {
					    if (user[playerid][jRango] < 2) return _Mensaje(playerid, 0, "124", "No eres rango 2 o superior.");
						obj = 26;
					}
                    case 11: {
					    if (user[playerid][jRango] < 2) return _Mensaje(playerid, 0, "124", "No eres rango 2 o superior.");
						obj = 44;
					}
                    case 12: {
					    if (user[playerid][jRango] < 2) return _Mensaje(playerid, 0, "124", "No eres rango 2 o superior.");
						obj = 28;
					}
                    case 13: {
					    if (user[playerid][jRango] < 2) return _Mensaje(playerid, 0, "124", "No eres rango 2 o superior.");
						obj = 47;
					}
                    case 14: obj = 17;
                    case 15: obj = 73;
                    case 16: {
					    if (user[playerid][jRango] < 2) return _Mensaje(playerid, 0, "124", "No eres rango 2 o superior.");
						obj = 31;
					}
                    case 17: {
					    if (user[playerid][jRango] < 2) return _Mensaje(playerid, 0, "124", "No eres rango 2 o superior.");
						obj = 48;
					}
                }
                if(obj == 3 || obj == 38 || obj == 19 || obj == 21) { //- Si ya tiene un objeto así
                    for(new x = 0; x < 10; x++) {
                        if(user[playerid][jBolsillo][x] == obj) {
                            _Mensaje(playerid, 0, "9", "Solo puedes llevar un arma de ese tipo.");
                            return 1;
                        }
                    }
                }
                if(obj == 22 || obj == 26 || obj == 28 || obj == 30 || obj == 31) { //- Si posee arma grande
                    if(user[playerid][jm_Derecha] == obj || user[playerid][jm_Izquierda] == obj || user[playerid][jEspalda]) {
                        _Mensaje(playerid, 0, "9", "Ya portas un arma grande de este tipo.");
                        return 1;
                    }
                }
                if(obj == 22 || obj == 26 || obj == 28 || obj == 30 || obj == 31) { //- Cede arma grande
                    if(user[playerid][jEspalda] == 0) {
                        user[playerid][jEspalda] = obj;
                        user[playerid][jEspaldaCant] = InfoObjeto[obj][Capacidad];
                        format(string, sizeof(string), "%s coge un(a) %s de la armería.", NombreJugador(playerid), InfoObjeto[obj][NombreObjeto]);
                        ProxDetector(15.0, playerid, string, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF);
                        PonerObjeto(playerid, 3, obj);
                        return 1;
                    } else if(user[playerid][jm_Derecha] == 0) {
                        user[playerid][jm_Derecha] = obj;
                        user[playerid][jm_DerechaCant] = InfoObjeto[obj][Capacidad];
                        format(string, sizeof(string), "%s coge un(a) %s de la armería.", NombreJugador(playerid), InfoObjeto[obj][NombreObjeto]);
                        ProxDetector(15.0, playerid, string, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF);
                        PonerObjeto(playerid, 1, obj);
                        return 1;
                    } else if(user[playerid][jm_Izquierda] == 0) {
                        user[playerid][jm_Izquierda] = obj;
                        user[playerid][jm_IzquierdaCant] = InfoObjeto[obj][Capacidad];
                        format(string, sizeof(string), "%s coge un(a) %s de la armería.", NombreJugador(playerid), InfoObjeto[obj][NombreObjeto]);
                        ProxDetector(15.0, playerid, string, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF);
                        PonerObjeto(playerid, 2, obj);
                        return 1;
                    }
                } else{ //- Cede otro objeto
                    for(new x = 0; x < 10; x++) {
                        if(user[playerid][jBolsillo][x] == 0) {
                            user[playerid][jBolsillo][x] = obj;
                            user[playerid][jBolsilloCant][x] = InfoObjeto[obj][Capacidad];
                            format(string, sizeof(string), "%s coge un(a) %s de la armería.", NombreJugador(playerid), InfoObjeto[obj][NombreObjeto]);
                            ProxDetector(15.0, playerid, string, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF);
                            return 1;
                        }
                    }
                }
            }
            case L_GUNRACK: {
                if(!response) { return 1; }
                new obj;
                switch(listitem) {
                    case 0: { //- Chaleco antibalas
                            AccionesRol(playerid, 0, "coge un chaleco antibalas.");
                            Chaleco_(playerid, 350.0);
                            return 1;
                        }
                    case 1: obj = 21;
                    case 2: obj = 22;
                    case 3: obj = 28;
                    case 4: obj = 40;
                    case 5: obj = 42;
                    case 6: obj = 21;
                    case 7: obj = 42;
                    case 8: {
					    if (user[playerid][jRango] < 8) return _Mensaje(playerid, 0, "124", "No eres rango 9 o superior.");
						obj = 22;
					}
                    case 9: {
					    if (user[playerid][jRango] < 8) return _Mensaje(playerid, 0, "124", "No eres rango 9 o superior.");
						obj = 49;
					}
                    case 10: {
					    if (user[playerid][jRango] < 8) return _Mensaje(playerid, 0, "124", "No eres rango 9 o superior.");
						obj = 26;
					}
                    case 11: {
					    if (user[playerid][jRango] < 8) return _Mensaje(playerid, 0, "124", "No eres rango 9 o superior.");
						obj = 44;
					}
                    case 12: {
					    if (user[playerid][jRango] < 9) return _Mensaje(playerid, 0, "124", "No eres rango 14 o superior.");
						obj = 28;
					}
                    case 13: {
					    if (user[playerid][jRango] < 9) return _Mensaje(playerid, 0, "124", "No eres rango 14 o superior.");
						obj = 47;
					}
                    case 14: obj = 17;
                    case 15: obj = 73;
                    case 16: {
					    if (user[playerid][jRango] < 9) return _Mensaje(playerid, 0, "124", "No eres rango 14 o superior.");
						obj = 31;
					}
                    case 17: {
					    if (user[playerid][jRango] < 9) return _Mensaje(playerid, 0, "124", "No eres rango 14 o superior.");
						obj = 48;
					}
                }
                if(obj == 3 || obj == 38 || obj == 19 || obj == 21) { //- Si ya tiene un objeto asi
                    for(new x = 0; x < 10; x++) {
                        if(user[playerid][jBolsillo][x] == obj) {
                            _Mensaje(playerid, 0, "9", "Solo puedes llevar un arma de ese tipo.");
                            return 1;
                        }
                    }
                }
                if(obj == 22 || obj == 26 || obj == 28 || obj == 30 || obj == 31) { //- Si posee arma grande
                    if(user[playerid][jm_Derecha] == obj || user[playerid][jm_Izquierda] == obj || user[playerid][jEspalda]) {
                        _Mensaje(playerid, 0, "9", "Ya portas un arma grande de este tipo.");
                        return 1;
                    }
                }
                if(obj == 22 || obj == 26 || obj == 28 || obj == 30 || obj == 31) { //- Cede arma grande
                    if(user[playerid][jEspalda] == 0) {
                        user[playerid][jEspalda] = obj;
                        user[playerid][jEspaldaCant] = InfoObjeto[obj][Capacidad];
                        format(string, sizeof(string), "%s coge un(a) %s del gunrack.", NombreJugador(playerid), InfoObjeto[obj][NombreObjeto]);
                        ProxDetector(15.0, playerid, string, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF);
                        PonerObjeto(playerid, 3, obj);
                        return 1;
                    } else if(user[playerid][jm_Derecha] == 0) {
                        user[playerid][jm_Derecha] = obj;
                        user[playerid][jm_DerechaCant] = InfoObjeto[obj][Capacidad];
                        format(string, sizeof(string), "%s coge un(a) %s del gunrack.", NombreJugador(playerid), InfoObjeto[obj][NombreObjeto]);
                        ProxDetector(15.0, playerid, string, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF);
                        PonerObjeto(playerid, 1, obj);
                        return 1;
                    } else if(user[playerid][jm_Izquierda] == 0) {
                        user[playerid][jm_Izquierda] = obj;
                        user[playerid][jm_IzquierdaCant] = InfoObjeto[obj][Capacidad];
                        format(string, sizeof(string), "%s coge un(a) %s del gunrack.", NombreJugador(playerid), InfoObjeto[obj][NombreObjeto]);
                        ProxDetector(15.0, playerid, string, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF);
                        PonerObjeto(playerid, 2, obj);
                        return 1;
                    }
                } else{ //- Cede otro objeto
                    for(new x = 0; x < 10; x++) {
                        if(user[playerid][jBolsillo][x] == 0) {
                            user[playerid][jBolsillo][x] = obj;
                            user[playerid][jBolsilloCant][x] = InfoObjeto[obj][Capacidad];
                            format(string, sizeof(string), "%s coge un(a) %s del gunrack.", NombreJugador(playerid), InfoObjeto[obj][NombreObjeto]);
                            ProxDetector(15.0, playerid, string, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF);
                            return 1;
                        }
                    }
                }
            }
        case D_AMMUNATION: { //- Ammu Nation
                new nid = GetPlayerVirtualWorld(playerid) - 300, obj, dinero;
                if(response == 1) {
                    switch(listitem) {
                        case 0: { if(RevisarDinero(playerid, 12)) { dinero = 12; obj = 4; } } //- Cuchillo
                        case 1: { if(RevisarDinero(playerid, 370)) { dinero = 570; obj = 19; } } //- 45. Colt
                        case 2: { if(RevisarDinero(playerid, 1500)) { dinero = 6500; obj = 30; } } //- Rifle
                        case 3: { if(RevisarDinero(playerid, 500)) { dinero = 3000; obj = 72; } } //- Chaleco
                        case 4: Dialog(playerid, D_AMMUNATION2, DIALOG_STYLE_LIST, "Cartuchos/Cargadores", "{FFFFFF}Cargador 45. Colt - ($5)\nCargador Desert Eagle - ($7)\nCargador UZI - ($5)\nCargador MP5K - ($10)\nCargador TEC-9 - ($5)\nCargador AK47 - ($15)\nCargador M4 - ($14)\nCargador rifle - ($20)\nCartuchos de Escopeta - ($25)", "Comprar", "Cancelar");
                    }
                    if (user[playerid][jm_Derecha] > 0 && user[playerid][jm_Izquierda] > 0) return _Mensaje(playerid, 0, "9", "Debes tener una mano vacía.");
                    if (user[playerid][jm_Derecha] == 0)
	 				{
						if(obj == 30 || obj == 19)
						{
                    		new _txt[128];
	                        if (user[playerid][jTiempos][8] > 0) { format(_txt, sizeof(_txt), " Debes esperar %d minutos para otra compra.", user[playerid][jTiempos][8]); return _Mensaje(playerid, 4, "b00000", _txt); }
                        	user[playerid][jm_Derecha] = obj;
	                        user[playerid][jm_DerechaCant] = InfoObjeto[obj][Capacidad];
	                        PonerObjeto(playerid, 1, obj);
	                        if (InfoObjeto[obj][IDArma] > 0) { _GiveWeapon(playerid, InfoObjeto[obj][IDArma], InfoObjeto[obj][Capacidad]); }
	                        Compra(playerid, dinero);
	                        i_Negocio[nid][nDinero] += dinero;
	                        i_Negocio[nid][nProductos]--;
	                        if(obj == 19) user[playerid][jTiempos][8] = 300;
	                        else if(obj == 30) user[playerid][jTiempos][8] = 420;
							return 1;
						}
						else
						{
	                        user[playerid][jm_Derecha] = obj;
	                        user[playerid][jm_DerechaCant] = InfoObjeto[obj][Capacidad];
	                        PonerObjeto(playerid, 1, obj);
	                        if (InfoObjeto[obj][IDArma] > 0) { _GiveWeapon(playerid, InfoObjeto[obj][IDArma], InfoObjeto[obj][Capacidad]); }
	                        Compra(playerid, dinero);
	                        i_Negocio[nid][nDinero] += dinero;
	                        i_Negocio[nid][nProductos]--;
                        	return 1;
						}
                    }
					else if (user[playerid][jm_Derecha] != 0)
					{
                        user[playerid][jm_Izquierda] = obj;
                        user[playerid][jm_IzquierdaCant] = InfoObjeto[obj][Capacidad];
                        PonerObjeto(playerid, 2, obj);
                        Compra(playerid, dinero);
                        i_Negocio[nid][nDinero] += dinero;
                        i_Negocio[nid][nProductos]--;
                        return 1;
                    }
                }
            }
        case D_AMMUNATION2: { //- Ammu Nation
                new nid = GetPlayerVirtualWorld(playerid) - 300, obj, dinero;
                if(response == 1) {
                    switch(listitem) {
                        case 0: { if(RevisarDinero(playerid, 5)) { dinero = 300; obj = 41; } } //- Cargador 45. Colt
                        case 1: { if(RevisarDinero(playerid, 7)) { dinero = 700; obj = 42; } } //- Cargador Desert Eagle
                        case 2: { if(RevisarDinero(playerid, 5)) { dinero = 1500; obj = 43; } } //- Cargador UZI
                        case 3: { if(RevisarDinero(playerid, 10)) { dinero = 2000; obj = 44; } } //- Cargador MP5K
                        case 4: { if(RevisarDinero(playerid, 5)) { dinero = 2200; obj = 45; } } //- Cargador TEC-9
                        case 5: { if(RevisarDinero(playerid, 15)) { dinero = 4000; obj = 46; } } //- Cargador AK47
                        case 6: { if(RevisarDinero(playerid, 14)) { dinero = 5000; obj = 47; } } //- Cargador M4
                        case 7: { if(RevisarDinero(playerid, 20)) { dinero = 1500; obj = 48; } } //- Cargador rifle
                        case 8: { if(RevisarDinero(playerid, 25)) { dinero = 600; obj = 49; } } //- Cartuchos de Escopeta
                    }
              		new _txt[128];
                    if (user[playerid][jTiempos][19] > 0) { format(_txt, sizeof(_txt), " Debes esperar %d minutos para otra compra.", user[playerid][jTiempos][19]); return _Mensaje(playerid, 4, "b00000", _txt); }
                   	if (user[playerid][jm_Derecha] > 0 && user[playerid][jm_Izquierda] > 0) return _Mensaje(playerid, 0, "9", "Debes tener una mano vacía.");
                    if (user[playerid][jm_Derecha] == 0) {
                        user[playerid][jm_Derecha] = obj;
                        user[playerid][jm_DerechaCant] = InfoObjeto[obj][Capacidad];
                        PonerObjeto(playerid, 1, obj);
						user[playerid][jTiempos][19] = 60;
                        if(user[playerid][jPremium] == 0) {
                            Compra(playerid, dinero);
                            i_Negocio[nid][nDinero] += dinero;
                            i_Negocio[nid][nProductos]--;
                        } else {
                            Compra(playerid, (dinero*75)/100);
                            i_Negocio[nid][nDinero] += (dinero*75)/100;
                            i_Negocio[nid][nProductos]--;
                            format(string, sizeof(string), "Descuento por ser PREMIUM! Precio original $(%d), a ti te costó ($%d).", dinero, (dinero*75)/100);
                            _Mensaje(playerid, 4, "C93CCE", string);
                        }
                        return 1;
                    } else if (user[playerid][jm_Derecha] != 0) {
                        user[playerid][jm_Izquierda] = obj;
                        user[playerid][jm_IzquierdaCant] = InfoObjeto[obj][Capacidad];
                        PonerObjeto(playerid, 2, obj);
						user[playerid][jTiempos][19] = 60;
                        if(user[playerid][jPremium] == 0) {
                            Compra(playerid, dinero);
                            i_Negocio[nid][nDinero] += dinero;
                            i_Negocio[nid][nProductos]--;
                        } else {
                            Compra(playerid, (dinero*75)/100);
                            i_Negocio[nid][nDinero] += (dinero*75)/100;
                            i_Negocio[nid][nProductos]--;
                            format(string, sizeof(string), "Descuento por ser PREMIUM! Precio original $(%d), a ti te costó ($%d).", dinero, (dinero*75)/100);
                            _Mensaje(playerid, 4, "C93CCE", string);
                        }
                        return 1;
                    }
                }
            }

        case D_ELECTRONICA: { //- Electronica
                new nid = GetPlayerVirtualWorld(playerid) - 300;
                if(response == 1) {
                    switch(listitem) {
                        case 0: {
                                if(RevisarDinero(playerid, 6)) {
                                    new randphone = 40000 + random(69999);
                                    user[playerid][jTelefono] = randphone;
                                    format(string, sizeof(string), "Has comprado un número de teléfono.", user[playerid][jTelefono]);
                                    _Mensaje(playerid, 2, "0", string);
                                    if(user[playerid][jPremium] == 0) {
                                        Compra(playerid, 6);
                                        i_Negocio[nid][nDinero] += 6;
                                        i_Negocio[nid][nProductos]--;
                                    } else {
                                        Compra(playerid, 5);
                                        i_Negocio[nid][nDinero] += 1;
                                        i_Negocio[nid][nProductos]--;
                                        _Mensaje(playerid, 4, "C93CCE", "Descuento por ser PREMIUM! Precio original $(6), a ti te costó ($1).");
                                    }
                                }
                            }
                        case 1: {
                                if(RevisarDinero(playerid, 10)) {
                                    new objeto = 80;
                                	if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
                                	if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, objeto); user[playerid][jm_Derecha] = objeto, user[playerid][jm_DerechaCant] = InfoObjeto[objeto][Capacidad];}
                                	else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, objeto); user[playerid][jm_Izquierda] = objeto, user[playerid][jm_IzquierdaCant] = InfoObjeto[objeto][Capacidad];}
                                	_Mensaje(playerid, 2, "0", "Has comprado un teléfono, comandos: /telefono");
                                 	if(user[playerid][jPremium] == 0) {
                                  		Compra(playerid, 10);
                                    	i_Negocio[nid][nDinero] += 10;
                                     	i_Negocio[nid][nProductos]--;
                                    } else {
                                    	Compra(playerid, 8);
                                     	i_Negocio[nid][nDinero] += 1;
                                      	i_Negocio[nid][nProductos]--;
                                       	_Mensaje(playerid, 4, "C93CCE", "Descuento por ser PREMIUM! Precio original $(10), a ti te costó ($1).");
                                    }
                                    return 1;
                                }
                            }
                        case 2: {
                                if(RevisarDinero(playerid, 12)) {
                                    new objeto = 38;
                                	if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
                                	if(user[playerid][jm_Derecha] == 0){
									PonerObjeto(playerid, 1, objeto);
									user[playerid][jm_Derecha] = objeto;
									user[playerid][jm_DerechaCant] = 30;
									if (InfoObjeto[objeto][IDArma] > 0) { _GiveWeapon(playerid, InfoObjeto[objeto][IDArma], 30); } }
									else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, objeto); user[playerid][jm_Izquierda] = objeto, user[playerid][jm_IzquierdaCant] = 30;}
                                    _Mensaje(playerid, 2, "0", "Has comprado una cámara.");
                                    if (user[playerid][jPremium] == 0) {
                                    	Compra(playerid, 12);
                                     	i_Negocio[nid][nDinero] += 12;
                                     	i_Negocio[nid][nProductos]--;
                                    } else {
                                    	Compra(playerid, 10);
                                     	i_Negocio[nid][nDinero] += 1;
                                      	i_Negocio[nid][nProductos]--;
                                       	_Mensaje(playerid, 4, "C93CCE", "Descuento por ser PREMIUM! Precio original $(12), a ti te costó ($1)");
                                    }
                                    return 1;
                                }
                            }
                        case 3: {
                                if(RevisarDinero(playerid, 40)) {
                                    _Mensaje(playerid, 2, "0", "Has comprado un equipo sonido, comandos: /equiposonido /encender /requiposonido.");
                                    user[playerid][jBoombox] = 1;
                                    if(user[playerid][jPremium] == 0) {
                                        Compra(playerid, 40);
                                        i_Negocio[nid][nDinero] += 40;
                                        i_Negocio[nid][nProductos]--;
                                    } else {
                                        Compra(playerid, 37);
                                        i_Negocio[nid][nDinero] += 10;
                                        i_Negocio[nid][nProductos]--;
                                        _Mensaje(playerid, 4, "C93CCE", "Descuento por ser PREMIUM! Precio original $(40), a ti te costó ($10)");
                                    }
                                    return 1;
                                }
                            }
                        case 4: { // Seguro alarma
                                if(RevisarDinero(playerid, 50)) {
                                    SetPVarInt(playerid, "elecmenu", 1);
                                    new dialog[1024], stext[62];
									for(new i = 0; i < 6; i++) {
										new veh = user[playerid][jLlaveCoche][i];
										if(veh == 0) { format(string, sizeof(string), "\n{b0b0b0}Sin vehículos (ranura vacía)"); }
										else {
							    			switch(InfoVehiculo[veh-1000][vSpawned]) {
	        									case 0: stext = "{ff0000}Guardado (oculto){ffffff}";
	        									case 1: format(stext, sizeof(stext), "{00CDFF}ID Activa: %d", InfoVehiculo[veh-1000][vID]);
	    									}
											if(InfoVehiculo[veh-1000][vEnDeposito] == 1) format(string, sizeof(string), "\n{ffffff}%s - Modelo: %s - {CA3022}Embargado", stext, nombre_vehiculo[InfoVehiculo[veh-1000][vModelo] - 400]);
											else format(string, sizeof(string), "\n{ffffff}%s - Modelo: %s - Llave ID: {00CDFF}%d", stext, nombre_vehiculo[InfoVehiculo[veh-1000][vModelo] - 400], veh);
										}
										strcat(dialog, string);
									}
									Dialog(playerid, D_COMPRAELCVEH, DIALOG_STYLE_LIST, "{D6E1EB}Vehículos", dialog, "Seleccionar", "Cancelar");
                                }
                            }
                        case 5: { // Seguro industrial
                                if(RevisarDinero(playerid, 80)) {
                                    SetPVarInt(playerid, "elecmenu", 3);
                                    new dialog[1024], stext[62];
									for(new i = 0; i < 6; i++) {
										new veh = user[playerid][jLlaveCoche][i];
										if(veh == 0) { format(string, sizeof(string), "\n{b0b0b0}Sin vehículos (ranura vacía)"); }
										else {
							    			switch(InfoVehiculo[veh-1000][vSpawned]) {
	        									case 0: stext = "{ff0000}Guardado (oculto){ffffff}";
	        									case 1: format(stext, sizeof(stext), "{00CDFF}ID Activa: %d", InfoVehiculo[veh-1000][vID]);
	    									}
											if(InfoVehiculo[veh-1000][vEnDeposito] == 1) format(string, sizeof(string), "\n{ffffff}%s - Modelo: %s - {CA3022}Embargado", stext, nombre_vehiculo[InfoVehiculo[veh-1000][vModelo] - 400]);
											else format(string, sizeof(string), "\n{ffffff}%s - Modelo: %s - Llave ID: {00CDFF}%d", stext, nombre_vehiculo[InfoVehiculo[veh-1000][vModelo] - 400], veh);
										}
										strcat(dialog, string);
									}
									Dialog(playerid, D_COMPRAELCVEH, DIALOG_STYLE_LIST, "{D6E1EB}Vehículos", dialog, "Seleccionar", "Cancelar");
                                }
                            }
                        case 6: { // Stereo
                                if(RevisarDinero(playerid, 100)) {
                                    SetPVarInt(playerid, "elecmenu", 2);
                                    new dialog[1024], stext[62];
									for(new i = 0; i < 6; i++) {
										new veh = user[playerid][jLlaveCoche][i];
          								if(veh == 0) { format(string, sizeof(string), "\n{b0b0b0}Sin vehículos (ranura vacía)"); }
										else {
							    			switch(InfoVehiculo[veh-1000][vSpawned]) {
	        									case 0: stext = "{ff0000}Guardado (oculto){ffffff}";
	        									case 1: format(stext, sizeof(stext), "{00CDFF}ID Activa: %d", InfoVehiculo[veh-1000][vID]);
	    									}
											if(InfoVehiculo[veh-1000][vEnDeposito] == 1) format(string, sizeof(string), "\n{ffffff}%s - Modelo: %s - {CA3022}Embargado", stext, nombre_vehiculo[InfoVehiculo[veh-1000][vModelo] - 400]);
											else format(string, sizeof(string), "\n{ffffff}%s - Modelo: %s - Llave ID: {00CDFF}%d", stext, nombre_vehiculo[InfoVehiculo[veh-1000][vModelo] - 400], veh);
										}
										strcat(dialog, string);
									}
									Dialog(playerid, D_COMPRAELCVEH, DIALOG_STYLE_LIST, "{D6E1EB}Vehículos", dialog, "Seleccionar", "Cancelar");
                                }
                            }
                        case 7: {
                                if(RevisarDinero(playerid, 50)) {
                                    new objeto = 82;
                                	if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
                                	if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, objeto); user[playerid][jm_Derecha] = objeto, user[playerid][jm_DerechaCant] = InfoObjeto[objeto][Capacidad];}
                                	else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, objeto); user[playerid][jm_Izquierda] = objeto, user[playerid][jm_IzquierdaCant] = InfoObjeto[objeto][Capacidad];}
                                	_Mensaje(playerid, 2, "0", "Has comprado un radio portable, comandos: /apagarradio /frecuencia /pr.");
                                    if(user[playerid][jPremium] == 0) {
                                        Compra(playerid, 50);
                                        i_Negocio[nid][nDinero] += 50;
                                        i_Negocio[nid][nProductos]--;
                                    } else {
                                        Compra(playerid, 40);
                                        i_Negocio[nid][nDinero] += 40;
                                        i_Negocio[nid][nProductos]--;
                                        _Mensaje(playerid, 4, "C93CCE", "Descuento premium! precio original $50, a ti te costó $40.");
		                            }
                                    return 1;
                                }
                            }
                    }
                }
            }
        case D_FERRETERIA: { //- Ferreterías
                new nid = GetPlayerVirtualWorld(playerid) - 300;
                if(response == 1) {
                    switch(listitem) {
                        case 0: {
                                if(RevisarDinero(playerid, 3)) {
                                    new objeto = 89;
                                    if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
                                    if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, objeto); user[playerid][jm_Derecha] = objeto, user[playerid][jm_DerechaCant] = 1;}
                                    else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, objeto); user[playerid][jm_Izquierda] = objeto, user[playerid][jm_IzquierdaCant] = 1;}
                                    _Mensaje(playerid, 2, "0", "Has comprado un bidón de gasolina, comandos: /llenarveh");
                                    if(user[playerid][jPremium] == 0) {
                                        Compra(playerid, 3);
                                        i_Negocio[nid][nDinero] += 3;
                                        i_Negocio[nid][nProductos]--;
                                    } else {
                                        Compra(playerid, 2);
                                        i_Negocio[nid][nDinero] += 2;
                                        i_Negocio[nid][nProductos]--;
                                        _Mensaje(playerid, 4, "C93CCE", "Descuento premium! precio original $3, a ti te costó $2.");
		                            }
                                    return 1;
                                }
                            }
                        case 1: { //- Destornillador
                                if(RevisarDinero(playerid, 2)) {
								    new objeto = 83;
                                    if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
                                    if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, objeto); user[playerid][jm_Derecha] = objeto, user[playerid][jm_DerechaCant] = 1;}
                                    else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, objeto); user[playerid][jm_Izquierda] = objeto, user[playerid][jm_IzquierdaCant] = 1;}
                                    if(user[playerid][jPremium] == 0) {
                                        Compra(playerid, 2);
                                        i_Negocio[nid][nDinero] += 2;
                                        i_Negocio[nid][nProductos]--;
                                    } else {
                                        Compra(playerid, 1);
                                        i_Negocio[nid][nDinero] += 1;
                                        i_Negocio[nid][nProductos]--;
                                        _Mensaje(playerid, 4, "C93CCE", "Descuento premium! precio original $2, a ti te costó $1.");
		                            }
                                    return 1;
                                }
                            }
                        case 2: { //- Palanca
                                if(RevisarDinero(playerid, 30)) {
								    new objeto = 128;
                                    if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
                                    if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, objeto); user[playerid][jm_Derecha] = objeto, user[playerid][jm_DerechaCant] = 1;}
                                    else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, objeto); user[playerid][jm_Izquierda] = objeto, user[playerid][jm_IzquierdaCant] = 1;}
                                    Compra(playerid, 30);
                                    i_Negocio[nid][nDinero] += 3;
                                    i_Negocio[nid][nProductos]--;
                                    return 1;
                                }
                            }
                        case 3: { //- Chaleco reflector
                                new TextAcc[512];
                                for(new ida; ida < MAX_ACCESORIOS; ida++) {
                                new NombreAcc[128];
                                format(NombreAcc, sizeof(NombreAcc), "{00a2ff}[Nada]");
                                for(new i; i < sizeof(Accesorios); i++) {
                                    if(Accesorios[i][ModeloAccesorio] == InfoAccesorio[playerid][ida][aModelo]) {
                                        format(NombreAcc, sizeof(NombreAcc), "{00c200}[%s]", Accesorios[i][NombreAccesorio]);
                                    }
                                }
                                format(TextAcc, sizeof(TextAcc), "%s{ffffff}Ranura %d - %s\n", TextAcc, ida, NombreAcc);
                                }
                                Dialog(playerid, D_FERRETERIA2, DIALOG_STYLE_LIST, "{D6E1EB}Selecciona una ranura", TextAcc, "Seleccionar", "Cancelar");
                            }
                        case 4: { //- Pala
                                if(RevisarDinero(playerid, 5)) {
								    new objeto = 6;
                                    if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
                                    if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, objeto); user[playerid][jm_Derecha] = objeto, user[playerid][jm_DerechaCant] = 1;}
                                    else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, objeto); user[playerid][jm_Izquierda] = objeto, user[playerid][jm_IzquierdaCant] = 1;}
                                    Compra(playerid, 5);
                                    i_Negocio[nid][nDinero] += 5;
                                    i_Negocio[nid][nProductos]--;
                                    return 1;
                                }
                            }
                        case 5: { //- Spray (no arma)
                                if(RevisarDinero(playerid, 8)) {
								    new objeto = 71;
                                    if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
                                    if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, objeto); user[playerid][jm_Derecha] = objeto, user[playerid][jm_DerechaCant] = 4;}
                                    else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, objeto); user[playerid][jm_Izquierda] = objeto, user[playerid][jm_IzquierdaCant] = 4;}
                                    if(user[playerid][jPremium] == 0) {
                                        Compra(playerid, 8);
                                        i_Negocio[nid][nDinero] += 8;
                                        i_Negocio[nid][nProductos]--;
                                    } else {
                                        Compra(playerid, 6);
                                        i_Negocio[nid][nDinero] += 6;
                                        i_Negocio[nid][nProductos]--;
                                        _Mensaje(playerid, 4, "C93CCE", "Descuento premium! precio original $8, a ti te costó $6.");
		                            }
                                    return 1;
                                }
                            }
                        case 6: {
                                if(RevisarDinero(playerid, 50)) {
								    new objeto = 50;
                                    if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
                                    if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, objeto); user[playerid][jm_Derecha] = objeto, user[playerid][jm_DerechaCant] = 1;}
                                    else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, objeto); user[playerid][jm_Izquierda] = objeto, user[playerid][jm_IzquierdaCant] = 1;}
                                    if(user[playerid][jPremium] == 0) {
                                        Compra(playerid, 50);
                                        i_Negocio[nid][nDinero] += 50;
                                        i_Negocio[nid][nProductos]--;
                                    } else {
                                        Compra(playerid, 37);
                                        i_Negocio[nid][nDinero] += 37;
                                        i_Negocio[nid][nProductos]--;
                                        _Mensaje(playerid, 4, "C93CCE", "Descuento premium! precio original $50, a ti te costó $37.");
		                            }
                                    return 1;
                                }
                            }
                        case 7: {
                                if(RevisarDinero(playerid, 75)) {
                                    for(new x = 0; x < 10; x++) {
                                        if(user[playerid][jBolsillo][x] == 0) {
                                            user[playerid][jBolsillo][x] = 5;
                                            user[playerid][jBolsilloCant][x] = 1;
                                            _Mensaje(playerid, 2, "0", "Has comprado un bate baseball.");
                                            Compra(playerid, 75);
                                            i_Negocio[nid][nDinero] += 75;
                                            i_Negocio[nid][nProductos]--;
                                            return 1;
                                        }
                                    }
                                }
                            }
                        case 8: { // CUCHILO
                                if(RevisarDinero(playerid, 25)) {
                                    for(new x = 0; x < 10; x++) {
                                        if(user[playerid][jBolsillo][x] == 0) {
                                            user[playerid][jBolsillo][x] = 127;
                                            user[playerid][jBolsilloCant][x] = 1;
                                            _Mensaje(playerid, 2, "0", "Has comprado un cuchillo.");
                                            Compra(playerid, 25);
                                            i_Negocio[nid][nDinero] += 25;
                                            i_Negocio[nid][nProductos]--;
                                            return 1;
                                        }
                                    }
                                }
                            }
                    }
                }
            }
        case D_FERRETERIA2: {
                if(response) {
                    if (ComprobarDineroJ(playerid) < 25) return _Mensaje(playerid, 0, "32", "No tienes suficiente dinero.");
                    else {
                        InfoAccesorio[playerid][listitem][aModelo] = 19904;
                        InfoAccesorio[playerid][listitem][aParte] = 2;
                        InfoAccesorio[playerid][listitem][aPosicionX] = 0.0;
                        InfoAccesorio[playerid][listitem][aPosicionY] = 0.0;
                        InfoAccesorio[playerid][listitem][aPosicionZ] = 0.0;
                        InfoAccesorio[playerid][listitem][aRotacionX] = 0.0;
                        InfoAccesorio[playerid][listitem][aRotacionY] = 0.0;
                        InfoAccesorio[playerid][listitem][aRotacionZ] = 0.0;
                        InfoAccesorio[playerid][listitem][aEscalaX] = 1;
                        InfoAccesorio[playerid][listitem][aEscalaY] = 1;
                        InfoAccesorio[playerid][listitem][aEscalaZ] = 1;
                        format(string, sizeof(string), "Compraste un accesorio por $25 [Ranura: %d]", listitem);
                        _Mensaje(playerid, 2, "0", string);
                        _Mensaje(playerid, 2, "0", "Escribe /accesorios para editar tus accesorios.");
                        if(user[playerid][jPremium] == 0) {
                            Compra(playerid, 25);
                            i_Negocio[IDNegocio[playerid]][nDinero] += 25;
                            i_Negocio[IDNegocio[playerid]][nProductos]--;
                        } else {
                            Compra(playerid, 18);
                            i_Negocio[IDNegocio[playerid]][nDinero] += 18;
                            i_Negocio[IDNegocio[playerid]][nProductos]--;
                            _Mensaje(playerid, 4, "C93CCE", "Descuento premium! precio original $25, a ti te costó $18.");
                        }
                        IDNegocio[playerid] = -1;
                        return 1;
                    }
                }
            }

        case D_COMPRAELCVEH: {
                new nid = GetPlayerVirtualWorld(playerid) - 300;
                if(response == 1) {
                    for(new i = 0; i < 6; i++) {
					    if(listitem == i) {
                            new veh = user[playerid][jLlaveCoche][i];
                            if(veh == INVALID_PLAYER_VEHICLE_ID) return _Mensaje(playerid, 0, "68", "No se puede en un vehículo que no existe.");
							if(InfoVehiculo[veh-1000][vEnDeposito] == 1) return _Mensaje(playerid, 0, "67", "No se puede en un vehículo confiscado.");
							if(GetPVarInt(playerid, "elecmenu") == 1) {
    							if (EnMotos_Bicis(InfoVehiculo[veh-1000][vID])) return _Mensaje(playerid, 0, "411", "No se puede colocar seguro a motos o bicis.");
        						if(InfoVehiculo[veh-1000][vSeguro] == 1) {
          							SetPVarInt(playerid, "elecmenu", 0);
                         			return _Mensaje(playerid, 0, "31", "Esto ya está instalado en este vehiculo.");
              					}
                 				_Mensaje(playerid, 2, "0", "Has comprado un seguro tipo alarma, comandos: /seguro");
              					InfoVehiculo[veh-1000][vSeguro] = 1;
                            	SetPVarInt(playerid, "elecmenu", 0);
                        		ActualizarVehiculo(veh-1000);
                            	if(user[playerid][jPremium] == 0) {
                                	Compra(playerid, 50);
                                	i_Negocio[nid][nDinero] += 50;
                                	i_Negocio[nid][nProductos]--;
                            	} else {
                                	Compra(playerid, 45);
                                	i_Negocio[nid][nDinero] += 45;
                                	i_Negocio[nid][nProductos]--;
                                	_Mensaje(playerid, 4, "C93CCE", "Descuento premium! precio original $50, a ti te costó $45.");
                            	}
                    		} else if(GetPVarInt(playerid, "elecmenu") == 2) {
                        		if (EnMotos_Bicis(InfoVehiculo[veh-1000][vID])) return _Mensaje(playerid, 0, "411", "No se puede colocar seguro a motos o bicis.");
                            	if(InfoVehiculo[veh-1000][vSeguro] == 3) {
                                	SetPVarInt(playerid, "elecmenu", 0);
                                	return _Mensaje(playerid, 0, "31", "Esto ya está instalado en este vehiculo.");
                            	}
                            	_Mensaje(playerid, 2, "0", "Has comprado un seguro tipo industrial, comandos: /seguro");
                            	InfoVehiculo[veh-1000][vSeguro] = 3;
                            	SetPVarInt(playerid, "elecmenu", 0);
                        		ActualizarVehiculo(veh-1000);
                            	if(user[playerid][jPremium] == 0) {
                                	Compra(playerid, 80);
                                	i_Negocio[nid][nDinero] += 80;
                                	i_Negocio[nid][nProductos]--;
                            	} else {
                                	Compra(playerid, 70);
                                	i_Negocio[nid][nDinero] += 70;
                                	i_Negocio[nid][nProductos]--;
                                	_Mensaje(playerid, 4, "C93CCE", "Descuento premium! precio original $80, a ti te costó $70.");
                            	}
                    		} else if(GetPVarInt(playerid, "elecmenu") == 3) {
                        		if (EnMotos_Bicis(InfoVehiculo[veh-1000][vID])) return _Mensaje(playerid, 0, "411", "No se puede colocar stereo de maletero a motos o bicis.");
                       			if(InfoVehiculo[veh-1000][vStereo] == 1) return _Mensaje(playerid, 0, "31", "Esto ya está instalado en este vehiculo.");
                        		_Mensaje(playerid, 2, "0", "Has comprado un stereo, comandos: /stereo /estacion /apagarstereo");
                        		InfoVehiculo[veh-1000][vStereo] = 1;
                        		ActualizarVehiculo(veh-1000);
                        		if(user[playerid][jPremium] == 0) {
                            		DarDineroGC(playerid, -100);
                            		i_Negocio[nid][nDinero] += 100;
                            		i_Negocio[nid][nProductos]--;
                        		} else {
                            		DarDineroGC(playerid, -75);
                            		i_Negocio[nid][nDinero] += 75;
                            		i_Negocio[nid][nProductos]--;
                            		_Mensaje(playerid, 4, "C93CCE", "Descuento premium! precio original $100, a ti te costó $75.");
                    			}
                            }
                        }
                    }
                }
            }

        //- Opciones de casas
        case D_CASA_OPCIONES:
            if(response) {
                switch(listitem) {
                    case 0: Dialog(playerid, D_NOMBRECASA, DIALOG_STYLE_INPUT, "{D6E1EB}Nombre Casa", "{FFFFFF}> Escribe el nuevo nombre de tu casa:", "Aceptar", "Cancelar");
                    case 1:
					{
					    if (DentroCasa[playerid] == user[playerid][jCasaLlaves]) return _Mensaje(playerid, 4, "b0b0b0", "No puedes interactuar con el dinero de la casa.");
						Dialog(playerid, D_CASA_DINERO, DIALOG_STYLE_LIST, "{D6E1EB}Dinero  - ¿Qué desea hacer?", "{FFFFFF}Retirar dinero\nDepositar dinero", "Seleccionar", "Cancelar");
					}
                }
            }
        case D_CASA_MUEBLES: {
		    if(!response) return 1;
			new Str[350], Str2[sizeof(Str) * MAX_MUEBLES_C], i = DentroCasa[playerid], OBJ_INDEX;
			if(i == INVALID_CASA_ID) return 1;
		    if(listitem == 0) {
				Loop(m, MAX_MUEBLES_C, 0) {
				    if(InfoCasa[i][cObjModel][m]) {
						BuscarModeIndexIntC(InfoCasa[i][cObjModel][m], OBJ_INDEX);
				    	Formato(Str, "{ffffff}#%d %s%d | %s\n", m + 1, (!InfoCasa[i][cObjPosX][m]) ? ("{D30000}") : ("{00A400}"),InfoCasa[i][cObjModel][m], ObjetosInteriorC[OBJ_INDEX][2]);
					}
					else Formato(Str, "{b0b0b0}#%d - Vacío\n", m + 1);
					strcat(Str2, Str);
				}
				Dialog(playerid, D_CASA_MUEBLE_C, DIALOG_STYLE_LIST, "{D6E1EB}Selecciona 'Agregar'", Str2, "Agregar", "Cancelar");
			} else if(listitem == 1) {
				Loop(m, MAX_MUEBLES_C, 0) {
				    if(InfoCasa[i][cObjModel][m]) {
						BuscarModeIndexIntC(InfoCasa[i][cObjModel][m], OBJ_INDEX);
				    	Formato(Str, "{ffffff}#%d %s%d | %s\n", m + 1, (!InfoCasa[i][cObjPosX][m]) ? ("{D30000}") : ("{00A400}"),InfoCasa[i][cObjModel][m], ObjetosInteriorC[OBJ_INDEX][2]);
					}
					else Formato(Str, "{b0b0b0}#%d - Vacío\n", m + 1);
					strcat(Str2, Str);
				}
				Dialog(playerid, D_CASA_MUEBLE_G, DIALOG_STYLE_LIST, "{D6E1EB}Selecciona 'Guardar'", Str2, "Guardar", "Cancelar");
			} else if(listitem == 2) {
				Loop(m, MAX_MUEBLES_C, 0) {
				    if(InfoCasa[i][cObjModel][m]) {
						BuscarModeIndexIntC(InfoCasa[i][cObjModel][m], OBJ_INDEX);
				    	Formato(Str, "{ffffff}#%d %s%d | %s\n", m + 1, (!InfoCasa[i][cObjPosX][m]) ? ("{D30000}") : ("{00A400}"),InfoCasa[i][cObjModel][m], ObjetosInteriorC[OBJ_INDEX][2]);
					}
					else Formato(Str, "{b0b0b0}#%d - Vacío\n", m + 1);
					strcat(Str2, Str);
				}
				Dialog(playerid, D_CASA_MUEBLE_E, DIALOG_STYLE_LIST, "{D6E1EB}Selecciona 'Editar'", Str2, "Editar", "Cancelar");
			} else if(listitem == 3) {
				Loop(m, MAX_MUEBLES_C, 0) {
				    if(InfoCasa[i][cObjModel][m]) {
						BuscarModeIndexIntC(InfoCasa[i][cObjModel][m], OBJ_INDEX);
				    	Formato(Str, "{ffffff}#%d %s%d | %s\n", m + 1, (!InfoCasa[i][cObjPosX][m]) ? ("{D30000}") : ("{00A400}"),InfoCasa[i][cObjModel][m], ObjetosInteriorC[OBJ_INDEX][2]);
					}
					else Formato(Str, "{b0b0b0}#%d - Vacío\n", m + 1);
					strcat(Str2, Str);
				}
				Dialog(playerid, D_CASA_MUEBLE_V, DIALOG_STYLE_LIST, "{D6E1EB}Selecciona 'Vender'", Str2, "Vender", "Cancelar");
			} else if(listitem == 4) {
				Loop(m, MAX_MUEBLES_C, 0) {
				    if(InfoCasa[i][cObjModel][m]) {
						BuscarModeIndexIntC(InfoCasa[i][cObjModel][m], OBJ_INDEX);
				    	Formato(Str, "{ffffff}#%d %s%d | %s\n", m + 1, (!InfoCasa[i][cObjPosX][m]) ? ("{D30000}") : ("{00A400}"),InfoCasa[i][cObjModel][m], ObjetosInteriorC[OBJ_INDEX][2]);
					}
					else Formato(Str, "{b0b0b0}#%d - Vacío\n", m + 1);
					strcat(Str2, Str);
				}
				Dialog(playerid, D_CASA_MUEBLE_B, DIALOG_STYLE_LIST, "{D6E1EB}Selecciona 'Borrar'", Str2, "Borrar", "Cancelar");
			} else if(listitem == 5) ShowModelSelectionMenu(playerid, MueblesCasa, "Muebles de casa");

			return 1;
		}
        case D_CASA_MUEBLE_C: {
		    if(!response) return 1;
		    new i = DentroCasa[playerid];
			if(i == INVALID_CASA_ID) return 1;
            if(!InfoCasa[i][cObjModel][listitem]) return _Mensaje(playerid, 0, "0", "No seleccionaste nada.");
            if(InfoCasa[i][cObjPosX][listitem] != 0.0) return _Mensaje(playerid, 0, "0", "Ese mueble ya está agregado.");
			GetPlayerPos(playerid,InfoCasa[i][cObjPosX][listitem], InfoCasa[i][cObjPosY][listitem], InfoCasa[i][cObjPosZ][listitem]);
			GetPosInFrontOfPlayer(playerid, InfoCasa[i][cObjPosX][listitem], InfoCasa[i][cObjPosY][listitem], 1.0);
			foreach(Player, p) {
			    if(CasaActual[p] == i) {
			    	OBJ_MuebleC[p][listitem] = CreatePlayerObject(p, InfoCasa[i][cObjModel][listitem], InfoCasa[i][cObjPosX][listitem], InfoCasa[i][cObjPosY][listitem], InfoCasa[i][cObjPosZ][listitem], 0.0, 0.0, 0.0);
				}
			}
			EditPlayerObject(playerid, OBJ_MuebleC[playerid][listitem]);
			SetPVarInt(playerid,"EditandoMuebles", 1);
			SetPVarInt(playerid,"ID_MUEBLEC",listitem);
			ActualizarCasa(DentroCasa[playerid], false, i);
		}
        case D_CASA_MUEBLE_G: {
		    if(!response) return 1;
		    new i = DentroCasa[playerid];
			if(i == INVALID_CASA_ID) return 1;
            if(!InfoCasa[i][cObjModel][listitem]) return _Mensaje(playerid, 0, "0", "No seleccionaste nada.");
            if(InfoCasa[i][cObjPosX][listitem] == 0.0) return _Mensaje(playerid, 0, "0", "Ese objeto ya está oculto.");
		    InfoCasa[i][cObjPosX][listitem] = 0.0;
		    InfoCasa[i][cObjPosY][listitem] = 0.0;
		    InfoCasa[i][cObjPosZ][listitem] = 0.0;
			foreach(Player, p) {
			    if(CasaActual[p] == i) {
			    	DestroyPlayerObject(p, OBJ_MuebleC[p][listitem]);
				}
			}
			ActualizarCasa(i, false, listitem);
            _Mensaje(playerid, 2, "0", "Se ha guardado correctamente el mueble.");
			return 1;
		}
		case D_CASA_MUEBLE_E: {
		    if(!response) return 1;
			if(!InfoCasa[DentroCasa[playerid]][cObjPosX][listitem]) return _Mensaje(playerid, 0, "0", "No puedes editar ese objeto.");
			EditPlayerObject(playerid, OBJ_MuebleC[playerid][listitem]);
			SetPVarInt(playerid,"EditandoMuebles", 1);
			SetPVarInt(playerid,"ID_MUEBLEC",listitem);
			return 1;
		}
        case D_CASA_MUEBLE_V: {
		    if(!response) return 1;
		    new i = listitem, h = DentroCasa[playerid], precio = PrecioMuebleDeCasas(InfoCasa[h][cObjModel][i]), dinero = precio / 2;
			if(h == INVALID_CASA_ID) return 1;
			if(InfoCasa[h][cObjModel][i] == INVALID_MUEBLES_ID) return _Mensaje(playerid, 0, "42", "Objeto seleccionado inválido.");
			format(string, sizeof(string), "Vendiste el mueble modelo: %d, por {00C200}$%d.", InfoCasa[h][cObjModel][i], dinero);
            _Mensaje(playerid, 2, "0", string);
            DarDineroGC(playerid, dinero);
			DestruirMuebleCasa(h, i);
			InfoCasa[h][cObjModel][i] = 0;
			InfoCasa[h][cObjPosX][i] = 0.0;
			InfoCasa[h][cObjPosY][i] = 0.0;
			InfoCasa[h][cObjPosZ][i] = 0.0;
			InfoCasa[h][cObjRotX][i] = 0.0;
			InfoCasa[h][cObjRotY][i] = 0.0;
			InfoCasa[h][cObjRotZ][i] = 0.0;
			ActualizarCasa(DentroCasa[playerid], false, i);
			return 1;
		}
		case D_CASA_MUEBLE_B: {
		    if(!response) return 1;
		    new i = listitem, h = DentroCasa[playerid];
			if(h == INVALID_CASA_ID) return 1;
			DestruirMuebleCasa(h, i);
			InfoCasa[h][cObjModel][i] = 0;
			InfoCasa[h][cObjPosX][i] = 0.0;
			InfoCasa[h][cObjPosY][i] = 0.0;
			InfoCasa[h][cObjPosZ][i] = 0.0;
			InfoCasa[h][cObjRotX][i] = 0.0;
			InfoCasa[h][cObjRotY][i] = 0.0;
			InfoCasa[h][cObjRotZ][i] = 0.0;
			_Mensaje(playerid, 2, "0", "Se ha eliminado correctamente el mueble.");
			ActualizarCasa(DentroCasa[playerid], false, i);
			return 1;
		}
        case D_CASA_DINERO:{
			new cid = DentroCasa[playerid];
            if(!response) return 1;
			new tDialogo[300];
           	switch(listitem) {
  				case 0: {
                    format(tDialogo, sizeof(tDialogo), "Ingresala cantidad que quieres retirar del baúl tu casa.\n\n{FFFFFF}Tienes $%d.", InfoCasa[cid][cCasaDinero]);
                   	Dialog(playerid, D_CASA_DINERO_R, DIALOG_STYLE_INPUT, "{D6E1EB}Ingresa cantidad:", tDialogo, "Ingresar", "Atrás");
     			}
     			case 1: {
       				format(tDialogo, sizeof(tDialogo), "Ingresa cantidad que quieres depositar del baúl tu casa.\n\n{FFFFFF}Tienes $%d.", InfoCasa[cid][cCasaDinero]);
      				Dialog(playerid, D_CASA_DINERO_D, DIALOG_STYLE_INPUT, "{D6E1EB}Ingresa cantidad:", tDialogo, "Ingresar", "Atrás");
            	}
        	}
        }
        case D_NOMBRECASA: {
			    new cid = DentroCasa[playerid];
                if(!response) return 1;
                if(!strlen(inputtext)) return Dialog(playerid, D_NOMBRECASA, DIALOG_STYLE_INPUT, "{D6E1EB}Nombre casa", "> Escribe algún nombre.", "Aceptar", "Cancelar");
                if(strlen(inputtext) > 20 || strlen(inputtext) < 0) { _Mensaje(playerid, 0, "106", "No puedes poner el nombre con más de 20 carácteres."); return 1; }
                alm(InfoCasa[cid][cNombre], inputtext);
                format(string, sizeof(string), "El nombre fue cambiado a {00C200}%s", InfoCasa[cid][cNombre]);
                _Mensaje(playerid, 2, "0", string);
                ActualizarCasa(cid);
                return 1;
            }
        case D_CASA_DINERO_R: {
                if(response) {
                    new amount = strval(inputtext), cid = DentroCasa[playerid];
                    if(!isnumeric(inputtext)) return _Mensaje(playerid, 0, "43", "Sólo números porfavor, vuelve a intentarlo.");
                    if(amount < 1) return _Mensaje(playerid, 0, "24", "No puedes retirar menos de un dolar.");
                    if(InfoCasa[cid][cCasaDinero] >= amount) {
                        InfoCasa[cid][cCasaDinero] -= amount;
                        DarDineroGC(playerid, amount);
                        format(string, sizeof(string), "Retiraste $%d de tu casa.", amount);
                        _Mensaje(playerid, 2, "0", string);
                        ActualizarCasa(cid);
                        format(string, sizeof(string), "Registros: %s retiró $%d de su casa id %d.", NombreRJugador(playerid), amount, cid);
                        Log("Registros/DineroCasa.log", string);
                    } else return _Mensaje(playerid, 0, "44", "No tienes suficiente dinero en tu baúl para retirar.");
                } else return 1;
            }
        case D_CASA_DINERO_D: {
                if(response) {
                    new amount = strval(inputtext), cid = DentroCasa[playerid];
                    if(!isnumeric(inputtext)) return _Mensaje(playerid, 0, "43", "Sólo números porfavor, vuelve a intentarlo.");
                    if(amount < 1) return _Mensaje(playerid, 0, "22", "No puedes depositar menos de un dolar.");
                    if(ComprobarDineroJ(playerid) >= amount) {
                        InfoCasa[cid][cCasaDinero] += amount;
                        DarDineroGC(playerid, -amount);
                        format(string, sizeof(string), "Depositaste $%d en tu casa.", amount);
                        _Mensaje(playerid, 2, "0", string);
                        ActualizarCasa(cid);
                        format(string, sizeof(string), "Registros: %s deposito $%d en su casa id %d.", NombreRJugador(playerid), amount, cid);
                        Log("Registros/DineroCasa.log", string);
                    } else return _Mensaje(playerid, 0, "45", "No tienes suficiente dinero para depositar.");
                } else return 1;
            }
        //- Opciones de garages
        case D_GARAGE_MUEBLES: {
		    if(!response) return 1;
			new Str[350], Str2[sizeof(Str) * MAX_MUEBLES_G], i = DentroGarage[playerid], OBJ_INDEX;
			if(i == INVALID_CASA_ID) return 1;
		    if(listitem == 0) {
				Loop(m, MAX_MUEBLES_G, 0) {
				    if(InfoGaraje[i][gObjModel][m]) {
						BuscarModeIndexIntG(InfoGaraje[i][gObjModel][m], OBJ_INDEX);
				    	Formato(Str, "{ffffff}#%d %s%d | %s\n", m + 1, (!InfoGaraje[i][gObjPosX][m]) ? ("{D30000}") : ("{00A400}"),InfoGaraje[i][gObjModel][m], ObjetosInteriorG[OBJ_INDEX][2]);
					}
					else Formato(Str, "{b0b0b0}#%d - Vacío\n", m + 1);
					strcat(Str2, Str);
				}
				Dialog(playerid, D_GARAGE_MUEBLE_C, DIALOG_STYLE_LIST, "{D6E1EB}Selecciona 'Agregar'", Str2, "Agregar", "Cancelar");
			} else if(listitem == 1) {
				Loop(m, MAX_MUEBLES_G, 0) {
				    if(InfoGaraje[i][gObjModel][m]) {
						BuscarModeIndexIntG(InfoGaraje[i][gObjModel][m], OBJ_INDEX);
				    	Formato(Str, "{ffffff}#%d %s%d | %s\n", m + 1, (!InfoGaraje[i][gObjPosX][m]) ? ("{D30000}") : ("{00A400}"),InfoGaraje[i][gObjModel][m], ObjetosInteriorG[OBJ_INDEX][2]);
					}
					else Formato(Str, "{b0b0b0}#%d - Vacío\n", m + 1);
					strcat(Str2, Str);
				}
				Dialog(playerid, D_GARAGE_MUEBLE_G, DIALOG_STYLE_LIST, "{D6E1EB}Selecciona 'Guardar'", Str2, "Guardar", "Cancelar");
			} else if(listitem == 2) {
				Loop(m, MAX_MUEBLES_G, 0) {
				    if(InfoGaraje[i][gObjModel][m]) {
						BuscarModeIndexIntG(InfoGaraje[i][gObjModel][m], OBJ_INDEX);
				    	Formato(Str, "{ffffff}#%d %s%d | %s\n", m + 1, (!InfoGaraje[i][gObjPosX][m]) ? ("{D30000}") : ("{00A400}"),InfoGaraje[i][gObjModel][m], ObjetosInteriorG[OBJ_INDEX][2]);
					}
					else Formato(Str, "{b0b0b0}#%d - Vacío\n", m + 1);
					strcat(Str2, Str);
				}
				Dialog(playerid, D_GARAGE_MUEBLE_E, DIALOG_STYLE_LIST, "{D6E1EB}Selecciona 'Editar'", Str2, "Editar", "Cancelar");
			} else if(listitem == 3) {
				Loop(m, MAX_MUEBLES_G, 0) {
				    if(InfoGaraje[i][gObjModel][m]) {
						BuscarModeIndexIntG(InfoGaraje[i][gObjModel][m], OBJ_INDEX);
				    	Formato(Str, "{ffffff}#%d %s%d | %s\n", m + 1, (!InfoGaraje[i][gObjPosX][m]) ? ("{D30000}") : ("{00A400}"),InfoGaraje[i][gObjModel][m], ObjetosInteriorG[OBJ_INDEX][2]);
					}
					else Formato(Str, "{b0b0b0}#%d - Vacío\n", m + 1);
					strcat(Str2, Str);
				}
				Dialog(playerid, D_GARAGE_MUEBLE_V, DIALOG_STYLE_LIST, "{D6E1EB}Selecciona 'Vender'", Str2, "Vender", "Cancelar");
			} else if(listitem == 4) {
				Loop(m, MAX_MUEBLES_G, 0) {
				    if(InfoGaraje[i][gObjModel][m]) {
						BuscarModeIndexIntG(InfoGaraje[i][gObjModel][m], OBJ_INDEX);
				    	Formato(Str, "{ffffff}#%d %s%d | %s\n", m + 1, (!InfoGaraje[i][gObjPosX][m]) ? ("{D30000}") : ("{00A400}"),InfoGaraje[i][gObjModel][m], ObjetosInteriorG[OBJ_INDEX][2]);
					}
					else Formato(Str, "{b0b0b0}#%d - Vacío\n", m + 1);
					strcat(Str2, Str);
				}
				Dialog(playerid, D_GARAGE_MUEBLE_B, DIALOG_STYLE_LIST, "{D6E1EB}Selecciona 'Borrar'", Str2, "Borrar", "Cancelar");
			} else if(listitem == 5) ShowModelSelectionMenu(playerid, MueblesGarages, "Muebles de garage");

			return 1;
		}
        case D_GARAGE_MUEBLE_C: {
		    if(!response) return 1;
		    new i = DentroGarage[playerid];
			if(i == INVALID_CASA_ID) return 1;
            if(!InfoGaraje[i][gObjModel][listitem]) return _Mensaje(playerid, 0, "0", "No seleccionaste nada.");
            if(InfoGaraje[i][gObjPosX][listitem] != 0.0) return _Mensaje(playerid, 0, "0", "Ese mueble ya está agregado.");
			GetPlayerPos(playerid,InfoGaraje[i][gObjPosX][listitem], InfoGaraje[i][gObjPosY][listitem], InfoGaraje[i][gObjPosZ][listitem]);
			GetPosInFrontOfPlayer(playerid, InfoGaraje[i][gObjPosX][listitem], InfoGaraje[i][gObjPosY][listitem], 1.0);
			foreach(Player, p) {
			    if(GarageActual[p] == i) {
			    	OBJ_MuebleG[p][listitem] = CreatePlayerObject(p, InfoGaraje[i][gObjModel][listitem], InfoGaraje[i][gObjPosX][listitem], InfoGaraje[i][gObjPosY][listitem], InfoGaraje[i][gObjPosZ][listitem], 0.0, 0.0, 0.0);
				}
			}
			EditPlayerObject(playerid, OBJ_MuebleG[playerid][listitem]);
			SetPVarInt(playerid,"EditandoMueblesG", 1);
			SetPVarInt(playerid,"ID_MUEBLEG",listitem);
			ActualizarGarage(DentroGarage[playerid], false, i);
		}
		case D_GARAGE_MUEBLE_G: {
		    if(!response) return 1;
		    new i = DentroGarage[playerid];
			if(i == INVALID_CASA_ID) return 1;
            if(!InfoGaraje[i][gObjModel][listitem]) return _Mensaje(playerid, 0, "0", "No seleccionaste nada.");
            if(InfoGaraje[i][gObjPosX][listitem] == 0.0) return _Mensaje(playerid, 0, "0", "Ese objeto ya está oculto.");
		    InfoGaraje[i][gObjPosX][listitem] = 0.0;
		    InfoGaraje[i][gObjPosY][listitem] = 0.0;
		    InfoGaraje[i][gObjPosZ][listitem] = 0.0;
			foreach(Player, p) {
			    if(GarageActual[p] == i) {
			    	DestroyPlayerObject(p, OBJ_MuebleG[p][listitem]);
				}
			}
			ActualizarGarage(i, false, listitem);
            _Mensaje(playerid, 2, "0", "Se ha guardado correctamente el mueble.");
			return 1;
		}
		case D_GARAGE_MUEBLE_E: {
		    if(!response) return 1;
			if(!InfoGaraje[DentroGarage[playerid]][gObjPosX][listitem]) return _Mensaje(playerid, 0, "0", "No puedes editar ese objeto.");
			EditPlayerObject(playerid, OBJ_MuebleG[playerid][listitem]);
			SetPVarInt(playerid,"EditandoMueblesG", 1);
			SetPVarInt(playerid,"ID_MUEBLEG",listitem);
			return 1;
		}
        case D_GARAGE_MUEBLE_V: {
		    if(!response) return 1;
		    new i = listitem, h = DentroGarage[playerid], precio = random(200), dinero = precio / 2;
			if(h == INVALID_CASA_ID) return 1;
			if(InfoGaraje[h][gObjModel][i] == INVALID_MUEBLES_ID) return _Mensaje(playerid, 0, "42", "Objeto seleccionado inválido.");
			format(string, sizeof(string), "Vendiste el mueble modelo: %d, por {00C200}$%d.", InfoGaraje[h][gObjModel][i], dinero);
            _Mensaje(playerid, 2, "0", string);
            DarDineroGC(playerid, dinero);
			DestruirMuebleGarage(h, i);
			InfoGaraje[h][gObjModel][i] = 0;
			InfoGaraje[h][gObjPosX][i] = 0.0;
			InfoGaraje[h][gObjPosY][i] = 0.0;
			InfoGaraje[h][gObjPosZ][i] = 0.0;
			InfoGaraje[h][gObjRotX][i] = 0.0;
			InfoGaraje[h][gObjRotY][i] = 0.0;
			InfoGaraje[h][gObjRotZ][i] = 0.0;
			ActualizarGarage(DentroGarage[playerid], false, i);
			return 1;
		}
		case D_GARAGE_MUEBLE_B: {
		    if(!response) return 1;
		    new i = listitem, h = DentroGarage[playerid];
			if(h == INVALID_CASA_ID) return 1;
			DestruirMuebleGarage(h, i);
			InfoGaraje[h][gObjModel][i] = 0;
			InfoGaraje[h][gObjPosX][i] = 0.0;
			InfoGaraje[h][gObjPosY][i] = 0.0;
			InfoGaraje[h][gObjPosZ][i] = 0.0;
			InfoGaraje[h][gObjRotX][i] = 0.0;
			InfoGaraje[h][gObjRotY][i] = 0.0;
			InfoGaraje[h][gObjRotZ][i] = 0.0;
			_Mensaje(playerid, 2, "0", "Se ha eliminado correctamente el mueble.");
			ActualizarGarage(DentroGarage[playerid], false, i);
			return 1;
		}
		//- Opciones de empresas
		case D_empresa_O:
			if(response) switch(listitem)
			{
				case 0:
				{
					Dialog(playerid, D_empresa_O2, DIALOG_STYLE_INPUT, "{D6E1EB}Nombre", "{FFFFFF}> Escribe el nuevo nombre de la empresa:", "Aceptar", "Salir");
				}
				case 1:
				{
					new coordsstring2[300];
					format(coordsstring2, sizeof(coordsstring2), "{D6E1EB}Dinero ({00c200}%d{D6E1EB})", i_Empresa[DentroEmpresa[playerid]][eDinero]);
					Dialog(playerid, D_empresa_O3, DIALOG_STYLE_INPUT, coordsstring2, "{FFFFFF}Escribe la cantidad de dinero que deseas depositar o retirar\n\n{FFFFFF}- Escribe únicamente  {00C200}CANTIDAD (EN NUMEROS){FFFFFF}.", "Depositar", "Retirar");
				}
			}

		case D_empresa_O2:
		{
			if (!response) return 1;
			if (!strlen(inputtext)) return Dialog(playerid, D_empresa_O2, DIALOG_STYLE_INPUT, "{D6E1EB}Nombre{FFFFFF}", "> Escribe algún nombre.", "Aceptar", "Cancelar");
			if (strlen(inputtext) > 20 || strlen(inputtext) < 0)
			{
				_Mensaje(playerid, 0, "106", "No puedes poner el nombre con más de 20 carácteres.");
				return 1;
			}
			alm(i_Empresa[DentroEmpresa[playerid]][eNombre], inputtext);
			format(string, sizeof(string), "Cambiaste el nombre de la empresa:{ffffff} %s", i_Empresa[DentroEmpresa[playerid]][eNombre]);
			_Mensaje(playerid, 4, "33CCFF", string);
			save_Empresa(DentroEmpresa[playerid]);
			return 1;
		}
		case D_empresa_O3:
		{
			if (response) //depositar
			{
				new amount = strval(inputtext);
				new e_id = DentroEmpresa[playerid];
				if(amount < 1) { _Mensaje(playerid, 0, "22", "No puedes depositar menos de un dolar."); return 1; }
				if(ComprobarDineroJ(playerid) >= amount)
				{
					i_Empresa[e_id][eDinero] += amount;
					DarDineroGC(playerid, -amount);
					format(string, sizeof(string), "Depositaste $%d en la empresa.", amount);
					_Mensaje(playerid, 4, "33CCFF", string);
					save_Empresa(e_id);
					format(string, sizeof(string), "Registros: %s deposito $%d en la empresa (ID %d).", NombreRJugador(playerid), amount, e_id);
					Log("Registros/Empresas.log", string);
					return 1;
				} else _Mensaje(playerid, 0, "23", "No tienes tanto dinero encima para depositar.");
			}
			else // retirar
			{
				new amount = strval(inputtext);
				new e_id = DentroEmpresa[playerid];
				if(amount < 1) { _Mensaje(playerid, 0, "24", "No puedes retirar menos de un dolar."); return 1; }
				if(i_Empresa[e_id][eDinero] >= amount)
				{
					i_Empresa[e_id][eDinero] -= amount;
					DarDineroGC(playerid, amount);
					format(string, sizeof(string), "Retiraste $%d de la empresa.", amount);
					_Mensaje(playerid, 4, "33CCFF", string);
					save_Empresa(e_id);
					format(string, sizeof(string), "Registros: %s retiro $%d de la empresa (ID %d).", NombreRJugador(playerid), amount, e_id);
					Log("Registros/Empresas.log", string);
					return 1;
				} else _Mensaje(playerid, 0, "26", "No tienes suficiente dinero en caja para retirar.");
			}
		}
		case D_empresa_O4:
			{
				if(response == 1)
				{
					for(new i = 0; i < 10; i++)
					{
						if(listitem == i)
						{
							new e_id = user[playerid][jEmpresaKey];
							if(InfoVehEmp[e_id][i][vID] == INVALID_PLAYER_VEHICLE_ID) return _Mensaje(playerid, 0, "68", "No puedes interactuar con un inexistente.");
							SetPVarInt(playerid, "slot_veh_e", i);
							Dialog(playerid, D_empresa_O5, DIALOG_STYLE_LIST, "{D6E1EB}Vehículos", "{FFFFFF}Localizar\nVender vehículo\nCambiar color ($60)", "Seleccionar", "Salir");
							return 1;
						}
					}
				}
			}
		case D_empresa_O5:
			if(response) switch(listitem)
			{
				case 0: //localizar
				{
					new e_id = user[playerid][jEmpresaKey];
					new veh = InfoVehEmp[e_id][GetPVarInt(playerid, "slot_veh_e")][vID];
					new Float: carPos[3], zone[MAX_ZONE_NAME];
					GetVehiclePos(veh, carPos[0], carPos[1], carPos[2]);
					GetCar3DZone(veh, zone, sizeof(zone));
					format(string, sizeof(string), "El vehículo de empresa fue localizado en %s.", zone);
					_Mensaje(playerid, 4, "b0b0b0", string);
					SetPlayerCheckpoint(playerid, carPos[0], carPos[1], carPos[2], 15.0);
					SetPVarInt(playerid, "EnCheckPoint", 1);
					TogglePlayerAllDynamicCPs(playerid, false);
					return 1;
				}
				case 1: //vender
				{
					new Str[256], Str_[3000];
					new e_id = user[playerid][jEmpresaKey];
					new vid = GetPVarInt(playerid, "slot_veh_e");
  					Formato(Str, "Modelo: %s - Precio: %d\n¿Estás seguro que deseas venderlo?", nombre_vehiculo[InfoVehEmp[e_id][vid][vModelo] - 400], InfoVehEmp[e_id][vid][vPrecio]);
					strcat(Str_, Str);
					Dialog(playerid, D_empresa_O6, DIALOG_STYLE_MSGBOX, "{D6E1EB}Vehículo de empresa", Str_, "Vender", "Volver");
					return 1;
				}
				case 2: //color
				{
					Dialog(playerid,D_empresa_O7,DIALOG_STYLE_LIST,"{D6E1EB}Cambiar color","- Blanco\n- Negro\n- Rojo\n- Amarillo\n- Verde\n- Azul\n- Celeste\n- Naranja\n- Rosa\n- Violeta\n- Verde Fluor\n- Rojo Fluor\n- Celeste claro\n- Gris","Seleccionar","Volver");
					return 1;
				}
			}
			else
			{
				_Mensaje(playerid, 4, "b0b0b0", "Saliste del menú de vehículos de empresa.");
			}
		case D_empresa_O6:
			if(response)
			{
				new e_id = user[playerid][jEmpresaKey];
				new vid = GetPVarInt(playerid, "slot_veh_e");
				format(string, sizeof(string), "El vehículo de empresa fue vendido por $%d.", InfoVehEmp[e_id][vid][vPrecio]);
				_Mensaje(playerid, 4, "33CCFF", string);
				DarDineroGC(playerid, InfoVehEmp[e_id][vid][vPrecio]);
				borrar_VehEmpresa(vid, e_id);
				return 1;
			}
			else
			{
				Dialog(playerid, D_empresa_O5, DIALOG_STYLE_LIST, "{D6E1EB}Vehículos", "{FFFFFF}Localizar\nVender vehículo\nCambiar color ($60)", "Seleccionar", "Salir");
			}
		case D_empresa_O7:
			if(response)
			{
				new e_id = user[playerid][jEmpresaKey];
				new v = GetPVarInt(playerid, "slot_veh_e");
				switch(listitem)
				{
					case 0: { InfoVehEmp[e_id][v][vColor_1] = 1; InfoVehEmp[e_id][v][vColor_2] = 1; }
					case 1:	{ InfoVehEmp[e_id][v][vColor_1] = 0; InfoVehEmp[e_id][v][vColor_2] = 1; }
					case 2:	{ InfoVehEmp[e_id][v][vColor_1] = 3; InfoVehEmp[e_id][v][vColor_2] = 1; }
					case 3:	{ InfoVehEmp[e_id][v][vColor_1] = 6; InfoVehEmp[e_id][v][vColor_2] = 1; }
					case 4:	{ InfoVehEmp[e_id][v][vColor_1] = 16; InfoVehEmp[e_id][v][vColor_2] = 1; }
					case 5:	{ InfoVehEmp[e_id][v][vColor_1] = 103; InfoVehEmp[e_id][v][vColor_2] = 1; }
					case 6:	{ InfoVehEmp[e_id][v][vColor_1] = 118; InfoVehEmp[e_id][v][vColor_2] = 1; }
					case 7:	{ InfoVehEmp[e_id][v][vColor_1] = 131; InfoVehEmp[e_id][v][vColor_2] = 1; }
					case 8:	{ InfoVehEmp[e_id][v][vColor_1] = 126; InfoVehEmp[e_id][v][vColor_2] = 1; }
					case 9:	{ InfoVehEmp[e_id][v][vColor_1] = 149; InfoVehEmp[e_id][v][vColor_2] = 1; }
					case 10: { InfoVehEmp[e_id][v][vColor_1] = 144; InfoVehEmp[e_id][v][vColor_2] = 1; }
					case 11: { InfoVehEmp[e_id][v][vColor_1] = 151; InfoVehEmp[e_id][v][vColor_2] = 1; }
					case 12: { InfoVehEmp[e_id][v][vColor_1] = 130; InfoVehEmp[e_id][v][vColor_2] = 1; }
					case 13: { InfoVehEmp[e_id][v][vColor_1] = 11; InfoVehEmp[e_id][v][vColor_2] = 1; }
				}
				ChangeVehicleColor(InfoVehEmp[e_id][v][vID], InfoVehEmp[e_id][v][vColor_1], InfoVehEmp[e_id][v][vColor_2]);
				_Mensaje(playerid, 4, "33CCFF", "Cambiaste el color del coche por $60.");
				DarDineroGC(playerid, -60);
				save_Empresa(e_id, false, v);
				return 1;
			}
			else
			{
				Dialog(playerid, D_empresa_O5, DIALOG_STYLE_LIST, "{D6E1EB}Vehículos", "{FFFFFF}Localizar\nVender vehículo\nCambiar color ($60)", "Seleccionar", "Salir");
			}
        case D_EMPRESA_MUEBLES: {
		    if(!response) return 1;
			new Str[350], Str2[sizeof(Str) * MAX_MUEBLES_E], i = DentroEmpresa[playerid], OBJ_INDEX;
			if(i == INVALID_CASA_ID) return 1;
		    if(listitem == 0) {
				Loop(m, MAX_MUEBLES_E, 0) {
				    if(i_Empresa[i][eObjModel][m]) {
						BuscarModeIndexIntE(i_Empresa[i][eObjModel][m], OBJ_INDEX);
				    	Formato(Str, "{ffffff}#%d %s%d | %s\n", m + 1, (!i_Empresa[i][eObjPosX][m]) ? ("{D30000}") : ("{00A400}"),i_Empresa[i][eObjModel][m], ObjetosInteriorE[OBJ_INDEX][2]);
					}
					else Formato(Str, "{b0b0b0}#%d - Vacío\n", m + 1);
					strcat(Str2, Str);
				}
				Dialog(playerid, D_EMPRESA_MUEBLE_C, DIALOG_STYLE_LIST, "{D6E1EB}Selecciona 'Agregar'", Str2, "Agregar", "Cancelar");
			} else if(listitem == 1) {
				Loop(m, MAX_MUEBLES_E, 0) {
				    if(i_Empresa[i][eObjModel][m]) {
						BuscarModeIndexIntE(i_Empresa[i][eObjModel][m], OBJ_INDEX);
				    	Formato(Str, "{ffffff}#%d %s%d | %s\n", m + 1, (!i_Empresa[i][eObjPosX][m]) ? ("{D30000}") : ("{00A400}"),i_Empresa[i][eObjModel][m], ObjetosInteriorE[OBJ_INDEX][2]);
					}
					else Formato(Str, "{b0b0b0}#%d - Vacío\n", m + 1);
					strcat(Str2, Str);
				}
				Dialog(playerid, D_EMPRESA_MUEBLE_G, DIALOG_STYLE_LIST, "{D6E1EB}Selecciona 'Guardar'", Str2, "Guardar", "Cancelar");
			} else if(listitem == 2) {
				Loop(m, MAX_MUEBLES_E, 0) {
				    if(i_Empresa[i][eObjModel][m]) {
						BuscarModeIndexIntE(i_Empresa[i][eObjModel][m], OBJ_INDEX);
				    	Formato(Str, "{ffffff}#%d %s%d | %s\n", m + 1, (!i_Empresa[i][eObjPosX][m]) ? ("{D30000}") : ("{00A400}"),i_Empresa[i][eObjModel][m], ObjetosInteriorE[OBJ_INDEX][2]);
					}
					else Formato(Str, "{b0b0b0}#%d - Vacío\n", m + 1);
					strcat(Str2, Str);
				}
				Dialog(playerid, D_EMPRESA_MUEBLE_E, DIALOG_STYLE_LIST, "{D6E1EB}Selecciona 'Editar'", Str2, "Editar", "Cancelar");
			} else if(listitem == 3) {
				Loop(m, MAX_MUEBLES_E, 0) {
				    if(i_Empresa[i][eObjModel][m]) {
						BuscarModeIndexIntE(i_Empresa[i][eObjModel][m], OBJ_INDEX);
				    	Formato(Str, "{ffffff}#%d %s%d | %s\n", m + 1, (!i_Empresa[i][eObjPosX][m]) ? ("{D30000}") : ("{00A400}"),i_Empresa[i][eObjModel][m], ObjetosInteriorE[OBJ_INDEX][2]);
					}
					else Formato(Str, "{b0b0b0}#%d - Vacío\n", m + 1);
					strcat(Str2, Str);
				}
				Dialog(playerid, D_EMPRESA_MUEBLE_V, DIALOG_STYLE_LIST, "{D6E1EB}Selecciona 'Vender'", Str2, "Vender", "Cancelar");
			} else if(listitem == 4) {
				Loop(m, MAX_MUEBLES_E, 0) {
				    if(i_Empresa[i][eObjModel][m]) {
						BuscarModeIndexIntE(i_Empresa[i][eObjModel][m], OBJ_INDEX);
				    	Formato(Str, "{ffffff}#%d %s%d | %s\n", m + 1, (!i_Empresa[i][eObjPosX][m]) ? ("{D30000}") : ("{00A400}"),i_Empresa[i][eObjModel][m], ObjetosInteriorE[OBJ_INDEX][2]);
					}
					else Formato(Str, "{b0b0b0}#%d - Vacío\n", m + 1);
					strcat(Str2, Str);
				}
				Dialog(playerid, D_EMPRESA_MUEBLE_B, DIALOG_STYLE_LIST, "{D6E1EB}Selecciona 'Borrar'", Str2, "Borrar", "Cancelar");
			}
			else if(listitem == 5) Dialog(playerid, D_EMPRESA_MUEBLE_2, DIALOG_STYLE_LIST, "{D6E1EB}Tipo de muebles", "Repartos\nMecánica", "Seleccionar", "Cancelar");
		}

		case D_EMPRESA_MUEBLE_2:
			if(response) switch(listitem)
			{
				case 0: ShowModelSelectionMenu(playerid, MueblesRepartos, "Muebles de empresa");
				case 1: ShowModelSelectionMenu(playerid, MueblesTalleres, "Muebles de taller");
   			}
        case D_EMPRESA_MUEBLE_C: {
		    if(!response) return 1;
		    new i = DentroEmpresa[playerid];
			if(i == INVALID_CASA_ID) return 1;
            if(!i_Empresa[i][eObjModel][listitem]) return _Mensaje(playerid, 0, "0", "No seleccionaste nada.");
            if(i_Empresa[i][eObjPosX][listitem] != 0.0) return _Mensaje(playerid, 0, "0", "Ese mueble ya está agregado.");
			GetPlayerPos(playerid,i_Empresa[i][eObjPosX][listitem], i_Empresa[i][eObjPosY][listitem], i_Empresa[i][eObjPosZ][listitem]);
			GetPosInFrontOfPlayer(playerid, i_Empresa[i][eObjPosX][listitem], i_Empresa[i][eObjPosY][listitem], 1.0);
			foreach(Player, p) {
			    if(EmpresaActual[p] == i) {
			    	OBJ_MuebleE[p][listitem] = CreatePlayerObject(p, i_Empresa[i][eObjModel][listitem], i_Empresa[i][eObjPosX][listitem], i_Empresa[i][eObjPosY][listitem], i_Empresa[i][eObjPosZ][listitem], 0.0, 0.0, 0.0);
				}
			}
			EditPlayerObject(playerid, OBJ_MuebleE[playerid][listitem]);
			SetPVarInt(playerid,"EditandoMueblesE", 1);
			SetPVarInt(playerid,"ID_MUEBLEE",listitem);
			save_Empresa(DentroEmpresa[playerid], false, -1, i);
		}
		case D_EMPRESA_MUEBLE_G: {
		    if(!response) return 1;
		    new i = DentroEmpresa[playerid];
			if(i == INVALID_CASA_ID) return 1;
            if(!i_Empresa[i][eObjModel][listitem]) return _Mensaje(playerid, 0, "0", "No seleccionaste nada.");
            if(i_Empresa[i][eObjPosX][listitem] == 0.0) return _Mensaje(playerid, 0, "0", "Ese objeto ya está oculto.");
		    i_Empresa[i][eObjPosX][listitem] = 0.0;
		    i_Empresa[i][eObjPosY][listitem] = 0.0;
		    i_Empresa[i][eObjPosZ][listitem] = 0.0;
			foreach(Player, p) {
			    if(EmpresaActual[p] == i) {
			    	DestroyPlayerObject(p, OBJ_MuebleE[p][listitem]);
				}
			}
			save_Empresa(i, false, -1, listitem);
            _Mensaje(playerid, 2, "0", "Se ha guardado correctamente el mueble.");
			return 1;
		}
		case D_EMPRESA_MUEBLE_E: {
		    if(!response) return 1;
			if(!i_Empresa[DentroEmpresa[playerid]][eObjPosX][listitem]) return _Mensaje(playerid, 0, "0", "No puedes editar ese objeto.");
			EditPlayerObject(playerid, OBJ_MuebleE[playerid][listitem]);
			SetPVarInt(playerid,"EditandoMueblesE", 1);
			SetPVarInt(playerid,"ID_MUEBLEE",listitem);
			return 1;
		}
        case D_EMPRESA_MUEBLE_V: {
		    if(!response) return 1;
		    new i = listitem, h = DentroEmpresa[playerid], precio = random(200), dinero = precio / 2;
			if(h == INVALID_CASA_ID) return 1;
			if(i_Empresa[h][eObjModel][i] == INVALID_MUEBLES_ID) return _Mensaje(playerid, 0, "42", "Objeto seleccionado inválido.");
			format(string, sizeof(string), "Vendiste el mueble modelo: %d, por {00C200}$%d.", i_Empresa[h][eObjModel][i], dinero);
            _Mensaje(playerid, 2, "0", string);
            DarDineroGC(playerid, dinero);
			DestruirMuebleEmpresa(h, i);
			i_Empresa[h][eObjModel][i] = 0;
			i_Empresa[h][eObjPosX][i] = 0.0;
			i_Empresa[h][eObjPosY][i] = 0.0;
			i_Empresa[h][eObjPosZ][i] = 0.0;
			i_Empresa[h][eObjRotX][i] = 0.0;
			i_Empresa[h][eObjRotY][i] = 0.0;
			i_Empresa[h][eObjRotZ][i] = 0.0;
			save_Empresa(DentroEmpresa[playerid], false, -1, i);
			return 1;
		}
		case D_EMPRESA_MUEBLE_B: {
		    if(!response) return 1;
		    new i = listitem, h = DentroEmpresa[playerid];
			if(h == INVALID_CASA_ID) return 1;
			DestruirMuebleEmpresa(h, i);
			i_Empresa[h][eObjModel][i] = 0;
			i_Empresa[h][eObjPosX][i] = 0.0;
			i_Empresa[h][eObjPosY][i] = 0.0;
			i_Empresa[h][eObjPosZ][i] = 0.0;
			i_Empresa[h][eObjRotX][i] = 0.0;
			i_Empresa[h][eObjRotY][i] = 0.0;
			i_Empresa[h][eObjRotZ][i] = 0.0;
			_Mensaje(playerid, 2, "0", "Se ha eliminado correctamente el mueble.");
			save_Empresa(DentroEmpresa[playerid], false, -1, i);
			return 1;
		}
		//- Opciones de negocios
		case D_NEGOCIO_OPCIONES:
			if(response) switch(listitem)
			{
				case 0:
				{
					if(user[playerid][jNegocioLlaves] == DentroNegocio[playerid]) return _Mensaje(playerid, 4, "b0b0b0", "No puedes interactuar con el nombre del negocio.");
					Dialog(playerid, D_NEGOCIO_NOMBRE, DIALOG_STYLE_INPUT, "{D6E1EB}Nombre", "{FFFFFF}> Escribe el nuevo nombre de tu negocio:", "Aceptar", "Salir");
				}
				case 1:
				{
					if(user[playerid][jNegocioLlaves] == DentroNegocio[playerid]) return _Mensaje(playerid, 4, "b0b0b0", "No puedes interactuar con el dinero del negocio.");
					new coordsstring2[300];
					format(coordsstring2, sizeof(coordsstring2), "{D6E1EB}Dinero ({00c200}%d{D6E1EB})", i_Negocio[DentroNegocio[playerid]][nDinero]);
					Dialog(playerid, D_NEGOCIO_DINERO, DIALOG_STYLE_INPUT, coordsstring2, "{FFFFFF}Escribe la cantidad de dinero que deseas depositar o retirar\n\n{FFFFFF}- Escribe únicamente el {00C200}CANTIDAD (EN NUMEROS){FFFFFF}.", "Depositar", "Retirar");
				}
				case 2:
				{
					if(user[playerid][jNegocioLlaves] == DentroNegocio[playerid]) return _Mensaje(playerid, 4, "b0b0b0", "No puedes interactuar con los productos.");
					new n_id = DentroNegocio[playerid];
					if (n_id == -1) return _Mensaje(playerid, 4, "b0b0b0", "Operación cancelada.");

					new tipo = i_Negocio[n_id][nTipo], tipo2[50], costo = 0;

					switch (tipo)
					{
					    case 1: costo = 3894, tipo2 = "Productos de venta";
					    case 2: costo = 4026, tipo2 = "Ropa y zapatos";
					    case 3: costo = 4290, tipo2 = "Bebidas y comestibles";
					    case 4: costo = 3135, tipo2 = "Comestibles";
					    case 5: costo = 2970, tipo2 = "Comestibles";
					    case 6: costo = 2871, tipo2 = "Comestibles";
					    case 7: costo = 15015, tipo2 = "Armas y cargadores";
					    case 8: costo = 2805, tipo2 = "Champús y geles";
					    case 9: costo = 2640, tipo2 = "Productos eróticos";
					    case 10: costo = 2475, tipo2 = "Productos de venta";
					    case 11: costo = 9735, tipo2 = "Productos electrónicos";
					    case 12: costo = 3960, tipo2 = "Bebidas y comestibles";
					    case 13: costo = 3135, tipo2 = "Herramientas";
					    case 14: costo = 10395, tipo2 = "Bebidas y comestibles";
					    case 15: costo = 8910, tipo2 = "Bebidas y comestibles";
					    case 16: costo = 9537, tipo2 = "Bebidas y comestibles";
					    case 17: costo = 6930, tipo2 = "Artículos usados";
					}

					new coordsstring[300], DialogStatus[3000];
					format(coordsstring, sizeof(coordsstring),
					"{FFFFFF}Información del pedido:\n\n\
					 Costo: {00c200}%d${FFFFFF}\n\
					 Cantidad: {C57BBB}1,000{FFFFFF}\n\
					 Tipo: {b00000}%s{FFFFFF}\n\n\
						Les recuerda el distribuidor que el tiempo llegada varia.\n\n",
					costo, tipo2);
					strcat(DialogStatus, coordsstring);
					Dialog(playerid, D_NEGOCIO_PRODUCTOS, DIALOG_STYLE_MSGBOX, "{D6E1EB}Productos", DialogStatus, "Ordenar", "Cancelar");
				}
				case 3:
				{
					if(i_Negocio[DentroNegocio[playerid]][nSeguro] == 0)
					{
						i_Negocio[DentroNegocio[playerid]][nSeguro] = 1;
						AccionesRol(playerid, 0, "saca sus llaves de negocio y lo abre.");
						TextoPantalla(playerid, "~g~Negocio abierto", 3500, 1);
					}
					else
					{
						i_Negocio[DentroNegocio[playerid]][nSeguro] = 0;
						AccionesRol(playerid, 0, "saca sus llaves de negocio y lo cierra.");
						TextoPantalla(playerid, "~r~Negocio Cerrado", 3500, 1);
					}
				}
				case 4: n_verArmario(playerid, DentroNegocio[playerid]);
			}

		case D_NEGOCIO_NOMBRE:
		{
			if (!response) return 1;
			if (!strlen(inputtext)) return Dialog(playerid, D_NEGOCIO_NOMBRE, DIALOG_STYLE_INPUT, "{D6E1EB}Nombre{FFFFFF}", "> Escribe algún nombre.", "Aceptar", "Cancelar");
			if (strlen(inputtext) > 20 || strlen(inputtext) < 0)
			{
				_Mensaje(playerid, 0, "106", "No puedes poner el nombre con más de 20 carácteres.");
				return 1;
			}
			alm(i_Negocio[DentroNegocio[playerid]][nNombre], inputtext);
			format(string, sizeof(string), "Cambiaste el nombre del negocio:{ffffff} %s", i_Negocio[DentroNegocio[playerid]][nNombre]);
			_Mensaje(playerid, 4, "33CCFF", string);
			save_Negocio(DentroNegocio[playerid]);
			return 1;
		}
		case D_NEGOCIO_DINERO:
		{
			if (response) //depositar
			{
				new amount = strval(inputtext);
				new nid = DentroNegocio[playerid];
				if(amount < 1) { _Mensaje(playerid, 0, "22", "No puedes depositar menos de un dolar."); return 1; }
				if(ComprobarDineroJ(playerid) >= amount)
				{
					i_Negocio[nid][nDinero] += amount;
					DarDineroGC(playerid, -amount);
					format(string, sizeof(string), "Depositaste $%d en tu negocio.", amount);
					_Mensaje(playerid, 4, "33CCFF", string);
					save_Negocio(nid);
					format(string, sizeof(string), "Registros: %s deposito $%d en su negocio (neg ID %d).", NombreRJugador(playerid), amount, nid);
					Log("Registros/Negocios.log", string);
					return 1;
				} else _Mensaje(playerid, 0, "23", "No tienes tanto dinero encima para depositar.");
			}
			else // retirar
			{
				new amount = strval(inputtext);
				new nid = DentroNegocio[playerid];
				if(amount < 1) { _Mensaje(playerid, 0, "24", "No puedes retirar menos de un dolar."); return 1; }
				if(i_Negocio[nid][nDinero] >= amount)
				{
					i_Negocio[nid][nDinero] -= amount;
					DarDineroGC(playerid, amount);
					format(string, sizeof(string), "Retiraste $%d de tu negocio.", amount);
					_Mensaje(playerid, 4, "33CCFF", string);
					save_Negocio(nid);
					format(string, sizeof(string), "Registros: %s retiro $%d de su negocio (neg ID %d).", NombreRJugador(playerid), amount, nid);
					Log("Registros/Negocios.log", string);
					return 1;
				} else _Mensaje(playerid, 0, "26", "No tienes suficiente dinero en caja para retirar.");
			}
		}
		case D_NEGOCIO_PRODUCTOS:
		{
				if (!response) return _Mensaje(playerid, 4, "b0b0b0", "Operación cancelada.");
				new n_id = DentroNegocio[playerid];
				new tipo = i_Negocio[n_id][nTipo], costo = 0;

				switch (tipo)
				{
					case 1: costo = 3894;
					case 2: costo = 4026;
					case 3: costo = 4290;
					case 4: costo = 3135;
					case 5: costo = 2970;
					case 6: costo = 2871;
					case 7: costo = 15015;
					case 8: costo = 2805;
					case 9: costo = 2640;
					case 10: costo = 2475;
					case 11: costo = 9735;
					case 12: costo = 3960;
					case 13: costo = 3135;
					case 14: costo = 10395;
					case 15: costo = 8910;
					case 16: costo = 9537;
					case 17: costo = 6930;
				}
				if (ComprobarDineroJ(playerid) >= costo)
				{
					if (i_Negocio[n_id][nPedido] == 5) return _Mensaje(playerid, 4, "b0b0b0", "Ya posees 5 pedidos pendientes.");
					i_Negocio[n_id][nPedido] ++;
					Compra(playerid, costo);
					save_Negocio(n_id);
					format(string, sizeof(string), "Ordenaste 1,000 productos por $%d.", costo);
					_Mensaje(playerid, 4, "FFEA5F", string);
					return 1;
				}
				else { format(string, sizeof(string), "No tienes $%d para pagar los productos.", costo); _Mensaje(playerid, 4, "b0b0b0", string); }
		}
        case D_NEGOCIO_MUEBLES: {
		    if(!response) return 1;
			new Str[350], Str2[sizeof(Str) * MAX_MUEBLES_N], i = DentroNegocio[playerid], OBJ_INDEX;
			if(i == INVALID_NEGOCIO_ID) return 1;
		    if(listitem == 0) {
				Loop(m, MAX_MUEBLES_N, 0) {
				    if(i_Negocio[i][nObjModel][m]) {
						BuscarModeIndexIntN(i_Negocio[i][nObjModel][m], OBJ_INDEX);
				    	Formato(Str, "{ffffff}#%d %s%d | %s\n", m + 1, (!i_Negocio[i][nObjPosX][m]) ? ("{D30000}") : ("{00A400}"),i_Negocio[i][nObjModel][m], ObjetosInteriorN[OBJ_INDEX][2]);
					}
					else Formato(Str, "{ffffff}#%d - Vacío\n", m + 1);
					strcat(Str2, Str);
				}
				Dialog(playerid, D_NEGOCIO_MUEBLE_C, DIALOG_STYLE_LIST, "{D6E1EB}Selecciona 'Agregar'", Str2, "Agregar", "Cancelar");
			} else if(listitem == 1) {
				Loop(m, MAX_MUEBLES_N, 0) {
				    if(i_Negocio[i][nObjModel][m]) {
						BuscarModeIndexIntN(i_Negocio[i][nObjModel][m], OBJ_INDEX);
				    	Formato(Str, "{ffffff}#%d %s%d | %s\n", m + 1, (!i_Negocio[i][nObjPosX][m]) ? ("{D30000}") : ("{00A400}"),i_Negocio[i][nObjModel][m], ObjetosInteriorN[OBJ_INDEX][2]);
					}
					else Formato(Str, "{ffffff}#%d - Vacío\n", m + 1);
					strcat(Str2, Str);
				}
				Dialog(playerid, D_NEGOCIO_MUEBLE_G, DIALOG_STYLE_LIST, "{D6E1EB}Selecciona 'Guardar'", Str2, "Guardar", "Cancelar");
			} else if(listitem == 2) {
				Loop(m, MAX_MUEBLES_N, 0) {
				    if(i_Negocio[i][nObjModel][m]) {
						BuscarModeIndexIntN(i_Negocio[i][nObjModel][m], OBJ_INDEX);
				    	Formato(Str, "{ffffff}#%d %s%d | %s\n", m + 1, (!i_Negocio[i][nObjPosX][m]) ? ("{D30000}") : ("{00A400}"),i_Negocio[i][nObjModel][m], ObjetosInteriorN[OBJ_INDEX][2]);
					}
					else Formato(Str, "{ffffff}#%d - Vacío\n", m + 1);
					strcat(Str2, Str);
				}
				Dialog(playerid, D_NEGOCIO_MUEBLE_E, DIALOG_STYLE_LIST, "{D6E1EB}Selecciona 'Editar'", Str2, "Editar", "Cancelar");
			} else if(listitem == 3) {
				Loop(m, MAX_MUEBLES_N, 0) {
				    if(i_Negocio[i][nObjModel][m]) {
						BuscarModeIndexIntN(i_Negocio[i][nObjModel][m], OBJ_INDEX);
				    	Formato(Str, "{ffffff}#%d %s%d | %s\n", m + 1, (!i_Negocio[i][nObjPosX][m]) ? ("{D30000}") : ("{00A400}"),i_Negocio[i][nObjModel][m], ObjetosInteriorN[OBJ_INDEX][2]);
					}
					else Formato(Str, "{ffffff}#%d - Vacío\n", m + 1);
					strcat(Str2, Str);
				}
				Dialog(playerid, D_NEGOCIO_MUEBLE_V, DIALOG_STYLE_LIST, "{D6E1EB}Selecciona 'Vender'", Str2, "Vender", "Cancelar");
			} else if(listitem == 4) {
				Loop(m, MAX_MUEBLES_N, 0) {
				    if(i_Negocio[i][nObjModel][m]) {
						BuscarModeIndexIntN(i_Negocio[i][nObjModel][m], OBJ_INDEX);
				    	Formato(Str, "{ffffff}#%d %s%d | %s\n", m + 1, (!i_Negocio[i][nObjPosX][m]) ? ("{D30000}") : ("{00A400}"),i_Negocio[i][nObjModel][m], ObjetosInteriorN[OBJ_INDEX][2]);
					}
					else Formato(Str, "{ffffff}#%d - Vacío\n", m + 1);
					strcat(Str2, Str);
				}
				Dialog(playerid, D_NEGOCIO_MUEBLE_B, DIALOG_STYLE_LIST, "{D6E1EB}Selecciona 'Borrar'", Str2, "Borrar", "Cancelar");
			} else if(listitem == 5) ShowModelSelectionMenu(playerid, MueblesNegocios, "Muebles de negocio");

			return 1;
		}
        case D_NEGOCIO_MUEBLE_C: {
		    if(!response) return 1;
		    new i = DentroNegocio[playerid];
			if(i == INVALID_NEGOCIO_ID) return 1;
            if(!i_Negocio[i][nObjModel][listitem]) return _Mensaje(playerid, 0, "0", "No seleccionaste nada.");
            if(i_Negocio[i][nObjPosX][listitem] != 0.0) return _Mensaje(playerid, 0, "0", "Ese mueble ya está agregado.");
			GetPlayerPos(playerid,i_Negocio[i][nObjPosX][listitem], i_Negocio[i][nObjPosY][listitem], i_Negocio[i][nObjPosZ][listitem]);
			GetPosInFrontOfPlayer(playerid, i_Negocio[i][nObjPosX][listitem], i_Negocio[i][nObjPosY][listitem], 1.0);
			foreach(Player, p) {
			    if(NegocioActual[p] == i) {
			    	OBJ_MuebleN[p][listitem] = CreatePlayerObject(p, i_Negocio[i][nObjModel][listitem], i_Negocio[i][nObjPosX][listitem], i_Negocio[i][nObjPosY][listitem], i_Negocio[i][nObjPosZ][listitem], 0.0, 0.0, 0.0);
				}
			}
			SetPVarInt(playerid,"EditandoMueblesN", 1);
			SetPVarInt(playerid,"ID_MUEBLEN",listitem);
			EditPlayerObject(playerid, OBJ_MuebleN[playerid][listitem]);
			save_Negocio(DentroNegocio[playerid], false, i);
		}
		case D_NEGOCIO_MUEBLE_G: {
		    if(!response) return 1;
		    new i = DentroNegocio[playerid];
			if(i == INVALID_NEGOCIO_ID) return 1;
            if(!i_Negocio[i][nObjModel][listitem]) return _Mensaje(playerid, 0, "0", "No seleccionaste nada.");
            if(i_Negocio[i][nObjPosX][listitem] == 0.0) return _Mensaje(playerid, 0, "0", "Ese objeto ya está oculto.");
		    i_Negocio[i][nObjPosX][listitem] = 0.0;
		    i_Negocio[i][nObjPosY][listitem] = 0.0;
		    i_Negocio[i][nObjPosZ][listitem] = 0.0;
			foreach(Player, p) {
			    if(NegocioActual[p] == i) {
			    	DestroyPlayerObject(p, OBJ_MuebleN[p][listitem]);
				}
			}
			save_Negocio(i, false, listitem);
            _Mensaje(playerid, 2, "0", "Se ha guardado correctamente el mueble.");
			return 1;
		}
		case D_NEGOCIO_MUEBLE_E: {
		    if(!response) return 1;
			if(!i_Negocio[DentroNegocio[playerid]][nObjPosX][listitem]) return _Mensaje(playerid, 0, "0", "No puedes editar ese objeto.");
			EditPlayerObject(playerid, OBJ_MuebleN[playerid][listitem]);
			SetPVarInt(playerid,"EditandoMueblesN", 1);
			SetPVarInt(playerid,"ID_MUEBLEN",listitem);
			return 1;
		}
        case D_NEGOCIO_MUEBLE_V: {
		    if(!response) return 1;
		    new i = listitem, h = DentroNegocio[playerid], precio = PrecioMuebleDeNegocios(i_Negocio[h][nObjModel][i]), dinero = precio / 2;
			if(h == INVALID_NEGOCIO_ID) return 1;
			if(i_Negocio[h][nObjModel][i] == INVALID_MUEBLES_ID) return _Mensaje(playerid, 0, "42", "Objeto seleccionado inválido.");
			format(string, sizeof(string), "Vendiste el mueble modelo: %d, por {00C200}$%d.", i_Negocio[h][nObjModel][i], dinero);
            _Mensaje(playerid, 2, "0", string);
            DarDineroGC(playerid, dinero);
			DestruirMuebleNegocio(h, i);
			i_Negocio[h][nObjModel][i] = 0;
			i_Negocio[h][nObjPosX][i] = 0.0;
			i_Negocio[h][nObjPosY][i] = 0.0;
			i_Negocio[h][nObjPosZ][i] = 0.0;
			i_Negocio[h][nObjRotX][i] = 0.0;
			i_Negocio[h][nObjRotY][i] = 0.0;
			i_Negocio[h][nObjRotZ][i] = 0.0;
			save_Negocio(DentroNegocio[playerid], false, i);
			return 1;
		}
		case D_NEGOCIO_MUEBLE_B: {
		    if(!response) return 1;
		    new i = listitem, h = DentroNegocio[playerid];
			if(h == INVALID_NEGOCIO_ID) return 1;
			DestruirMuebleNegocio(h, i);
			i_Negocio[h][nObjModel][i] = 0;
			i_Negocio[h][nObjPosX][i] = 0.0;
			i_Negocio[h][nObjPosY][i] = 0.0;
			i_Negocio[h][nObjPosZ][i] = 0.0;
			i_Negocio[h][nObjRotX][i] = 0.0;
			i_Negocio[h][nObjRotY][i] = 0.0;
			i_Negocio[h][nObjRotZ][i] = 0.0;
			_Mensaje(playerid, 2, "0", "Se ha eliminado correctamente el mueble.");
			save_Negocio(DentroNegocio[playerid], false, i);
			return 1;
		}
		//-
    }
    return 0;
}

funcion _Mecanico(playerid, tipo, idcar)
{
	if(_Tusando[playerid] == 1)
	{
		switch (tipo)
		{
	        case 1:
	            {
	                ChangeVehicleColor(InfoVehiculo[idcar][vID], InfoVehiculo[idcar][vColor_1], InfoVehiculo[idcar][vColor_2]);
	                _Mensaje(playerid, 4, "ADC3E7", "La pintura del vehículo fue cambiada con éxito, costo $1500.");
					Compra(playerid, 1500);
	                ActualizarVehiculo(idcar);
	            }
	        case 2:
	            {
					GasolinaInicialVeh[idcar] = 120;
					if(user[playerid][jPremium] == 0) {
						Compra(playerid, 400);
						_Mensaje(playerid, 4, "ADC3E7", "El tanque de gasolina del vehículo fue llenada por $400.");
					} else {
						Compra(playerid, 250);
						_Mensaje(playerid, 4, "ADC3E7", "El tanque de gasolina del vehículo fue llenada por $250.");
					}
				}
	        case 3:
	            {
					SetVehicleHealth(idcar, 750);
					new panels, doors, lights, tires;
					GetVehicleDamageStatus(idcar, panels, doors, lights, tires);
					RepairVehicle(idcar);
					UpdateVehicleDamageStatus(idcar, panels, doors, lights, tires);
					if(user[playerid][jPremium] == 0) {
						Compra(playerid, 250);
						_Mensaje(playerid, 4, "ADC3E7", "El vehículo fue reparado con éxito, cobro 250$.");
					} else {
						Compra(playerid, 320);
						_Mensaje(playerid, 4, "ADC3E7", "El vehículo fue reparado con éxito, cobro 320$.");
					}
	   				SetTimerEx("dar_F", 2000, false, "d", playerid);
				}
	        case 4:
	            {
					new Float: cvida;
					GetVehicleHealth(idcar, cvida);
					new panels, doors, lights, tires, tires2;
					GetVehicleDamageStatus(idcar, panels, doors, lights, tires);
					RepairVehicle(idcar);
					SetVehicleHealth(idcar, cvida);
					GetVehicleDamageStatus(idcar, panels, doors, lights, tires2);
					if(tires != 0) {
						tires = encode_tires(1, 1, 1, 1);
						UpdateVehicleDamageStatus(idcar, panels, doors, lights, tires);
					}
					if(user[playerid][jPremium] == 0) {
						Compra(playerid, 500);
						_Mensaje(playerid, 4, "ADC3E7", "El vehículo ahora posee una carrocería nueva, el costo fue 500$.");
					} else {
						Compra(playerid, 350);
						_Mensaje(playerid, 4, "ADC3E7", "El vehículo ahora posee una carrocería nueva, el costo fue 350$.");
					}
	   				SetTimerEx("dar_F", 2000, false, "d", playerid);
				}
	        case 5:
	            {
					new panels, doors, lights, tires;
					GetVehicleDamageStatus(idcar, panels, doors, lights, tires);
					tires = encode_tires(0, 0, 0, 0);
					UpdateVehicleDamageStatus(idcar, panels, doors, lights, tires);
					if(user[playerid][jPremium] == 0) {
						Compra(playerid, 75);
						_Mensaje(playerid, 4, "ADC3E7", "Las ruedas del vehículo han sido cambiadas por 75$.");
					} else {
						Compra(playerid, 700);
						_Mensaje(playerid, 4, "ADC3E7", "El chasis del vehículo han sido cambiado por 700$.");
					}
	   				SetTimerEx("dar_F", 2000, false, "d", playerid);
				}
	    }
		_Tusando[playerid] = 0;
	}
	return 1;
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source) // - Función de seleccionar jugadores en tabulador
{
    return 1;
}

public OnGameModeInit()
{
	djson_GameModeInit();
	AntiAmx();

	SanMusic = 0;

	//» Anticheat Jorge.

	AntiG[Balas] = true;

    //» Configuración
    SetGameModeText("GS:RP v2X");
	SendRconCommand("hostname [ESP] Gangsters Roleplay (2.X) | www.gs-rp.es");
    SendRconCommand("weburl www.gs-rp.es");
    SendRconCommand("mapname Los Santos");
    SendRconCommand("rcon_password CMBlock45cm1L10");
    SendRconCommand("language Español / Spanish");



	//» Ajustes
	SetWeather(clima);
    AllowInteriorWeapons(true);
    ShowPlayerMarkers(PLAYER_MARKERS_MODE_GLOBAL);
    EnableStuntBonusForAll(false);
    DisableInteriorEnterExits();
    ManualVehicleEngineAndLights();
    SetNameTagDrawDistance(20.0);

	//» Cargado de datos
	CargarGraffitis();
	CargarObjetosAdmin();
    CargarPuertas();
    CargarStuff();
    CargarCasas();
    CargarGarages();
    CargarNegocios();
    CargarGasolineras();
    CargarIncendios();
    CargarPeajes();
    CargarFacVeh();
    CargarTelefonos();
    CargarMarias();

	//» Model's
    SkinsHombre = LoadModelSelectionMenu("Modelos/SkinsHombre.txt");
    SkinsMujer = LoadModelSelectionMenu("Modelos/SkinsMujer.txt");
    AccesoriosN = LoadModelSelectionMenu("Modelos/Accesorios.txt");
    AccesoriosVIP = LoadModelSelectionMenu("Modelos/AccesoriosVIP.txt");
    MueblesCasa = LoadModelSelectionMenu("Modelos/MueblesCasa.txt");
    MueblesNegocios = LoadModelSelectionMenu("Modelos/MueblesNegocios.txt");
    MueblesRepartos = LoadModelSelectionMenu("Modelos/MueblesRepartos.txt");
    MueblesTalleres = LoadModelSelectionMenu("Modelos/MueblesTalleres.txt");
    MueblesGarages = LoadModelSelectionMenu("Modelos/MueblesGarages.txt");

	//negocio
	CreateDynamicObject(18009, 412.28436, -54.44561, 999.07080,   0.00000, 0.00000, -89.93999);
	CreateDynamicObject(18981, 413.15521, -51.14120, 1000.37079,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(18981, 378.91949, -189.13831, 999.11432,   0.00000, 90.00000, 90.00000);

    //» Vehículos

	LSPDVehicle[0] = AddStaticVehicleEx(598, 2298.2527, 2451.6582, 2.9592, 270.0000, 0, 1, TIEMPO_RESPAWN); // Unidades supervisoras
	LSPDVehicle[1] = AddStaticVehicleEx(598, 2298.2527, 2456.1086, 2.9592, 270.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[2] = AddStaticVehicleEx(598, 2314.3179, 2460.4553, 2.9592, 90.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[3] = AddStaticVehicleEx(598, 2314.3179, 2455.5488, 2.9592, 90.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[4] = AddStaticVehicleEx(598, 2298.2527, 2464.4087, 2.9592, 270.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[5] = AddStaticVehicleEx(598, 2298.2527, 2460.3669, 2.9592, 270.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[6] = AddStaticVehicleEx(598, 2314.3179, 2465.5300, 2.9592, 90.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[7] = AddStaticVehicleEx(596, 2285.9263, 2431.2925, 2.9592, 0.0000, 0, 1, TIEMPO_RESPAWN);// Unidades ordinarias
	LSPDVehicle[8] = AddStaticVehicleEx(596, 2277.1726, 2431.2925, 2.9592, 0.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[9] = AddStaticVehicleEx(596, 2272.7781, 2431.2925, 2.9592, 0.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[10] = AddStaticVehicleEx(596, 2268.3774, 2431.2925, 2.9592, 0.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[11] = AddStaticVehicleEx(596, 2263.9836, 2431.2925, 2.9592, 0.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[12] = AddStaticVehicleEx(596, 2259.6284, 2431.2925, 2.9592, 0.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[13] = AddStaticVehicleEx(596, 2255.2034, 2431.2925, 2.9592, 0.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[14] = AddStaticVehicleEx(596, 2250.8127, 2431.2925, 2.9592, 0.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[15] = AddStaticVehicleEx(596, 2246.5271, 2431.2925, 2.9592, 0.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[16] = AddStaticVehicleEx(596, 2240.3438, 2437.3914, 2.9592, 270.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[17] = AddStaticVehicleEx(596, 2240.3438, 2442.3137, 2.9592, 270.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[18] = AddStaticVehicleEx(596, 2240.3438, 2447.1147, 2.9592, 270.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[19] = AddStaticVehicleEx(596, 2240.3438, 2451.8149, 2.9592, 270.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[20] = AddStaticVehicleEx(596, 2240.3438, 2456.7146, 2.9592, 270.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[21] = AddStaticVehicleEx(596, 2240.3438, 2461.4316, 2.9592, 270.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[22] = AddStaticVehicleEx(596, 2240.3438, 2466.1245, 2.9592, 270.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[23] = AddStaticVehicleEx(596, 2240.3438, 2470.9873, 2.9592, 270.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[24] = AddStaticVehicleEx(596, 2240.3438, 2475.6973, 2.9592, 270.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[25] = AddStaticVehicleEx(597, 2290.3569, 2431.2925, 2.9592, 0.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[26] = AddStaticVehicleEx(597, 2294.7415, 2431.2925, 2.9592, 0.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[27] = AddStaticVehicleEx(599, 2285.6899, 2473.5034, 3.3942, 0.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[28] = AddStaticVehicleEx(599, 2281.3469, 2473.5034, 3.3942, 0.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[29] = AddStaticVehicleEx(599, 2276.9719, 2473.5034, 3.3942, 0.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[30] = AddStaticVehicleEx(599, 2272.4778, 2473.5034, 3.3942, 0.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[31] = AddStaticVehicleEx(597, 2316.9534, 2431.2925, 2.9592, 0.0000, 0, 1, TIEMPO_RESPAWN);// Unidades SWAT
	LSPDVehicle[32] = AddStaticVehicleEx(597, 2312.1187, 2431.2925, 2.9592, 0.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[33] = AddStaticVehicleEx(597, 2307.8069, 2431.2925, 2.9592, 0.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[34] = AddStaticVehicleEx(597, 2303.4390, 2431.2925, 2.9592, 0.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[35] = AddStaticVehicleEx(596, 2299.0066, 2431.2925, 2.9592, 0.0000, 0, 1, TIEMPO_RESPAWN);
	LSPDVehicle[36] = AddStaticVehicleEx(601, 2316.8582, 2431.4954, -7.7023, 0.0000, 0, 0, TIEMPO_RESPAWN);
	LSPDVehicle[37] = AddStaticVehicleEx(601, 2311.9529, 2431.4954, -7.7023, 0.0000, 0, 0, TIEMPO_RESPAWN);
	LSPDVehicle[38] = AddStaticVehicleEx(528, 2307.7952, 2431.4954, -7.4550, 0.0000, 0, 0, TIEMPO_RESPAWN);
	LSPDVehicle[39] = AddStaticVehicleEx(528, 2303.3784, 2431.4954, -7.4550, 0.0000, 0, 0, TIEMPO_RESPAWN);
	LSPDVehicle[40] = AddStaticVehicleEx(490, 2299.0344, 2430.6570, -7.3206, 0.0000, 0, 0, TIEMPO_RESPAWN);
	LSPDVehicle[41] = AddStaticVehicleEx(490, 2294.6240, 2430.6570, -7.3206, 0.0000, 0, 0, TIEMPO_RESPAWN);
	LSPDVehicle[42] = AddStaticVehicleEx(560, 2290.3079, 2430.6655, -7.8645, 0.0000, 0, 0, TIEMPO_RESPAWN);
	LSPDVehicle[43] = AddStaticVehicleEx(560, 2285.8792, 2430.6465, -7.8645, 0.0000, 0, 0, TIEMPO_RESPAWN);
	LSPDVehicle[44] = AddStaticVehicleEx(525, 2314.4014, 2500.3071, 3.1327, 90.0000, 0, 0, TIEMPO_RESPAWN);// Unidades de grúa
	LSPDVehicle[45] = AddStaticVehicleEx(525, 2314.4014, 2495.2517, 3.1327, 90.0000, 0, 0, TIEMPO_RESPAWN);
	LSPDVehicle[46] = AddStaticVehicleEx(525, 2314.4014, 2490.2588, 3.1327, 90.0000, 0, 0, TIEMPO_RESPAWN);
	LSPDVehicle[47] = AddStaticVehicleEx(525, 2314.4014, 2484.9961, 3.1327, 90.0000, 0, 0, TIEMPO_RESPAWN);
	LSPDVehicle[48] = AddStaticVehicleEx(468, 2314.3049, 2481.1272, 2.8640, 90.0000, 0, 0, TIEMPO_RESPAWN);// Unidades motorizadas
	LSPDVehicle[49] = AddStaticVehicleEx(468, 2314.3049, 2479.1770, 2.8640, 90.0000, 0, 0, TIEMPO_RESPAWN);
	LSPDVehicle[50] = AddStaticVehicleEx(521, 2314.3049, 2476.5310, 2.7635, 90.0000, 0, 0, TIEMPO_RESPAWN);
	LSPDVehicle[51] = AddStaticVehicleEx(521, 2314.3049, 2474.4368, 2.7635, 90.0000, 0, 0, TIEMPO_RESPAWN);
	LSPDVehicle[52] = AddStaticVehicleEx(523, 2316.8196, 2469.1643, 2.7586, 90.0000, 0, 0, TIEMPO_RESPAWN);
	LSPDVehicle[53] = AddStaticVehicleEx(523, 2312.3538, 2469.1643, 2.7586, 90.0000, 0, 0, TIEMPO_RESPAWN);
	LSPDVehicle[54] = AddStaticVehicleEx(523, 2316.8196, 2471.2266, 2.7586, 90.0000, 0, 0, TIEMPO_RESPAWN);
	LSPDVehicle[55] = AddStaticVehicleEx(523, 2312.3538, 2471.2266, 2.7586, 90.0000, 0, 0, TIEMPO_RESPAWN);
	LSPDVehicle[56] = AddStaticVehicleEx(522, 2317.7610, 2475.3923, 2.7635, 90.0000, 0, 0, TIEMPO_RESPAWN);
	LSPDVehicle[57] = AddStaticVehicleEx(522, 2317.7610, 2480.0469, 2.7635, 90.0000, 0, 0, TIEMPO_RESPAWN);
	LSPDVehicle[58] = AddStaticVehicleEx(560, 2285.7339, 2474.2329, -7.7968, 0.0000, 0, 0, TIEMPO_RESPAWN);// Unidades rapidas
	LSPDVehicle[59] = AddStaticVehicleEx(402, 2281.3623, 2474.2329, -7.7968, 0.0000, 0, 0, TIEMPO_RESPAWN);
	LSPDVehicle[60] = AddStaticVehicleEx(480, 2276.9363, 2474.2329, -7.7968, 0.0000, 0, 0, TIEMPO_RESPAWN);
	LSPDVehicle[61] = AddStaticVehicleEx(415, 2272.5574, 2474.2329, -7.7968, 0.0000, 0, 0, TIEMPO_RESPAWN);
	LSPDVehicle[62] = AddStaticVehicleEx(541, 2268.1379, 2474.2329, -7.7968, 0.0000, 0, 0, TIEMPO_RESPAWN);
	LSPDVehicle[63] = AddStaticVehicleEx(411, 2263.8267, 2474.2329, -7.7968, 0.0000, 0, 0, TIEMPO_RESPAWN);
	LSPDVehicle[64] = AddStaticVehicleEx(596, 2277.3196, 2431.2200, -7.7391, 0.0000, 1, 1, TIEMPO_RESPAWN);// Unidades ALPHA
	LSPDVehicle[65] = AddStaticVehicleEx(596, 2272.7402, 2431.2200, -7.7391, 0.0000, 1, 1, TIEMPO_RESPAWN);
	LSPDVehicle[66] = AddStaticVehicleEx(596, 2268.3892, 2431.2200, -7.7391, 0.0000, 1, 1, TIEMPO_RESPAWN);
	LSPDVehicle[67] = AddStaticVehicleEx(596, 2264.0217, 2431.2200, -7.7391, 0.0000, 1, 1, TIEMPO_RESPAWN);
	LSPDVehicle[68] = AddStaticVehicleEx(596, 2259.6182, 2431.2200, -7.7391, 0.0000, 1, 1, TIEMPO_RESPAWN);
	LSPDVehicle[69] = AddStaticVehicleEx(562, 575.0209, -655.8167, -54.0174, 270.0000, 61, 61, TIEMPO_RESPAWN); //DIC
	LSPDVehicle[70] = AddStaticVehicleEx(579, 575.6042, -647.6260, -53.7732, 270.0000, 16, 16, TIEMPO_RESPAWN);
	LSPDVehicle[71] = AddStaticVehicleEx(560, 575.0209, -651.7235, -54.0779, 270.0000, 43, 43, TIEMPO_RESPAWN);
	LSPDVehicle[72] = AddStaticVehicleEx(400, 575.3453, -643.5202, -53.6905, 270.0000, 97, 97, TIEMPO_RESPAWN);
	LSPDVehicle[73] = AddStaticVehicleEx(542, 574.9289, -639.4645, -53.9721, 270.0000, 36, 36, TIEMPO_RESPAWN);
	LSPDVehicle[74] = AddStaticVehicleEx(529, 574.9006, -635.2828, -54.1223, 270.0000, 85, 85, TIEMPO_RESPAWN);
	LSPDVehicle[75] = AddStaticVehicleEx(566, 575.3110, -631.2819, -54.0132, 270.0000, 6, 6, TIEMPO_RESPAWN);
	LSPDVehicle[76] = AddStaticVehicleEx(567, 575.1531, -627.1909, -53.8758, 270.0000, 13, 13, TIEMPO_RESPAWN);
	LSPDVehicle[77] = AddStaticVehicleEx(426, 575.1848, -623.0947, -53.9790, 270.0000, 16, 92, TIEMPO_RESPAWN);
	LSPDVehicle[77] = AddStaticVehicleEx(440, 581.6214, -616.9471, -53.6192, 180.0000, 2, 2, TIEMPO_RESPAWN);
	LSPDVehicle[78] = AddStaticVehicleEx(498, 585.5984, -616.5118, -53.6981, 180.0000, 32, 32, TIEMPO_RESPAWN);
	LSPDVehicle[79] = AddStaticVehicleEx(565, 589.6548, -616.6652, -54.1608, 180.0000, 65, 66, TIEMPO_RESPAWN);
	LSPDVehicle[80] = AddStaticVehicleEx(554, 593.7228, -616.9808, -53.6684, 180.0000, 76, 76, TIEMPO_RESPAWN);
	LSPDVehicle[81] = AddStaticVehicleEx(550, 597.7984, -616.9329, -53.8936, 180.0000, 77, 77, TIEMPO_RESPAWN);
	LSPDVehicle[82] = AddStaticVehicleEx(546, 601.8890, -617.3519, -53.9570, 180.0000, 126, 126, TIEMPO_RESPAWN);
	LSPDVehicle[83] = AddStaticVehicleEx(468, 593.4054, -660.5886, -54.0981, 90.0000, 201, 201, TIEMPO_RESPAWN);
	LSPDVehicle[84] = AddStaticVehicleEx(462, 593.4361, -657.6886, -54.2056, 90.0000, 161, 161, TIEMPO_RESPAWN);
	LSPDVehicle[85] = AddStaticVehicleEx(461, 593.4849, -654.8625, -54.2019, 90.0000, 158, 158, TIEMPO_RESPAWN);
	LSPDVehicle[86] = AddStaticVehicleEx(521, 589.3174, -660.8760, -54.2012, 90.0000, 211, 211, TIEMPO_RESPAWN);
	LSPDVehicle[87] = AddStaticVehicleEx(586, 589.2453, -657.8376, -54.2368, 90.0000, 235, 235, TIEMPO_RESPAWN);
	LSPDVehicle[88] = AddStaticVehicleEx(463, 589.1352, -654.7510, -54.1715, 90.0000, 182, 182, TIEMPO_RESPAWN);
	LSPDVehicle[89] = AddStaticVehicleEx(402, 575.1046, -659.9344, -53.9579, 270.0000, 12, 12, TIEMPO_RESPAWN);
	for(new veh = 0; veh < 90; veh++) { SetVehicleVirtualWorld(LSPDVehicle[veh], 10); }
	LSPDVehicle[90] = AddStaticVehicleEx(493, 947.2029, -1912.9249, 0.2126, 138.1800, -1, -1, TIEMPO_RESPAWN);//Unidades maritimas
	LSPDVehicle[91] = AddStaticVehicleEx(493, 2281.1492, -2430.0676, 1.1937, -137.2200, -1, -1, TIEMPO_RESPAWN);
	LSPDVehicle[92] = AddStaticVehicleEx(493, 2921.8674, -2042.7813, 0.9429, 270.0000, -1, -1, TIEMPO_RESPAWN);
	LSPDVehicle[93] = AddStaticVehicleEx(493, 2955.7266, -1493.3646, 0.3976, 260.2800, -1, -1, TIEMPO_RESPAWN);
	LSPDVehicle[94] = AddStaticVehicleEx(493, 2112.3018, -105.0129, 0.8232, -233.5800, -1, -1, TIEMPO_RESPAWN);
	LSPDVehicle[95] = AddStaticVehicleEx(493, 1396.5685, -272.5795, 0.1750, 0.0000, -1, -1, TIEMPO_RESPAWN);
	LSPDVehicle[96] = AddStaticVehicleEx(493, 212.8019, 165.9864, 1.2852, 0.0000, -1, -1, TIEMPO_RESPAWN);
	LSPDVehicle[97] = AddStaticVehicleEx(493, -126.0968, -818.5525, 0.8088, 85.5600, -1, -1, TIEMPO_RESPAWN);
	LSPDVehicle[98] = AddStaticVehicleEx(599, 612.1897, -590.3147, 17.3575, 270.0000, 0, 0, TIEMPO_RESPAWN); //dillimore
	LSPDVehicle[99] = AddStaticVehicleEx(596, 621.3774, -610.4303, 17.0411, -41.4000, 0, 0, TIEMPO_RESPAWN);
	LSPDVehicle[100] = AddStaticVehicleEx(596, 627.2951, -610.4163, 16.5298, -41.4000, 0, 0, TIEMPO_RESPAWN);
	LSPDVehicle[101] = AddStaticVehicleEx(596, 633.1345, -610.4510, 16.0731, -41.4000, 0, 0, TIEMPO_RESPAWN);
	LSPDVehicle[102] = AddStaticVehicleEx(598, 627.3240, -588.0759, 16.4272, 180.0000, 0, 0, TIEMPO_RESPAWN);
	LSPDVehicle[103] = AddStaticVehicleEx(497, 612.3400, -604.0610, 22.8616, 0.0000, 0, 0, TIEMPO_RESPAWN);
	LSPDVehicle[104] = AddStaticVehicleEx(497, 1238.1378, -1675.9224, 41.5463, 108.0600, -1, -1, TIEMPO_RESPAWN); //Police Maverick
	LSPDVehicle[105] = AddStaticVehicleEx(497, 1233.3925, -1656.2937, 41.5463, 108.0600, -1, -1, TIEMPO_RESPAWN); //Police Maverick
	for(new veh = 0; veh < sizeof(LSPDVehicle); veh++)
	{
		TextCallSign[veh] = Create3DTextLabel("(PD-ADAM00)", 0xFFFFFFFF, 0.0, 0.0, 0.0, 50.0, 0, 1);
		Attach3DTextLabelToVehicle(TextCallSign[veh], veh, -0.7, -1.9, -0.3);
		VehCallSign[veh] = 1;
	}

	SASDVehicle[0] = AddStaticVehicleEx(525, 1373.0699, 34.8206, -91.6532, 0.0000, 16, 16, TIEMPO_RESPAWN);// Unidades ordinarias.
	SASDVehicle[1] = AddStaticVehicleEx(525, 1377.3956, 34.8206, -91.6532, 0.0000, 16, 16, TIEMPO_RESPAWN);
	SASDVehicle[2] = AddStaticVehicleEx(525, 1381.5149, 34.8206, -91.6532, 0.0000, 16, 16, TIEMPO_RESPAWN);
	SASDVehicle[3] = AddStaticVehicleEx(525, 1385.5822, 34.8206, -91.6532, 0.0000, 16, 16, TIEMPO_RESPAWN);
	SASDVehicle[4] = AddStaticVehicleEx(597, 1416.2238, 44.7797, -91.7943, 90.0000, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[5] = AddStaticVehicleEx(597, 1416.2238, 40.7042, -91.7943, 90.0000, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[6] = AddStaticVehicleEx(597, 1416.2238, 36.7170, -91.7943, 90.0000, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[7] = AddStaticVehicleEx(597, 1416.2238, 32.7089, -91.7943, 90.0000, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[8] = AddStaticVehicleEx(597, 1416.2238, 28.5783, -91.7943, 90.0000, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[9] = AddStaticVehicleEx(597, 1416.2238, 24.4427, -91.7943, 90.0000, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[10] = AddStaticVehicleEx(597, 1416.2238, 20.3682, -91.7943, 90.0000, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[11] = AddStaticVehicleEx(597, 1416.2238, 16.2656, -91.7943, 90.0000, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[12] = AddStaticVehicleEx(597, 1416.2238, 12.1461, -91.7943, 90.0000, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[13] = AddStaticVehicleEx(597, 1416.2238, 7.9867, -91.7943, 90.0000, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[14] = AddStaticVehicleEx(597, 1399.6310, 12.3766, -91.7943, 270.0000, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[15] = AddStaticVehicleEx(597, 1399.6310, 7.7625, -91.7943, 270.0000, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[16] = AddStaticVehicleEx(599, 1389.6418, -5.5051, -91.3690, 180.0000, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[17] = AddStaticVehicleEx(599, 1385.5686, -5.5051, -91.3690, 180.0000, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[18] = AddStaticVehicleEx(599, 1381.4401, -5.5051, -91.3690, 180.0000, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[19] = AddStaticVehicleEx(598, 1409.8229, 51.2418, -91.7537, 180.0000, 16, 1, TIEMPO_RESPAWN);// Unidades supervisoras.
	SASDVehicle[20] = AddStaticVehicleEx(598, 1405.7893, 51.2418, -91.7537, 180.0000, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[21] = AddStaticVehicleEx(598, 1401.6920, 51.2418, -91.7537, 180.0000, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[22] = AddStaticVehicleEx(598, 1397.6224, 51.2418, -91.7537, 180.0000, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[23] = AddStaticVehicleEx(598, 1393.5439, 51.2418, -91.7537, 180.0000, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[24] = AddStaticVehicleEx(598, 1389.4855, 51.2418, -91.7537, 180.0000, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[25] = AddStaticVehicleEx(598, 1385.3848, 51.2418, -91.7537, 180.0000, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[26] = AddStaticVehicleEx(490, 1373.1893, -5.1696, -91.3223, 180.0000, 245, 245, TIEMPO_RESPAWN);// Unidades del S.B.E. (SWAT SD)
	SASDVehicle[27] = AddStaticVehicleEx(490, 1369.0121, -5.1696, -91.3223, 180.0000, 245, 245, TIEMPO_RESPAWN);
	SASDVehicle[28] = AddStaticVehicleEx(560, 1393.7992, -22.0573, -91.9712, 0.0000, 245, 245, TIEMPO_RESPAWN);
	SASDVehicle[29] = AddStaticVehicleEx(560, 1389.5767, -22.0573, -91.9712, 0.0000, 245, 245, TIEMPO_RESPAWN);
	SASDVehicle[30] = AddStaticVehicleEx(528, 1364.9886, -4.9128, -91.5110, 180.0000, 245, 245, TIEMPO_RESPAWN);
	SASDVehicle[31] = AddStaticVehicleEx(427, 1357.0131, -5.4614, -91.3972, 180.0000, 245, 245, TIEMPO_RESPAWN);
	SASDVehicle[32] = AddStaticVehicleEx(601, 1360.9518, -5.0369, -91.7874, 180.0000, 245, 245, TIEMPO_RESPAWN);
	for(new veh = 0; veh < 33; veh++) { SetVehicleVirtualWorld(SASDVehicle[veh], 10); }
	SASDVehicle[33] = AddStaticVehicleEx(497, 1366.7998, 24.9038, 44.4810, 0.0000, 16, 1, TIEMPO_RESPAWN);//heli
	SASDVehicle[34] = AddStaticVehicleEx(560, 1356.3997, -17.9369, 34.0450, -50.0000, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[35] = AddStaticVehicleEx(402, 1354.4410, -15.1245, 34.1293, -50.0000, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[36] = AddStaticVehicleEx(480, 1351.9530, -12.5128, 34.0404, -50.0000, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[37] = AddStaticVehicleEx(415, 1349.6440, -10.0176, 34.1279, -50.0000, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[38] = AddStaticVehicleEx(541, 1347.1438, -7.4899, 34.4081, -50.0000, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[39] = AddStaticVehicleEx(468, 1354.8751, 22.4466, 34.8005, -139.8000, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[40] = AddStaticVehicleEx(468, 1353.7875, 21.6493, 34.8005, -139.8000, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[41] = AddStaticVehicleEx(468, 1352.7384, 20.5845, 34.8005, -139.8000, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[42] = AddStaticVehicleEx(468, 1351.6602, 19.7217, 34.8005, -139.8000, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[43] = AddStaticVehicleEx(471, 1351.3158, 16.3733, 34.5153, -50.0000, 1, 16, TIEMPO_RESPAWN);
	SASDVehicle[44] = AddStaticVehicleEx(471, 1352.6211, 14.8081, 34.5153, -50.0000, 1, 16, TIEMPO_RESPAWN);
	SASDVehicle[45] = AddStaticVehicleEx(471, 1349.9624, 18.2136, 34.5153, -86.1200, 1, 16, TIEMPO_RESPAWN);
	SASDVehicle[46] = AddStaticVehicleEx(521, 1354.2007, 13.4345, 34.6953, -50.0000, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[47] = AddStaticVehicleEx(522, 1355.3906, 12.0013, 34.6953, -50.0000, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[48] = AddStaticVehicleEx(431,1399.5109,28.3143,34.2649,130.9498, 16, 1, TIEMPO_RESPAWN);
	SASDVehicle[49] = AddStaticVehicleEx(426,1368.5107,-5.9808,33.9275,43.2022, 30, 30, TIEMPO_RESPAWN);
	SASDVehicle[50] = AddStaticVehicleEx(426,1372.2062,-2.3755,33.9271,41.7201, 30, 30, TIEMPO_RESPAWN);
	for(new veh = 106; veh < 144; veh++)
	{
		TextCallSign[veh] = Create3DTextLabel("(SA-SD)", 0xFFFFFFFF, 0.0, 0.0, 0.0, 50.0, 0, 1);
		Attach3DTextLabelToVehicle(TextCallSign[veh], veh, -0.7, -1.9, -0.3);
		VehCallSign[veh] = 1;
	}
      //- Mecánicos

      //- SAN
    SANVehicle[0] = AddStaticVehicleEx(582, 738.9597, -1335.3448, 13.5650, 180.0000, 1, 3, TIEMPO_RESPAWN);
    SANVehicle[1] = AddStaticVehicleEx(582, 742.8975, -1335.6124, 13.5650, 180.0000, 1, 3, TIEMPO_RESPAWN);
    SANVehicle[2] = AddStaticVehicleEx(582, 746.9339, -1335.6832, 13.5650, 179.4000, 1, 3, TIEMPO_RESPAWN);
    SANVehicle[3] = AddStaticVehicleEx(582, 751.2432, -1335.6798, 13.5650, 179.4000, 1, 3, TIEMPO_RESPAWN);
    SANVehicle[4] = AddStaticVehicleEx(426, 755.6212, -1335.4259, 13.5650, 179.4000, 1, 3, TIEMPO_RESPAWN);
    SANVehicle[5] = AddStaticVehicleEx(426, 759.6477, -1335.7297, 13.5650, 179.4000, 1, 3, TIEMPO_RESPAWN);
    SANVehicle[6] = AddStaticVehicleEx(488, 743.9432, -1371.2987, 25.9211, 89.5514, 1, 3, TIEMPO_RESPAWN);
      //- Gobierno
	GOBVehicle[0] = AddStaticVehicleEx(487, 1538.1182, -1790.6667, 36.4009, -91.2600, 1, 1, TIEMPO_RESPAWN);
	GOBVehicle[1] = AddStaticVehicleEx(560, 1554.9509, -1775.6471, 13.1699, -89.8800, 1, 1, TIEMPO_RESPAWN);
	GOBVehicle[2] = AddStaticVehicleEx(560, 1554.9780, -1781.9021, 13.1699, -89.8800, 1, 1, TIEMPO_RESPAWN);
	GOBVehicle[3] = AddStaticVehicleEx(560, 1555.0734, -1787.7501, 13.1699, -89.8800, 1, 1, TIEMPO_RESPAWN);

      //- LSED
	LSEDVehicle[0] = AddStaticVehicleEx(416, 1145.4976, -1316.0815, 13.8131, 90.0000, 3, 3, TIEMPO_RESPAWN);
    LSEDVehicle[1] = AddStaticVehicleEx(416, 1145.5288, -1309.8445, 13.8131, 90.0000, 3, 3, TIEMPO_RESPAWN);
    LSEDVehicle[2] = AddStaticVehicleEx(416, 1145.3201, -1303.4060, 13.8131, 90.0000, 1, 3, TIEMPO_RESPAWN);
    LSEDVehicle[3] = AddStaticVehicleEx(416, 1145.5830, -1294.4570, 13.8131, 90.0000, 1, 3, TIEMPO_RESPAWN);
    LSEDVehicle[4] = AddStaticVehicleEx(407, 1098.0542, -1328.7130, 13.4513, 0.0000, 3, 3, TIEMPO_RESPAWN);
    LSEDVehicle[5] = AddStaticVehicleEx(407, 1110.8136, -1328.7937, 13.4513, 0.0000, 3, 3, TIEMPO_RESPAWN);
    LSEDVehicle[6] = AddStaticVehicleEx(407, 1124.1692, -1328.7374, 13.4513, 0.0000, 3, 3, TIEMPO_RESPAWN);
    LSEDVehicle[7] = AddStaticVehicleEx(407, 1095.4041, -1312.7520, 13.9040, -90.0000, 3, 3, TIEMPO_RESPAWN);
    LSEDVehicle[8] = AddStaticVehicleEx(487, 1159.9762, -1320.5913, 32.3307, 91.0800, 0, 6, TIEMPO_RESPAWN);
    LSEDVehicle[9] = AddStaticVehicleEx(563, 1160.2170, -1300.5695, 32.3307, 91.0800, 0, 6, TIEMPO_RESPAWN);
    LSEDVehicle[10] = AddStaticVehicleEx(490, 1086.6953, -1250.4012, 16.0460, -89.2800, 3, 1, TIEMPO_RESPAWN);
    LSEDVehicle[11] = AddStaticVehicleEx(490, 1086.6816, -1245.2085, 16.0460, -89.4000, 3, 1, TIEMPO_RESPAWN);
    LSEDVehicle[12] = AddStaticVehicleEx(431, 1110.7705, -1298.9766, 13.5547, -179.3400, 0, 6, TIEMPO_RESPAWN);
    LSEDVehicle[13] = AddStaticVehicleEx(403, 1135.5190, -1338.3556, 14.3570, 0.0000, 0, 6, TIEMPO_RESPAWN);
    LSEDVehicle[14] = AddStaticVehicleEx(426, 1104.6985, -1312.6161, 13.4417, -89.2200, 0, 6, TIEMPO_RESPAWN);
    LSEDVehicle[15] = AddStaticVehicleEx(573, 1111.0638,-1249.1194,16.4705,358.7130, 3, 3, TIEMPO_RESPAWN);
    LSEDVehicle[16] = AddStaticVehicleEx(495, 1086.4363, -1235.0150, 15.9185, -90.0000, 0, 6, TIEMPO_RESPAWN);
    LSEDVehicle[17] = AddStaticVehicleEx(525, 1103.3661, -1226.6924, 15.9185, -178.8000, 0, 6, TIEMPO_RESPAWN);
    LSEDVehicle[18] = AddStaticVehicleEx(407, 1109.2529, -1227.5930, 15.9185, -178.8000, 3, 3, TIEMPO_RESPAWN);
    LSEDVehicle[19] = AddStaticVehicleEx(573, 1104.5536, -1248.6609, 16.4708, 1.6078, 3, 3, TIEMPO_RESPAWN);
    LSEDVehicle[20] = AddStaticVehicleEx(544, 1114.5961, -1244.4603, 16.0791, 5.3429, 3, 3, TIEMPO_RESPAWN);
    LSEDVehicle[21] = AddStaticVehicleEx(597,1112.4895,-1203.9951,17.5493,184.7367,3,1, TIEMPO_RESPAWN);
    LSEDVehicle[22] = AddStaticVehicleEx(597,1102.8702,-1204.7458,17.5724,176.8605,3,1, TIEMPO_RESPAWN);
    LSEDVehicle[23] = AddStaticVehicleEx(416,2041.2006,-1413.9249,17.3181,180.9893,1,3, TIEMPO_RESPAWN);
    LSEDVehicle[24] = AddStaticVehicleEx(416,2041.4189,-1425.1466,17.3149,181.0874,1,3, TIEMPO_RESPAWN);


     //- Trabajos
      //- Pescador
	Pes_Veh[0] = AddStaticVehicleEx(453, 2824.3416, -2579.7537, 1.0036, 181.5000, 1, 1, TIEMPO_RESPAWN);
	Pes_Veh[1] = AddStaticVehicleEx(453, 2824.5420, -2596.0581, 1.0036, 181.5000, 1, 1, TIEMPO_RESPAWN);
	Pes_Veh[2] = AddStaticVehicleEx(453, 2828.2419, -2610.9236, 1.0036, 92.4600, 1, 1, TIEMPO_RESPAWN);
	Pes_Veh[3] = AddStaticVehicleEx(453, 2837.2371, -2598.8696, 1.0036, 181.5000, 1, 1, TIEMPO_RESPAWN);
	Pes_Veh[4] = AddStaticVehicleEx(453, 2837.9673, -2580.7244, 1.0036, 181.5000, 1, 1, TIEMPO_RESPAWN);
	Pes_Veh[5] = AddStaticVehicleEx(453, 2833.3833, -2563.1628, 1.0036, 272.4600, 1, 1, TIEMPO_RESPAWN);

      //- Camionero
	CamioneroVehicle[0] = AddStaticVehicleEx(413, 2445.7334, -2118.0754, 13.5800, -0.3000, -1, -1, TIEMPO_RESPAWN);
	CamioneroVehicle[1] = AddStaticVehicleEx(413, 2452.0537, -2118.1487, 13.5800, -0.3000, -1, -1, TIEMPO_RESPAWN);
	CamioneroVehicle[2] = AddStaticVehicleEx(413, 2458.5583, -2118.3564, 13.5800, -0.3000, -1, -1, TIEMPO_RESPAWN);
	CamioneroVehicle[3] = AddStaticVehicleEx(413, 2464.0334, -2117.8323, 13.5800, -0.3000, -1, -1, TIEMPO_RESPAWN);
	CamioneroVehicle[4] = AddStaticVehicleEx(413, 2470.6533, -2117.9470, 13.5800, -0.3000, -1, -1, TIEMPO_RESPAWN);
	CamioneroVehicle[5] = AddStaticVehicleEx(413, 2475.7395, -2118.1819, 13.5800, -0.3000, -1, -1, TIEMPO_RESPAWN);
	CamioneroVehicle[6] = AddStaticVehicleEx(413, 2481.0557, -2117.9563, 13.5800, -0.3000, -1, -1, TIEMPO_RESPAWN);
	CamioneroVehicle[7] = AddStaticVehicleEx(413, 2486.7793, -2117.7847, 13.5800, -0.3000, -1, -1, TIEMPO_RESPAWN);
	CamioneroVehicle[8] = AddStaticVehicleEx(413, 2491.9531, -2117.8105, 13.5800, -0.3000, -1, -1, TIEMPO_RESPAWN);
	CamioneroVehicle[9] = AddStaticVehicleEx(413, 2498.8848, -2117.8604, 13.5800, -0.3000, -1, -1, TIEMPO_RESPAWN);
	CamioneroVehicle[10] = AddStaticVehicleEx(456, 2523.5815, -2116.0298, 13.7476, 0.0000, -1, -1, TIEMPO_RESPAWN);
	CamioneroVehicle[11] = AddStaticVehicleEx(456, 2515.7251, -2115.7266, 13.7476, 0.0000, -1, -1, TIEMPO_RESPAWN);
	CamioneroVehicle[12] = AddStaticVehicleEx(456, 2507.9478, -2115.5645, 13.7476, 0.0000, -1, -1, TIEMPO_RESPAWN);
      //- Granjero
    GranjeroVehicle[0] = AddStaticVehicleEx(531, -368.7332, -1451.6243, 25.8230, 87.9600, 44, 44, TIEMPO_RESPAWN);
    GranjeroVehicle[1] = AddStaticVehicleEx(531, -368.5662, -1447.5449, 25.8230, 87.9600, 44, 44, TIEMPO_RESPAWN);
    GranjeroVehicle[2] = AddStaticVehicleEx(531, -368.5672, -1443.6130, 25.8230, 87.9600, 44, 44, TIEMPO_RESPAWN);
    GranjeroVehicle[3] = AddStaticVehicleEx(531, -368.5800, -1439.5243, 25.8230, 87.9600, 44, 44, TIEMPO_RESPAWN);
    GranjeroVehicle[4] = AddStaticVehicleEx(531, -368.6263, -1435.2294, 25.8230, 87.9600, 44, 44, TIEMPO_RESPAWN);
    GranjeroVehicle[5] = AddStaticVehicleEx(531, -368.6034, -1430.9125, 25.8230, 87.9600, 44, 44, TIEMPO_RESPAWN);
    GranjeroVehicle[6] = AddStaticVehicleEx(531, -368.3646, -1426.6874, 25.8230, 87.9600, 44, 44, TIEMPO_RESPAWN);
    GranjeroVehicle[7] = AddStaticVehicleEx(531, -368.1512, -1422.7263, 25.8230, 87.9600, 44, 44, TIEMPO_RESPAWN);
    GranjeroVehicle[8] = AddStaticVehicleEx(531, -368.0165, -1418.4948, 25.8230, 87.9600, 44, 44, TIEMPO_RESPAWN);
    GranjeroVehicle[9] = AddStaticVehicleEx(531, -367.8882, -1413.8467, 25.8230, 87.9600, 44, 44, TIEMPO_RESPAWN);

     //- Bicis en inicio
    VehiculoRentable[0] = AddStaticVehicleEx(510, 1666.5793, -2325.3877, -3.0814, 0.0000, -1, -1, 600);
	VehiculoRentable[1] = AddStaticVehicleEx(510, 1671.0460, -2325.5232, -3.0814, 0.0000, -1, -1, 600);
	VehiculoRentable[2] = AddStaticVehicleEx(510, 1669.5265, -2325.5222, -3.0814, 0.0000, -1, -1, 600);
	VehiculoRentable[3] = AddStaticVehicleEx(510, 1668.0046, -2325.4023, -3.0814, 0.0000, -1, -1, 600);
	VehiculoRentable[4] = AddStaticVehicleEx(510, 1665.2245, -2325.3894, -3.0814, 0.0000, -1, -1, 600);
    CargarConcesionarias();
    CargarVehUsados();
    VariablesVeh(); //- Variables de vehículos
    CargarEmpresas();
    CargarVehiculos();
    
	//--- TRABAJO DE CAMIONERO PICKUPS Y OTROS // -- 2.X
   	CreateActor(20058, -49.906913, -269.848052, 6.633186, 176.900909);
	CreateActor(20058, -26.717155, -269.373016, 5.429687, 183.357437);
	CreateActor(20009, -10.847087, -269.364135, 5.429687, 180.377426);
	CreateActor(20009, -76.280326, -345.063507, 1.429687, 91.474533);
	CreateDynamic3DTextLabel("{FFE900}[Podrás apreciar un cartel]{FFFFFF} Bienvenido a LS Tranports\nPuedes estacionar tu vehículo\n¡Si eres empleado!", 0xffffffff, -76.986175, -345.100769, 1.429687, 10.0);
	CreateDynamicPickup(1239, 1, -76.986175, -345.100769, 1.429687);
	CreateDynamic3DTextLabel("{FFE900}[Podrás apreciar un cartel]{FFFFFF} Aqui adentro puedes estacionar tu coche\nNo dejes tu vehiculo mal aparcado o lo embargaremos", 0xffffffff, -10.815545, -270.063568, 5.429687, 10.0);
	CreateDynamicPickup(1239, 1, -10.815545, -270.063568, 5.429687);
	CreateDynamic3DTextLabel("{FFE900}[Jefe de Tráfico LS-Trans]{FFFFFF}\n¿Necesitas una ruta? ¡Necesito conductores!\n{FFE900}/camionero", 0xffffffff, -26.659425, -270.072540, 5.429687, 10.0);
	CreateDynamicPickup(1239, 1, -26.659425, -270.072540, 5.429687);

    //» 3D Label's
		//concesionarias
	_MapIcon(1981.1210, -2100.5159, 13.4231, 55); //motos
	_MapIcon(2131.8674, -1151.0360, 23.8920, 55); //Coutt And Schutz
	_MapIcon(519.0496, -1293.6548, 17.2224, 55); //grotti
	_MapIcon(2793.1045, -1087.5013, 30.6801, 55); //camionetas
	_MapIcon(2006.0568, -2271.4482, 13.5344, 55); //aviones
	_MapIcon(2515.4216, -1957.9753, 16.7286, 55); //Nuevased
	_MapIcon(2589.1169, -2219.4470, 13.5184, 55); //coches usados
	CreateDynamicPickup(1274, 1, 1981.1210, -2100.5159, 13.4231); //motos
	CreateDynamicPickup(1274, 1, 2131.8674, -1151.0360, 23.8920); //Coutt And Schutz
	CreateDynamicPickup(1274, 1, 519.0496, -1293.6548, 17.2224); //grotti
	CreateDynamicPickup(1274, 1, 2793.1045, -1087.5013, 30.6801); //camionetas
	CreateDynamicPickup(1274, 1, 2006.0568, -2271.4482, 13.5344); //aviones
	CreateDynamicPickup(1274, 1, 2515.4216, -1957.9753, 16.7286); //Nuevased
	CreateDynamicPickup(1274, 1, 2589.1169, -2219.4470, 13.5184); //coches usados
	CreateDynamic3DTextLabel("(/catalogo)", 0xffff00ff, 1981.1210, -2100.5159, 13.4231, 7.5); //motos
	CreateDynamic3DTextLabel("(/catalogo)", 0xffff00ff, 2131.8674, -1151.0360, 23.8920, 7.5); //Coutt And Schutz
	CreateDynamic3DTextLabel("(/catalogo)", 0xffff00ff, 519.0496, -1293.6548, 17.2224, 7.5); //grotti
	CreateDynamic3DTextLabel("(/catalogo)", 0xffff00ff, 2793.1045, -1087.5013, 30.6801, 7.5); //camionetas
	CreateDynamic3DTextLabel("(/catalogo)", 0xffff00ff, 2006.0568, -2271.4482, 13.5344, 7.5); //aviones
	CreateDynamic3DTextLabel("(/catalogo)", 0xffff00ff, 2515.4216, -1957.9753, 16.7286, 7.5); //Nuevased
	CreateDynamic3DTextLabel("(/catalogo)", 0xffff00ff, 2589.1169, -2219.4470, 13.5184, 7.5); //coches usados
		//lspd-sasd
	CreateDynamicPickup(1239, 1, 229.5383, 182.3108, 1002.9111);
	CreateDynamicPickup(1239, 1, 260.7723, 71.0477, 1003.2422);
	CreateDynamicPickup(1239, 1, -420.6046, 675.0458, 3856.5835);
	CreateDynamic3DTextLabel("(/borrar)", 0xffffffff, 229.5383, 182.3108, 1002.9111, 5.0);
	CreateDynamic3DTextLabel("(/borrar)", 0xffffffff, 260.7723, 71.0477, 1003.2422, 5.0);
	CreateDynamic3DTextLabel("(/borrar)", 0xffffffff, -420.6046, 675.0458, 3856.5835, 5.0);
		//talleres dinámicos
	CreateDynamicPickup(1239, 1, 720.4227,-465.2718,16.3359);
	CreateDynamicPickup(1239, 1, 2073.6716,-1831.2239,13.5469);
	CreateDynamicPickup(1239, 1, 1025.0483,-1031.6508,31.9656);
	CreateDynamicPickup(1239, 1, 488.8826,-1732.4053,11.2144);
	CreateDynamicPickup(1239, 1, -1904.5531,276.1320,41.0469);
	CreateDynamicPickup(1239, 1, 1840.4047,-1856.3762,13.3828);
	CreateDynamicPickup(1239, 1, 1840.4047,-1856.3762,13.3828);
	CreateDynamicPickup(1239, 1, -2713.8391,216.8167,4.2731);
	CreateDynamicPickup(1239, 1, 2644.9124,-2037.6128,13.5540);
	CreateDynamicPickup(1239, 1, 2386.7439,1040.9083,10.8203);
	CreateDynamicPickup(1239, 1, 1041.3345,-1028.0857,32.1016);
	_MapIcon(720.4227,-465.2718,16.3359, 63);
	_MapIcon(2073.6716,-1831.2239,13.5469, 63);
	_MapIcon(1025.0483,-1031.6508,31.9656, 63);
	_MapIcon(488.8826,-1732.4053,11.2144, 63);
	_MapIcon(-1904.5531,276.1320,41.0469, 63);
	_MapIcon(1840.4047,-1856.3762,13.3828, 63);
	_MapIcon(1840.4047,-1856.3762,13.3828, 63);
	_MapIcon(-2713.8391,216.8167,4.2731, 63);
	_MapIcon(2644.9124,-2037.6128,13.5540, 63);
	_MapIcon(2386.7439,1040.9083,10.8203, 63);
	_MapIcon(1041.3345,-1028.0857,32.1016, 63);
	CreateDynamic3DTextLabel("(/entrart)", 0xffffffff,720.4227,-465.2718,16.3359, 10.0);
	CreateDynamic3DTextLabel("(/entrart)", 0xffffffff, 2073.6716,-1831.2239,13.5469, 10.0);
	CreateDynamic3DTextLabel("(/entrart)", 0xffffffff, 1025.0483,-1031.6508,31.9656, 10.0);
	CreateDynamic3DTextLabel("(/entrart)", 0xffffffff, 488.8826,-1732.4053,11.2144, 10.0);
	CreateDynamic3DTextLabel("(/entrart)", 0xffffffff, -1904.5531,276.1320,41.0469, 10.0);
	CreateDynamic3DTextLabel("(/entrart)", 0xffffffff, 1840.4047,-1856.3762,13.3828, 10.0);
	CreateDynamic3DTextLabel("(/entrart)", 0xffffffff, 1840.4047,-1856.3762,13.3828, 10.0);
	CreateDynamic3DTextLabel("(/entrart)", 0xffffffff, -2713.8391,216.8167,4.2731, 10.0);
	CreateDynamic3DTextLabel("(/entrart)", 0xffffffff, 2644.9124,-2037.6128,13.5540, 10.0);
	CreateDynamic3DTextLabel("(/entrart)", 0xffffffff, 2386.7439,1040.9083,10.8203, 10.0);
	CreateDynamic3DTextLabel("(/entrart)", 0xffffffff, 1041.3345,-1028.0857,32.1016, 10.0);

    CreateDynamic3DTextLabel("(/tallerpd)",					0xffffffff, 2278.1614,2443.0762,3.2734, 8.0);
    CreateDynamic3DTextLabel("(/tallerpd)",					0xffffffff, 1357.9662,-33.9916,-91.6174, 8.0);
   	CreateDynamic3DTextLabel("(/tallerfd)",					0xffffffff, 1360.0743, 1371.0730, 10.8500, 	8.0);
    CreateDynamicPickup(1366, 1, 2278.1614,2443.0762,3.2734); // /tallerpd
    CreateDynamicPickup(1366, 1, 1360.0743, 1371.0730, 10.8500, -1, 12); // /tallerpd - /tallerfd
    CreateDynamicPickup(1366, 1, 1357.9662,-33.9916,-91.6174); // /tallerpd
	//
    CreateDynamicPickup(1239, 1, 231.2809, 1914.1873, 17.6406);
	CreateDynamic3DTextLabel("{ffffff}/tienda", 0xFF0000FF, 231.2809, 1914.1873, 17.6406, 5.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);

	pickupspf[0] = CreateDynamicPickup(1239, 1, 175.2823, 1875.1700, 23.5167);
	pickupspf[1] = CreateDynamicPickup(18634, 1, 272.04361, 1876.01123, 17.18144);
	pickupspf[2] = CreateDynamicPickup(18634, 1, 272.59424, 1880.36853, 17.83571);
	pickupspf[3] = CreateDynamicPickup(18634, 1, 269.19070, 1878.51306, 17.19197);
	pickupspf[4] = CreateDynamicPickup(18634, 1, 267.02798, 1882.38379, 18.85914);
	pickupspf[5] = CreateDynamicPickup(1240, 1, 190.1715, -181.7262, 349.3348);
	pickupspf[6] = CreateDynamicPickup(19523, 1, 149.6309, -185.1440, 342.8410);
	CreateActor(110, 223.1527, 1942.4933, 18.4586, 269.6197);
	CreateDynamic3DTextLabel("{f4f600}Jorge Sánchez\n{ffffff}/camello", 0xFF0000FF, 223.1527, 1942.4933, 18.1086, 5.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);

	for(new i=0, t=GetMaxPlayers(); i < t; i++)
	{
		estado[i] = Create3DTextLabel("void", -1, -1116.8259, 332.3275, 1.9174, 15.0, 1, 1);
	}
	CreateObject(18981, -26.91166, -49.80461, 1002.02673,   0.00000, 90.00000, 90.00000);
	CreateObject(18981, 1206.78113, -31.13935, 999.44775,   0.00000, 90.00000, 90.00000);
	CreateObject(18981, 1208.00977, -3.92006, 999.41504,   0.00000, 90.00000, 90.00000);
	CreateObject(18981, 955.05048, -52.20440, 999.61029,   0.00000, 90.00000, 90.00000);
	CreateObject(18981, 491.34946, -13.21688, 999.17163,   0.00000, 90.00000, 90.00000);
	CreateObject(18981, 291.60226, -106.83201, 1000.00800,   0.00000, 90.00000, 90.00000);
	CreateObject(18981, 372.38263, -124.51276, 999.93073,   0.00000, 90.00000, 90.00000);
	CreateObject(18981, 368.65411, -68.82710, 1000.00586,   0.00000, 90.00000, 90.00000);
	CreateObject(18981, 314.96454, -134.97142, 998.08435,   0.00000, 90.00000, 90.00000);
	CreateObject(18981, 501.80670, -73.90924, 997.24347,   0.00000, 90.00000, 90.00000);
	CreateObject(18981, 208.89661, -103.65580, 1003.61786,   0.00000, 90.00000, 90.00000);
	CreateObject(18981, 163.10716, -91.74467, 1000.28247,   0.00000, 90.00000, 90.00000);

     //- Comandos
    CreateDynamic3DTextLabel("Hospital\n{ffffff}Los Santos", C_ROJO, -1113.3628,3932.3645,228.6613, 8.0); // bienvenidos al hospital
    CreateDynamic3DTextLabel("(/bandeja)", 					0xffffffff, 2540.0281, -1283.3070, 1043.9797, 8.0); // /bandeja en la prisión federal
    CreateDynamic3DTextLabel("(/ordenadorpd)", 				0xffffffff, 230.5195,164.9984,1003.0234, 8.0);
    CreateDynamic3DTextLabel("(/banco)", 					0xffffffff, -1539.4642,321.0930,53.5363, 8.0);
    CreateDynamic3DTextLabel("(/mercado)", 			0xffffffff, 2119.1084, -2001.5844, 8.0257, 4.0);
    CreateDynamic3DTextLabel("(/directo)", 					0xffffffff, 1115.0129, 1248.0106, 10.8203, 8.0);
    CreateDynamic3DTextLabel("(/entrenar)", 				0xffffffff, 773.0491, 1.4285, 1000.7209, 8.0);
    CreateDynamic3DTextLabel("(/entrenar)", 				0xffffffff, 653.9918,-1865.1168,5.4609	, 8.0);
    CreateDynamic3DTextLabel("(/practicar)", 				0xffffffff, 767.6719, 13.6320, 1000.7010, 8.0);
    CreateDynamic3DTextLabel("(/embargar)", 				0xffffffff, 1658.9924, -1807.1152, 13.5508, 20.0);
    CreateDynamic3DTextLabel("(/pagarmulta)", 				0xffffffff, 234.1941, 159.6334, 1003.0182, 8.0); // LSPD
    CreateDynamic3DTextLabel("(/pagarmulta)", 				0xffffffff, 293.0547, 180.2622, 1007.1493, 8.0); // LSPD 2
    CreateDynamic3DTextLabel("(/ayuntamiento)", 			0xffffffff, 362.0124, 173.3058, 1008.3050, 8.0); // Ayuntamiento
    CreateDynamic3DTextLabel("(/puerto)", 					0xffffffff, 2795.9546, -2569.3674, 2.9869, 8.0); // Puerto

    CreateDynamic3DTextLabel("(/comprar)",					0xffffffff, -23.4566, -55.6323, 1003.5469, 12.0); // 24/7
    CreateDynamic3DTextLabel("(/comprar)",					0xffffffff, 207.4873, -100.3286, 1005.2578, 12.0); // ropa
    CreateDynamic3DTextLabel("(/comprar)",					0xffffffff, -785.9495, 500.0739, 1371.7422, 12.0); // restaurante
    CreateDynamic3DTextLabel("(/comprar)",					0xffffffff, 371.4320, -6.0194, 1001.8589, 12.0); // cluckin bell
    CreateDynamic3DTextLabel("(/comprar)",					0xffffffff, 375.2599, -118.8117, 1001.4995, 12.0); // pizzeriia
    CreateDynamic3DTextLabel("(/comprar)",					0xffffffff, 377.3137, -67.4423, 1001.5078, 12.0); // habmurer
    CreateDynamic3DTextLabel("(/comprar)",					0xffffffff, 308.3979, -141.4581, 999.6016, 12.0); // ammu
    CreateDynamic3DTextLabel("(/comprar)",					0xffffffff, 415.1097, -51.4637, 1001.9000, 12.0); //peluquería
    CreateDynamic3DTextLabel("(/comprar)",					0xffffffff, -103.8922, -22.6771, 1000.7188, 12.0); // sex shop
    CreateDynamic3DTextLabel("(/comprar)",					0xffffffff, -30.7083, -29.6858, 1003.5078, 12.0); // gasolinera
    CreateDynamic3DTextLabel("(/comprar)",					0xffffffff, 161.3464, -83.5198, 1001.8989, 12.0); // electronica
    CreateDynamic3DTextLabel("(/comprar)",					0xffffffff, 497.8823, -75.9014, 998.7012, 12.0); // bar
    CreateDynamic3DTextLabel("(/comprar)",					0xffffffff, 449.7225, -83.9301, 999.5547, 12.0); // restaurante 2
    CreateDynamic3DTextLabel("(/comprar)",					0xffffffff, 290.2224, -109.6350, 1001.5685, 12.0); // Ferreteria
    CreateDynamic3DTextLabel("(/comprar)",					0xffffffff, 499.9653,-19.0419,1000.6719, 12.0); // Alhambra
    CreateDynamic3DTextLabel("(/comprar)",					0xffffffff, 1214.8792,-13.2081,1000.9219, 12.0); // Strip club
    CreateDynamic3DTextLabel("(/comprar)",					0xffffffff, 1207.2340,-30.3012,1000.9531, 12.0); // Club private
    CreateDynamic3DTextLabel("(/empeno)",					0xffffffff, -2237.2800,130.3547,1035.4141, 12.0); // Empeño

    CreateDynamic3DTextLabel("(/traficar)",					0xffffffff, 655.2497, -502.9607, 16.3102, 8.0);
	CreateDynamic3DTextLabel("Enfermería\n{ffffff}(/curarme)", C_ROJO, -2066.0830, -206.2477, 35.4695, 8.0); // /curarme

    CreateDynamic3DTextLabel("(/equipo)",					0xffffffff, 219.6168, 149.6197, 1003.0089, 8.0); // Equipo LSPD
    CreateDynamic3DTextLabel("(/equipo)",					0xffffffff, 258.1540, 77.5021, 1003.6276, 8.0); // Equipo SADOC
    CreateDynamic3DTextLabel("(/equipo)",					0xffffffff, -429.4801, 688.3015, 3853.0627, 8.0); // Equipo Sheriff
    CreateDynamic3DTextLabel("(/equipo)",					0xffffffff, 1121.7467, 1248.0630, 10.8971, 8.0); // SAN LS
    CreateDynamic3DTextLabel("(/equipo)",					0xffffffff, 351.6515, 213.3615, 1008.4004, 8.0); // Gobierno
    CreateDynamic3DTextLabel("(/equipo)",					0xffffffff, -2046.9657,-215.7112,35.4445, 8.0); // Equipo LSED

    CreateDynamic3DTextLabel("(/gob)",						0xffffffff, -2050.8799,-190.1223,35.4445, 8.0);
    CreateDynamic3DTextLabel("(/gob)",						0xffffffff, 218.3815,187.4334,1003.0313, 8.0);
    CreateDynamic3DTextLabel("(/gob)",						0xffffffff, 374.3038,186.4248,1014.1875, 8.0);

     //- Comandos de facciones
    CreateDynamic3DTextLabel("(/arrestar)",					0xFFFF00FF, 2314.0645,2447.0774,3.2734, 8.0); // Arresto LSPD Garage
    CreateDynamic3DTextLabel("(/arrestar)",					0xFFFF00FF, 234.1898,72.5130,1005.0391, 8.0); // Arresto Sheriff
    CreateDynamic3DTextLabel("(/arrestar)",					0xFFFF00FF, -448.4868, 675.1337, 3852.9907, 8.0); // Arresto Sheriff
    CreateDynamic3DTextLabel("(/arrestar)",					0xFFFF00FF, 200.7210, 168.3594, 1002.9638, 8.0); // Arresto LSPD Interior
    CreateDynamic3DTextLabel("(/arrestarf)",				0xFFFF00FF, 260.3547, 1990.4944, 17.6406, 8.0); // Arresto Prisión Federal

     //- /empleo
    CreateDynamic3DTextLabel("Carguero\n{ffffff}(/trabajar o /trabajar2)",						0xE7D800FF, 2137.6953, -2282.5144, 20.7174, 10);
    CreateDynamic3DTextLabel("Delincuente\n{ffffff}(/trabajar o /trabajar2)",					0xE7D800FF, 2259.5535, -1019.1276, 59.3153, 10);
    CreateDynamic3DTextLabel("Pescador\n{ffffff}(/trabajar o /trabajar2)",						0xE7D800FF, 2753.2439, -2551.0959, 13.6205, 10);
	CreateDynamic3DTextLabel("Camionero\n{ffffff}(/trabajar o /trabajar2)",						0xE7D800FF, 2429.3569, -2108.7351, 13.5563, 10);
	CreateDynamic3DTextLabel("Ladrón de coches\n{ffffff}(/trabajar o /trabajar2)",				0xE7D800FF, 1032.0359, -1435.2146, 13.5591, 10);
    CreateDynamic3DTextLabel("Carpintero\n{ffffff}(/trabajar o /trabajar2)",					0xE7D800FF, 2143.5129, -2161.9673, 13.5084, 10);
    CreateDynamic3DTextLabel("Leñador\n{ffffff}(/trabajar o /trabajar2)",						0xE7D800FF, -418.6058, -1759.5006, 6.2169, 10);
    CreateDynamic3DTextLabel("Granjero\n{ffffff}(/trabajar o /trabajar2)\n(/vendercosecha)",	0xE7D800FF, -383.2412, -1438.8146, 26.3249, 10);
    CreateDynamic3DTextLabel("Traficante\n{ffffff}(/trabajar o /trabajar2)",					0xE7D800FF, 2457.5034,-1901.9773,13.5469, 10);

    //- /fabrica - /camello
    CreateDynamic3DTextLabel("(/fabrica)", 0xffffffff, 943.96948, 2127.54150, 1011.02472, 10.0);
    CreateDynamic3DTextLabel("(/fabrica)", 0xffffffff, 940.99377, 2127.47949, 1011.02472, 10.0);
    CreateDynamic3DTextLabel("(/fabrica)", 0xffffffff, 942.56256, 2137.43994, 1011.02472, 10.0);
    CreateDynamic3DTextLabel("(/fabrica)", 0xffffffff, 942.46503, 2117.84863, 1011.02472, 10.0);
    CreateDynamic3DTextLabel("(/fabrica)", 0xffffffff, 942.60162, 2153.59595, 1011.02472, 10.0);
    CreateDynamic3DTextLabel("(/fabrica)", 0xffffffff, 941.16083, 2163.73975, 1011.02472, 10.0);
    CreateDynamic3DTextLabel("(/fabrica)", 0xffffffff, 943.88867, 2163.79761, 1011.02472, 10.0);
    CreateDynamic3DTextLabel("(/fabrica)", 0xffffffff, 2820.2854,-1173.0179,1025.5703, 10.0);
	 //- Trabajos
      //- Carpintero
	CreateDynamic3DTextLabel("'Clic'", 0xD6E1EBFF, 2138.55542, -2188.58984, 13.01160, 8.0);
	CreateDynamic3DTextLabel("'Clic'", 0xD6E1EBFF, 2132.42310, -2182.28101, 13.01160, 8.0);
	CreateDynamic3DTextLabel("'Clic'", 0xD6E1EBFF, 2149.96655, -2178.01514, 13.01160, 8.0);
	CreateDynamic3DTextLabel("'Clic'", 0xD6E1EBFF, 2143.83301, -2171.79077, 13.01160, 8.0);
	CreateDynamic3DTextLabel("'Clic'", 0xD6E1EBFF, 2140.98608, -2179.90723, 13.01160, 8.0);
	  //- Leñador
    CreateDynamic3DTextLabel("'Clic'", 0xD6E1EBFF, -441.13446, -1767.01123, 6.06064, 8.0);
    CreateDynamic3DTextLabel("'Clic'", 0xD6E1EBFF, -432.12009, -1785.66162, 3.72014, 8.0);
    CreateDynamic3DTextLabel("'Clic'", 0xD6E1EBFF, -419.71930, -1793.72607, 3.42763, 8.0);
    CreateDynamic3DTextLabel("'Clic'", 0xD6E1EBFF, -409.08514, -1794.17078, 3.07774, 8.0);
    CreateDynamic3DTextLabel("'Clic'", 0xD6E1EBFF, -404.41458, -1782.54700, 3.10609, 8.0);
    CreateDynamic3DTextLabel("'Clic'", 0xD6E1EBFF, -398.54572, -1769.50366, 4.84904, 8.0);
    CreateDynamic3DTextLabel("'Clic'", 0xD6E1EBFF, -393.60931, -1792.14294, 3.10774, 8.0);
    CreateDynamic3DTextLabel("(/vendertroncos)", 0xffffffff, 2110.2300, -2155.0627, 13.5084, 8.0);

     //- Premium/Vip
    CreateDynamic3DTextLabel("Casillero premium\n{ffffff}(/casillero)", C_VIP, -2301.9307,174.2739,35.3407, 8.0); // /casillero
    CreateDynamic3DTextLabel("Accesorios premium\n{ffffff}(/prendas)", C_VIP, -2304.5933,170.7388,35.3407, 8.0); // /prendas

	//» MapIcon's
		//- Lugares

      //- Los Santos
    _MapIcon(1382.1340, -1088.8351, 28.1970, 52); //banco /vinewood
    _MapIcon(1777.7876, -1806.1737, 36.1662, 52); //banco unity
    _MapIcon(2859.8516, -1405.9196, 11.7516, 52); //banco east
    _MapIcon(1310.7197, -1364.1327, 50.5868, 25); // Casino LA
    _MapIcon(1626.9009, -2286.6245, 93.1271, 5); // Aeropuerto
    _MapIcon(1498.3143,-1580.7146,13.5734, 59); // Salón premium

     //- Trabajos
      //- /empleo
	_MapIcon(2137.6953, -2282.5144, 20.7174, 42); // Trabajo Carguero
	_MapIcon(2753.2439, -2551.0959, 13.6205, 42); // Trabajo Pescador
	_MapIcon(2429.3569, -2108.7351, 13.5563, 51); // Trabajo Camionero
	_MapIcon(2143.5129, -2161.9673, 13.5084, 42); // Trabajo Carpintero
	_MapIcon(-418.6058, -1759.5006, 6.2169, 42); // Trabajo leñador
	_MapIcon(-383.2412, -1438.8146, 26.3249, 42); // Trabajo Granjero
	_MapIcon(2457.5034,-1901.9773,13.5469, 24); // Trabajo Traficante
	_MapIcon(655.2497, -502.9607, 16.3102, 24); // Trabajo Traficante 2.

    //» Mapeos



    //concesionarias
    CreateDynamicObject(1536, 1980.34253, -2100.07031, 12.52773,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1498, 518.52887, -1294.37354, 16.18997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1498, 2006.82202, -2271.02783, 12.48909,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1498, 2588.43115, -2218.90503, 12.53974,   0.00000, 0.00000, 0.00000);

    CargarMaps(); //- Carga include 'Mapeos.inc'
	//empresas
		//-reparto
    CreateDynamicObject(14603, 1034.68127, 1208.28601, 11.63000,   0.00000, 0.00000, -0.60000, -1, 15, -1, MAX_RADIO_STREAM);
	CreateDynamicObject(14634, 1034.58569, 1204.05798, 11.39215,   0.00000, 0.00000, 0.00000, -1, 15, -1, MAX_RADIO_STREAM);
	CreateDynamicObject(1498, 1032.97229, 1203.60840, 9.84541,   0.00000, 0.00000, 0.00000, -1, 15, -1, MAX_RADIO_STREAM);
		//-mecánica
	CreateDynamicObject(9163, 1907.59485, -2195.51465, 16.43990,   0.00000, 0.00000, 0.00000, -1, 20, -1, MAX_RADIO_STREAM);
	CreateDynamicObject(9163, 1861.36841, -2194.21729, 16.43990,   0.00000, 0.00000, 0.00000, -1, 20, -1, MAX_RADIO_STREAM);
	CreateDynamicObject(9163, 1882.99207, -2169.05371, 16.43989,   0.00000, 0.00000, -90.00000, -1, 20, -1, MAX_RADIO_STREAM);
	CreateDynamicObject(9163, 1906.17517, -2215.52441, 16.43990,   0.00000, 0.00000, -90.00000, -1, 20, -1, MAX_RADIO_STREAM);
	CreateDynamicObject(9163, 1861.36292, -2234.03174, 16.43990,   0.00000, 0.00000, 0.00000, -1, 20, -1, MAX_RADIO_STREAM);
	CreateDynamicObject(9163, 1894.82471, -2226.88037, 16.43990,   0.00000, 0.00000, 0.00000, -1, 20, -1, MAX_RADIO_STREAM);
	CreateDynamicObject(9163, 1881.37219, -2230.20947, 16.43989,   0.00000, 0.00000, -90.00000, -1, 20, -1, MAX_RADIO_STREAM);
	CreateDynamicObject(10558, 1886.42371, -2216.12378, 14.51643,   0.00000, 0.00000, 0.00000, -1, 20, -1, MAX_RADIO_STREAM);
	CreateDynamicObject(14795, 1888.18091, -2201.61060, 14.03457,   0.00000, 179.99451, 1.99950, -1, 20, -1, MAX_RADIO_STREAM);
	CreateDynamicObject(8420, 1926.17676, -2200.04663, 12.58000,   0.00000, 0.00000, 180.00000, -1, 20, -1, MAX_RADIO_STREAM);
	CreateDynamicObject(8420, 1846.17004, -2199.96826, 12.58000,   0.00000, 0.00000, 0.00000, -1, 20, -1, MAX_RADIO_STREAM);

	CreateDynamicObject(9163, 1907.59485, -2195.51465, 16.43990,   0.00000, 0.00000, 0.00000, -1, 21, -1, MAX_RADIO_STREAM);
	CreateDynamicObject(9163, 1861.36841, -2194.21729, 16.43990,   0.00000, 0.00000, 0.00000, -1, 21, -1, MAX_RADIO_STREAM);
	CreateDynamicObject(9163, 1883.21741, -2170.90088, 16.43989,   0.00000, 0.00000, -90.00000, -1, 21, -1, MAX_RADIO_STREAM);
	CreateDynamicObject(9163, 1883.21765, -2217.66650, 16.43989,   0.00000, 0.00000, -90.00000, -1, 21, -1, MAX_RADIO_STREAM);
	CreateDynamicObject(10558, 1893.08325, -2209.00879, 14.51640,   0.00000, 0.00000, 90.00000, -1, 21, -1, MAX_RADIO_STREAM);
	CreateDynamicObject(14795, 1888.18091, -2201.61060, 14.03457,   0.00000, 179.99451, 1.99950, -1, 21, -1, MAX_RADIO_STREAM);
	CreateDynamicObject(8420, 1926.17676, -2200.04663, 12.58000,   0.00000, 0.00000, 180.00000, -1, 21, -1, MAX_RADIO_STREAM);
	CreateDynamicObject(8420, 1846.17004, -2199.96826, 12.58000,   0.00000, 0.00000, 0.00000, -1, 21, -1, MAX_RADIO_STREAM);

	CreateDynamicObject(9163, 1899.88818, -2194.00977, 16.43990,   0.00000, 0.00000, 0.00000, -1, 22, -1, MAX_RADIO_STREAM);
	CreateDynamicObject(9163, 1861.36841, -2194.21729, 16.43990,   0.00000, 0.00000, 0.00000, -1, 22, -1, MAX_RADIO_STREAM);
	CreateDynamicObject(9163, 1883.21741, -2170.90088, 16.43989,   0.00000, 0.00000, -90.00000, -1, 22, -1, MAX_RADIO_STREAM);
	CreateDynamicObject(9163, 1883.21765, -2217.66650, 16.43989,   0.00000, 0.00000, -90.00000, -1, 22, -1, MAX_RADIO_STREAM);
	CreateDynamicObject(10558, 1875.37915, -2208.99170, 14.51640,   0.00000, 0.00000, 90.00000, -1, 22, -1, MAX_RADIO_STREAM);
	CreateDynamicObject(14795, 1888.18091, -2201.61060, 14.03457,   0.00000, 179.99451, 1.99950, -1, 22, -1, MAX_RADIO_STREAM);
	CreateDynamicObject(8420, 1926.17676, -2200.04663, 12.58000,   0.00000, 0.00000, 180.00000, -1, 22, -1, MAX_RADIO_STREAM);
	CreateDynamicObject(8420, 1846.17004, -2199.96826, 12.58000,   0.00000, 0.00000, 0.00000, -1, 22, -1, MAX_RADIO_STREAM);

	//maximo vip
	CreateDynamicObject(3607, -1448.16479, -1577.04089, 106.77108,   0.00000, 0.00000, 180.10402);
	CreateDynamicObject(3604, -1421.66541, -1544.79309, 103.31640,   0.00000, 0.00000, 270.81448);
	CreateDynamicObject(17324, -1455.77539, -1464.88428, 100.66899,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3409, -1459.64294, -1504.12317, 100.84091,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3409, -1459.60925, -1509.00342, 100.84091,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3409, -1459.53943, -1513.70288, 100.84091,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3264, -1406.82031, -1469.14160, 100.45592,   0.00000, 0.00000, 95.79826);
	CreateDynamicObject(3409, -1450.36023, -1504.46558, 100.84091,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3409, -1450.33203, -1509.09363, 100.84091,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3409, -1450.28296, -1513.74072, 100.84091,   0.00000, 0.00000, 0.00000);
	    // Protección de Explosión Gasolineras | By Desconocido | 88 Objetos
    CreateDynamicObject(11677, 1004.4343261719, -948.36755371094, 46.043098449707, 0, 0, 53, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(11417, -105.29484558105, -1193.4342041016, 6.2909736633301, 0, 0, 32, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(970, -92.699996948242, -1162.1899414063, 1.9800000190735, 0, 0, 68, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(970, -91.756210327148, -1162.5070800781, 1.9800000190735, 0, 0, 67.999877929688, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(970, -97.240936279297, -1172.8973388672, 2.039999961853, 0, 0, 67.999877929688, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(970, -96.299339294434, -1173.2299804688, 2.039999961853, 0, 0, 67.999877929688, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(970, -90.389022827148, -1175.8388671875, 1.789999961853, 0, 357.5, 67.999877929688, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(970, -85.95027923584, -1165.0400390625, 1.8899999856949, 0, 1.2000122070313, 67.999877929688, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(994, -1610.2292480469, -2713.8059082031, 47.9453125, 0, 0, 323, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(994, -1610.798828125, -2714.5485839844, 47.9453125, 0, 0, 322.998046875, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(994, -1613.556640625, -2718.2258300781, 47.9453125, 0, 0, 322.998046875, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(994, -1614.1141357422, -2718.9680175781, 47.9453125, 0, 0, 322.998046875, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(994, -1607.45703125, -2710.1682128906, 47.9453125, 0, 0, 322.998046875, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(994, -1606.9255371094, -2709.4631347656, 47.9453125, 0, 0, 322.998046875, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(994, -1604.1760253906, -2705.740234375, 47.9453125, 0, 0, 322.998046875, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(994, -1603.6298828125, -2705.0249023438, 47.9453125, 0, 0, 322.998046875, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(1215, -1612.1333007813, -2719.8520507813, 48.509635925293, 0, 0, 0, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(1215, -1608.8570556641, -2715.4047851563, 48.509635925293, 0, 0, 0, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(1215, -1605.5515136719, -2711.0432128906, 48.509635925293, 0, 0, 0, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(1215, -1602.2153320313, -2706.6904296875, 48.509635925293, 0, 0, 0, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(11417, -1593.0615234375, -2739.4858398438, 52.412910461426, 0, 0, 10, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(11417, -2243.3530273438, -2548.5139160156, 35.795722961426, 0, 0, 14, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(994, -2248.4870605469, -2562.2756347656, 31.0703125, 0, 0, 63, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(994, -2247.7121582031, -2562.7109375, 31.07745552063, 0, 0, 62.99560546875, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(994, -2243.5483398438, -2564.8002929688, 31.0703125, 0, 0, 62.99560546875, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(994, -2242.6828613281, -2565.2111816406, 31.0703125, 0, 0, 62.99560546875, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(11417, -2023.4284667969, 181.5690612793, 32.709785461426, 0, 0, 90, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(1686, -2026.5955810547, 156.82255554199, 28.0390625, 0, 0, 0, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(970, -2026.0302734375, 156.76225280762, 28.590543746948, 0, 0, 90, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(970, -2027.0118408203, 156.76225280762, 28.590543746948, 0, 0, 90, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(996, -2016.6087646484, 148.77519226074, 27.436254501343, 0, 0, 90, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(1215, -2016.5404052734, 156.63232421875, 27.251823425293, 0, 0, 90, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(996, -2016.6087646484, 157.69549560547, 27.436254501343, 0, 0, 90, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(1215, -2016.5404052734, 165.54466247559, 27.251823425293, 0, 0, 90, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(1215, -2016.5404052734, 147.75090026855, 27.251823425293, 0, 0, 90, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(1215, -2026.5955810547, 160.27062988281, 28.603385925293, 0, 0, 90, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(1215, -2026.5955810547, 153.22596740723, 28.603385925293, 0, 0, 90, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(994, -1677.8190917969, 405.46643066406, 6.3984375, 0, 0, 44.994506835938, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(994, -1672.5668945313, 410.72399902344, 6.3984375, 0, 0, 44.994506835938, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(994, -1671.7083740234, 409.87326049805, 6.3984375, 0, 0, 44.994506835938, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(994, -1676.9721679688, 404.62310791016, 6.3984375, 0, 0, 44.994506835938, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(994, -1683.5639648438, 411.21224975586, 6.3984375, 0, 0, 44.994506835938, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(994, -1678.2972412109, 416.48797607422, 6.3984375, 0, 0, 44.994506835938, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(994, -1684.4241943359, 412.05838012695, 6.3984375, 0, 0, 44.994506835938, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(994, -1679.1702880859, 417.34906005859, 6.3984375, 0, 0, 44.994506835938, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(8167, -1666.4035644531, 417.02209472656, 2.7000000476837, 90, 0, 315, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(8167, -1665.5202636719, 416.17474365234, 2.7000000476837, 90, 0, 315, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(8167, -1678.6861572266, 403.01733398438, 2.7000000476837, 90, 0, 315, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(8167, -1679.5347900391, 403.89093017578, 2.7000000476837, 90, 0, 315, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(8167, -1685.2546386719, 409.6423034668, 2.7000000476837, 90, 0, 315, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(8167, -1686.1273193359, 410.49356079102, 2.7000000476837, 90, 0, 315, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(1215, -1679.9932861328, 402.42730712891, 6.962760925293, 0, 0, 0, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(1215, -1686.5845947266, 409.04977416992, 6.962760925293, 0, 0, 0, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(1215, -1664.9559326172, 417.49685668945, 6.962760925293, 0, 0, 0, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(8167, -1672.1302490234, 422.75018310547, 2.7000000476837, 90, 0, 315, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(8167, -1673.0307617188, 423.62954711914, 2.7000000476837, 90, 0, 315, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(1215, -1671.5549316406, 424.0885925293, 6.962760925293, 0, 0, 0, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(984, -2410.3576660156, 976.20617675781, 45.097618103027, 0, 0, 0, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(984, -2411.2458496094, 976.20617675781, 45.097618103027, 0, 0, 0, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(1215, -2410.8286132813, 968.40417480469, 45.025260925293, 0, 0, 0, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(1215, -2410.8286132813, 983.60400390625, 45.025260925293, 0, 0, 0, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(970, 1942.140625, -1778.0500488281, 13.192106246948, 0, 0, 90, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(970, 1942.140625, -1773.9300537109, 13.192106246948, 0, 0, 90, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(970, 1942.140625, -1769.8100585938, 13.192106246948, 0, 0, 90, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(970, 1942.140625, -1767.7099609375, 13.192106246948, 0, 0, 90, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(970, 1941.1500244141, -1778.0500488281, 13.192106246948, 0, 0, 90, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(970, 1941.1500244141, -1773.9300537109, 13.191471099854, 0, 0, 90, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(970, 1941.1500244141, -1769.8100585938, 13.192106246948, 0, 0, 90, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(970, 1941.1500244141, -1767.7099609375, 13.192106246948, 0, 0, 90, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(1676, 1000.4146728516, -937.34997558594, 42.908992767334, 0, 0, 7.5, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(1676, 1007.4282226563, -936.40002441406, 42.908992767334, 0, 0, 7.4981689453125, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(994, 997.40002441406, -938.25744628906, 41.328125, 0, 0, 7.5, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(994, 1004.3499755859, -937.34002685547, 41.328125, 0, 0, 7.4981689453125, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(994, 997.26831054688, -937.2109375, 41.328125, 0, 0, 7.4981689453125, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(994, 1004.2645874023, -936.28521728516, 41.328125, 0, 0, 7.4981689453125, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(970, 655.19494628906, -570.42736816406, 16.052972793579, 0, 0, 90, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(970, 656.1044921875, -570.42736816406, 16.052972793579, 0, 0, 90, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(970, 656.1044921875, -559.77954101563, 16.052972793579, 0, 0, 90, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(970, 655.19494628906, -559.77954101563, 16.052972793579, 0, 0, 90, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(11417, 654.08386230469, -587.52520751953, 20.201992034912, 0, 0, 0, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(12913, 667.57708740234, -583.63159179688, 17.961227416992, 0, 0, 180, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(970, 1379.6687011719, 460.25714111328, 19.896684646606, 0, 0, 336, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(970, 1380.0240478516, 461.03591918945, 19.896684646606, 0, 0, 335.99487304688, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(970, 1384.4685058594, 459.05697631836, 19.896684646606, 0, 0, 335.99487304688, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(970, 1384.1026611328, 458.24130249023, 19.896684646606, 0, 0, 335.99487304688, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(1215, 655.63928222656, -572.41638183594, 16.065814971924, 0, 0, 0, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(1215, 655.63928222656, -557.83038330078, 16.065814971924, 0, 0, 0, -1, -1, -1, MAX_RADIO_STREAM);
    CreateDynamicObject(11417, 1350.8807373047, 475.21041870117, 24.070476531982, 0, 0, 110, -1, -1, -1, MAX_RADIO_STREAM);
	//
	new tmpobjid;
	//parque
	tmpobjid = CreateObject(3985,1479.545,-1631.505,11.946,0.000,0.000,0.000,1000.000);
	SetObjectMaterial(tmpobjid, 0, 4829, "airport_las", "Grass_128HV", 0);
	SetObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	SetObjectMaterial(tmpobjid, 2, 11301, "carshow_sfse", "concpanel_la", 0);
	SetObjectMaterial(tmpobjid, 3, 16136, "des_telescopestuff", "stoneclad1", 0);
	SetObjectMaterial(tmpobjid, 4, 10101, "2notherbuildsfe", "Bow_church_grass_alt", 0);
	tmpobjid = CreateObject(4186,1479.552,-1693.125,19.442,0.000,0.000,0.000,1000.000);
	SetObjectMaterial(tmpobjid, 0, 4829, "airport_las", "Grass_128HV", 0);
	SetObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	SetObjectMaterial(tmpobjid, 2, 11301, "carshow_sfse", "concpanel_la", 0);
	SetObjectMaterial(tmpobjid, 3, 16136, "des_telescopestuff", "stoneclad1", 0);
	//continuar
	CreateDynamicObject(10183, 2123.69995, -1782.19995, 12.40000,   0.00000, 0.00000, 225.00000);
	CreateDynamicObject(2645, 2105.80005, -1807.80005, 14.00000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(7597, 2174.89990, -1764.00000, 27.90000,   0.00000, 0.00000, 320.00000);
	CreateDynamicObject(712, 2096.30005, -1782.59998, 22.20000,   0.00000, 0.00000, 310.00000);
	CreateDynamicObject(712, 2096.10010, -1827.09998, 22.20000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(970, 2106.30005, -1786.09998, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2110.39990, -1786.09998, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2114.50000, -1786.09998, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2118.60010, -1786.09998, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2120.69995, -1786.09998, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2099.19995, -1799.40002, 13.10000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 2099.19995, -1793.19995, 13.10000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 2099.19995, -1797.30005, 13.10000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 2099.19995, -1814.50000, 13.10000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 2099.19995, -1818.59998, 13.10000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1256, 2127.89990, -1770.69995, 13.20000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1256, 2127.89990, -1778.80005, 13.20000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(673, 2131.89990, -1794.50000, 12.50000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(673, 2130.10010, -1830.40002, 12.60000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1524, 2135.30005, -1819.69995, 14.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1527, 2135.39990, -1791.50000, 13.70000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2101.19995, -1787.19995, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2099.69995, -1788.90002, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2124.60010, -1786.19995, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2126.60010, -1786.19995, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2099.84912, -1824.46899, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2101.72534, -1826.38623, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObjectEx(3783, 2258.19946, -1402.72546, 25.25966,   0.00000, 0.00000, 0.00000, 1000.000, 1000.000);
	CreateDynamicObjectEx(3783, 2235.24927, -1402.71130, 25.26300,   0.00000, 0.00000, 0.00000, 1000.000, 1000.000);
	CreateDynamicObjectEx(3783, 2236.39673, -1466.16492, 25.28301,   0.00000, 0.00000, 180.00000, 1000.000, 1000.000);
	CreateDynamicObjectEx(3783, 2259.46899, -1466.14978, 25.26934,   0.00000, 0.00000, 180.00000, 1000.000, 1000.000);
	CreateDynamicObject(620, 2270.03735, -1471.64612, 20.93610,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 2224.33545, -1463.12634, 23.84916,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 2270.10742, -1405.81299, 23.84916,   0.00000, 0.00000, 0.00000);
	CreateDynamicObjectEx(3655, 2391.53027, -1310.92371, 26.80950,   0.00000, 2.50000, 180.00000, 1000.000, 1000.000);
	CreateDynamicObjectEx(3651, 2392.42017, -1296.45447, 26.92970,   0.00000, -2.50000, 0.00000, 1000.000, 1000.000);
	CreateDynamicObject(8674, 2393.80298, -1374.26135, 23.45116,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8674, 2388.65332, -1374.26111, 23.45120,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8674, 2404.09277, -1374.24548, 23.45116,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3496, 2406.52466, -1374.61926, 23.30760,   -1.00000, 0.00000, 180.00000);
	CreateDynamicObject(1297, 2335.43921, -1312.89160, 26.29400,   0.00000, 0.00000, -118.67999);
	CreateDynamicObject(910, 2408.77686, -1310.43604, 25.20387,   4.00000, 0.00000, 90.00000);
	CreateDynamicObject(1280, 2406.44653, -1266.19275, 23.56438,   -2.00000, 0.00000, -90.48000);
	CreateDynamicObject(1280, 2402.41553, -1266.21912, 23.62418,   -2.00000, 0.00000, -90.48000);
	CreateDynamicObject(2677, 2398.19727, -1265.51379, 23.53876,   6.18000, 2.82000, -106.80001);
	CreateDynamicObject(1359, 2398.14038, -1265.84900, 23.91702,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2695, 2361.06934, -1321.84827, 24.26220,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1761, 2050.42041, -1149.29529, 22.81543,   0.00000, -3.00000, 65.88000);
	CreateDynamicObject(1762, 2053.41406, -1147.52808, 22.83526,   0.00000, 0.00000, 327.48016);
	CreateDynamicObject(1810, 2051.13818, -1150.81091, 22.76863,   0.00000, 0.00000, 126.48000);
	CreateDynamicObject(1737, 2052.76392, -1150.16260, 22.68609,   0.00000, 0.00000, 83.15999);
	CreateDynamicObject(1520, 2053.16455, -1149.02271, 23.53909,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1510, 2052.65356, -1149.63037, 23.50069,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1486, 2053.05664, -1150.01196, 23.63512,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2670, 2052.49170, -1149.79993, 22.93118,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1481, 2104.84766, -1177.48279, 25.17026,   0.00000, 0.00000, 177.72002);
	CreateDynamicObject(1770, 2104.46924, -1171.98877, 24.36769,   0.00000, 0.00000, 23.52000);
	CreateDynamicObject(2121, 2104.47583, -1170.20276, 24.98826,   0.00000, 0.00000, 11.28000);
	CreateDynamicObject(2121, 2102.71753, -1171.57776, 24.98826,   0.00000, 0.00000, 81.23998);
	CreateDynamicObject(2121, 2105.30396, -1173.68652, 24.98826,   0.00000, 0.00000, 184.01997);
	CreateDynamicObject(2121, 2106.65796, -1171.41956, 24.98826,   0.00000, 0.00000, 285.71991);
	CreateDynamicObject(947, 2102.96289, -1153.77368, 26.41398,   0.00000, 0.00000, 179.76012);
	CreateDynamicObject(1421, 2091.18530, -1158.00891, 25.23734,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(5169, 2273.08301, -1739.47852, 14.23293,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1257, 2237.70923, -1738.68152, 13.73320,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1256, 2245.76733, -1742.03149, 13.19314,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1256, 2266.32568, -1742.01819, 13.19314,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1256, 2283.64673, -1742.13440, 13.19314,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1232, 2239.31323, -1742.14636, 13.64548,   0.00000, 0.00000, 251.39999);
	CreateDynamicObject(1232, 2305.12915, -1742.23718, 13.64548,   0.00000, 0.00000, 186.06010);
	CreateDynamicObject(1257, 2281.15894, -1725.22839, 13.73320,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1257, 2219.99390, -1438.74658, 24.19409,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(973, 1851.59729, -1064.63074, 23.87260,   0.00000, 0.00000, -89.28001);
	CreateDynamicObject(973, 1851.54553, -1054.71802, 23.87260,   0.00000, 0.00000, -89.76000);
	CreateDynamicObject(973, 1851.68530, -1044.60510, 23.87260,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(973, 1851.68066, -1037.65173, 23.87260,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(973, 2578.58350, -1460.42358, 23.80305,   0.00000, 0.00000, 25.25998);
	CreateDynamicObject(973, 2091.44653, -1836.60046, 13.36297,   0.00000, 0.00000, 89.40000);
	CreateDynamicObject(973, 2822.26709, -1426.85608, 16.05331,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(973, 2553.11108, -2049.23413, 3.64323,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(973, 2580.37646, -1489.76086, 23.80305,   0.00000, 0.00000, 90.05995);
	CreateDynamicObject(1232, 2345.19849, -1259.24475, 21.28517,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 2329.60254, -1230.83228, 21.28517,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(5169, 2365.04126, -1740.19275, 14.23293,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1257, 2382.19336, -1738.96167, 13.73320,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1256, 2337.06470, -1742.36353, 13.19310,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1256, 2354.92651, -1742.44788, 13.19310,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1256, 2373.97607, -1742.48169, 13.19310,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1256, 2393.00146, -1742.44482, 13.19310,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1232, 2329.78662, -1742.78174, 13.64548,   0.00000, 0.00000, 186.06010);
	CreateDynamicObject(1232, 2378.68579, -1742.76282, 13.64548,   0.00000, 0.00000, 186.06010);
	CreateDynamicObjectEx(3588, 2479.23877, -1417.84546, 30.46700,   0.00000, 0.00000, 0.00000, 1000.000, 1000.000);
	CreateDynamicObjectEx(3588, 2479.23877, -1387.10413, 30.46703,   0.00000, 0.00000, 0.00000, 1000.000, 1000.000);
	CreateDynamicObject(1412, 2501.67017, -1431.59802, 29.06133,   0.00000, 0.00000, -270.53995);
	CreateDynamicObject(1413, 2501.63599, -1426.29565, 29.07940,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1413, 2501.66162, -1421.02930, 29.07940,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1412, 2501.75098, -1415.74060, 29.06133,   0.00000, 0.00000, -270.83994);
	CreateDynamicObject(1413, 2501.73291, -1410.42700, 29.07940,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(3496, 2463.14063, -1362.43140, 27.82760,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1946, 2464.18506, -1363.99316, 27.91462,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1300, 2471.49976, -1357.45740, 28.18690,   0.00000, 0.00000, -6.96000);
	CreateDynamicObject(1368, 2473.79199, -1357.71240, 28.53172,   0.00000, 0.00000, -6.96000);
	CreateDynamicObject(1368, 2476.55981, -1358.04980, 28.53172,   0.00000, 0.00000, -6.96000);
	CreateDynamicObject(3593, 2497.86621, -1361.11450, 28.32305,   0.00000, 0.00000, 169.61993);
	CreateDynamicObject(1709, 2488.54346, -1359.68701, 27.81555,   0.00000, 0.00000, 9.18000);
	CreateDynamicObject(1712, 2486.70752, -1362.01123, 27.79593,   0.00000, 0.00000, 79.14000);
	CreateDynamicObject(2673, 2486.32520, -1363.64929, 27.94394,   0.00000, 0.00000, 153.30002);
	CreateDynamicObject(850, 2483.48389, -1355.75708, 27.93923,   0.00000, 0.00000, 94.20001);
	CreateDynamicObject(1257, 2505.15454, -1428.71667, 28.81939,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1498, 2488.71460, -1387.98962, 27.73200,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1498, 2473.78687, -1424.52515, 27.73200,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1498, 2488.71460, -1418.58936, 27.73200,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1498, 2473.70288, -1393.76050, 27.73200,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1498, 2473.89014, -1411.16650, 27.73200,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1498, 2473.87036, -1380.41589, 27.73200,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1226, 2463.11450, -1358.44409, 31.64487,   0.00000, 0.00000, 119.10000);
	CreateDynamicObject(1226, 2482.51660, -1386.01599, 31.64487,   0.00000, 0.00000, 42.54002);
	CreateDynamicObject(1368, 2220.37671, -1428.41235, 23.68620,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1300, 2220.47803, -1430.81506, 23.35144,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1408, 2242.54761, -1411.22278, 23.51551,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3532, 2242.69385, -1410.38721, 23.64880,   0.00000, 0.00000, -87.24001);
	CreateDynamicObject(1408, 2245.59180, -1394.33386, 23.54471,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3532, 2245.54395, -1395.10718, 23.64880,   0.00000, 0.00000, 91.74001);
	CreateDynamicObject(1408, 2265.81372, -1394.32141, 23.54566,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3532, 2265.83838, -1395.15210, 23.64880,   0.00000, 0.00000, 91.74001);
	CreateDynamicObject(1408, 2242.54761, -1456.04553, 23.53910,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3532, 2242.58130, -1456.89465, 23.64880,   0.00000, 0.00000, 91.85999);
	CreateDynamicObject(1408, 2242.12183, -1473.96448, 23.03194,   0.00000, 2.00000, 0.06000);
	CreateDynamicObject(1408, 2258.04956, -1473.96680, 22.56991,   0.00000, 2.00000, 0.06000);
	CreateDynamicObject(3532, 2242.38843, -1473.24158, 23.16006,   0.00000, 1.16000, 272.75989);
	CreateDynamicObject(3532, 2258.34009, -1473.31311, 22.84232,   0.00000, -2.00000, 446.45987);
	CreateDynamicObject(763, 2244.77197, -1432.43384, 23.66284,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(763, 2276.36548, -1441.16089, 22.47562,   0.00000, 0.00000, 128.28000);
	CreateDynamicObject(1368, 2266.51807, -1433.03137, 23.69970,   0.00000, 0.00000, 84.90000);
	CreateDynamicObjectEx(8527, 2071.06104, -1574.78064, 17.93257,   0.00000, 0.00000, 90.00000, 1000.000, 1000.000);
	CreateDynamicObjectEx(1498, 2061.62915, -1591.32849, 12.35470,   0.00000, 0.00000, -90.00000, 1000.000, 1000.000);
	CreateDynamicObjectEx(1498, 2061.62915, -1576.56970, 12.35470,   0.00000, 0.00000, -90.00000, 1000.000, 1000.000);
	CreateDynamicObjectEx(1498, 2061.64380, -1566.70251, 12.35470,   0.00000, 0.00000, -90.00000, 1000.000, 1000.000);
	CreateDynamicObjectEx(1498, 2061.62915, -1552.83215, 12.35470,   0.00000, 0.00000, -90.00000, 1000.000, 1000.000);
	CreateDynamicObjectEx(1498, 2080.49414, -1596.69885, 12.35470,   0.00000, 0.00000, 90.00000, 1000.000, 1000.000);
	CreateDynamicObjectEx(1498, 2080.49414, -1582.95728, 12.35470,   0.00000, 0.00000, 90.00000, 1000.000, 1000.000);
	CreateDynamicObjectEx(1498, 2080.49414, -1568.12878, 12.35466,   0.00000, 0.00000, 90.00000, 1000.000, 1000.000);
	CreateDynamicObjectEx(1498, 2080.49414, -1558.15381, 12.35470,   0.00000, 0.00000, 90.00000, 1000.000, 1000.000);
	CreateDynamicObject(1368, 2101.63745, -1593.66553, 13.18834,   0.00000, 0.00000, -90.23999);
	CreateDynamicObjectEx(3556, 2095.70020, -1633.12268, 14.83930,   0.00000, 0.00000, 90.00000, 1000.000, 1000.000);
	CreateDynamicObjectEx(3582, 2095.82495, -1652.64331, 14.92924,   0.00000, 0.00000, 90.00000, 1000.000, 1000.000);
	CreateDynamicObjectEx(3556, 2095.70020, -1667.45471, 14.83930,   0.00000, 0.00000, 90.00000, 1000.000, 1000.000);
	CreateDynamicObject(1412, 2102.45972, -1679.09082, 13.79150,   0.00000, 0.00000, 262.85992);
	CreateDynamicObject(1412, 2101.80957, -1684.28943, 13.79150,   0.00000, 0.00000, 262.85992);
	CreateDynamicObject(1412, 2101.04980, -1689.45569, 13.79150,   0.00000, 0.00000, 260.33994);
	CreateDynamicObject(1490, 2099.88086, -1647.58301, 14.16991,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(7093, 2139.03906, -1739.44153, 22.07555,   0.00000, 0.00000, -34.98000);
	CreateDynamicObjectEx(3555, 2375.99902, -1640.71887, 14.99545,   0.00000, 0.00000, 180.23997, 1000.000, 1000.000);
	CreateDynamicObjectEx(3555, 2429.35767, -1642.46814, 14.99540,   0.00000, 0.00000, 180.00000, 1000.000, 1000.000);
	CreateDynamicObject(1368, 2437.37134, -1680.01404, 13.46113,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1368, 2434.11621, -1680.01404, 13.46110,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3496, 2424.66162, -1680.53198, 12.81974,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1946, 2425.69141, -1679.40588, 12.94369,   0.00000, 0.00000, 0.00000);
	CreateDynamicObjectEx(4857, 2060.20947, -1731.58752, 14.85945,   0.00000, 0.00000, 0.00000, 1000.000, 1000.000);
	CreateDynamicObject(19357, 2065.10376, -1729.82727, 12.46913,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(1226, 2067.88574, -1737.29565, 16.39840,   0.00000, 0.00000, 133.73999);
	CreateDynamicObject(970, 2065.95898, -1734.70544, 13.00570,   0.00000, 0.00000, -60.54002);
	CreateDynamicObject(2674, 2056.57202, -1729.96118, 12.56150,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1679, 2055.30054, -1732.73523, 13.01888,   0.00000, 0.00000, 23.16000);
	CreateDynamicObject(18663, 2055.12354, -1735.58984, 13.65216,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1368, 2072.52100, -1724.41772, 13.24021,   0.00000, 0.00000, 90.00000);
	// water in pools
	CreateObject(10444, 1339.55957, -650.36328, 107.64650,   0.00000, 0.00000, 110.00000);
	CreateObject(10444, 881.52557, -683.94800, 112.61460,   0.00000, 0.00000, 145.00000);
	CreateObject(10444, 714.78162, -1054.18042, 45.20150,   0.00000, 0.00000, 150.10519);

    CreateDynamicObject(1243, 890.69623, -2448.19629, -3.40480,   0.00000, 0.00000, 0.00000);//pesca

      //- Utiles de gymnasio
	PressBancaBarraObjeto[0] = CreateObject(2913, barbell_pos[0][0], barbell_pos[0][1], barbell_pos[0][2], barbell_pos[0][3], barbell_pos[0][4], barbell_pos[0][5]);
	PressBancaBarraObjeto[1] = CreateObject(2913, barbell_pos[1][0], barbell_pos[1][1], barbell_pos[1][2], barbell_pos[1][3], barbell_pos[1][4], barbell_pos[1][5]);
	PressBancaBarraObjeto[2] = CreateObject(2913, barbell_pos[2][0], barbell_pos[2][1], barbell_pos[2][2], barbell_pos[2][3], barbell_pos[2][4], barbell_pos[2][5]);
	PressBancaBarraObjeto[3] = CreateObject(2913, barbell_pos[3][0], barbell_pos[3][1], barbell_pos[3][2], barbell_pos[3][3], barbell_pos[3][4], barbell_pos[3][5]);
	PressBancaBarraObjeto[4] = CreateObject(2913, barbell_pos[4][0], barbell_pos[4][1], barbell_pos[4][2], barbell_pos[4][3], barbell_pos[4][4], barbell_pos[4][5]);
 	PressBancaBarraObjeto[5] = CreateObject(2913, barbell_pos[5][0], barbell_pos[5][1], barbell_pos[5][2], barbell_pos[5][3], barbell_pos[5][4], barbell_pos[5][5]);

	  //- Porton e puertas de LSPD
    portonpf = CreateDynamicObjectEx(2990, 135.50967, 1953.72900, 22.24931,   0.00000, 0.00000, 180.95999, 1000.000, 1000.000);
	PuertaSasd = CreateDynamicObject(1495, -448.1926, 692.63770, 3851.9309,   0.00000, 0.00000, -90.00000);
	BotonPuertaSasd = CreateButton(-448.2547, 690.9078, 3853.3909, -90.0000);
	BotonPuertaSasd1 = CreateButton(-448.1216, 690.8560, 3853.6653, 90.00000);
	PuertaLSPDINT = CreateDynamicObject(1495, 228.25906, 152.26401, 1002.02618,   0.00000, 0.00000, -90.00000);
	BotonPuertaLSPDINT = CreateButton(228.2975, 150.5040, 1003.2021, 90.00000);
    BotonPuertaLSPDINT1 = CreateButton(228.20528, 150.55099, 1003.20209, -90.00000);
      //- Porton de SAN
    portonSAN1 = CreateDynamicObject(969, 774.11444092, -1384.98632812, 12.92022705, 0.00000000, 0.00000000, 0.00000000);
    portonSAN = CreateDynamicObject(976, 781.77209500, -1330.31884800, 12.68660500, 0.00000000, 0.00000000, -180.85939924);
      //- Porton de embargos
    portondeposito = CreateDynamicObject(19912, -497.41959, -562.72961, 27.28690,   0.00000, 0.00000, 180.59996);

	 //- /equipo
    CreateDynamicPickup(1242, 1, 219.6168, 149.6197, 1003.0089); // Equipo LSPD
    CreateDynamicPickup(1242, 1, 258.1540, 77.5021, 1003.6276); // Equipo SADOC
    CreateDynamicPickup(1242, 1, -429.4801, 688.3015, 3853.0627); // Equipo Sheriff
    CreateDynamicPickup(1239, 1, 1121.7467, 1248.0630, 10.8971); // Equipo SAN LA
    CreateDynamicPickup(1242, 1, 351.6515, 213.3615, 1008.4004); // Equipo Gobierno
    CreateDynamicPickup(1239, 1, -2046.9657,-215.7112,35.4445); // Equipo LSED - Médicos

     //- Comandos de facciones
    CreateDynamicPickup(19418, 1, -448.4868, 675.1337, 3852.9907); // /arrestar - sheriff
    CreateDynamicPickup(19418, 1, 234.1898,72.5130,1005.0391); // /arrestar - sheriff
    CreateDynamicPickup(19418, 1, 2314.0645,2447.0774,3.2734); // /arrestar - fuera
    CreateDynamicPickup(19418, 1, 200.7210, 168.3594, 1002.9638); // /arrestar - dentro
    CreateDynamicPickup(19418, 1, 260.3547, 1990.4944, 17.6406); // /arrestarf - Prisión Federal

     //- Extra
    CreateDynamicPickup(1239, 1, 2795.9546, -2569.3674, 2.9869); // /Puerto
    CreateDynamicPickup(19418, 1, 230.5195,164.9984,1003.0234); // /Sistema Policial
    CreateDynamicPickup(1239, 1, -1113.3628,3932.3645,228.6613); // Bienvenidos al Hospital.
    CreateDynamicPickup(1274, 1, -1539.4642,321.0930,53.5363); // /banco
    CreateDynamicPickup(1239, 1, 2119.1084, -2001.5844, 8.0257); // /mercado
    CreateDynamicPickup(1239, 1, 234.1941, 159.6334, 1003.0182); // Pagar multa en LSPD
    CreateDynamicPickup(1239, 1, 293.0547, 180.2622, 1007.1493); // Pagar multa en LSPD 2
    CreateDynamicPickup(1239, 1, 362.0124, 173.3058, 1008.3050); // /ayuntamiento
    CreateDynamicPickup(1239, 1, 1658.9924, -1807.1152, 13.5508); // Embargar
    CreateDynamicPickup(1239, 1, 655.2497, -502.9607, 16.3102); // Punto de /traficar
    CreateDynamicPickup(1240, 1, -2066.0830, -206.2477, 35.4695); // /curarme LSED
    CreateDynamicPickup(1239, 1, 2540.0281, -1283.3070, 1043.9797); // /bandeja en la prisión federal.

    //- /fabrica - /camello
    CreateDynamicPickup(1313, 1, 943.96948, 2127.54150, 1011.02472);
    CreateDynamicPickup(1313, 1, 940.99377, 2127.47949, 1011.02472);
    CreateDynamicPickup(1313, 1, 942.56256, 2137.43994, 1011.02472);
    CreateDynamicPickup(1313, 1, 942.46503, 2117.84863, 1011.02472);
    CreateDynamicPickup(1313, 1, 942.60162, 2153.59595, 1011.02472);
    CreateDynamicPickup(1313, 1, 941.16083, 2163.73975, 1011.02472);
    CreateDynamicPickup(1313, 1, 943.88867, 2163.79761, 1011.02472);
    CreateDynamicPickup(1313, 1, 2820.2854,-1173.0179,1025.5703);

     //- /empleo
    CreateDynamicPickup(19624, 1, 2137.6953, -2282.5144, 20.7174); // Carguero
    CreateDynamicPickup(1239, 1, 2259.5535, -1019.1276, 59.3153); // Delincuente
    CreateDynamicPickup(1239, 1, 2753.2439, -2551.0959, 13.6205); // Pescador
    CreateDynamicPickup(19624, 1, 2429.3569, -2108.7351, 13.5563); // Camionero
    CreateDynamicPickup(1239, 1, 1032.0359, -1435.2146, 13.5591); //ladrón de coches
    CreateDynamicPickup(19624, 1, 2143.5129, -2161.9673, 13.5084); // Carpintero
    CreateDynamicPickup(19624, 1, -418.6058, -1759.5006, 6.2169); // leñador
    CreateDynamicPickup(19624, 1, -383.2412, -1438.8146, 26.3249); // granjero
    CreateDynamicPickup(1239, 1, 2457.5034,-1901.9773,13.5469); // Traficante

	 //- leñador
    CreateDynamicPickup(1239, 1, -441.13446, -1767.01123, 6.06064);
    CreateDynamicPickup(1239, 1, -432.12009, -1785.66162, 3.72014);
    CreateDynamicPickup(1239, 1, -419.71930, -1793.72607, 3.42763);
    CreateDynamicPickup(1239, 1, -409.08514, -1794.17078, 3.07774);
    CreateDynamicPickup(1239, 1, -404.41458, -1782.54700, 3.10609);
    CreateDynamicPickup(1239, 1, -398.54572, -1769.50366, 4.84904);
    CreateDynamicPickup(1239, 1, -393.60931, -1792.14294, 3.10774);
    CreateDynamicPickup(1276, 1, 2110.2300, -2155.0627, 13.5084); //- /vendertroncos
    CreateDynamicPickup(1463, 1, 2142.0522, -2204.2458, 13.5084);
    
    //Textos del sistema de purga -- por Courier 14/03
  /*  TextPurga0 = TextDrawCreate(501.318450, 332.500000, "LA PURGA COMENZO");
	TextDrawLetterSize(TextPurga0, 0.231668, 1.565000);
	TextDrawAlignment(TextPurga0, 1);
	TextDrawColor(TextPurga0, -1);
	TextDrawSetShadow(TextPurga0, 0);
	TextDrawSetOutline(TextPurga0, 0);
	TextDrawBackgroundColor(TextPurga0, 51);
	TextDrawFont(TextPurga0, 2);
	TextDrawSetProportional(TextPurga0, 1); */

	TextPurga1 = TextDrawCreate(630.286865, 325.833251, "usebox");
	TextDrawLetterSize(TextPurga1, 0.000000, 12.127778);
	TextDrawTextSize(TextPurga1, 469.800720, 0.000000);
	TextDrawAlignment(TextPurga1, 1);
	TextDrawColor(TextPurga1, 0);
	TextDrawUseBox(TextPurga1, true);
	TextDrawBoxColor(TextPurga1, 102);
	TextDrawSetShadow(TextPurga1, 0);
	TextDrawSetOutline(TextPurga1, 0);
	TextDrawFont(TextPurga1, 0);

	TextPurga2 = TextDrawCreate(487.261688, 355.250122, "Cualquier homicidio es legal dentro de");
	TextDrawLetterSize(TextPurga2, 0.178257, 1.599998);
	TextDrawAlignment(TextPurga2, 1);
	TextDrawColor(TextPurga2, -1);
	TextDrawSetShadow(TextPurga2, 0);
	TextDrawSetOutline(TextPurga2, 1);
	TextDrawBackgroundColor(TextPurga2, 51);
	TextDrawFont(TextPurga2, 1);
	TextDrawSetProportional(TextPurga2, 1);

	TextPurga3 = TextDrawCreate(492.884521, 372.166564, "Las proximas 12 horas");
	TextDrawLetterSize(TextPurga3, 0.273367, 1.401666);
	TextDrawAlignment(TextPurga3, 1);
	TextDrawColor(TextPurga3, -1);
	TextDrawSetShadow(TextPurga3, 0);
	TextDrawSetOutline(TextPurga3, 1);
	TextDrawBackgroundColor(TextPurga3, 51);
	TextDrawFont(TextPurga3, 1);
	TextDrawSetProportional(TextPurga3, 1);

	TextPurga4 = TextDrawCreate(475.549194, 386.750030, "Se autoriza el uso de armas de clase 4 e inferiores");
	TextDrawLetterSize(TextPurga4, 0.167012, 2.130831);
	TextDrawAlignment(TextPurga4, 1);
	TextDrawColor(TextPurga4, -1);
	TextDrawSetShadow(TextPurga4, 0);
	TextDrawSetOutline(TextPurga4, 1);
	TextDrawBackgroundColor(TextPurga4, 51);
	TextDrawFont(TextPurga4, 1);
	TextDrawSetProportional(TextPurga4, 1);

	TextPurga5 = TextDrawCreate(476.485931, 407.166687, "Benditos sean los nuevos padres de la patria!");
	TextDrawLetterSize(TextPurga5, 0.185285, 1.862498);
	TextDrawAlignment(TextPurga5, 1);
	TextDrawColor(TextPurga5, -1);
	TextDrawSetShadow(TextPurga5, 0);
	TextDrawSetOutline(TextPurga5, 1);
	TextDrawBackgroundColor(TextPurga5, 51);
	TextDrawFont(TextPurga5, 1);
	TextDrawSetProportional(TextPurga5, 1);


	//- Efecto de drogas
    EfectoPorro = TextDrawCreate(-12.000000, 2.000000, "_");
    TextDrawBackgroundColor(EfectoPorro, 255);
    TextDrawFont(EfectoPorro, 1);
    TextDrawLetterSize(EfectoPorro, 0.900000, 51.099998);
    TextDrawColor(EfectoPorro, -1);
    TextDrawSetOutline(EfectoPorro, 0);
    TextDrawSetProportional(EfectoPorro, 1);
    TextDrawSetShadow(EfectoPorro, 1);
    TextDrawUseBox(EfectoPorro, 1);
    TextDrawBoxColor(EfectoPorro, 0x93F3002A);
    TextDrawTextSize(EfectoPorro, 660.000000, 0.000000);
    TextDrawSetSelectable(EfectoPorro, 0);

    EfectoCrack = TextDrawCreate(661.000000, 1.000000, "_");
    TextDrawBackgroundColor(EfectoCrack, 255);
    TextDrawFont(EfectoCrack, 1);
    TextDrawLetterSize(EfectoCrack, 0.800000, 51.299999);
    TextDrawColor(EfectoCrack, -1);
    TextDrawSetOutline(EfectoCrack, 0);
    TextDrawSetProportional(EfectoCrack, 1);
    TextDrawSetShadow(EfectoCrack, 1);
    TextDrawUseBox(EfectoCrack, 1);
    TextDrawBoxColor(EfectoCrack, 0xFFFFFF81);
    TextDrawTextSize(EfectoCrack, -30.000000, -49.000000);
    TextDrawSetSelectable(EfectoCrack, 0);

    EfectoCocaina = TextDrawCreate(661.000000, 1.000000, "_");
    TextDrawBackgroundColor(EfectoCocaina, 255);
    TextDrawFont(EfectoCocaina, 1);
    TextDrawLetterSize(EfectoCocaina, 0.800000, 51.299999);
    TextDrawColor(EfectoCocaina, -1);
    TextDrawSetOutline(EfectoCocaina, 0);
    TextDrawSetProportional(EfectoCocaina, 1);
    TextDrawSetShadow(EfectoCocaina, 1);
    TextDrawUseBox(EfectoCocaina, 1);
    TextDrawBoxColor(EfectoCocaina, 0xB80000BF);
    TextDrawTextSize(EfectoCocaina, -30.000000, -49.000000);
    TextDrawSetSelectable(EfectoCocaina, 0);

    EfectoHeroina = TextDrawCreate(661.000000, 1.000000, "_");
    TextDrawBackgroundColor(EfectoHeroina, 255);
    TextDrawFont(EfectoHeroina, 1);
    TextDrawLetterSize(EfectoHeroina, 0.800000, 51.299999);
    TextDrawColor(EfectoHeroina, -1);
    TextDrawSetOutline(EfectoHeroina, 0);
    TextDrawSetProportional(EfectoHeroina, 1);
    TextDrawSetShadow(EfectoHeroina, 1);
    TextDrawUseBox(EfectoHeroina, 1);
    TextDrawBoxColor(EfectoHeroina, 0x00000095);
    TextDrawTextSize(EfectoHeroina, -30.000000, -49.000000);
    TextDrawSetSelectable(EfectoHeroina, 0);


    //» Timer's
    SetTimer("A_Reloj", 1000, 1);
    SetTimer("A_Vehiculos", 60000, 1);
    SetTimer("A_Microbeat", 250, 1);
    SetTimer("A_Spec", 3000, 1);
    SetTimer("A_MedioSegundo", 500, 1);
    SetTimer("A_Segundo", 1000, 1);
    SetTimer("A_Minuto", 60000, 1);
    SetTimer("A_Hora", 3600000, 1);

	//» Extras
    CargaFamilias();
	printf("» Sistema de parqueos/peajes cargado (%i).", MAX_PEAJE);
    printf("» Objetos unicos cargado (%i).", MAX_OBJECT_FIJOS);

	//-Mapeo verona

	CreateDynamicObject(2121, 1876.76965, -1312.15173, 13.99940,   0.00000, 0.00000, -45.00000);
	CreateDynamicObject(2567, 1874.82544, -1310.16321, 15.40472,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2121, 1873.39221, -1312.16980, 13.99940,   0.00000, 0.00000, 45.00000);
	CreateDynamicObject(2121, 1875.16345, -1311.75000, 13.99940,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2110, 1874.58020, -1313.56714, 13.47420,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2121, 1875.22058, -1315.29346, 13.99940,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2121, 1877.13281, -1313.58228, 13.99940,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2121, 1873.03210, -1313.59009, 13.99940,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2121, 1873.55969, -1315.14709, 13.99940,   0.00000, 0.00000, 145.00000);
	CreateDynamicObject(2121, 1876.77649, -1315.10608, 13.99940,   0.00000, 0.00000, -145.00000);
	CreateDynamicObject(3633, 1876.74011, -1319.13379, 13.98114,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3576, 1869.60669, -1318.61157, 14.98819,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1770, 2795.89941, -2501.86743, 12.66820,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2121, 2796.94092, -2500.22144, 13.16924,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2320, 2792.38940, -2499.54370, 14.49253,   0.00000, 0.00000, 67.20004);
	CreateDynamicObject(2121, 2795.51636, -2500.23535, 13.16924,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2121, 2796.94531, -2503.31982, 13.16920,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2121, 2795.50146, -2503.31128, 13.16920,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2121, 2793.14624, -2503.14209, 13.19057,   -25.38000, -2.04000, 110.64001);
	CreateDynamicObject(2121, 2794.38940, -2501.83057, 13.16920,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2121, 2798.29321, -2501.90161, 13.16920,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1441, 2794.71582, -2504.84888, 13.26360,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1487, 2795.13525, -2504.81616, 13.32368,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1487, 2794.84790, -2504.86670, 13.32368,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1487, 2794.99292, -2504.70703, 13.32368,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1486, 2795.05151, -2505.32471, 13.44635,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1486, 2795.29712, -2505.43433, 13.44635,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1665, 2795.63330, -2502.17847, 13.49237,   0.00000, 0.00000, 185.15990);
	CreateDynamicObject(1487, 2796.35474, -2501.70117, 13.63425,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1486, 2796.25488, -2501.76758, 13.63430,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1487, 2796.39673, -2501.86670, 13.63430,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1486, 2796.61743, -2501.75757, 13.63430,   0.00000, 0.00000, 180.00000);

	return 1;
}

funcion A_Reloj()
{
	new string[32], RconCommand[50], time[3], year, month, day;
	getdate(year, month, day);
	gettime(time[0], time[1], time[2]);
	if(time[0] >= 12) format(string, 32, "%02d - %02d - %02d~n~%02d:%02dPM", day, month, year, (time[0] == 12) ? (12) : (time[0] - 12), time[1]);
	else if(time[0] < 12) format(string, 32, "%02d - %02d - %02d~n~%02d:%02dAM", day, month, year, (time[0] == 0) ? (12) : (time[0]), time[1]);
	if(time[0] >= 12) format(RconCommand, 32, "worldtime %02d:%02d PM", (time[0] == 12) ? (12) : (time[0] - 12), time[1]);
	else if(time[0] < 12) format(RconCommand, 32, "worldtime %02d:%02d AM", (time[0] == 0) ? (12) : (time[0]), time[1]);
	SendRconCommand(RconCommand);
	for (new playerid; playerid < MAX_PLAYERS; playerid++)
	{
		if (IsPlayerConnected(playerid))
		{
			SetPlayerTime(playerid, time[0], time[1]);
		}
	}
	return 1;
}

stock VariablesVeh(){
	for(new v = 0; v < MAX_VEHICLES; v++) { InfoVehiculo[v][vSpawned] = 0; GasolinaInicialVeh[v] = 100; SetVehicleMatricula(v); }
	for(new f = 0; f < sizeof(InfoFamilia); f++) {
		for(new fv = 0; fv < MAX_VEHFAMILIAS; fv++) {
			InfoVehFam[f][fv][vModelo] = 0;
			InfoVehFam[f][fv][vPosicionX] = 0.0;
			InfoVehFam[f][fv][vPosicionY] = 0.0;
			InfoVehFam[f][fv][vPosicionZ] = 0.0;
			InfoVehFam[f][fv][vPosicionR] = 0.0;
			InfoVehFam[f][fv][vPaintJob] = -1;
			InfoVehFam[f][fv][vColor_1] = 126;
			InfoVehFam[f][fv][vColor_2] = 126;
			InfoVehFam[f][fv][vGasolina] = 500;
	    	InfoVehFam[f][fv][vID] = INVALID_VEHICLE_ID;
			InfoVehFam[f][fv][vMaletero][0] = 0;
			InfoVehFam[f][fv][vMaletero][1] = 0;
			InfoVehFam[f][fv][vMaletero][2] = 0;
			InfoVehFam[f][fv][vMaletero][3] = 0;
			InfoVehFam[f][fv][vMaletero][4] = 0;
			InfoVehFam[f][fv][vMaletero][5] = 0;
			InfoVehFam[f][fv][vMaletero][6] = 0;
			InfoVehFam[f][fv][vMaletero][7] = 0;
			InfoVehFam[f][fv][vMaletero][8] = 0;
			InfoVehFam[f][fv][vMaletero][9] = 0;
			InfoVehFam[f][fv][vMaletero][10] = 0;
			InfoVehFam[f][fv][vMaletero][11] = 0;
			InfoVehFam[f][fv][vMaleteroCantidad][0] = 0;
			InfoVehFam[f][fv][vMaleteroCantidad][1] = 0;
			InfoVehFam[f][fv][vMaleteroCantidad][2] = 0;
			InfoVehFam[f][fv][vMaleteroCantidad][3] = 0;
			InfoVehFam[f][fv][vMaleteroCantidad][4] = 0;
			InfoVehFam[f][fv][vMaleteroCantidad][5] = 0;
			InfoVehFam[f][fv][vMaleteroCantidad][6] = 0;
			InfoVehFam[f][fv][vMaleteroCantidad][7] = 0;
			InfoVehFam[f][fv][vMaleteroCantidad][8] = 0;
			InfoVehFam[f][fv][vMaleteroCantidad][9] = 0;
			InfoVehFam[f][fv][vMaleteroCantidad][10] = 0;
			InfoVehFam[f][fv][vMaleteroCantidad][11] = 0;
		}
	}
}

INI_Existe(filename[]) {
    if(fexist(filename)) return true;
    return false;
}

stock TieneNumeros(str[]) {
	Loop(i,strlen(str),0) {
	    Loop(n,9,0) {
	    	if(str[i] == n) return 1;
		}
	}
	return 0;
}

funcion Loteria(number) {
    new DineroLoteriaFallen = 0, string[128], winner[50 + MAX_PLAYER_NAME];
    for(new i = 0; i < MAX_PLAYERS; i++) {
        if(IsPlayerConnected(i)) {
            if(user[i][jLoteria] > 0) {
                if(user[i][jLoteria] == number) {
                    DineroLoteriaFallen = 1;
                    GetPlayerName(i, winner, sizeof(winner));
                    format(string, sizeof(string), "[Loteria del Estado:] Ganador número '%d - %s', con un total de ($%d)", number, winner, DineroLoteria);
                    _MensajeSAN(0x00DC76FF, string);
                    format(string, sizeof(string), "[SMS recibido del 9891]: Felicitaciones, has ganado $%d con tu boleta de loteria (n°%d).", DineroLoteria, number);
                    _Mensaje(i, 4, "FFEA5F", string);
                    DarDineroGC(i, DineroLoteria);
                } else {
                    _Mensaje(i, 4, "b0b0b0", "Lo sentimos¡no has ganado la loteria, suerte en la próxima...");
                }
            }
            user[i][jLoteria] = 0;
        }
    }
    if(DineroLoteriaFallen) {
        new rand = random(200);
        rand += 50;
        DineroLoteria = rand;
        ActualizarEst();
        format(string, sizeof(string), "[Lotería del Estado]: Número ganador %d, nueva cantidad total de premio es de {00C200}$%d", number, DineroLoteria);
        _MensajeSAN(0x00DC76FF, string);
    } else {
        new rand = random(200);
        rand += 175;
        DineroLoteria += rand;
        ActualizarEst();
        format(string, sizeof(string), "[Lotería del Estado]: Número ganador %d, nueva cantidad total de premio es de {00C200}$%d", number, DineroLoteria);
        _MensajeSAN(0x00DC76FF, string);
    }
    return 1;
}

funcion DataUserClean(playerid)
{
    m_operacion[playerid][0] = 0;
    m_operacion[playerid][1] = 0;
    m_operacion[playerid][2] = -1;
    m_operacion[playerid][3] = -1;
    m_operacion[playerid][4] = -1;
    m_operacion[playerid][5] = -1;
    id_tune[playerid] = -1;
	e_tune[playerid] = -1;
	veh_tune[playerid] = 0;
	pago_tune[playerid] = 0;
	for(new x = 0; x < 11; x++) { pieza_tune[playerid][x] = 0; }
	Altavoz[playerid] = 0;
	user[playerid][jGraffitiE] = -1;
	Anti[playerid][BalasW] = 0;
	cocherobo[playerid] = 0;
	checkcoche[playerid] = 0;
	KillTimer(jPt_fabrica[playerid]);
	UsandoOptiwand[playerid] = -1;
	_Logeo[playerid] = 0;
	_rVeh[playerid] = 0;
	_Tusando[playerid] = 0;
	for(new i = 0; i < 6; i++)
	{
		jEvento[playerid][eVariable][i] = 0.0;
	}
	pescando[playerid] = 0;
	_Pesca[playerid] = 0;

	_arma[playerid] = -1;
	asesino[playerid] = -1;
    DeletePVar(playerid, "EnEvento");
    jEvento[playerid][eInterior] = 0;
    jEvento[playerid][eVW] = 0;
	SetPlayerChatBubble(playerid, "", 0xBFC0C2FF, 50.0, 1000);
    DentroGarage[playerid] = -1;
    Taseado[playerid] = 0;
    _Gomas[playerid] = 0;
    EnCasaID[playerid] = INVALID_CASA_ID;
    MostrarNombre[playerid] = 0;
    MostrarHora[playerid] = 0;
    MostrarVelocimetro[playerid] = 0;
    BalasDeGoma[playerid] = 0;
    MuertoTimer[playerid] = 0;
    VisitaTimer[playerid] = 0;
    VisitaTimer2[playerid] = 0;
    SolicitaRefuerzos[playerid] = 0;
    BotonPanico[playerid] = 0;
    VehMaleteroPlayer[playerid] = 0;
    VehGuanteraPlayer[playerid] = 0;
    escuchandop[playerid] = 0;
    estacionp[playerid] = 0;
    B_Musica[playerid] = 0;
    MusicaEsc[playerid] = 0;
    B_Manos[playerid] = 0;
    B_Pecho[playerid] = 0;
    ObjetosRep[playerid] = 0;
    Vendado[playerid] = 0;
    RepeticionesPressBanca[playerid] = 0;
    Atado[playerid] = 0;
    Esposado[playerid] = 0;
    HaciendoPressBanca[playerid] = 0;
    Consumiendo[playerid] = 0;
    compra_Veh[playerid] = -1;
    r_negocio[playerid] = -1;
    r_vehiculo[playerid] = 0;
	EnTaller[playerid] = 0;
    veh_asiento[playerid] = -1;
    Saludo_ID[playerid] = 999;
    alcoholemia[playerid] = 999;
    ReporteA[playerid] = 0;
    ReporteT[playerid] = "Nada";
    ReporteB[playerid] = 0;
    TomandoTrabajo[playerid] = -1;
    fInvitadoP[playerid] = 0;
    fIDfamilia[playerid] = 255;
    DudaT[playerid] = "Nada";
    PrivadosB[playerid] = 0;
    DudaB[playerid] = 0;
    DudaA[playerid] = 0;
    TestErrores[playerid] = 10;
    YaAviso[playerid] = 0;
    BuscarTrabajo[playerid] = -1;
    IDNegocio[playerid] = -1;
    Pedido[playerid] = 0;
    PrestadorCoche[playerid] = -1;
    LlavePrestada[playerid] = -1;
    B_WSP[playerid] = 0;
    B_Familia[playerid] = 0;
    _MedicAcept[playerid] = 999;
    _BombAcept[playerid] = 999;
    B_OOC[playerid] = 1;
    B_VIP[playerid] = 1;
    B_SAN[playerid] = 1;
    BigEar[playerid] = 0;
    B_Faccion[playerid] = 0;
    JugadorEnSeccion {playerid} = 0;
    QuienManejo[playerid] = 0;
    B_Radio[playerid] = 1;
    RanuraSeleccionada[playerid] = -1;
    RanuraSeleccionadaA[playerid] = -1;
    idrobado[playerid] = -1;
    MultaOfrecer[playerid] = 999;
    MultaPrecio[playerid] = 0;
    Paquetes[playerid] = 0;
    EnServicioADM[playerid] = 0;
    _Medic2Call[playerid] = 0;
    _Entrevista[playerid] = 999;
    EnLlamada[playerid] = 0; //Sistema teléfono
    ToqueLlamada[playerid] = 0;
    PersonaEnLlamada[playerid] = -1;
    _Vehdueno[playerid] = 999;
    _Vehprecio[playerid] = 0;
    _VehID[playerid] = -1;
    EditandoObjetoJ[playerid] = 0;
    Spectando[playerid] = 0;
    SpectadorID[playerid] = 999;
    Spectate[playerid] = 999;
    _2Entrevista[playerid] = INVALID_PLAYER_ID;
    B_Privados[playerid] = 0;
    VerPrivados[playerid] = 0;
    B_Telefono[playerid] = 0;
    ReparacionVehiculo[playerid] = 0;
    ReparacionOfrecer[playerid] = 999;
    ReparacionPrecio[playerid] = 0;
    TruckDeliver[playerid] = 0;
    _CamVeh[playerid] = INVALID_VEHICLE_ID;
    JugadorUsandoAnimacion[playerid] = 0;
    gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
    EnServicio[playerid] = 0;
    EnServicioPD[playerid] = 0;
    Granjero[playerid] = 0;
    Carpintero[playerid] = 0;
    Carguero[playerid] = 0;
    Lenador[playerid] = 0;
    CasaOffer[playerid] = 999;
    CasaPrice[playerid] = 0;
    NegocioOffer[playerid] = 999;
    NegocioPrice[playerid] = 0;
    PrecioFianza[playerid] = 0;
    JetPack[playerid] = 0;
    CurrentMoney[playerid] = 0;
    RanuraObjNSeleccionada[playerid] = -1;
    RanuraObjCSeleccionada[playerid] = -1;
    FacturaMulta[playerid] = 0;
    GiveKeysTo[playerid] = INVALID_PLAYER_ID;
    Unspec[playerid][sLocal] = 255;
    format(QuienMato[playerid], 24, "Nadie");
    //- variables en timer's
    CederTiempo[playerid] = -1;
    RecargarTiempo[playerid] = -1;
    Intentar[playerid] = -1;
    Intentar2[playerid] = -1;
    IntentarD[playerid] = -1;
    TiempoReporte[playerid] = -1;
    PagarTiempo[playerid] = -1;
    DudaTimer[playerid] = -1;
	InfoFogata[playerid][fPosicionX] = 0.0;
	InfoFogata[playerid][fObjeto] = 0;
	//-
	Loop(i, MAX_MUEBLES_C, 0) { OBJ_MuebleC[playerid][i] = INVALID_OBJECT_ID; }
	Loop(i, MAX_MUEBLES_N, 0) { OBJ_MuebleN[playerid][i] = INVALID_OBJECT_ID; }
	Loop(i, MAX_MUEBLES_G, 0) { OBJ_MuebleN[playerid][i] = INVALID_OBJECT_ID; }
	Loop(i, MAX_MUEBLES_E, 0) { OBJ_MuebleE[playerid][i] = INVALID_OBJECT_ID; }
	CasaActual[playerid] = INVALID_CASA_ID;
	GarageActual[playerid] = INVALID_CASA_ID;
	NegocioActual[playerid] = INVALID_NEGOCIO_ID;
    DeletePVar(playerid, "Esta_Herido"); SetPVarInt(playerid, "UsandoNombreP", 0);
    SetPVarInt(playerid, "TrabajandoL", 0); SetPVarInt(playerid, "TrabajandoC", 0);
    SetPVarInt(playerid, "MueblesCreados", 0); SetPVarInt(playerid, "TroncosCreados", 0);
    SetPVarInt(playerid, "TomoCarpintero", 0); SetPVarInt(playerid, "HaciendoMueble", 0); DeletePVar(playerid, "TipoCarga");
    DeletePVar(playerid, "Congelado"); DeletePVar(playerid, "_DeMbug");

    // DATA USERS
    user[playerid][jMulticuenta] = 0;
    user[playerid][jPuntosRol] = 0;
    user[playerid][jRegistrado] = 0;
    user[playerid][jSexo] = 0;
    user[playerid][jEdad] = 0;
    user[playerid][jCiudad] = 0;
    user[playerid][jIdioma] = 0;
    user[playerid][jEstilo] = 1;
    user[playerid][jPelea] = 3;
	user[playerid][jSed] = 120;
	user[playerid][jHambre] = 150;
    user[playerid][jAlcohol] = 0;
    user[playerid][jFuerza] = 50;
    user[playerid][jBanco] = 0;
    user[playerid][jDebito] = -1;
    user[playerid][jNivel] = 0;
    user[playerid][jExperiencia] = 0;
    user[playerid][j_Horas] = 0;
    user[playerid][jPosicion_X] = 1612.3240;
    user[playerid][jPosicion_Y] = -2330.1670;
    user[playerid][jPosicion_Z] = 13.5469;
    user[playerid][jPosicion_R] = 13.5469;
    user[playerid][jSangre] = 100.0;
    user[playerid][jChaleco] = 0.0;
    user[playerid][jBaneado] = 0;
    user[playerid][jAdmin] = 0;
    user[playerid][jEncargado][0] = 0;
    user[playerid][jEncargado][1] = 0;
    user[playerid][jEncargado][2] = 0;
    user[playerid][jEncargado][3] = 0;
    user[playerid][jEncargado][4] = 0;
    user[playerid][jCasaKey] = INVALID_CASA_ID;
    user[playerid][jCasaKey2] = INVALID_CASA_ID;
    user[playerid][jCasaRenta] = INVALID_CASA_ID;
    user[playerid][jCasaLlaves] = INVALID_CASA_ID;
    user[playerid][jNegocioKey] = INVALID_NEGOCIO_ID;
    user[playerid][jNegocioKey2] = INVALID_NEGOCIO_ID;
    user[playerid][jNegocioLlaves] = INVALID_NEGOCIO_ID;
    user[playerid][jEmpresaLlaves] = -1;
    user[playerid][jEmpresaKey] = -1;
    user[playerid][jContrato] = -1;
    user[playerid][jHorasE] = 0;
    for(new i = 0; i < 6; i++) {
        user[playerid][jLlaveCoche][i] = 0;
        user[playerid][jLlaveCochePrestado][i] = 0;
    }
	user[playerid][jColorP] = 0;
    user[playerid][jPremium] = 0;
    user[playerid][jCoins] = 0;
    user[playerid][jD_premium] = -1;
    user[playerid][jM_premium] = -1;
    user[playerid][jT_fabrica] = 3;
    user[playerid][jI_fabrica] = -1;
    user[playerid][jT_fabrica2] = 3;
    user[playerid][jI_fabrica2] = -1;

	alm(user[playerid][jBmomento], "-");
	alm(user[playerid][jBculpable], "SERVER");
	alm(user[playerid][jBrazon], "-");

	user[playerid][jPiedras] = 0;
	user[playerid][jTickets] = 0;

	user[playerid][jPuntosRol] = 0;
	usandoYo[playerid] = 0;
	_Minero[playerid] = 0;
	_Piedras[playerid] = 0;
	_Minando[playerid] = 0;

    for(new i = 0; i < 10; i++) {
        user[playerid][jBolsillo][i] = 0;
        user[playerid][jBolsilloCant][i] = 0;
    }
    user[playerid][jm_Izquierda] = 0;
    user[playerid][jm_IzquierdaCant] = 0;
    user[playerid][jm_Derecha] = 0;
    user[playerid][jm_DerechaCant] = 0;
    user[playerid][jEspalda] = 0;
    user[playerid][jEspaldaCant] = 0;
    for(new x = 0; x < 6; x++) {
        user[playerid][jCinturon][x] = 0;
        user[playerid][jCinturonCant][x] = 0;
    }
    user[playerid][jRopa] = 299;
    user[playerid][jRopaArmario][0] = 0;
    user[playerid][jRopaArmario][1] = 0;
    user[playerid][jRopaArmario][2] = 0;
    user[playerid][jRopaArmario][3] = 0;
    user[playerid][jRopaArmario][4] = 0;
    user[playerid][jRopaArmario][5] = 0;
    user[playerid][jRopaArmario][6] = 0;
    user[playerid][jRopaArmario][7] = 0;
    user[playerid][jLider] = 0;
    user[playerid][jMiembro] = 0;
    user[playerid][jRango] = 0;
    user[playerid][jDivision] = 0;
    user[playerid][jLiderFam] = 0;
    user[playerid][jMiembroFam] = 0;
    user[playerid][jRangoFam] = 1;
    user[playerid][jMuerto] = 0;
    user[playerid][jMuerto2] = 0;
    user[playerid][jTelefono] = 0;
    user[playerid][jSaldo] = 0;
    user[playerid][jAgenda] = 0;
    user[playerid][jFrecuencia] = -1;
    user[playerid][jBoombox] = 0;
    user[playerid][jLoteria] = 0;
    user[playerid][jMascara] = 0;
    user[playerid][jEstrellas] = 0;
    user[playerid][jSanciones] = 0;
    user[playerid][jArrestos] = 0;
    user[playerid][jEncarcelado] = 0;
    format(user[playerid][jSancionador], 50, "Ninguno");
    user[playerid][jTiempoCarcel] = 0;
    user[playerid][jCargas] = 0;
    user[playerid][jMuebles] = 0;
    user[playerid][jTroncos] = 0;
    user[playerid][jPescados] = 0;
    user[playerid][jCosechas] = 0;
    user[playerid][jEscombros] = 0;
    user[playerid][jMateriales] = 0;
    user[playerid][jPinturas] = 0;
    user[playerid][jGanzuas] = 0;
    user[playerid][jLineas] = 0;
    user[playerid][jCarnadas] = 0;
    user[playerid][jCheques] = 0;
    user[playerid][jTrabajo1] = 0;
    user[playerid][jTrabajo2] = 0;
    user[playerid][jTrabajo3] = 0;
    user[playerid][jLicencias][0] = 0;
    user[playerid][jLicencias][1] = 0;
    user[playerid][jLicencias][2] = 0;
    user[playerid][jLicencias][3] = 0;
    user[playerid][jLicencias][4] = 0;
    user[playerid][jLicencias][5] = 0;
    user[playerid][jLicencias][6] = 0;
    user[playerid][jHabilidad][0] = 0;
    user[playerid][jHabilidad][1] = 0;
    user[playerid][jHabilidad][2] = 0;
    user[playerid][jHabilidad][3] = 0;
    user[playerid][jHabilidad][4] = 0;
    user[playerid][jHabilidad][5] = 0;
    user[playerid][jHabilidad][6] = 0;
    user[playerid][jHabilidad][7] = 0;
    user[playerid][jHabilidad2][0] = 1;
    user[playerid][jHabilidad2][1] = 1;
    user[playerid][jHabilidad2][2] = 1;
    user[playerid][jHabilidad2][3] = 1;
    user[playerid][jHabilidad2][4] = 1;
    user[playerid][jHabilidad2][5] = 1;
    user[playerid][jHabilidad2][6] = 1;
    user[playerid][jHabilidad2][7] = 1;
	user[playerid][jE_Uso] = 0;
    user[playerid][jE_Color] = 0;
    format(user[playerid][jE_Texto], 60, "Alegre");
    user[playerid][jDocumento] = 0;
    user[playerid][jf_Edad] = 21;
    user[playerid][jf_Dni] = 0;
    strmid(user[playerid][jf_Nombre], "Ninguno", 0, strlen("Ninguno"), 12);
    strmid(DocumentoNombre[playerid], "Nadie", 0, strlen("Nadie"), 32);
    format(user[playerid][jDelito1], 32, "Ninguno");
    format(user[playerid][jDelito2], 32, "Ninguno");
    format(user[playerid][jDelito3], 32, "Ninguno");
    format(user[playerid][jDelito4], 32, "Ninguno");
    format(user[playerid][jDelito5], 32, "Ninguno");
    format(user[playerid][jDelito6], 32, "Ninguno");
    format(user[playerid][jDelito7], 32, "Ninguno");
    format(user[playerid][jDelito8], 32, "Ninguno");
    format(user[playerid][jDelito9], 32, "Ninguno");
    format(user[playerid][jDelito10], 32, "Ninguno");
    format(user[playerid][jAudio1], 128, "http://184.154.94.194:8028/listen.pls");
    format(user[playerid][jAudio2], 128, "http://184.154.94.194:8028/listen.pls");
    format(user[playerid][jAudio3], 128, "http://184.154.94.194:8028/listen.pls");
    user[playerid][jSerial] = 0;
    user[playerid][jPayday] = 0;
    user[playerid][jDelito][0] = 0;
    user[playerid][jDelito][1] = 0;
    user[playerid][jDelito][2] = 0;
    user[playerid][jDelito][3] = 0;
    user[playerid][jDelito][4] = 0;
    user[playerid][jDelito][5] = 0;
    user[playerid][jDelito][6] = 0;
    user[playerid][jDelito][7] = 0;
    user[playerid][jDelito][8] = 0;
    user[playerid][jDelito][9] = 0;
    user[playerid][jContacto][0] = 0;
    user[playerid][jContacto][1] = 0;
    user[playerid][jContacto][2] = 0;
    user[playerid][jContacto][3] = 0;
    user[playerid][jContacto][4] = 0;
    user[playerid][jContacto][5] = 0;
    user[playerid][jContacto][6] = 0;
    user[playerid][jContacto][7] = 0;
    user[playerid][jContacto][8] = 0;
    user[playerid][jContacto][9] = 0;
    user[playerid][jContacto][10] = 0;
    user[playerid][jContacto][11] = 0;
    user[playerid][jContacto][12] = 0;
    user[playerid][jContacto][13] = 0;
    user[playerid][jContacto][14] = 0;
    user[playerid][jContacto][15] = 0;
    user[playerid][jContacto][16] = 0;
    user[playerid][jContacto][17] = 0;
    user[playerid][jContacto][18] = 0;
    user[playerid][jContacto][19] = 0;
    format(user[playerid][jContactoN1], 32, "Vacío");
    format(user[playerid][jContactoN2], 32, "Vacío");
    format(user[playerid][jContactoN3], 32, "Vacío");
    format(user[playerid][jContactoN4], 32, "Vacío");
    format(user[playerid][jContactoN5], 32, "Vacío");
    format(user[playerid][jContactoN6], 32, "Vacío");
    format(user[playerid][jContactoN7], 32, "Vacío");
    format(user[playerid][jContactoN8], 32, "Vacío");
    format(user[playerid][jContactoN9], 32, "Vacío");
    format(user[playerid][jContactoN10], 32, "Vacío");
    format(user[playerid][jContactoN11], 32, "Vacío");
    format(user[playerid][jContactoN12], 32, "Vacío");
    format(user[playerid][jContactoN13], 32, "Vacío");
    format(user[playerid][jContactoN14], 32, "Vacío");
    format(user[playerid][jContactoN15], 32, "Vacío");
    format(user[playerid][jContactoN16], 32, "Vacío");
    format(user[playerid][jContactoN17], 32, "Vacío");
    format(user[playerid][jContactoN18], 32, "Vacío");
    format(user[playerid][jContactoN19], 32, "Vacío");
    format(user[playerid][jContactoN20], 32, "Vacío");
    user[playerid][jCambioN] = 0;
    user[playerid][jTiempos][0] = 0;
    user[playerid][jTiempos][1] = 0;
    user[playerid][jTiempos][2] = 0;
    user[playerid][jTiempos][3] = 0;
    user[playerid][jTiempos][4] = 0;
    user[playerid][jTiempos][5] = 0;
    user[playerid][jTiempos][6] = 0;
    user[playerid][jTiempos][7] = 0;
    user[playerid][jTiempos][8] = 0;
    user[playerid][jTiempos][9] = 0;
    user[playerid][jTiempos][10] = 0;
    user[playerid][jTiempos][11] = 0;
    user[playerid][jTiempos][12] = 0;
    user[playerid][jTiempos][13] = 0;
    user[playerid][jTiempos][14] = 0;
    user[playerid][jTiempos][15] = 70;
    user[playerid][jTiempos][16] = 0;
    user[playerid][jTiempos][17] = 0;
    user[playerid][jTiempos][18] = 0;
    user[playerid][jTiempos][19] = 0;
    user[playerid][jHoras] = 0;
    user[playerid][jMinutos] = 0;
    user[playerid][jSegundos] = 0;
    user[playerid][jDias] = 0;
    user[playerid][jMeses] = 0;
    user[playerid][jAnos] = 0;
    //- no guardable
    user[playerid][j_Mascara] = 0;
    user[playerid][jPaquetes] = 0;
    user[playerid][jTiempoServicio] = 0;
    user[playerid][jRescatePolicial] = 0;
    user[playerid][jTiempoGuardado] = -1;
    user[playerid][jTiempoCurar] = -1;
    // DATA USERS ONLINE
    user[playerid][State] = 0;
	// DATA HERIDAS
    format(InfoHeridas[playerid][Cabeza], 24, "-"); InfoHeridas[playerid][Cabezar] = 0;
    format(InfoHeridas[playerid][Torso], 24, "-"); InfoHeridas[playerid][Torsor] = 0;
    format(InfoHeridas[playerid][BrazoD], 24, "-"); InfoHeridas[playerid][BrazoDr] = 0;
    format(InfoHeridas[playerid][BrazoI], 24, "-"); InfoHeridas[playerid][BrazoIr] = 0;
    format(InfoHeridas[playerid][EntreP], 24, "-"); InfoHeridas[playerid][EntrePr] = 0;
    format(InfoHeridas[playerid][PiernaD], 24, "-"); InfoHeridas[playerid][PiernaDr] = 0;
    format(InfoHeridas[playerid][PiernaI], 24, "-"); InfoHeridas[playerid][PiernaIr] = 0;
    format(InfoHeridas[playerid][Lesiones], 24, "-"); InfoHeridas[playerid][Lesionesr] = 0;
    // DATA ACCESORIOS
    for(new v = 0; v < MAX_ACCESORIOS; v++) {
        InfoAccesorio[playerid][v][aModelo] = 0;
        InfoAccesorio[playerid][v][aParte] = 0;
        InfoAccesorio[playerid][v][aPosicionX] = 0.0;
        InfoAccesorio[playerid][v][aPosicionY] = 0.0;
        InfoAccesorio[playerid][v][aPosicionZ] = 0.0;
        InfoAccesorio[playerid][v][aRotacionX] = 0.0;
        InfoAccesorio[playerid][v][aRotacionY] = 0.0;
        InfoAccesorio[playerid][v][aRotacionZ] = 0.0;
        InfoAccesorio[playerid][v][aEscalaX] = 1;
        InfoAccesorio[playerid][v][aEscalaY] = 1;
        InfoAccesorio[playerid][v][aEscalaZ] = 1;
        InfoAccesorio[playerid][v][aColocado] = 0;
    }
   	TextTrabajo[playerid] = CreatePlayerTextDraw(playerid, 318.399963, 352.426788, "_");
	PlayerTextDrawLetterSize(playerid, TextTrabajo[playerid], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, TextTrabajo[playerid], 2);
	PlayerTextDrawColor(playerid, TextTrabajo[playerid], -1);
	PlayerTextDrawSetShadow(playerid, TextTrabajo[playerid], 0);
	PlayerTextDrawSetOutline(playerid, TextTrabajo[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, TextTrabajo[playerid], 255);
	PlayerTextDrawFont(playerid, TextTrabajo[playerid], 2);
	PlayerTextDrawSetProportional(playerid, TextTrabajo[playerid], 1);

    //Velocimetro
	Velocimetro[playerid] = CreatePlayerTextDraw(playerid, 212.313903, 384.999969, "");
	PlayerTextDrawLetterSize(playerid, Velocimetro[playerid], 0.535269, 1.308334);
	PlayerTextDrawAlignment(playerid, Velocimetro[playerid], 1);
	PlayerTextDrawColor(playerid, Velocimetro[playerid], -1);
	PlayerTextDrawSetShadow(playerid, Velocimetro[playerid], 0);
	PlayerTextDrawSetOutline(playerid, Velocimetro[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, Velocimetro[playerid], 255);
	PlayerTextDrawFont(playerid, Velocimetro[playerid], 3);
	PlayerTextDrawSetProportional(playerid, Velocimetro[playerid], 1);
    return 1;
}

public OnPlayerSpawn(playerid) {
	SetPlayerTeam(playerid, 1);
	if(!IsPlayerConnectedEx(playerid) && !IsPlayerNPC(playerid)) return(_Mensaje(playerid, 0, "3", "Fuiste expulsado automáticamente, no has ingresado correctamente."), Kick(playerid));
	_OnPlayerSpawn(playerid);
 	PlayerTextDrawShow(playerid, Textdraw1[playerid]);
    PlayerTextDrawShow(playerid, textopantalla1[playerid]);
    PlayerTextDrawShow(playerid, textopantalla2[playerid]);
	return 1;
}

public OnPlayerDeath(playerid, killerid, reason) {
	if(GetPVarInt(playerid, "EnEvento") == 1) return 1;
	SetPlayerColor(playerid, C_PLAYERBLANCO);
	SetPVarInt(playerid, "_DeMbug", 1);
	return 1;
}

public OnVehicleSpawn(vehicleid)
{
	DestroyObject(SirenaCoche[0][vehicleid]); DestroyObject(SirenaCoche[1][vehicleid]);
	DestroyObject(SirenaCoche[2][vehicleid]); DestroyObject(SirenaCoche[3][vehicleid]);
	DestroyObject(SirenaCoche[4][vehicleid]); DestroyObject(SirenaCoche[5][vehicleid]);
	DestroyObject(SirenaCoche[6][vehicleid]); DestroyObject(SirenaCoche[7][vehicleid]);
	DestroyObject(SirenaCoche[8][vehicleid]); SinSonido[vehicleid] = 0;
	estacionveh[vehicleid] = 0; VehicleStatus{vehicleid} = 0;
	VehSeguro[vehicleid] = 0;
	for (new v = 0; v < MAX_VEHICULOS; v++)
	{
		if(InfoVehiculo[v][vID] == vehicleid)
		{
			DestroyVehicle(vehicleid);
   			InfoVehiculo[v][vID] = CreateVehicle(InfoVehiculo[v][vModelo], InfoVehiculo[v][vPosicionX], InfoVehiculo[v][vPosicionY], InfoVehiculo[v][vPosicionZ], InfoVehiculo[v][vPosicionR], InfoVehiculo[v][vColor_1], InfoVehiculo[v][vColor_2], -1);
      		if(InfoVehiculo[v][vUSeguro] == 1) { VehSeguro[InfoVehiculo[v][vID]] = 1; vehicle_lock_doors(InfoVehiculo[v][vID]); }
			ChangeVehiclePaintjob(InfoVehiculo[v][vID], InfoVehiculo[v][vPaintJob]);
         	ChangeVehicleColor(InfoVehiculo[v][vID], InfoVehiculo[v][vColor_1], InfoVehiculo[v][vColor_2]);
          	SetVehicleVirtualWorld(InfoVehiculo[v][vID], InfoVehiculo[v][vVirtualWorld]);
           	LinkVehicleToInterior(InfoVehiculo[v][vID], InfoVehiculo[v][vInterior]);
            SetVehicleHealth(InfoVehiculo[v][vID], InfoVehiculo[v][vVida]);
            for(new m = 0; m < MAX_MODVEHICULOS; m++) { AddVehicleComponent(InfoVehiculo[v][vID], InfoVehiculo[v][vModificaciones][m]); }
      		foreach(Player, playerid) {
    			for(new x = 0; x < 6; x++) {
					if(user[playerid][jLlaveCoche][x] == InfoVehiculo[v][vLlave] || user[playerid][jLlaveCochePrestado][x] == InfoVehiculo[v][vLlave]){
						new string[128];
       					format(string, sizeof(string), "Vehículo (%s) el cual tienes llave fue enviado a donde estaba estacionado.", NombreVehiculo(InfoVehiculo[v][vID]));
       					_Mensaje(playerid, 5, "0", string);
					}
				}
			}
      	}
    }
    arr_Engine{vehicleid} = 0;
    _Contenido[vehicleid] = 0;
    if(LSPD_Veh2(vehicleid)) { SetVehicleVirtualWorld(vehicleid, 10); }
    if(SASD_Veh2(vehicleid)) { SetVehicleVirtualWorld(vehicleid, 10); }
    return 1;
}

funcion LimpiezaLineas(playerid, lines) {
	if (IsPlayerConnected(playerid)) {
		for(new i=0; i<lines; i++) {
			_Mensaje(playerid, 4, "ffffff", " ");
		}
	}
	return 1;
}

funcion CleanScreen() {
    for(new i=0; i<MAX_PLAYERS; i++) {
        LimpiezaLineas(i, 100);
    }
    return 1;
}

funcion DetenerAlarma(vehicleid) {
    new engine, lights, alarm, doors, bonnet, boot, objective;
    GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
    SetVehicleParamsEx(vehicleid, engine, lights, false, doors, bonnet, boot, objective);
}

public OnVehicleDeath(vehicleid, killerid) {
    VehicleStatus{vehicleid} = 1;
    arr_Engine{vehicleid} = 0;
    estacionveh[vehicleid] = 0;
    new veh = GetPlayerVehicleID(vehicleid);
    Delete3DTextLabel(TextCallSign[veh]);
	VehCallSign[veh] = 0;
	return 1;
}

Log(sz_fileName[], sz_input[]) {
	new sz_logEntry[156], i_dateTime[2][3], File: fileHandle = fopen(sz_fileName, io_append);
	gettime(i_dateTime[0][0], i_dateTime[0][1], i_dateTime[0][2]);
	getdate(i_dateTime[1][0], i_dateTime[1][1], i_dateTime[1][2]);
	format(sz_logEntry, sizeof(sz_logEntry), "[%i/%i/%i - %i:%i:%i] %s\r\n", i_dateTime[1][0], i_dateTime[1][1], i_dateTime[1][2], i_dateTime[0][0], i_dateTime[0][1], i_dateTime[0][2], sz_input);
	fwrite(fileHandle, sz_logEntry);
	return fclose(fileHandle);
}

_CARCEL(playerid) {
	if (user[playerid][jEncarcelado] == 1) {
		new rand = random(sizeof(_OOCp));
		SetPlayerPos(playerid, _OOCp[rand][0], _OOCp[rand][1], _OOCp[rand][2]);
		SetPlayerFacingAngle(playerid, _OOCp[rand][3]);
		SetPlayerVirtualWorld(playerid, playerid); user[playerid][jVirtualWorld] = playerid;
		SetPlayerInterior(playerid, 0); user[playerid][jInterior] = 0;
	} else if (user[playerid][jEncarcelado] == 2 || user[playerid][jEncarcelado] == 3) {
	    SetPVarInt(playerid, "_heridoC", 1);
		user[playerid][jSangre] = 35;
		SetPlayerInterior(playerid, 1);
		SetPlayerVirtualWorld(playerid, playerid + 2);
		SetPlayerPos(playerid, -211.0370, -1738.6848, 676.7153);
		SetPlayerFacingAngle(playerid, 82.0000);
		SetPlayerCameraPos(playerid, -208.0841, -1741.9443, 677.2589);
		SetPlayerCameraLookAt(playerid, -208.6827, -1741.1451, 676.8438);
		ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0, 1);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~r~Curando...", 32000, 3);
    	_Mensaje(playerid, 4, "fcc1fd", "DOCTOR:{ffffff} Quedaste inconsciente, enfermeros te llevaron aquí.");
    	SetTimerEx("_HERIDO", 30000, false, "i", playerid);
	}
	return 1;
}

funcion _HERIDO(playerid) {
    DeletePVar(playerid, "_heridoC");
	if (user[playerid][jEncarcelado] == 0) {
		user[playerid][jSangre] = 85;
		SetPosEx(playerid, 1715.6079,-1928.9985,13.5667,350.5531, 0, 0);
	} else if (user[playerid][jEncarcelado] == 2) {
		user[playerid][jSangre] = 85;
		user[playerid][jInterior] = 5;
		SetPlayerInterior(playerid, 5);
		SetPlayerVirtualWorld(playerid, 0);
		user[playerid][jVirtualWorld] = 0;
		new rand = random(sizeof(_COMISARIAp));
		SetPlayerPos(playerid, _COMISARIAp[rand][0], _COMISARIAp[rand][1], _COMISARIAp[rand][2]);
		CargarObjetos(playerid);
		TogglePlayerControllable(playerid, 1);
  		SetCameraBehindPlayer(playerid);
		_Mensaje(playerid, 4, "00428E", "LSPD:{ffffff} Sigues en la prisión de la comisaría, espera tu condena.");
	} else if (user[playerid][jEncarcelado] == 3) {
		user[playerid][jSangre] = 85;
		SetPlayerInterior(playerid, 0);
		user[playerid][jInterior] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		user[playerid][jVirtualWorld] = 0;
		TogglePlayerControllable(playerid, 1);
  		SetCameraBehindPlayer(playerid);
		new rand = random(sizeof(_PFp));
		SetPlayerPos(playerid, _PFp[rand][0], _PFp[rand][1], _PFp[rand][2]);
		_Mensaje(playerid, 4, "00778E", "SADOC:{ffffff} Sigues en la prisión federal, espera tu condena.");
	}
	return 1;
}

_OnPlayerSpawn(playerid) {
	if (user[playerid][jRegistrado] == 0) {
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, 1);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 1);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 999);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 999);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, 999);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 1);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 999);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 999);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 999);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, 999);
 		_cIniciales(playerid, 2);
		user[playerid][jEdad] = 18; user[playerid][jSexo] = 1;
		Dialog(playerid, D_SEXO, DIALOG_STYLE_MSGBOX, "{ADC3E7}Sexo", "{F0F0F0}¿Cuál es el sexo de su personaje?", "Hombre", "Mujer");
		SetPlayerColor(playerid, C_PLAYERBLANCO);
	} else if (user[playerid][jRegistrado] != 0) {

		_Dban(playerid);

		SetPlayerColor(playerid, C_PLAYERBLANCO);
		B_OOC[playerid] = 0;
		B_SAN[playerid] = 0;
		SetPlayerSkin(playerid, user[playerid][jRopa]);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, 1);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 1);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 999);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 999);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, 999);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 1);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 999);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 999);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 999);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, 999);
		new ManoDer = user[playerid][jm_Derecha], ManoIzq = user[playerid][jm_Izquierda], Espalda = user[playerid][jEspalda];
		if (ManoDer == 131) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
		if (ManoDer > 0) { PonerObjeto(playerid, 1, ManoDer); if (InfoObjeto[ManoDer][IDArma] > 0) { _GiveWeapon(playerid, InfoObjeto[ManoDer][IDArma], user[playerid][jm_DerechaCant]); } }
		if (ManoIzq > 0) { PonerObjeto(playerid, 2, ManoIzq); }
		if (Espalda > 0) { PonerObjeto(playerid, 3, Espalda); }
		for (new x; x < MAX_ACCESORIOS; x++) {
			if (InfoAccesorio[playerid][x][aColocado] != 0) ColocarObject(playerid, x, InfoAccesorio[playerid][x][aModelo], InfoAccesorio[playerid][x][aParte], InfoAccesorio[playerid][x][aPosicionX], InfoAccesorio[playerid][x][aPosicionY], InfoAccesorio[playerid][x][aPosicionZ], InfoAccesorio[playerid][x][aRotacionX], InfoAccesorio[playerid][x][aRotacionY],
			InfoAccesorio[playerid][x][aRotacionZ], InfoAccesorio[playerid][x][aEscalaX], InfoAccesorio[playerid][x][aEscalaY], InfoAccesorio[playerid][x][aEscalaZ]);
		}
		if(GetPVarInt(playerid, "EnEvento") == 1) {
			DeletePVar(playerid, "EnEvento");
			SetPlayerPos(playerid, jEvento[playerid][eVariable][1], jEvento[playerid][eVariable][2], jEvento[playerid][eVariable][3]);
			SetPlayerVirtualWorld(playerid, jEvento[playerid][eVW]);
			SetPlayerFacingAngle(playerid, jEvento[playerid][eVariable][0]);
			SetPlayerInterior(playerid, jEvento[playerid][eInterior]);
			Sangre_(playerid, jEvento[playerid][eVariable][4]);
			Chaleco_(playerid, jEvento[playerid][eVariable][5]);
			for(new i = 0; i < 6; i++) { jEvento[playerid][eVariable][i] = 0.0; }
			jEvento[playerid][eVW] = 0;
			jEvento[playerid][eInterior] = 0;
			TogglePlayerControllable(playerid, 1);
			return 1;
		}
		if (user[playerid][jEncarcelado] == 1) {
			B_Telefono[playerid] = 1;
			SetPlayerVirtualWorld(playerid, playerid); user[playerid][jVirtualWorld] = playerid;
			SetPlayerInterior(playerid, 0); user[playerid][jInterior] = 0;
			new rand = random(sizeof(_OOCp));
			SetPlayerPos(playerid, _OOCp[rand][0], _OOCp[rand][1], _OOCp[rand][2]);
			SetPlayerFacingAngle(playerid, _OOCp[rand][3]);
			TogglePlayerControllable(playerid, 0);
			SetPVarInt(playerid, "Congelado", 1);
			_Mensaje(playerid, 4, "B00000", "STAFF:{ffffff} Sigues en prisión OOC, escribe /reloj para ver el tiempo restante.");
			PlayerTextDrawShow(playerid, TextTrabajo[playerid]);
			return 1;
		} else if (user[playerid][jEncarcelado] == 2) {
			B_Telefono[playerid] = 1;
			new rand = random(sizeof(_COMISARIAp));
			SetPlayerPos(playerid, _COMISARIAp[rand][0], _COMISARIAp[rand][1], _COMISARIAp[rand][2]);
			CargarObjetos(playerid);
			_Mensaje(playerid, 4, "00428E", "LSPD:{ffffff} Sigues en la prisión de la comisaría, espera tu condena.");
			user[playerid][jInterior] = 5;
			SetPlayerInterior(playerid, 5);
			return 1;
		} else if (user[playerid][jEncarcelado] == 3) {
			B_Telefono[playerid] = 1;
			SetPlayerInterior(playerid, 0);
			user[playerid][jInterior] = 0;
			new rand = random(sizeof(_PFp));
			SetPlayerPos(playerid, _PFp[rand][0], _PFp[rand][1], _PFp[rand][2]);
			_Mensaje(playerid, 4, "00778E", "SADOC:{ffffff} Sigues en la prisión federal, espera tu condena.");
			return 1;
		}
		if(GetPVarInt(playerid, "_DeMbug") == 1) {
			_arma[playerid] = -1;
			asesino[playerid] = -1;
			SetCameraBehindPlayer(playerid);
			EliminarHerido(playerid);
			ClearAnimations(playerid);
			user[playerid][jMuerto2] = 0;
			user[playerid][jMuerto] = 0;
			KillTimer(MuertoTimer[playerid]);
			usandoYo[playerid] = 0;
			Update3DTextLabelText(estado[playerid], 0xBFC0C2FF, "void");
			Attach3DTextLabelToPlayer(estado[playerid], playerid, 0.0, 0.0, 1000.0);
			TogglePlayerControllable(playerid, 1);
			_Limuerte(playerid);
			SetPosEx(playerid, 1180.8552,-1322.0135,13.5849,278.0635, 0, 0); // Posición en caso de bug cuando te matan. --CMBlock modificado en 2.X--
			CargarObjetos(playerid);
			_Mensaje(playerid, 4, "ADC3E7", "[Servidor Información]:{ffffff} ¡Ops! Ha debido de haber algún problema cuando te mataron, ¡te mandamos al hospital!");
			SetPlayerHealth(playerid, 50);
			user[playerid][jSangre] = 50;
		}
	}
	return 1;
}

funcion Caminar(playerid) {
	switch(user[playerid][jEstilo]) {
		case 1:  SetPlayerWalkingStyle(playerid,WALK_DEFAULT);
		case 2:  SetPlayerWalkingStyle(playerid,WALK_GANGSTA);
		case 3:  SetPlayerWalkingStyle(playerid,WALK_GANGSTA2);
		case 4:  SetPlayerWalkingStyle(playerid,WALK_OLD);
		case 5:  SetPlayerWalkingStyle(playerid,WALK_FAT_OLD);
		case 6:  SetPlayerWalkingStyle(playerid,WALK_FAT);
		case 7:  SetPlayerWalkingStyle(playerid,WALK_LADY);
		case 8:  SetPlayerWalkingStyle(playerid,WALK_LADY2);
		case 9:  SetPlayerWalkingStyle(playerid,WALK_WHORE);
		case 10: SetPlayerWalkingStyle(playerid,WALK_WHORE2);
		case 11: SetPlayerWalkingStyle(playerid,WALK_DRUNK);
		case 12: SetPlayerWalkingStyle(playerid,WALK_BLIND);
	}
	return 1;
}

funcion Muerto(playerid) {
	Sangre_(playerid, 100);
	_Limuerte(playerid);
	KillTimer(MuertoTimer[playerid]);
	SetPlayerCameraPos(playerid, 1985.1331, -1477.0913, 40.8437);
	SetPlayerCameraLookAt(playerid, 1985.7135, -1476.2788, 40.3386);
	SetPosEx(playerid, 2002.5728, -1445.3669, 13.5616, 135, 0, playerid);
	TogglePlayerControllable(playerid, 0);
	SetTimerEx("AlHospital", 10000, false, "i", playerid);
	return 1;
}

stock _Limuerte(pd) {
	usandoYo[pd] = 0;
	Update3DTextLabelText(estado[pd], 0xBFC0C2FF, "void");
	Attach3DTextLabelToPlayer(estado[pd], pd, 0.0, 0.0, 1000.0);
    _arma[pd] = -1;
	asesino[pd] = -1;
	YaAviso[pd] = 0;
    format(InfoHeridas[pd][Cabeza], 24, "-"); InfoHeridas[pd][Cabezar] = 0;
    format(InfoHeridas[pd][Torso], 24, "-"); InfoHeridas[pd][Torsor] = 0;
    format(InfoHeridas[pd][BrazoD], 24, "-"); InfoHeridas[pd][BrazoDr] = 0;
    format(InfoHeridas[pd][BrazoI], 24, "-"); InfoHeridas[pd][BrazoIr] = 0;
    format(InfoHeridas[pd][EntreP], 24, "-"); InfoHeridas[pd][EntrePr] = 0;
    format(InfoHeridas[pd][PiernaD], 24, "-"); InfoHeridas[pd][PiernaDr] = 0;
    format(InfoHeridas[pd][PiernaI], 24, "-"); InfoHeridas[pd][PiernaIr] = 0;
    format(InfoHeridas[pd][Lesiones], 24, "-"); InfoHeridas[pd][Lesionesr] = 0;
}


stock _cIniciales(playerid, tipo)
{
	if (tipo == 1)
	{
	    TogglePlayerSpectating(playerid, 0);
	    SetPlayerVirtualWorld(playerid, playerid + 500);
	    SetPlayerPos(playerid, 1671.2120, -2273.3071, -1.2941);
		SetPlayerCameraPos(playerid, 1663.2952, -2272.3708, 0.9515);
		SetPlayerCameraLookAt(playerid, 1662.4194, -2272.8516, 0.8715);
		InterpolateCameraPos(playerid, 550.013793, -1772.057128, 16.024028, 552.169799, -1772.079223, 16.285087, 5000);
		InterpolateCameraLookAt(playerid, 546.803894, -1768.331054, 15.122734, 548.959899, -1768.353149, 15.383792, 5000);
	}
	else if (tipo == 2)
	{
	    TogglePlayerSpectating(playerid, 0);
	    SetPlayerVirtualWorld(playerid, playerid + 500);
	    SetPlayerPos(playerid, 1671.2120, -2273.3071, -1.2941);
		SetPlayerCameraPos(playerid, 1663.2952, -2272.3708, 0.9515);
		SetPlayerCameraLookAt(playerid, 1662.4194, -2272.8516, 0.8715);
		InterpolateCameraPos(playerid, 550.013793, -1772.057128, 16.024028, 552.169799, -1772.079223, 16.285087, 5000);
		InterpolateCameraLookAt(playerid, 546.803894, -1768.331054, 15.122734, 548.959899, -1768.353149, 15.383792, 5000);
	}
}

funcion AlHospital(playerid) {
	user[playerid][jAlcohol] = 0;
	KillTimer(MuertoTimer[playerid]);
    Sangre_(playerid, 100);
    Chaleco_(playerid, 0);
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerInterior(playerid, 0);
    user[playerid][jBanco] -= 500;
    _Mensaje(playerid, 4, "fcc1fd", "[Hospital]:{ffffff} Quedaste inconsciente. Una ambulancia te llevó al hospital.");
    _Mensaje(playerid, 4, "fcc1fd", "[Hospital]:{ffffff} Te han retirado 500$ de tu cuenta bancaria por las atenciones médicas.");
    TogglePlayerControllable(playerid, 1);
    SetCameraBehindPlayer(playerid);
    user[playerid][jMuerto2] = 0;
    user[playerid][jMuerto] = 0;
	EliminarHerido(playerid);
	format(QuienMato[playerid], 24, "Nadie");
    return 1;
}

strtok(const string[], & index) {
    new length = strlen(string);
    while((index < length) && (string[index] <= ' ')) {
        index++;
    }
    new offset = index;
    new result[20];
    while((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1))) {
        result[index - offset] = string[index];
        index++;
    }
    result[index - offset] = EOS;
    return result;
}

funcion CrearCuenta(playerid, clave[]) {
    new INI: Arch = INI_Open(U_Usuario(playerid));
    alm(user[playerid][jClave], clave);
    INI_WriteString(Arch, "Contraseña", clave);
    INI_Close(Arch);
    CargarCuenta2(playerid);
    return 1;
}
GuardarCuenta(playerid)
{
    if(GetPVarInt(playerid, "UsandoNombreP") == 1) return 1;
    if(!JugadorEnSeccion {playerid}) return 1;
    new playername[50 + MAX_PLAYER_NAME];
    GetPlayerName(playerid, playername, sizeof(playername));
    if(INI_Exist(playername)) {
        new data[60];
        format(data, sizeof data, DATOS_CUENTAS, playername);
        new INI: File = INI_Open(data);
        INI_WriteString(File, "Contraseña", user[playerid][jClave]);
        INI_WriteInt(File, "Registrado", user[playerid][jRegistrado]);
        INI_WriteInt(File, "Sexo", user[playerid][jSexo]);
        INI_WriteInt(File, "Edad", user[playerid][jEdad]);
        INI_WriteInt(File, "Ciudad", user[playerid][jCiudad]);
        INI_WriteInt(File, "Idioma", user[playerid][jIdioma]);
        INI_WriteInt(File, "Estilo", user[playerid][jEstilo]);
        INI_WriteInt(File, "Pelea", user[playerid][jPelea]);
        INI_WriteInt(File, "Sed", user[playerid][jSed]);
        INI_WriteInt(File, "Hambre", user[playerid][jHambre]);
        INI_WriteInt(File, "Alcohol", user[playerid][jAlcohol]);
        INI_WriteInt(File, "Fuerza", user[playerid][jFuerza]);
        INI_WriteInt(File, "Dinero", GetPVarInt(playerid, "Money"));
        INI_WriteInt(File, "Banco", user[playerid][jBanco]);
        INI_WriteInt(File, "Debito", user[playerid][jDebito]);
        INI_WriteInt(File, "Nivel", user[playerid][jNivel]);
        INI_WriteInt(File, "Experiencia", user[playerid][jExperiencia]);
        INI_WriteInt(File, "HorasJ", user[playerid][j_Horas]);
        if(GetPVarInt(playerid, "EnEvento") == 0) {
            GetPlayerPos(playerid, user[playerid][jPosicion_X], user[playerid][jPosicion_Y], user[playerid][jPosicion_Z]);
        	GetPlayerFacingAngle(playerid, user[playerid][jPosicion_R]);
        	GetPlayerHealth(playerid, user[playerid][jSangre]);
        	GetPlayerArmour(playerid, user[playerid][jChaleco]);
        	user[playerid][jInterior] = GetPlayerInterior(playerid);
        	user[playerid][jVirtualWorld] = GetPlayerVirtualWorld(playerid);
		}
        INI_WriteFloat(File, "Posicion_X", user[playerid][jPosicion_X]);
        INI_WriteFloat(File, "Posicion_Y", user[playerid][jPosicion_Y]);
        INI_WriteFloat(File, "Posicion_Z", user[playerid][jPosicion_Z]);
        INI_WriteFloat(File, "Posicion_R", user[playerid][jPosicion_R]);
        INI_WriteFloat(File, "Vida", user[playerid][jSangre]);
        INI_WriteFloat(File, "Chaleco", user[playerid][jChaleco]);
        INI_WriteInt(File, "Interior", user[playerid][jInterior]);
        INI_WriteInt(File, "VirtualWorld", user[playerid][jVirtualWorld]);
        INI_WriteInt(File, "Multicuenta", user[playerid][jMulticuenta]);
		INI_WriteString(File, "IP", user[playerid][jIP]);
        INI_WriteInt(File, "Baneado", user[playerid][jBaneado]);
        INI_WriteInt(File, "Admin", user[playerid][jAdmin]);
        INI_WriteInt(File, "Encargado_1", user[playerid][jEncargado][0]);
        INI_WriteInt(File, "Encargado_2", user[playerid][jEncargado][1]);
        INI_WriteInt(File, "Encargado_3", user[playerid][jEncargado][2]);
        INI_WriteInt(File, "Encargado_4", user[playerid][jEncargado][3]);
        INI_WriteInt(File, "Encargado_5", user[playerid][jEncargado][4]);
        INI_WriteInt(File, "Casa", user[playerid][jCasaKey]);
        INI_WriteInt(File, "Casa2", user[playerid][jCasaKey2]);
        INI_WriteInt(File, "CasaRenta", user[playerid][jCasaRenta]);
        INI_WriteInt(File, "CasaLlaves", user[playerid][jCasaLlaves]);
        INI_WriteInt(File, "Negocio", user[playerid][jNegocioKey]);
        INI_WriteInt(File, "Negocio2", user[playerid][jNegocioKey2]);
        INI_WriteInt(File, "PdRol", user[playerid][jPuntosRol]);
    	for(new i = 0; i < 6; i++) {
        	new sql[100];
        	format(sql, sizeof(sql), "LlavesVeh_%d", i);
        	INI_WriteInt(File, sql, user[playerid][jLlaveCoche][i]);
    	}
    	for(new i = 0; i < 6; i++) {
        	new sql[100];
        	format(sql, sizeof(sql), "LlavesVehPrestado_%d", i);
        	INI_WriteInt(File, sql, user[playerid][jLlaveCochePrestado][i]);
    	}
        INI_WriteInt(File, "Premium", user[playerid][jPremium]);
        INI_WriteInt(File, "ColorP", user[playerid][jColorP]);
        INI_WriteInt(File, "Coins", user[playerid][jCoins]);
        INI_WriteInt(File, "D_Premium", user[playerid][jD_premium]);
        INI_WriteInt(File, "M_Premium", user[playerid][jM_premium]);
		for(new i = 0; i < 10; i++) {
            new sql[100];
            format(sql, sizeof(sql), "Bolsillo_%d", i);
            INI_WriteInt(File, sql, user[playerid][jBolsillo][i]);
            format(sql, sizeof(sql), "Bolsillo_Cantidad_%d", i);
            INI_WriteInt(File, sql, user[playerid][jBolsilloCant][i]);
        }
        INI_WriteInt(File, "Mano_Izquierda", user[playerid][jm_Izquierda]);
        INI_WriteInt(File, "Mano_Izquierda_Cantidad", user[playerid][jm_IzquierdaCant]);
        INI_WriteInt(File, "Mano_Derecha", user[playerid][jm_Derecha]);
        INI_WriteInt(File, "Mano_Derecha_Cantidad", user[playerid][jm_DerechaCant]);
        INI_WriteInt(File, "Espalda", user[playerid][jEspalda]);
        INI_WriteInt(File, "Espalda_Cantidad", user[playerid][jEspaldaCant]);
        for(new i = 0; i < 6; i++) {
            new sql[100];
            format(sql, sizeof(sql), "Cinturon_%d", i);
            INI_WriteInt(File, sql, user[playerid][jCinturon][i]);
            format(sql, sizeof(sql), "Cinturon_Cantidad_%d", i);
            INI_WriteInt(File, sql, user[playerid][jCinturonCant][i]);
        }
        INI_WriteInt(File, "Ropa", user[playerid][jRopa]);
        new Str[16];
        Loop(i, MAX_ROPA, 0) {
            Formato(Str, "Ropa_Armario_%d", i);
            INI_WriteInt(File, Str, user[playerid][jRopaArmario][i]);
        }
        INI_WriteInt(File, "LiderFac", user[playerid][jLider]);
        INI_WriteInt(File, "MiembroFac", user[playerid][jMiembro]);
        INI_WriteInt(File, "RangoFac", user[playerid][jRango]);
        INI_WriteInt(File, "Division", user[playerid][jDivision]);
        INI_WriteInt(File, "LiderFam", user[playerid][jLiderFam]);
        INI_WriteInt(File, "MiembroFam", user[playerid][jMiembroFam]);
        INI_WriteInt(File, "RangoFam", user[playerid][jRangoFam]);
        INI_WriteInt(File, "Muerto", user[playerid][jMuerto]);
        INI_WriteInt(File, "Muerto2", user[playerid][jMuerto2]);
        INI_WriteInt(File, "Telefono", user[playerid][jTelefono]);
        INI_WriteInt(File, "Saldo", user[playerid][jSaldo]);
        INI_WriteInt(File, "Agenda", user[playerid][jAgenda]);
        INI_WriteInt(File, "Frecuencia", user[playerid][jFrecuencia]);
        INI_WriteInt(File, "Boombox", user[playerid][jBoombox]);
        INI_WriteInt(File, "Loteria", user[playerid][jLoteria]);
        INI_WriteInt(File, "Mascara", user[playerid][jMascara]);
        INI_WriteInt(File, "Estrellas", user[playerid][jEstrellas]);
        INI_WriteInt(File, "Arrestos", user[playerid][jArrestos]);
        INI_WriteInt(File, "Sanciones", user[playerid][jSanciones]);
        INI_WriteInt(File, "Encarcelado", user[playerid][jEncarcelado]);
        INI_WriteString(File, "Sancionador", user[playerid][jSancionador]);
        INI_WriteInt(File, "TiempoCarcel", user[playerid][jTiempoCarcel]);
        INI_WriteInt(File, "Cargas", user[playerid][jCargas]);
        INI_WriteInt(File, "Muebles", user[playerid][jMuebles]);
        INI_WriteInt(File, "Troncos", user[playerid][jTroncos]);
        INI_WriteInt(File, "Pescados", user[playerid][jPescados]);
        INI_WriteInt(File, "Cosechas", user[playerid][jCosechas]);
        INI_WriteInt(File, "Escombros", user[playerid][jEscombros]);
        INI_WriteInt(File, "Materiales", user[playerid][jMateriales]);
        INI_WriteInt(File, "Pinturas", user[playerid][jPinturas]);
        INI_WriteInt(File, "Ganzuas", user[playerid][jGanzuas]);
        INI_WriteInt(File, "Lineas", user[playerid][jLineas]);
        INI_WriteInt(File, "Carnadas", user[playerid][jCarnadas]);
        INI_WriteInt(File, "Cheques", user[playerid][jCheques]);
        INI_WriteInt(File, "Trabajo_1", user[playerid][jTrabajo1]);
        INI_WriteInt(File, "Trabajo_2", user[playerid][jTrabajo2]);
        INI_WriteInt(File, "Trabajo_3", user[playerid][jTrabajo3]);
        INI_WriteInt(File, "Licencias_0", user[playerid][jLicencias][0]);
        INI_WriteInt(File, "Licencias_1", user[playerid][jLicencias][1]);
        INI_WriteInt(File, "Licencias_2", user[playerid][jLicencias][2]);
        INI_WriteInt(File, "Licencias_3", user[playerid][jLicencias][3]);
        INI_WriteInt(File, "Licencias_4", user[playerid][jLicencias][4]);
        INI_WriteInt(File, "Licencias_5", user[playerid][jLicencias][5]);
        INI_WriteInt(File, "Licencias_6", user[playerid][jLicencias][6]);
        INI_WriteInt(File, "Habilidad_1", user[playerid][jHabilidad][0]);
        INI_WriteInt(File, "Habilidad_2", user[playerid][jHabilidad][1]);
        INI_WriteInt(File, "Habilidad_3", user[playerid][jHabilidad][2]);
        INI_WriteInt(File, "Habilidad_4", user[playerid][jHabilidad][3]);
        INI_WriteInt(File, "Habilidad_5", user[playerid][jHabilidad][4]);
        INI_WriteInt(File, "Habilidad_6", user[playerid][jHabilidad][5]);
        INI_WriteInt(File, "Habilidad_7", user[playerid][jHabilidad][6]);
        INI_WriteInt(File, "Habilidad_8", user[playerid][jHabilidad][7]);
        INI_WriteInt(File, "Habilidad2_1", user[playerid][jHabilidad2][0]);
        INI_WriteInt(File, "Habilidad2_2", user[playerid][jHabilidad2][1]);
        INI_WriteInt(File, "Habilidad2_3", user[playerid][jHabilidad2][2]);
        INI_WriteInt(File, "Habilidad2_4", user[playerid][jHabilidad2][3]);
        INI_WriteInt(File, "Habilidad2_5", user[playerid][jHabilidad2][4]);
        INI_WriteInt(File, "Habilidad2_6", user[playerid][jHabilidad2][5]);
        INI_WriteInt(File, "Habilidad2_7", user[playerid][jHabilidad2][6]);
        INI_WriteInt(File, "Habilidad2_8", user[playerid][jHabilidad2][7]);
        INI_WriteInt(File, "Estado_Uso", user[playerid][jE_Uso]);
        INI_WriteInt(File, "Estado_Color", user[playerid][jE_Color]);
        INI_WriteString(File, "Estado_Texto", user[playerid][jE_Texto]);
        INI_WriteInt(File, "Documento", user[playerid][jDocumento]);
        INI_WriteInt(File, "Documento", user[playerid][jDocumento]);
        INI_WriteInt(File, "Edad_Falsa", user[playerid][jf_Edad]);
        INI_WriteInt(File, "Documento_Falso", user[playerid][jf_Dni]);
        INI_WriteString(File, "Documento_Nombre", user[playerid][jf_Nombre]);
        INI_WriteString(File, "Delito1", user[playerid][jDelito1]);
        INI_WriteString(File, "Delito2", user[playerid][jDelito2]);
        INI_WriteString(File, "Delito3", user[playerid][jDelito3]);
        INI_WriteString(File, "Delito4", user[playerid][jDelito4]);
        INI_WriteString(File, "Delito5", user[playerid][jDelito5]);
        INI_WriteString(File, "Delito6", user[playerid][jDelito6]);
        INI_WriteString(File, "Delito7", user[playerid][jDelito7]);
        INI_WriteString(File, "Delito8", user[playerid][jDelito8]);
        INI_WriteString(File, "Delito9", user[playerid][jDelito9]);
        INI_WriteString(File, "Delito10", user[playerid][jDelito10]);
        INI_WriteInt(File, "ODelito1", user[playerid][jDelito][0]);
        INI_WriteInt(File, "ODelito2", user[playerid][jDelito][1]);
        INI_WriteInt(File, "ODelito3", user[playerid][jDelito][2]);
        INI_WriteInt(File, "ODelito4", user[playerid][jDelito][3]);
        INI_WriteInt(File, "ODelito5", user[playerid][jDelito][4]);
        INI_WriteInt(File, "ODelito6", user[playerid][jDelito][5]);
        INI_WriteInt(File, "ODelito7", user[playerid][jDelito][6]);
        INI_WriteInt(File, "ODelito8", user[playerid][jDelito][7]);
        INI_WriteInt(File, "ODelito9", user[playerid][jDelito][8]);
        INI_WriteInt(File, "ODelito10", user[playerid][jDelito][9]);
        INI_WriteInt(File, "Contacto_1", user[playerid][jContacto][0]);
        INI_WriteInt(File, "Contacto_2", user[playerid][jContacto][1]);
        INI_WriteInt(File, "Contacto_3", user[playerid][jContacto][2]);
        INI_WriteInt(File, "Contacto_4", user[playerid][jContacto][3]);
        INI_WriteInt(File, "Contacto_5", user[playerid][jContacto][4]);
        INI_WriteInt(File, "Contacto_6", user[playerid][jContacto][5]);
        INI_WriteInt(File, "Contacto_7", user[playerid][jContacto][6]);
        INI_WriteInt(File, "Contacto_8", user[playerid][jContacto][7]);
        INI_WriteInt(File, "Contacto_9", user[playerid][jContacto][8]);
        INI_WriteInt(File, "Contacto_10", user[playerid][jContacto][9]);
        INI_WriteInt(File, "Contacto_11", user[playerid][jContacto][10]);
        INI_WriteInt(File, "Contacto_12", user[playerid][jContacto][11]);
        INI_WriteInt(File, "Contacto_13", user[playerid][jContacto][12]);
        INI_WriteInt(File, "Contacto_14", user[playerid][jContacto][13]);
        INI_WriteInt(File, "Contacto_15", user[playerid][jContacto][14]);
        INI_WriteInt(File, "Contacto_16", user[playerid][jContacto][15]);
        INI_WriteInt(File, "Contacto_17", user[playerid][jContacto][16]);
        INI_WriteInt(File, "Contacto_18", user[playerid][jContacto][17]);
        INI_WriteInt(File, "Contacto_19", user[playerid][jContacto][18]);
        INI_WriteInt(File, "Contacto_20", user[playerid][jContacto][19]);
        INI_WriteString(File, "ContactoN_1", user[playerid][jContactoN1]);
        INI_WriteString(File, "ContactoN_2", user[playerid][jContactoN2]);
        INI_WriteString(File, "ContactoN_3", user[playerid][jContactoN3]);
        INI_WriteString(File, "ContactoN_4", user[playerid][jContactoN4]);
        INI_WriteString(File, "ContactoN_5", user[playerid][jContactoN5]);
        INI_WriteString(File, "ContactoN_6", user[playerid][jContactoN6]);
        INI_WriteString(File, "ContactoN_7", user[playerid][jContactoN7]);
        INI_WriteString(File, "ContactoN_8", user[playerid][jContactoN8]);
        INI_WriteString(File, "ContactoN_9", user[playerid][jContactoN9]);
        INI_WriteString(File, "ContactoN_10", user[playerid][jContactoN10]);
        INI_WriteString(File, "ContactoN_11", user[playerid][jContactoN11]);
        INI_WriteString(File, "ContactoN_12", user[playerid][jContactoN12]);
        INI_WriteString(File, "ContactoN_13", user[playerid][jContactoN13]);
        INI_WriteString(File, "ContactoN_14", user[playerid][jContactoN14]);
        INI_WriteString(File, "ContactoN_15", user[playerid][jContactoN15]);
        INI_WriteString(File, "ContactoN_16", user[playerid][jContactoN16]);
        INI_WriteString(File, "ContactoN_17", user[playerid][jContactoN17]);
        INI_WriteString(File, "ContactoN_18", user[playerid][jContactoN18]);
        INI_WriteString(File, "ContactoN_19", user[playerid][jContactoN19]);
        INI_WriteString(File, "ContactoN_20", user[playerid][jContactoN20]);
        INI_WriteInt(File, "Tiempo_1", user[playerid][jTiempos][0]);
        INI_WriteInt(File, "Tiempo_2", user[playerid][jTiempos][1]);
        INI_WriteInt(File, "Tiempo_3", user[playerid][jTiempos][2]);
        INI_WriteInt(File, "Tiempo_4", user[playerid][jTiempos][3]);
        INI_WriteInt(File, "Tiempo_5", user[playerid][jTiempos][4]);
        INI_WriteInt(File, "Tiempo_6", user[playerid][jTiempos][5]);
        INI_WriteInt(File, "Tiempo_7", user[playerid][jTiempos][6]);
        INI_WriteInt(File, "Tiempo_8", user[playerid][jTiempos][7]);
        INI_WriteInt(File, "Tiempo_9", user[playerid][jTiempos][8]);
        INI_WriteInt(File, "Tiempo_10", user[playerid][jTiempos][9]);
        INI_WriteInt(File, "Tiempo_11", user[playerid][jTiempos][10]);
        INI_WriteInt(File, "Tiempo_12", user[playerid][jTiempos][11]);
        INI_WriteInt(File, "Tiempo_13", user[playerid][jTiempos][12]);
        INI_WriteInt(File, "Tiempo_14", user[playerid][jTiempos][13]);
        INI_WriteInt(File, "Tiempo_15", user[playerid][jTiempos][14]);
        INI_WriteInt(File, "Tiempo_16", user[playerid][jTiempos][15]);
        INI_WriteInt(File, "Tiempo_17", user[playerid][jTiempos][16]);
        INI_WriteInt(File, "Tiempo_18", user[playerid][jTiempos][17]);
        INI_WriteInt(File, "Tiempo_19", user[playerid][jTiempos][18]);
        INI_WriteInt(File, "Tiempo_20", user[playerid][jTiempos][19]);
        for(new v = 0; v < MAX_ACCESORIOS; v++) {
            new string[64];
            format(string, 64, "%d_Modelo", v);
            INI_WriteInt(File, string, InfoAccesorio[playerid][v][aModelo]);
            format(string, 64, "%d_Parte", v);
            INI_WriteInt(File, string, InfoAccesorio[playerid][v][aParte]);
            format(string, 64, "%d_Posicion_X", v);
            INI_WriteFloat(File, string, InfoAccesorio[playerid][v][aPosicionX]);
            format(string, 64, "%d_Posicion_Y", v);
            INI_WriteFloat(File, string, InfoAccesorio[playerid][v][aPosicionY]);
            format(string, 64, "%d_Posicion_Z", v);
            INI_WriteFloat(File, string, InfoAccesorio[playerid][v][aPosicionZ]);
            format(string, 64, "%d_Rotacion_X", v);
            INI_WriteFloat(File, string, InfoAccesorio[playerid][v][aRotacionX]);
            format(string, 64, "%d_Rotacion_Y", v);
            INI_WriteFloat(File, string, InfoAccesorio[playerid][v][aRotacionY]);
            format(string, 64, "%d_Rotacion_Z", v);
            INI_WriteFloat(File, string, InfoAccesorio[playerid][v][aRotacionZ]);
            format(string, 64, "%d_Escala_X", v);
            INI_WriteFloat(File, string, InfoAccesorio[playerid][v][aEscalaX]);
            format(string, 64, "%d_Escala_Y", v);
            INI_WriteFloat(File, string, InfoAccesorio[playerid][v][aEscalaY]);
            format(string, 64, "%d_Escala_Z", v);
            INI_WriteFloat(File, string, InfoAccesorio[playerid][v][aEscalaZ]);
            format(string, 64, "%d_Colocado", v);
            INI_WriteInt(File, string, InfoAccesorio[playerid][v][aColocado]);
        }
        INI_WriteInt(File, "Horas", user[playerid][jHoras]);
        INI_WriteInt(File, "Minutos", user[playerid][jMinutos]);
        INI_WriteInt(File, "Segundos", user[playerid][jSegundos]);
        INI_WriteInt(File, "Dias", user[playerid][jDias]);
        INI_WriteInt(File, "Meses", user[playerid][jMeses]);
        INI_WriteInt(File, "Años", user[playerid][jAnos]);
        INI_WriteString(File, "Audio1", user[playerid][jAudio1]);
        INI_WriteString(File, "Audio2", user[playerid][jAudio2]);
        INI_WriteString(File, "Audio3", user[playerid][jAudio3]);
        INI_WriteInt(File, "NegocioLlaves", user[playerid][jNegocioLlaves]);
        INI_WriteInt(File, "Serial", user[playerid][jSerial]);
        INI_WriteInt(File, "Payday", user[playerid][jPayday]);
    	INI_WriteInt(File, "T_Fabrica", user[playerid][jT_fabrica]);
    	INI_WriteInt(File, "I_Fabrica", user[playerid][jI_fabrica]);
    	INI_WriteInt(File, "T_Fabrica2", user[playerid][jT_fabrica2]);
    	INI_WriteInt(File, "I_Fabrica2", user[playerid][jI_fabrica2]);

        INI_WriteString(File, "Ban_c", user[playerid][jBculpable]);
        INI_WriteString(File, "Ban_r", user[playerid][jBrazon]);
        INI_WriteString(File, "Ban_m", user[playerid][jBmomento]);

    	INI_WriteInt(File, "Piedras", user[playerid][jPiedras]);
    	INI_WriteInt(File, "Tickets", user[playerid][jTickets]);

        INI_WriteInt(File, "Adiccion0", user[playerid][jAdiccion][0]);
        INI_WriteInt(File, "Adiccion1", user[playerid][jAdiccion][1]);
        INI_WriteInt(File, "Adiccion2", user[playerid][jAdiccion][2]);
        INI_WriteInt(File, "Adiccion3", user[playerid][jAdiccion][3]);
        INI_WriteInt(File, "Adiccion4", user[playerid][jAdiccion][4]);

        INI_WriteInt(File, "Empeno0", user[playerid][jEmpeno][0]);
        INI_WriteInt(File, "Empeno1", user[playerid][jEmpeno][1]);
        INI_WriteInt(File, "Empeno2", user[playerid][jEmpeno][2]);
        INI_WriteInt(File, "Empeno3", user[playerid][jEmpeno][3]);
        INI_WriteInt(File, "Empeno4", user[playerid][jEmpeno][4]);
        INI_WriteInt(File, "Empeno20", user[playerid][jEmpeno2][0]);
        INI_WriteInt(File, "Empeno21", user[playerid][jEmpeno2][1]);
        INI_WriteInt(File, "Empeno22", user[playerid][jEmpeno2][2]);
        INI_WriteInt(File, "Empeno23", user[playerid][jEmpeno2][3]);
        INI_WriteInt(File, "Empeno24", user[playerid][jEmpeno2][4]);

    	INI_WriteInt(File, "Empresa", user[playerid][jEmpresaKey]);
        INI_WriteInt(File, "EmpresaLlaves", user[playerid][jEmpresaLlaves]);
    	INI_WriteInt(File, "Contrato", user[playerid][jContrato]);
    	INI_WriteInt(File, "Horas_E", user[playerid][jHorasE]);
    	INI_WriteInt(File, "CambioN", user[playerid][jCambioN]);
        INI_Close(File);
    }
    return 1;
}

stock CargarCuenta2(playerid)
{
    SpawnPlayer(playerid);
	LimpiarPantalla(playerid);
	ResetPlayerMoney(playerid);
	JugadorEnSeccion {playerid} = 1;
	CurrentMoney[playerid] = GetPVarInt(playerid, "Money");
	user[playerid][State] = 3;
	TextDrawShowForPlayer(playerid, Text: Hora2);
	TextDrawShowForPlayer(playerid, Text: InicioTXT);
	new playerip[32];
    GetPlayerIp(playerid, playerip, sizeof(playerip));
    format(user[playerid][jIP], 32, "%s", playerip);
    StopAudioStreamForPlayer(playerid);
	return 1;
}

stock CargarCuenta(playerid)
{
    SpawnPlayer(playerid);
    StopAudioStreamForPlayer(playerid);
    LimpiarPantalla(playerid);
    ResetPlayerMoney(playerid);
    JugadorEnSeccion {playerid} = 1;
    CurrentMoney[playerid] = GetPVarInt(playerid, "Money");
    if(user[playerid][jMuerto] == 1) {
        SetPVarInt(playerid, "EnCrack", 1);
        if(user[playerid][jMuerto2] == 1) SinSangre(playerid, 1);
        else if(user[playerid][jMuerto2] == 2) SinSangre(playerid, 2);
    }
    SpawnPlayer(playerid);
	RevisarVIP(playerid); // Revisa su sistema vip.
	SetPlayerPos(playerid, user[playerid][jPosicion_X], user[playerid][jPosicion_Y], user[playerid][jPosicion_Z]);
	SetPlayerFacingAngle(playerid, user[playerid][jPosicion_R]);
	SetPlayerInterior(playerid, user[playerid][jInterior]);
	SetPlayerVirtualWorld(playerid, user[playerid][jVirtualWorld]);
	Sangre_(playerid, user[playerid][jSangre]);
	Chaleco_(playerid, user[playerid][jChaleco]);
	SetPlayerScore(playerid, user[playerid][jNivel]);
	SetPlayerFightingStyle(playerid, user[playerid][jPelea]);
	SetCameraBehindPlayer(playerid);
	SetPlayerSkin(playerid, user[playerid][jRopa]);
	Streamer_UpdateEx(playerid, user[playerid][jPosicion_X], user[playerid][jPosicion_Y], user[playerid][jPosicion_Z]);
	user[playerid][State] = 3;
	ActualizarHambre(playerid);
	ActualizarSed(playerid);
	CargarAnim(playerid);
	ClearScreen(playerid);
	Caminar(playerid);
	new tiempo[3];
	gettime(tiempo[2], tiempo[1], tiempo[0]);
	SetPlayerTime(playerid, tiempo[2], tiempo[1]);
	SetPlayerWantedLevel(playerid, user[playerid][jEstrellas]);
	if(user[playerid][jInterior] > 0 || user[playerid][jVirtualWorld] > 0) { CargarObjetos(playerid); }
	new HiMsg[128], HiMsg2[128], mes[40], mes2[40], vip[32];
	switch (user[playerid][jMeses]) {
    	case 1: mes = "Enero";
     	case 2: mes = "Febrero";
    	case 3: mes = "Marzo";
     	case 4: mes = "Abril";
     	case 5: mes = "Mayo";
     	case 6: mes = "Junio";
     	case 7: mes = "Julio";
     	case 8: mes = "Agosto";
     	case 9: mes = "Septiembre";
     	case 10: mes = "Octubre";
     	case 11: mes = "Noviembre";
     	case 12: mes = "Diciembre";
    }
    switch (user[playerid][jM_premium]) {
    	case 1: mes2 = "enero";
     	case 2: mes2 = "febrero";
    	case 3: mes2 = "marzo";
   	 	case 4: mes2 = "abril";
     	case 5: mes2 = "mayo";
     	case 6: mes2 = "junio";
     	case 7: mes2 = "julio";
     	case 8: mes2 = "agosto";
     	case 9: mes2 = "septiembre";
     	case 10: mes2 = "octubre";
     	case 11: mes2 = "noviembre";
     	case 12: mes2 = "diciembre";
    }
    switch (user[playerid][jPremium]) {
    	case 1: vip = "básico";
     	case 2: vip = "avanzado";
    	case 3: vip = "ultra";
    }
    new hora = user[playerid][jHoras];
    GameTextForPlayer(playerid,"~y~PERSONAJE CARGADO~n~~r~GANGSTERS ROLEPLAY", 1500, 3);
    if(hora >= 12) format(HiMsg, sizeof(HiMsg), "{FFFF00}[Sist.Conexión]: {ffffff}Bienvenido a GS:RP.ES V.2.X {00C200}%s. Últ.conexión {FFFF00}%02d/%s - %02d:%02dpm", NombreJugador(playerid), user[playerid][jDias], mes, (hora == 12) ? (12) : (hora - 12), user[playerid][jMinutos]);
    else if(hora < 12) format(HiMsg, sizeof(HiMsg), "{FFFF00}[Sist.Conexión]: {ffffff}Bienvenido a GS:RP.ES V.2.X {00C200}%s. Últ.conexión {FFFF00}%02d/%s - %02d:%02dam", NombreJugador(playerid), user[playerid][jDias], mes, (hora == 0) ? (12) : (hora), user[playerid][jMinutos]);
    _Mensaje(playerid, 4, "ffffff", HiMsg);
    if (user[playerid][jPremium] > 0) {
        format(HiMsg2, sizeof(HiMsg2), "{FFFF00}[Sist.Info/Premium]: Su plan premium (tipo: %s). Vence el día (%d) del mes (%s).", vip, user[playerid][jD_premium], mes2);
    	_Mensaje(playerid, 4, "FFE900", HiMsg2);
    }
	new vehss;
	for(new i = 0; i < 6; i++) {
		new veh = user[playerid][jLlaveCoche][i];
		if(veh != 0)++vehss;
	}
	if (vehss) { _Mensaje(playerid, 5, "0", "{FFFF00}[Sist.Info/Datos Verificados]: {ffffff}Se cargaron correctamente tus vehículos, en la última posición. Utiliza: '/coches'."); }
	if(user[playerid][jTiempos][15] != 70)
	{
		if(user[playerid][jMiembro] == 1)
		{
			user[playerid][jLider] = 0;
			user[playerid][jMiembro] = 0;
			user[playerid][jRango] = 0;
			user[playerid][jDivision] = 0;
			Skin_(playerid, 299);
			QuitarBolsillos(playerid),QuitarEspalda(playerid),QuitarCinturon(playerid),QuitarManos(playerid);
			_Mensaje(playerid, 4, "00BE53", "[Sistema Información]: Limpieza de facción, avise a su líder para ingresar de nuevo.");
		}
		user[playerid][jEmpresaKey] = -1;
		user[playerid][jContrato] = -1;
		user[playerid][jTiempos][15] = 70;
	}
	if(user[playerid][jDocumento] == 0) _Mensaje(playerid, 4, "F8D48C", "¡No tienes un documento de identificación! ¡Ve al ayuntamiento antes de que te pare la poli!");
	new playerip[32];
    GetPlayerIp(playerid, playerip, sizeof(playerip));
    format(user[playerid][jIP], 32, "%s", playerip);
	if(user[playerid][jCambioN] == 0)
	{
		if (user[playerid][jEmpresaKey] != -1) format(i_Empresa[user[playerid][jEmpresaKey]][eDueno], 64, "%s", NombreRJugador(playerid));
		if (user[playerid][jCasaKey] != -1) format(InfoCasa[user[playerid][jCasaKey]][cComprador], 64, "%s", NombreRJugador(playerid));
		if (user[playerid][jCasaKey2] != -1) format(InfoCasa[user[playerid][jCasaKey2]][cComprador], 64, "%s", NombreRJugador(playerid));
		if (user[playerid][jNegocioKey] != -1) format(i_Negocio[user[playerid][jNegocioKey]][nDueno], 64, "%s", NombreRJugador(playerid));
		if (user[playerid][jNegocioKey2] != -1) format(i_Negocio[user[playerid][jNegocioKey2]][nDueno], 64, "%s", NombreRJugador(playerid));
		if (user[playerid][jLlaveCoche][0] != 0) format(InfoVehiculo[user[playerid][jLlaveCoche][0]-1000][vDueno], 64, "%s", NombreRJugador(playerid));
		if (user[playerid][jLlaveCoche][1] != 0) format(InfoVehiculo[user[playerid][jLlaveCoche][1]-1000][vDueno], 64, "%s", NombreRJugador(playerid));
		if (user[playerid][jLlaveCoche][2] != 0) format(InfoVehiculo[user[playerid][jLlaveCoche][2]-1000][vDueno], 64, "%s", NombreRJugador(playerid));
		if (user[playerid][jLlaveCoche][3] != 0) format(InfoVehiculo[user[playerid][jLlaveCoche][3]-1000][vDueno], 64, "%s", NombreRJugador(playerid));
		if (user[playerid][jLlaveCoche][4] != 0) format(InfoVehiculo[user[playerid][jLlaveCoche][4]-1000][vDueno], 64, "%s", NombreRJugador(playerid));
		if (user[playerid][jLlaveCoche][5] != 0) format(InfoVehiculo[user[playerid][jLlaveCoche][5]-1000][vDueno], 64, "%s", NombreRJugador(playerid));
		user[playerid][jCambioN] = 1;
	}
	return 1;
}

//
funcion update_Manos(playerid)
{
	new ManoDer = user[playerid][jm_Derecha], ManoDerCant = user[playerid][jm_DerechaCant];
	if(ManoDer == 0) RemovePlayerAttachedObject(playerid, 6);
	if(InfoObjeto[ManoDer][Arrojadizo] == 1 && ManoDerCant <= 0)
	{
		user[playerid][jm_Derecha] = 0;
		user[playerid][jm_DerechaCant] = 0;
		RemovePlayerAttachedObject(playerid, 6);
	}
	if(ManoDer > 0 && ManoDer < sizeof(InfoObjeto))
	{
		if(ManoDerCant > InfoObjeto[ManoDer][Capacidad])
		{
			if(InfoObjeto[ManoDer][IDArma] > 0) { ResetPlayerWeapons(playerid), GivePlayerWeapon(playerid, InfoObjeto[ManoDer][IDArma], InfoObjeto[ManoDer][Capacidad]); }
			user[playerid][jm_DerechaCant] = InfoObjeto[ManoDer][Capacidad];
		}
		if(ManoDer < 16 && ManoDerCant <= 0) { GivePlayerWeapon(playerid, InfoObjeto[ManoDer][IDArma], 1); }
	}
	new ManoIzq = user[playerid][jm_Izquierda], ManoIzqCant = user[playerid][jm_IzquierdaCant];
	if(ManoIzq == 0) RemovePlayerAttachedObject(playerid, 7);
	if(ManoIzq > 0 && ManoIzq < sizeof(InfoObjeto))
	{
		if(ManoIzqCant > InfoObjeto[ManoIzq][Capacidad]) { user[playerid][jm_IzquierdaCant] = InfoObjeto[ManoIzq][Capacidad]; }
		if(ManoIzq < 16 && ManoIzqCant <= 0) { user[playerid][jm_IzquierdaCant] = 1; }
	}
	if(InfoObjeto[ManoIzq][Arrojadizo] == 1 && ManoIzqCant <= 0)
	{
		user[playerid][jm_Izquierda] = 0;
		user[playerid][jm_IzquierdaCant] = 0;
		RemovePlayerAttachedObject(playerid, 7);
	}
}
//
funcion ver_fArmario(playerid, familia)
{
	update_Manos(playerid);
	new dialog[1024], string[128];
	for(new i = 0; i < 12; i++)
	{
		new ArmarioObj = InfoFamilia[familia][fArmario][i];
		if(ArmarioObj == 0) format(string, sizeof(string), "\n{b0b0b0}Vacío");
		else format(string, sizeof(string), "\n{FFFFFF}%s [%d]", InfoObjeto[ArmarioObj][NombreObjeto], InfoFamilia[familia][fArmarioCantidad][i]);
		strcat(dialog, string);
	}
	format(string, sizeof(string), "\n{ffffff}-----");
	strcat(dialog, string);
	if(user[playerid][jm_Derecha] == 0) format(string, sizeof(string), "\n{b0b0b0}M. Derecha: vacía");
	else format(string, sizeof(string), "\n{FFFFFF}M. Derecha: %s [%d]", InfoObjeto[user[playerid][jm_Derecha]][NombreObjeto], user[playerid][jm_DerechaCant]);
	strcat(dialog, string);
	if(user[playerid][jm_Izquierda] == 0) format(string, sizeof(string), "\n{b0b0b0}M. Izquierda: vacía");
	else format(string, sizeof(string), "\n{FFFFFF}M. Izquierda: %s [%d]", InfoObjeto[user[playerid][jm_Izquierda]][NombreObjeto], user[playerid][jm_IzquierdaCant]);
	strcat(dialog, string);
	Dialog(playerid, D_Farmario, DIALOG_STYLE_LIST, "{D6E1EB}Armario de organización", dialog, "Seleccionar", "Cancelar");
	return 1;
}
funcion S_fArmario(playerid, familia, id)
{
	if(familia == 0) return 1;
	update_Manos(playerid);
	new ArmarioObj = InfoFamilia[familia][fArmario][id], Cant = InfoFamilia[familia][fArmarioCantidad][id], string[128];
	if(ArmarioObj == 0) return _Mensaje(playerid, 0, "1", "Ésta ranura se encuentra vacía.");
 	if(ArmarioObj == 131)
	{
		if(user[playerid][jm_Derecha] == 0 && user[playerid][jm_Izquierda] == 0)
		{
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
		} else return _Mensaje(playerid, 0, "9", "Debes tener las manos vacías.");
	}
	if(user[playerid][jm_Derecha] == 0)
	{
		if(InfoObjeto[ArmarioObj][IDArma] > 0)
		{
			new arma = InfoObjeto[ArmarioObj][IDArma], municion = Cant;
			if(municion > 0) { _GiveWeapon(playerid, arma, municion); }
		}
		user[playerid][jm_Derecha] = ArmarioObj;
		user[playerid][jm_DerechaCant] = Cant;
		PonerObjeto(playerid, 1, ArmarioObj);
		InfoFamilia[familia][fArmario][id] = 0;
		InfoFamilia[familia][fArmarioCantidad][id] = 0;
		format(string, sizeof(string), "Sacaste del armario un(a) %s.", InfoObjeto[ArmarioObj][NombreObjeto]);
		_Mensaje(playerid, 4, "A7CE00", string);
		ActualizarFamilia(user[playerid][jMiembroFam]);
		return 1;
	}
	else if(user[playerid][jm_Izquierda] == 0)
	{
		user[playerid][jm_Izquierda] = ArmarioObj;
		user[playerid][jm_IzquierdaCant] = Cant;
		PonerObjeto(playerid, 2, ArmarioObj);
		InfoFamilia[familia][fArmario][id] = 0;
		InfoFamilia[familia][fArmarioCantidad][id] = 0;
		format(string, sizeof(string), "Sacaste del armario un(a) %s.", InfoObjeto[ArmarioObj][NombreObjeto]);
		_Mensaje(playerid, 4, "A7CE00", string);
		ActualizarFamilia(user[playerid][jMiembroFam]);
	} else  return _Mensaje(playerid, 0, "1", "Tienes ambas manos ocupadas, debes tirar o guardar lo que llevas en ellas.");
	return 1;
}
funcion G_fArmario(playerid, familia, mano)
{
	if(familia == 0) return 1;
	update_Manos(playerid);
	if(mano == 1)
	{
		if(user[playerid][jm_Derecha] == 0) return _Mensaje(playerid, 0, "1", "No tienes nada en tu mano derecha.");
		new Mano = user[playerid][jm_Derecha], Cant = user[playerid][jm_DerechaCant], string[128], ArmarioLibre;
		if(InfoObjeto[Mano][IDArma] > 0) //- Si es arma
		{
			if(IntentoChitearBalas(playerid)) return 1;
			Cant = user[playerid][jm_DerechaCant];
			RemovePlayerWeapon(playerid, InfoObjeto[Mano][IDArma]);
		}
		for(new x = 0; x < 12; x++)
		{
			if(InfoFamilia[familia][fArmario][x] == 0)
			{
				if(user[playerid][jm_Derecha] == 131) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
				InfoFamilia[familia][fArmario][x] = Mano;
				InfoFamilia[familia][fArmarioCantidad][x] = Cant;
				RemovePlayerAttachedObject(playerid, 6);
				user[playerid][jm_Derecha] = 0;
				user[playerid][jm_DerechaCant] = 0;
				format(string, sizeof(string), "Guardaste en el armario un(a) %s.", InfoObjeto[Mano][NombreObjeto]);
				_Mensaje(playerid, 4, "A7CE00", string);
				ArmarioLibre = 1;
				ActualizarFamilia(user[playerid][jMiembroFam]);
				return 1;
			}
		}
		if(ArmarioLibre == 0) return _Mensaje(playerid, 0, "1", "Todas las ranuras del armario están ocupadas.");
	}
	else if(mano == 2)
	{
		if(user[playerid][jm_Izquierda] == 0) return _Mensaje(playerid, 0, "1", "No tienes nada en tu mano izquierda.");
		new Mano = user[playerid][jm_Izquierda], Cant = user[playerid][jm_IzquierdaCant], string[128], ArmarioLibre;
		for(new x = 0; x < 12; x++)
		{
			if(InfoFamilia[familia][fArmario][x] == 0)
			{
				if(user[playerid][jm_Izquierda] == 131) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
				InfoFamilia[familia][fArmario][x] = Mano;
				InfoFamilia[familia][fArmarioCantidad][x] = Cant;
				RemovePlayerAttachedObject(playerid, 7);
				user[playerid][jm_Izquierda] = 0;
				user[playerid][jm_IzquierdaCant] = 0;
				format(string, sizeof(string), "Guardaste en el armario un(a) %s.", InfoObjeto[Mano][NombreObjeto]);
				_Mensaje(playerid, 4, "A7CE00", string);
				ArmarioLibre = 1;
				ActualizarFamilia(user[playerid][jMiembroFam]);
				return 1;
			}
		}
		if(ArmarioLibre == 0) return _Mensaje(playerid, 0, "1", "Todas las ranuras del armario están ocupadas.");
	}
	return 1;
}
//
funcion ver_Armario(playerid, casa)
{
	update_Manos(playerid);
	new dialog[1024], string[128];
	for(new i = 0; i < 15; i++)
	{
		new ArmarioObj = InfoCasa[casa][cArmario][i];
		if(ArmarioObj == 0) format(string, sizeof(string), "\n{b0b0b0}Vacío");
		else format(string, sizeof(string), "\n{FFFFFF}%s [%d]", InfoObjeto[ArmarioObj][NombreObjeto], InfoCasa[casa][cArmarioCantidad][i]);
		strcat(dialog, string);
	}
	format(string, sizeof(string), "\n{ffffff}-----");
	strcat(dialog, string);
	if(user[playerid][jm_Derecha] == 0) format(string, sizeof(string), "\n{b0b0b0}M. Derecha: vacía");
	else format(string, sizeof(string), "\n{FFFFFF}M. Derecha: %s [%d]", InfoObjeto[user[playerid][jm_Derecha]][NombreObjeto], user[playerid][jm_DerechaCant]);
	strcat(dialog, string);
	if(user[playerid][jm_Izquierda] == 0) format(string, sizeof(string), "\n{b0b0b0}M. Izquierda: vacía");
	else format(string, sizeof(string), "\n{FFFFFF}M. Izquierda: %s [%d]", InfoObjeto[user[playerid][jm_Izquierda]][NombreObjeto], user[playerid][jm_IzquierdaCant]);
	strcat(dialog, string);
	Dialog(playerid, D_Carmario2, DIALOG_STYLE_LIST, "{D6E1EB}Armario de casa", dialog, "Seleccionar", "Cancelar");
	return 1;
}
funcion S_Armario(playerid, casa, id)
{
	if(casa == 0) return 1;
	new string[128];
	update_Manos(playerid);
	new ArmarioObj = InfoCasa[casa][cArmario][id], Cant = InfoCasa[casa][cArmarioCantidad][id];
	if(ArmarioObj == 0) return _Mensaje(playerid, 0, "1", "Ésta ranura se encuentra vacía.");
	if(ArmarioObj == 131)
	{
		if(user[playerid][jm_Derecha] == 0 && user[playerid][jm_Izquierda] == 0)
		{
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
		} else return _Mensaje(playerid, 0, "9", "Debes tener las manos vacías.");
	}
	if(user[playerid][jm_Derecha] == 0)
	{
		if(InfoObjeto[ArmarioObj][IDArma] > 0)
		{
			new arma = InfoObjeto[ArmarioObj][IDArma], municion = Cant;
			if(municion > 0) { _GiveWeapon(playerid, arma, municion); }
		}
		user[playerid][jm_Derecha] = ArmarioObj;
		user[playerid][jm_DerechaCant] = Cant;
		PonerObjeto(playerid, 1, ArmarioObj);
		InfoCasa[casa][cArmario][id] = 0;
		InfoCasa[casa][cArmarioCantidad][id] = 0;
		format(string, sizeof(string), "Sacaste del armario un(a) %s.", InfoObjeto[ArmarioObj][NombreObjeto]);
		_Mensaje(playerid, 4, "A7CE00", string);
		if (EnCasaID[playerid]!= INVALID_CASA_ID) {
			format(string, sizeof(string), "Registros: %s sacó %s de la casa ID %d.", NombreRJugador(playerid), InfoObjeto[ArmarioObj][NombreObjeto], EnCasaID[playerid]);
			Log("Registros/ArmarioC.log", string);
		}
		return 1;
	}
	else if(user[playerid][jm_Izquierda] == 0)
	{
		user[playerid][jm_Izquierda] = ArmarioObj;
		user[playerid][jm_IzquierdaCant] = Cant;
		PonerObjeto(playerid, 2, ArmarioObj);
		InfoCasa[casa][cArmario][id] = 0;
		InfoCasa[casa][cArmarioCantidad][id] = 0;
		format(string, sizeof(string), "Sacaste del armario un(a) %s.", InfoObjeto[ArmarioObj][NombreObjeto]);
		_Mensaje(playerid, 4, "A7CE00", string);
		if (EnCasaID[playerid]!= INVALID_CASA_ID)
		{
			format(string, sizeof(string), "Registros: %s sacó %s de la casa ID %d.", NombreRJugador(playerid), InfoObjeto[ArmarioObj][NombreObjeto], EnCasaID[playerid]);
			Log("Registros/ArmarioC.log", string);
		}
	} else return _Mensaje(playerid, 0, "1", "Tienes ambas manos ocupadas, debes tirar o guardar lo que llevas en ellas.");
	return 1;
}

funcion G_Armario(playerid, casa, mano)
{
	if(casa == 0) return 1;
	update_Manos(playerid);
	if(mano == 1)
	{
		if(user[playerid][jm_Derecha] == 0) return _Mensaje(playerid, 0, "1", "No tienes nada en tu mano derecha.");
		new Mano = user[playerid][jm_Derecha], Cant = user[playerid][jm_DerechaCant], string[128], ArmarioLibre;
		if(InfoObjeto[Mano][IDArma] > 0) //- Si es arma
		{
			if(IntentoChitearBalas(playerid)) return 1;
			Cant = user[playerid][jm_DerechaCant];
			RemovePlayerWeapon(playerid, InfoObjeto[Mano][IDArma]);
		}
		for(new x = 0; x < 15; x++)
		{
			if(InfoCasa[casa][cArmario][x] == 0)
			{
				if(user[playerid][jm_Derecha] == 131) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
				InfoCasa[casa][cArmario][x] = Mano;
				InfoCasa[casa][cArmarioCantidad][x] = Cant;
				RemovePlayerAttachedObject(playerid, 6);
				user[playerid][jm_Derecha] = 0;
				user[playerid][jm_DerechaCant] = 0;
				format(string, sizeof(string), "Guardaste en el armario un(a) %s.", InfoObjeto[Mano][NombreObjeto]);
				_Mensaje(playerid, 4, "A7CE00", string);
				ArmarioLibre = 1;
				return 1;
			}
		}
		if(ArmarioLibre == 0) return _Mensaje(playerid, 0, "1", "Todas las ranuras del armario están ocupadas.");
	}
	else if(mano == 2)
	{
		if(user[playerid][jm_Izquierda] == 0) return _Mensaje(playerid, 0, "1", "No tienes nada en tu mano izquierda.");
		new Mano = user[playerid][jm_Izquierda], Cant = user[playerid][jm_IzquierdaCant], string[128], ArmarioLibre;
		for(new x = 0; x < 15; x++)
		{
			if(InfoCasa[casa][cArmario][x] == 0)
			{
				if(user[playerid][jm_Izquierda] == 131) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
				InfoCasa[casa][cArmario][x] = Mano;
				InfoCasa[casa][cArmarioCantidad][x] = Cant;
				RemovePlayerAttachedObject(playerid, 7);
				user[playerid][jm_Izquierda] = 0;
				user[playerid][jm_IzquierdaCant] = 0;
				format(string, sizeof(string), "Guardaste en el armario un(a) %s.", InfoObjeto[Mano][NombreObjeto]);
				_Mensaje(playerid, 4, "A7CE00", string);
				ArmarioLibre = 1;
				return 1;
			}
		}
		if(ArmarioLibre == 0) return _Mensaje(playerid, 0, "1", "Todas las ranuras del armario están ocupadas.");
	}
	return 1;
}
funcion _PDArmario(playerid, casa)
{
	update_Manos(playerid);
	new dialog[1024], string[128];
	for(new i = 0; i < 15; i++)
	{
		new ArmarioObj = InfoCasa[casa][cArmario][i];
		if(ArmarioObj == 0) format(string, sizeof(string), "\n{b0b0b0}Vacío");
		else format(string, sizeof(string), "\n{FFFFFF}%s [%d]", InfoObjeto[ArmarioObj][NombreObjeto], InfoCasa[casa][cArmarioCantidad][i]);
		strcat(dialog, string);
	}
	if (user[playerid][jRango] < 6) { Dialog(playerid, D_INVALIDO, DIALOG_STYLE_LIST, "{D6E1EB}Armario de casa", dialog, "Seleccionar", "Cancelar"); }
	else Dialog(playerid, D_PDarmario, DIALOG_STYLE_LIST, "{D6E1EB}Armario de casa", dialog, "Seleccionar", "Cancelar");
	return 1;
}
//
funcion n_verArmario(playerid, negocio)
{
	update_Manos(playerid);
	new dialog[1024], string[128];
	for(new i = 0; i < 10; i++)
	{
		new ArmarioObj = i_Negocio[negocio][nArmario][i];
		if(ArmarioObj == 0) format(string, sizeof(string), "\n{b0b0b0}Vacío");
		else format(string, sizeof(string), "\n{FFFFFF}%s [%d]", InfoObjeto[ArmarioObj][NombreObjeto], i_Negocio[negocio][nArmarioCant][i]);
		strcat(dialog, string);
	}
	format(string, sizeof(string), "\n{ffffff}-----");
	strcat(dialog, string);
	if(user[playerid][jm_Derecha] == 0) format(string, sizeof(string), "\n{b0b0b0}M. Derecha: vacía");
	else format(string, sizeof(string), "\n{FFFFFF}M. Derecha: %s [%d]", InfoObjeto[user[playerid][jm_Derecha]][NombreObjeto], user[playerid][jm_DerechaCant]);
	strcat(dialog, string);
	if(user[playerid][jm_Izquierda] == 0) format(string, sizeof(string), "\n{b0b0b0}M. Izquierda: vacía");
	else format(string, sizeof(string), "\n{FFFFFF}M. Izquierda: %s [%d]", InfoObjeto[user[playerid][jm_Izquierda]][NombreObjeto], user[playerid][jm_IzquierdaCant]);
	strcat(dialog, string);
	Dialog(playerid, D_ArmarioN, DIALOG_STYLE_LIST, "{D6E1EB}Armario de negocio", dialog, "Seleccionar", "Cancelar");
	return 1;
}
funcion S_nArmario(playerid, negocio, id)
{
	if(negocio == 0) return 1;
	update_Manos(playerid);
	new ArmarioObj = i_Negocio[negocio][nArmario][id], Cant = i_Negocio[negocio][nArmarioCant][id], string[128];
	if(ArmarioObj == 0) return _Mensaje(playerid, 0, "1", "Ésta ranura se encuentra vacía.");
 	if(ArmarioObj == 131)
	{
		if(user[playerid][jm_Derecha] == 0 && user[playerid][jm_Izquierda] == 0)
		{
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
		} else return _Mensaje(playerid, 0, "9", "Debes tener las manos vacías.");
	}
	if(user[playerid][jm_Derecha] == 0)
	{
		if(InfoObjeto[ArmarioObj][IDArma] > 0)
		{
			new arma = InfoObjeto[ArmarioObj][IDArma], municion = Cant;
			if(municion > 0) { _GiveWeapon(playerid, arma, municion); }
		}
		user[playerid][jm_Derecha] = ArmarioObj;
		user[playerid][jm_DerechaCant] = Cant;
		PonerObjeto(playerid, 1, ArmarioObj);
		i_Negocio[negocio][nArmario][id] = 0;
		i_Negocio[negocio][nArmarioCant][id] = 0;
		format(string, sizeof(string), "Sacaste del armario un(a) %s.", InfoObjeto[ArmarioObj][NombreObjeto]);
		_Mensaje(playerid, 4, "A7CE00", string);
		format(string, sizeof(string), "Registros: %s sacó %s del negocio %d.", NombreRJugador(playerid), InfoObjeto[ArmarioObj][NombreObjeto], negocio);
		Log("Registros/ArmarioN.log", string);
		return 1;
	}
	else if(user[playerid][jm_Izquierda] == 0)
	{
		user[playerid][jm_Izquierda] = ArmarioObj;
		user[playerid][jm_IzquierdaCant] = Cant;
		PonerObjeto(playerid, 2, ArmarioObj);
		i_Negocio[negocio][nArmario][id] = 0;
		i_Negocio[negocio][nArmarioCant][id] = 0;
		format(string, sizeof(string), "Sacaste del armario un(a) %s.", InfoObjeto[ArmarioObj][NombreObjeto]);
		_Mensaje(playerid, 4, "A7CE00", string);
		format(string, sizeof(string), "Registros: %s sacó %s del negocio %d.", NombreRJugador(playerid), InfoObjeto[ArmarioObj][NombreObjeto], negocio);
		Log("Registros/ArmarioN.log", string);
	} else return _Mensaje(playerid, 0, "1", "Tienes ambas manos ocupadas, debes tirar o guardar lo que llevas en ellas.");
	return 1;
}
funcion G_nArmario(playerid, negocio, mano)
{
	if(negocio == 0) return 1;
	update_Manos(playerid);
	if(mano == 1)
	{
		if(user[playerid][jm_Derecha] == 0) return _Mensaje(playerid, 0, "1", "No tienes nada en tu mano derecha.");
		new Mano = user[playerid][jm_Derecha], Cant = user[playerid][jm_DerechaCant], string[128], ArmarioLibre;
		if(InfoObjeto[Mano][IDArma] > 0) //- Si es arma
		{
			if(IntentoChitearBalas(playerid)) return 1;
			Cant = user[playerid][jm_DerechaCant];
			RemovePlayerWeapon(playerid, InfoObjeto[Mano][IDArma]);
		}
		for(new x = 0; x < 10; x++)
		{
			if(i_Negocio[negocio][nArmario][x] == 0)
			{
				if(user[playerid][jm_Derecha] == 131) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
				i_Negocio[negocio][nArmario][x] = Mano;
				i_Negocio[negocio][nArmarioCant][x] = Cant;
				RemovePlayerAttachedObject(playerid, 6);
				user[playerid][jm_Derecha] = 0;
				user[playerid][jm_DerechaCant] = 0;
				format(string, sizeof(string), "Guardaste en el armario un(a) %s.", InfoObjeto[Mano][NombreObjeto]);
				_Mensaje(playerid, 4, "A7CE00", string);
				format(string, sizeof(string), "Registros: %s guardó %s en el negocio %d.", NombreRJugador(playerid), InfoObjeto[Mano][NombreObjeto], negocio);
				Log("Registros/ArmarioN.log", string);
				ArmarioLibre = 1;
				return 1;
			}
		}
		if(ArmarioLibre == 0) return _Mensaje(playerid, 0, "1", "Todas las ranuras del armario están ocupadas.");
	}
	else if(mano == 2)
	{
		if(user[playerid][jm_Izquierda] == 0) return _Mensaje(playerid, 0, "1", "No tienes nada en tu mano izquierda.");
		new Mano = user[playerid][jm_Izquierda], Cant = user[playerid][jm_IzquierdaCant], string[128], ArmarioLibre;
		for(new x = 0; x < 10; x++)
		{
			if(i_Negocio[negocio][nArmario][x] == 0)
			{
				if(user[playerid][jm_Izquierda] == 131) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
				i_Negocio[negocio][nArmario][x] = Mano;
				i_Negocio[negocio][nArmarioCant][x] = Cant;
				RemovePlayerAttachedObject(playerid, 7);
				user[playerid][jm_Izquierda] = 0;
				user[playerid][jm_IzquierdaCant] = 0;
				format(string, sizeof(string), "Guardaste en el armario un(a) %s.", InfoObjeto[Mano][NombreObjeto]);
				_Mensaje(playerid, 4, "A7CE00", string);
				format(string, sizeof(string), "Registros: %s guardó %s en el negocio %d.", NombreRJugador(playerid), InfoObjeto[Mano][NombreObjeto], negocio);
				Log("Registros/ArmarioN.log", string);
				ArmarioLibre = 1;
				return 1;
			}
		}
		if(ArmarioLibre == 0) return _Mensaje(playerid, 0, "1", "Todas las ranuras del armario están ocupadas.");
	}
	return 1;
}
//
funcion ver_Guantera(playerid, vehicleid)
{
	update_Manos(playerid);
	new dialog[1024], string[128];
	for(new i = 0; i < 3; i++)
	{
		new Bonnet = InfoVehiculo[vehicleid][vGuantera][i];
		if(Bonnet == 0) format(string, sizeof(string), "\n{b0b0b0}Vacío");
		else format(string, sizeof(string), "\n{FFFFFF}%s [%d]", InfoObjeto[Bonnet][NombreObjeto], InfoVehiculo[vehicleid][vGuanteraCantidad][i]);
		strcat(dialog, string);
	}
	format(string, sizeof(string), "\n{ffffff}-----");
	strcat(dialog, string);
	if(user[playerid][jm_Derecha] == 0) format(string, sizeof(string), "\n{b0b0b0}M. Derecha: vacía");
	else format(string, sizeof(string), "\n{FFFFFF}M. Derecha: %s [%d]", InfoObjeto[user[playerid][jm_Derecha]][NombreObjeto], user[playerid][jm_DerechaCant]);
	strcat(dialog, string);
	if(user[playerid][jm_Izquierda] == 0) format(string, sizeof(string), "\n{b0b0b0}M. Izquierda: vacía");
	else format(string, sizeof(string), "\n{FFFFFF}M. Izquierda: %s [%d]", InfoObjeto[user[playerid][jm_Izquierda]][NombreObjeto], user[playerid][jm_IzquierdaCant]);
	strcat(dialog, string);
	Dialog(playerid, D_MENUGUANTERA, DIALOG_STYLE_LIST, "{D6E1EB}Guantera", dialog, "Seleccionar", "Cancelar");
	return 1;
}
funcion S_Guantera(playerid, vehicleid, id)
{
	update_Manos(playerid);
	new Bonnet = InfoVehiculo[vehicleid][vGuantera][id], Cant = InfoVehiculo[vehicleid][vGuanteraCantidad][id], string[128];
	if(Bonnet == 0) return _Mensaje(playerid, 0, "1", "Ésta ranura se encuentra vacía.");
	if(user[playerid][jm_Derecha] == 0)
	{
		if(InfoObjeto[Bonnet][IDArma] > 0)
		{
			new arma = InfoObjeto[Bonnet][IDArma], municion = Cant;
			if(municion > 0) { _GiveWeapon(playerid, arma, municion); }
		}
		user[playerid][jm_Derecha] = Bonnet;
		user[playerid][jm_DerechaCant] = Cant;
		PonerObjeto(playerid, 1, Bonnet);
		InfoVehiculo[vehicleid][vGuantera][id] = 0;
		InfoVehiculo[vehicleid][vGuanteraCantidad][id] = 0;
		format(string, sizeof(string), "Sacaste de la guantera un(a) %s.", InfoObjeto[Bonnet][NombreObjeto]);
		_Mensaje(playerid, 4, "A7CE00", string);
		VehGuanteraPlayer[playerid] = 0;
		ActualizarVehiculo(vehicleid);
		return 1;
	}
	else if(user[playerid][jm_Izquierda] == 0)
	{
		user[playerid][jm_Izquierda] = Bonnet;
		user[playerid][jm_IzquierdaCant] = Cant;
		PonerObjeto(playerid, 2, Bonnet);
		InfoVehiculo[vehicleid][vGuantera][id] = 0;
		InfoVehiculo[vehicleid][vGuanteraCantidad][id] = 0;
		format(string, sizeof(string), "Sacaste de la guantera un(a) %s.", InfoObjeto[Bonnet][NombreObjeto]);
		_Mensaje(playerid, 4, "A7CE00", string);
		VehGuanteraPlayer[playerid] = 0;
		ActualizarVehiculo(vehicleid);
	} else return _Mensaje(playerid, 0, "9", "Tienes ambas manos ocupadas.");
	return 1;
}
funcion G_Guantera(playerid, vehicleid, mano)
{
	update_Manos(playerid);
	if(mano == 1)
	{
		if(user[playerid][jm_Derecha] == 0) return _Mensaje(playerid, 0, "9", "No tienes nada en tu mano derecha.");
		new Mano = user[playerid][jm_Derecha], Cant = user[playerid][jm_DerechaCant], string[128], BonnetLibre;
		if(InfoObjeto[Mano][Guardable] == 2 || InfoObjeto[Mano][Guardable] == 3) return _Mensaje(playerid, 0, "9", "Este objeto es demasiado grande.");
		if(InfoObjeto[Mano][IDArma] > 0) //- Si es arma
		{
			if(IntentoChitearBalas(playerid)) return 1;
			Cant = user[playerid][jm_DerechaCant];
			RemovePlayerWeapon(playerid, InfoObjeto[Mano][IDArma]);
		}
		for(new x = 0; x < 3; x++)
		{
			if(InfoVehiculo[vehicleid][vGuantera][x] == 0)
			{
				InfoVehiculo[vehicleid][vGuantera][x] = Mano;
				InfoVehiculo[vehicleid][vGuanteraCantidad][x] = Cant;
				RemovePlayerAttachedObject(playerid, 6);
				user[playerid][jm_Derecha] = 0;
				user[playerid][jm_DerechaCant] = 0;
				format(string, sizeof(string), "Guardaste en la guantera un(a) %s.", InfoObjeto[Mano][NombreObjeto]);
				_Mensaje(playerid, 4, "A7CE00", string);
				BonnetLibre = 1;
				VehGuanteraPlayer[playerid] = 0;
				ActualizarVehiculo(vehicleid);
				return 1;
			}
		}
		if(BonnetLibre == 0) return _Mensaje(playerid, 0, "9", "Todas las ranuras de la guantera están ocupadas.");
	}
	else if(mano == 2)
	{
		if(user[playerid][jm_Izquierda] == 0) return _Mensaje(playerid, 0, "9", "No tienes nada en tu mano izquierda.");
		new Mano = user[playerid][jm_Izquierda], Cant = user[playerid][jm_IzquierdaCant], string[128], BonnetLibre;
		if(InfoObjeto[Mano][Guardable] == 2 || InfoObjeto[Mano][Guardable] == 3) return _Mensaje(playerid, 0, "9", "Este objeto es demasiado grande.");
		for(new x = 0; x < 3; x++)
		{
			if(InfoVehiculo[vehicleid][vGuantera][x] == 0)
			{
				InfoVehiculo[vehicleid][vGuantera][x] = Mano;
				InfoVehiculo[vehicleid][vGuanteraCantidad][x] = Cant;
				RemovePlayerAttachedObject(playerid, 7);
				user[playerid][jm_Izquierda] = 0;
				user[playerid][jm_IzquierdaCant] = 0;
				format(string, sizeof(string), "Guardaste en la guantera un(a) %s.", InfoObjeto[Mano][NombreObjeto]);
				_Mensaje(playerid, 4, "A7CE00", string);
				BonnetLibre = 1;
				VehGuanteraPlayer[playerid] = 0;
				ActualizarVehiculo(vehicleid);
				return 1;
			}
		}
		if(BonnetLibre == 0) return _Mensaje(playerid, 0, "9", "Todas las ranuras de la guantera están ocupadas.");
	}
	return 1;
}
//
funcion ver_Maletero(playerid, vehicleid)
{
	update_Manos(playerid);
	new dialog[1024], string[128];
	for(new i = 0; i < InfoVehiculo[vehicleid][vMaxMaletero]; i++)
	{
		new Bonnet = InfoVehiculo[vehicleid][vMaletero][i];
		if(Bonnet == 0) format(string, sizeof(string), "\n{b0b0b0}Vacío");
		else format(string, sizeof(string), "\n{FFFFFF}%s [%d]", InfoObjeto[Bonnet][NombreObjeto], InfoVehiculo[vehicleid][vMaleteroCantidad][i]);
		strcat(dialog, string);
	}
	format(string, sizeof(string), "\n{ffffff}-----");
	strcat(dialog, string);
	if(user[playerid][jm_Derecha] == 0) format(string, sizeof(string), "\n{b0b0b0}M. Derecha: vacía");
	else format(string, sizeof(string), "\n{FFFFFF}M. Derecha: %s [%d]", InfoObjeto[user[playerid][jm_Derecha]][NombreObjeto], user[playerid][jm_DerechaCant]);
	strcat(dialog, string);
	if(user[playerid][jm_Izquierda] == 0) format(string, sizeof(string), "\n{b0b0b0}M. Izquierda: vacía");
	else format(string, sizeof(string), "\n{FFFFFF}M. Izquierda: %s [%d]", InfoObjeto[user[playerid][jm_Izquierda]][NombreObjeto], user[playerid][jm_IzquierdaCant]);
	strcat(dialog, string);
	if(InfoVehiculo[vehicleid][vMaxMaletero] == 12+user[playerid][jPremium]) Dialog(playerid, D_MENUMALETERO, DIALOG_STYLE_LIST, "{D6E1EB}Maletero", dialog, "Seleccionar", "Salir");
	else if(InfoVehiculo[vehicleid][vMaxMaletero] == 7+user[playerid][jPremium]) Dialog(playerid, D_MENUMALETERO2, DIALOG_STYLE_LIST, "{D6E1EB}Maletero", dialog, "Seleccionar", "Salir");
	else if(InfoVehiculo[vehicleid][vMaxMaletero] == 2+user[playerid][jPremium]) Dialog(playerid, D_MENUMALETERO3, DIALOG_STYLE_LIST, "{D6E1EB}Maletero", dialog, "Seleccionar", "Salir");
	else if(InfoVehiculo[vehicleid][vMaxMaletero] == 15) Dialog(playerid, D_MENUMALETERO5, DIALOG_STYLE_LIST, "{D6E1EB}Maletero", dialog, "Seleccionar", "Salir");
	else Dialog(playerid, D_MENUMALETERO4, DIALOG_STYLE_LIST, "{D6E1EB}Maletero", dialog, "Seleccionar", "Cancelar");
	return 1;
}
funcion S_Maletero(playerid, vehicleid, id)
{
	update_Manos(playerid);
	new Bonnet = InfoVehiculo[vehicleid][vMaletero][id], Cant = InfoVehiculo[vehicleid][vMaleteroCantidad][id], string[128];
	if(Bonnet == 0) return _Mensaje(playerid, 0, "1", "Ésta ranura se encuentra vacía.");
	if(Bonnet == 131)
	{
		if(user[playerid][jm_Derecha] == 0 && user[playerid][jm_Izquierda] == 0)
		{
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
		} else return _Mensaje(playerid, 0, "9", "Debes tener las manos vacías.");
	}
	if(user[playerid][jm_Derecha] == 0)
	{
		if(InfoObjeto[Bonnet][IDArma] > 0)
		{
			new arma = InfoObjeto[Bonnet][IDArma], municion = Cant;
			if(municion > 0) { _GiveWeapon(playerid, arma, municion); }
		}
		user[playerid][jm_Derecha] = Bonnet;
		user[playerid][jm_DerechaCant] = Cant;
		PonerObjeto(playerid, 1, Bonnet);
		InfoVehiculo[vehicleid][vMaletero][id] = 0;
		InfoVehiculo[vehicleid][vMaleteroCantidad][id] = 0;
		format(string, sizeof(string), "ha sacado del maletero un(a) %s del vehículo %s.", InfoObjeto[Bonnet][NombreObjeto], nombre_vehiculo[InfoVehiculo[vehicleid][vModelo] - 400]);
		AccionesRol(playerid, 0, string);
		format(string, sizeof string, "%s ha sacado del maletero (ID VEH %d) un(a) %s.", NombreRJugador(playerid), InfoVehiculo[vehicleid][vLlave], InfoObjeto[Bonnet][NombreObjeto]);
		Log("Registros/MaleterosU.log", string);
		VehMaleteroPlayer[playerid] = 0;
		ActualizarVehiculo(vehicleid);
		return 1;
	}
	else if(user[playerid][jm_Izquierda] == 0)
	{
		user[playerid][jm_Izquierda] = Bonnet;
		user[playerid][jm_IzquierdaCant] = Cant;
		PonerObjeto(playerid, 2, Bonnet);
		InfoVehiculo[vehicleid][vMaletero][id] = 0;
		InfoVehiculo[vehicleid][vMaleteroCantidad][id] = 0;
		format(string, sizeof(string), "ha sacado del maletero un(a) %s del vehículo %s.", InfoObjeto[Bonnet][NombreObjeto], nombre_vehiculo[InfoVehiculo[vehicleid][vModelo] - 400]);
		AccionesRol(playerid, 0, string);
		format(string, sizeof string, "%s ha sacado del maletero (ID VEH %d) un(a) %s.", NombreRJugador(playerid), InfoVehiculo[vehicleid][vLlave], InfoObjeto[Bonnet][NombreObjeto]);
		Log("Registros/MaleterosU.log", string);
		VehMaleteroPlayer[playerid] = 0;
		ActualizarVehiculo(vehicleid);
	} else return _Mensaje(playerid, 0, "9", "Tienes ambas manos ocupadas.");
	return 1;
}
funcion G_Maletero(playerid, vehicleid, mano)
{
	update_Manos(playerid);
	if(mano == 1)
	{
		if(user[playerid][jm_Derecha] == 0) return _Mensaje(playerid, 0, "9", "No tienes nada en tu mano derecha.");
		new Mano = user[playerid][jm_Derecha], Cant = user[playerid][jm_DerechaCant], string[128], BonnetLibre;
		if(InfoObjeto[Mano][IDArma] > 0) //- Si es arma
		{
			if(IntentoChitearBalas(playerid)) return 1;
			Cant = user[playerid][jm_DerechaCant];
			RemovePlayerWeapon(playerid, InfoObjeto[Mano][IDArma]);
		}
		for(new x = 0; x < InfoVehiculo[vehicleid][vMaxMaletero]; x++)
		{
			if(InfoVehiculo[vehicleid][vMaletero][x] == 0)
			{
				if(user[playerid][jm_Derecha] == 131) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
				InfoVehiculo[vehicleid][vMaletero][x] = Mano;
				InfoVehiculo[vehicleid][vMaleteroCantidad][x] = Cant;
				RemovePlayerAttachedObject(playerid, 6);
				user[playerid][jm_Derecha] = 0;
				user[playerid][jm_DerechaCant] = 0;
				format(string, sizeof(string), "ha guardado en el maletero un(a) %s del vehículo %s.", InfoObjeto[Mano][NombreObjeto], nombre_vehiculo[InfoVehiculo[vehicleid][vModelo] - 400]);
				AccionesRol(playerid, 0, string);
				format(string, sizeof string, "%s ha guardado en el maletero (ID VEH %d) un(a) %s.", NombreRJugador(playerid), InfoVehiculo[vehicleid][vLlave], InfoObjeto[Mano][NombreObjeto]);
				Log("Registros/MaleterosU.log", string);
				BonnetLibre = 1;
				VehMaleteroPlayer[playerid] = 0;
				ActualizarVehiculo(vehicleid);
				return 1;
			}
		}
		if(BonnetLibre == 0) return _Mensaje(playerid, 0, "9", "Todas las ranuras del maletero están ocupadas.");
	}
	else if(mano == 2)
	{
		if(user[playerid][jm_Izquierda] == 0) return _Mensaje(playerid, 0, "9", "No tienes nada en tu mano izquierda.");
		new Mano = user[playerid][jm_Izquierda], Cant = user[playerid][jm_IzquierdaCant], string[128], BonnetLibre;
		for(new x = 0; x < InfoVehiculo[vehicleid][vMaxMaletero]; x++)
		{
			if(InfoVehiculo[vehicleid][vMaletero][x] == 0)
			{
				if(user[playerid][jm_Izquierda] == 131) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
				InfoVehiculo[vehicleid][vMaletero][x] = Mano;
				InfoVehiculo[vehicleid][vMaleteroCantidad][x] = Cant;
				RemovePlayerAttachedObject(playerid, 7);
				user[playerid][jm_Izquierda] = 0;
				user[playerid][jm_IzquierdaCant] = 0;
				format(string, sizeof(string), "ha guardado en el maletero un(a) %s del vehículo %s.", InfoObjeto[Mano][NombreObjeto], nombre_vehiculo[InfoVehiculo[vehicleid][vModelo] - 400]);
				AccionesRol(playerid, 0, string);
				format(string, sizeof string, "%s ha guardado en el maletero (ID VEH %d) un(a) %s.", NombreRJugador(playerid), InfoVehiculo[vehicleid][vLlave], InfoObjeto[Mano][NombreObjeto]);
				Log("Registros/MaleterosU.log", string);
				BonnetLibre = 1;
				VehMaleteroPlayer[playerid] = 0;
				ActualizarVehiculo(vehicleid);
				return 1;
			}
		}
		if(BonnetLibre == 0) return _Mensaje(playerid, 0, "9", "Todas las ranuras del maletero están ocupadas.");
	}
	return 1;
}
//
funcion ver_MaleteroF(playerid, vehicleid)
{
	update_Manos(playerid);
	new dialog[1024], string[128];
	for(new i = 0; i < 12; i++)
	{
		new Bonnet = InfoFacVeh[vehicleid][vMaletero][i];
		if(Bonnet == 0) format(string, sizeof(string), "\n{b0b0b0}Vacío");
		else format(string, sizeof(string), "\n{FFFFFF}%s [%d]", InfoObjeto[Bonnet][NombreObjeto], InfoFacVeh[vehicleid][vMaleteroCantidad][i]);
		strcat(dialog, string);
	}
	format(string, sizeof(string), "\n{ffffff}-----");
	strcat(dialog, string);
	if(user[playerid][jm_Derecha] == 0) format(string, sizeof(string), "\n{b0b0b0}M. Derecha: vacía");
	else format(string, sizeof(string), "\n{FFFFFF}M. Derecha: %s [%d]", InfoObjeto[user[playerid][jm_Derecha]][NombreObjeto], user[playerid][jm_DerechaCant]);
	strcat(dialog, string);
	if(user[playerid][jm_Izquierda] == 0) format(string, sizeof(string), "\n{b0b0b0}M. Izquierda: vacía");
	else format(string, sizeof(string), "\n{FFFFFF}M. Izquierda: %s [%d]", InfoObjeto[user[playerid][jm_Izquierda]][NombreObjeto], user[playerid][jm_IzquierdaCant]);
	strcat(dialog, string);
	Dialog(playerid, D_MENUMALETEROF, DIALOG_STYLE_LIST, "{D6E1EB}Maletero", dialog, "Seleccionar", "Cancelar");
	return 1;
}
funcion S_MaleteroF(playerid, vehicleid, id)
{
	update_Manos(playerid);
	new string[128];
	new Bonnet = InfoFacVeh[vehicleid][vMaletero][id], Cant = InfoFacVeh[vehicleid][vMaleteroCantidad][id];
	if(Bonnet == 0) return _Mensaje(playerid, 0, "1", "Ésta ranura se encuentra vacía.");
	if(Bonnet == 131)
	{
		if(user[playerid][jm_Derecha] == 0 && user[playerid][jm_Izquierda] == 0)
		{
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
		} else return _Mensaje(playerid, 0, "9", "Debes tener las manos vacías.");
	}
	if(user[playerid][jm_Derecha] == 0)
	{
		if(InfoObjeto[Bonnet][IDArma] > 0)
		{
			new arma = InfoObjeto[Bonnet][IDArma], municion = Cant;
			if(municion > 0) { _GiveWeapon(playerid, arma, municion); }
		}
		user[playerid][jm_Derecha] = Bonnet;
		user[playerid][jm_DerechaCant] = Cant;
		PonerObjeto(playerid, 1, Bonnet);
		InfoFacVeh[vehicleid][vMaletero][id] = 0;
		InfoFacVeh[vehicleid][vMaleteroCantidad][id] = 0;
		format(string, sizeof(string), "Sacaste del maletero un(a) %s.", InfoObjeto[Bonnet][NombreObjeto]);
		_Mensaje(playerid, 4, "A7CE00", string);
		VehMaleteroPlayer[playerid] = 0;
		ActualizarVehFac(vehicleid);
		format(string, sizeof string, "%s ha sacado del maletero (ID VEH %d) un(a) %s.", NombreRJugador(playerid), vehicleid, InfoObjeto[Bonnet][NombreObjeto]);
		Log("Registros/MaleterosFac.log", string);
		return 1;
	}
	else if(user[playerid][jm_Izquierda] == 0)
	{
		user[playerid][jm_Izquierda] = Bonnet;
		user[playerid][jm_IzquierdaCant] = Cant;
		PonerObjeto(playerid, 2, Bonnet);
		InfoFacVeh[vehicleid][vMaletero][id] = 0;
		InfoFacVeh[vehicleid][vMaleteroCantidad][id] = 0;
		format(string, sizeof(string), "Sacaste del maletero un(a) %s.", InfoObjeto[Bonnet][NombreObjeto]);
		_Mensaje(playerid, 4, "A7CE00", string);
		VehMaleteroPlayer[playerid] = 0;
		ActualizarVehFac(vehicleid);
		format(string, sizeof string, "%s ha sacado del maletero (ID VEH %d) un(a) %s.", NombreRJugador(playerid), vehicleid, InfoObjeto[Bonnet][NombreObjeto]);
		Log("Registros/MaleterosFac.log", string);
	} else return _Mensaje(playerid, 0, "9", "Tienes ambas manos ocupadas.");
	return 1;
}
funcion G_MaleteroF(playerid, vehicleid, mano)
{
	update_Manos(playerid);
	if(mano == 1)
	{
		if(user[playerid][jm_Derecha] == 0) return _Mensaje(playerid, 0, "9", "No tienes nada en tu mano derecha.");
		new Mano = user[playerid][jm_Derecha], Cant = user[playerid][jm_DerechaCant], string[128],BonnetLibre;
		if(InfoObjeto[Mano][IDArma] > 0) //- Si es arma
		{
			if(IntentoChitearBalas(playerid)) return 1;
			Cant = user[playerid][jm_DerechaCant];
			RemovePlayerWeapon(playerid, InfoObjeto[Mano][IDArma]);
		}
		for(new x = 0; x < 12; x++)
		{
			if(InfoFacVeh[vehicleid][vMaletero][x] == 0)
			{
				if(user[playerid][jm_Derecha] == 131) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
				InfoFacVeh[vehicleid][vMaletero][x] = Mano;
				InfoFacVeh[vehicleid][vMaleteroCantidad][x] = Cant;
				RemovePlayerAttachedObject(playerid, 6);
				user[playerid][jm_Derecha] = 0;
				user[playerid][jm_DerechaCant] = 0;
				format(string, sizeof(string), "Guardaste en el maletero un(a) %s.", InfoObjeto[Mano][NombreObjeto]);
				_Mensaje(playerid, 4, "A7CE00", string);
				format(string, sizeof string, "%s ha guardado en el maletero (ID VEH %d) un(a) %s.", NombreRJugador(playerid), vehicleid, InfoObjeto[Mano][NombreObjeto]);
				Log("Registros/MaleterosFac.log", string);
				BonnetLibre = 1;
				VehMaleteroPlayer[playerid] = 0;
				ActualizarVehFac(vehicleid);
				return 1;
			}
		}
		if(BonnetLibre == 0) return _Mensaje(playerid, 0, "9", "Todas las ranuras del maletero están ocupadas.");
	}
	else if(mano == 2)
	{
		if(user[playerid][jm_Izquierda] == 0) return _Mensaje(playerid, 0, "9", "No tienes nada en tu mano izquierda.");
		new Mano = user[playerid][jm_Izquierda], Cant = user[playerid][jm_IzquierdaCant], string[128], BonnetLibre;
		for(new x = 0; x < 12; x++)
		{
			if(InfoFacVeh[vehicleid][vMaletero][x] == 0)
			{
				if(user[playerid][jm_Izquierda] == 131) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
				InfoFacVeh[vehicleid][vMaletero][x] = Mano;
				InfoFacVeh[vehicleid][vMaleteroCantidad][x] = Cant;
				RemovePlayerAttachedObject(playerid, 7);
				user[playerid][jm_Izquierda] = 0;
				user[playerid][jm_IzquierdaCant] = 0;
				format(string, sizeof(string), "Guardaste en el maletero un(a) %s.", InfoObjeto[Mano][NombreObjeto]);
				_Mensaje(playerid, 4, "A7CE00", string);
				format(string, sizeof string, "%s ha guardado en el maletero (ID VEH %d) un(a) %s.", NombreRJugador(playerid), vehicleid, InfoObjeto[Mano][NombreObjeto]);
				Log("Registros/MaleterosFac.log", string);
				BonnetLibre = 1;
				VehMaleteroPlayer[playerid] = 0;
				ActualizarVehFac(vehicleid);
				return 1;
			}
		}
		if(BonnetLibre == 0) return _Mensaje(playerid, 0, "9", "Todas las ranuras del maletero están ocupadas.");
	}
	return 1;
}
//
funcion _Inventario(playerid)
{
	update_Manos(playerid);
	new dialog[1024], string[128];
	for(new i = 0; i < 10; i++)
	{
		new Bol = user[playerid][jBolsillo][i];
		if(Bol == 0) format(string, sizeof(string), "\n{b0b0b0}Vacío");
		else format(string, sizeof(string), "\n{FFFFFF}%s [%d]", InfoObjeto[Bol][NombreObjeto], user[playerid][jBolsilloCant][i]);
		strcat(dialog, string);
	}
	format(string, sizeof(string), "\n{ffffff}-----");
	strcat(dialog, string);
	if(user[playerid][jm_Derecha] == 0) format(string, sizeof(string), "\n{b0b0b0}M. Derecha: vacía");
	else format(string, sizeof(string), "\n{FFFFFF}M. Derecha: %s [%d]", InfoObjeto[user[playerid][jm_Derecha]][NombreObjeto], user[playerid][jm_DerechaCant]);
	strcat(dialog, string);
	if(user[playerid][jm_Izquierda] == 0) format(string, sizeof(string), "\n{b0b0b0}M. Izquierda: vacía");
	else format(string, sizeof(string), "\n{FFFFFF}M. Izquierda: %s [%d]", InfoObjeto[user[playerid][jm_Izquierda]][NombreObjeto], user[playerid][jm_IzquierdaCant]);
	strcat(dialog, string);
	Dialog(playerid, D_INVENTARIO, DIALOG_STYLE_LIST, "{D6E1EB}Inventario", dialog, "Seleccionar", "Cancelar");
	return 1;
}
funcion R_Inventario(playerid, playerid2)
{
	if(IsPlayerConnected(playerid) && IsPlayerConnected(playerid2))
	{
		update_Manos(playerid2);
		new string[300], DialogStatus[3000];
		for(new i = 0; i < 10; i++)
		{
			new Bol = user[playerid2][jBolsillo][i];
			if(Bol == 0) format(string, sizeof(string), "\n{b0b0b0}Vacío");
			else format(string, sizeof(string), "\n{FFFFFF} %s [%d]", InfoObjeto[Bol][NombreObjeto], user[playerid2][jBolsilloCant][i]);
			strcat(DialogStatus, string);
		}
		if(user[playerid2][jm_Derecha] == 0) format(string, sizeof(string), "\n\n{b0b0b0}M. Derecha: vacía");
		else format(string, sizeof(string), "\n\n{FFFFFF}M. Derecha: %s [%d]", InfoObjeto[user[playerid2][jm_Derecha]][NombreObjeto], user[playerid2][jm_DerechaCant]);
		strcat(DialogStatus, string);
		if(user[playerid2][jm_Izquierda] == 0) format(string, sizeof(string), "\n{b0b0b0}M. Izquierda: vacía");
		else format(string, sizeof(string), "\n{FFFFFF}M. Izquierda: %s [%d]", InfoObjeto[user[playerid2][jm_Izquierda]][NombreObjeto], user[playerid2][jm_IzquierdaCant]);
		strcat(DialogStatus, string);
		format(string, sizeof(string), "\n\n{ffffff}Dinero: {00c200}%d\n", ComprobarDineroJ(playerid2));
		strcat(DialogStatus, string);
		Dialog(playerid, D_INVALIDO, DIALOG_STYLE_MSGBOX, "{D6E1EB}Inventario del jugador", DialogStatus, "Cerrar", "");
	}
	return 1;
}
funcion H_Inventario(playerid, playerid2)
{
	if(IsPlayerConnected(playerid) && IsPlayerConnected(playerid2))
	{
		update_Manos(playerid2);
		new string[300], DialogStatus[3000];
		for(new i = 0; i < 10; i++)
		{
			new Bol = user[playerid2][jBolsillo][i];
			if(Bol == 0) format(string, sizeof(string), "\n{b0b0b0}Vacío");
			else format(string, sizeof(string), "\n{FFFFFF} %s [%d]", InfoObjeto[Bol][NombreObjeto], user[playerid2][jBolsilloCant][i]);
			strcat(DialogStatus, string);
		}
		Dialog(playerid, D_INVENTARIO, DIALOG_STYLE_LIST, "{D6E1EB}Inventario del jugador", DialogStatus, "Robar", "Cancelar");
	}
	return 1;
}
//
funcion ver_Cinturon(playerid, playerid2)
{
	update_Manos(playerid);
	if(IsPlayerConnected(playerid) && IsPlayerConnected(playerid2))
	{
		new cinturon[1024], string[128];
		for(new i = 0; i < 6; i++)
		{
			new Bol = user[playerid2][jCinturon][i];
			if(Bol == 0) format(string, sizeof(string), "\n{b0b0b0}Vacío");
			else format(string, sizeof(string), "\n{FFFFFF}%s [%d]", InfoObjeto[Bol][NombreObjeto], user[playerid2][jCinturonCant][i]);
			strcat(cinturon, string);
		}
		Dialog(playerid, D_CINTURON, DIALOG_STYLE_LIST, "{D6E1EB}Cinturón táctico", cinturon, "Seleccionar", "Cancelar");
	}
	return 1;
}
funcion S_Cinturon(playerid, id)
{
	update_Manos(playerid);
	new Bol = user[playerid][jCinturon][id], Cant = user[playerid][jCinturonCant][id], string[128];
	if(Bol == 0) return 1;
	if(user[playerid][jm_Derecha] == 0)
	{
		if(InfoObjeto[Bol][IDArma] > 0)
		{
			new arma = InfoObjeto[Bol][IDArma], municion = Cant;
			if(municion > 0) { _GiveWeapon(playerid, arma, municion); }
		}
		user[playerid][jm_Derecha] = Bol;
		user[playerid][jm_DerechaCant] = Cant;
		PonerObjeto(playerid, 1, Bol);
		user[playerid][jCinturon][id] = 0;
		user[playerid][jCinturonCant][id] = 0;
		format(string, sizeof(string), "Sacaste del cinturón táctico un(a) %s.", InfoObjeto[Bol][NombreObjeto]);
		_Mensaje(playerid, 4, "A7CE00", string);
		return 1;
	}
	else if(user[playerid][jm_Izquierda] == 0)
	{
		user[playerid][jm_Izquierda] = Bol;
		user[playerid][jm_IzquierdaCant] = Cant;
		PonerObjeto(playerid, 2, Bol);
		user[playerid][jCinturon][id] = 0;
		user[playerid][jCinturonCant][id] = 0;
		format(string, sizeof(string), "Sacaste del cinturón táctico un(a) %s.", InfoObjeto[Bol][NombreObjeto]);
		_Mensaje(playerid, 4, "A7CE00", string);
	} else return _Mensaje(playerid, 0, "9", "Tus manos están ocupadas.");
	return 1;
}
funcion G_Cinturon(playerid, mano)
{
	update_Manos(playerid);
	if(mano == 1)
	{
		if(user[playerid][jm_Derecha] == 0) return _Mensaje(playerid, 0, "9", "No tienes un objeto en tu mano derecha.");
		new Mano = user[playerid][jm_Derecha], Cant = user[playerid][jm_DerechaCant], string[128], BolsilloLibre;
		if(InfoObjeto[Mano][Guardable] == 2 || InfoObjeto[Mano][Guardable] == 3) return _Mensaje(playerid, 0, "9", "Este objeto es demasiado grande.");
		for(new x = 0; x < 6; x++)
		{
			if(user[playerid][jCinturon][x] == 0)
			{
				user[playerid][jCinturon][x] = Mano;
				user[playerid][jCinturonCant][x] = Cant;
				RemovePlayerAttachedObject(playerid, 6);
				ResetPlayerWeapons(playerid);
				user[playerid][jm_Derecha] = 0;
				user[playerid][jm_DerechaCant] = 0;
				format(string, sizeof(string), "Guardaste en el cinturón táctico un(a) %s.", InfoObjeto[Mano][NombreObjeto]);
				_Mensaje(playerid, 4, "A7CE00", string);
				BolsilloLibre = 1;
				return 1;
			}
		}
		if(BolsilloLibre == 0) return _Mensaje(playerid, 0, "9", "No tienes más huecos en tu cinturón.");
	}
	else if(mano == 2)
	{
		if(user[playerid][jm_Izquierda] == 0) return _Mensaje(playerid, 0, "9", "No tienes un objeto en tu mano izquierda.");
		new Mano = user[playerid][jm_Izquierda], Cant = user[playerid][jm_IzquierdaCant], string[128], BolsilloLibre;
		if(InfoObjeto[Mano][Guardable] == 2 || InfoObjeto[Mano][Guardable] == 3) return _Mensaje(playerid, 0, "9", "Este objeto es demasiado grande.");
		for(new x = 0; x < 6; x++)
		{
			if(user[playerid][jCinturon][x] == 0)
			{
				user[playerid][jCinturon][x] = Mano;
				user[playerid][jCinturonCant][x] = Cant;
				RemovePlayerAttachedObject(playerid, 7);
				user[playerid][jm_Izquierda] = 0;
				user[playerid][jm_IzquierdaCant] = 0;
				format(string, sizeof(string), "Guardaste en el cinturón táctico un(a) %s.", InfoObjeto[Mano][NombreObjeto]);
				_Mensaje(playerid, 4, "A7CE00", string);
				BolsilloLibre = 1;
				return 1;
			}
		}
		if(BolsilloLibre == 0) return _Mensaje(playerid, 0, "9", "No tienes más huecos en tu cinturón.");
	}
	return 1;
}
//
funcion RobarBol(playerid, jugador, id)
{
	update_Manos(playerid);
	if(user[playerid][jEncarcelado] != 0) return _Mensaje(playerid, 0, "213", "No puedes usar esto mientras estás en prisión.");
	new Bol = user[jugador][jBolsillo][id], Cant = user[jugador][jBolsilloCant][id], string[128];
	if(Bol == 0) return 1;
	if(user[playerid][jm_Derecha] == 0)
	{
		if(InfoObjeto[Bol][IDArma] > 0)
		{
			new arma = InfoObjeto[Bol][IDArma], municion = Cant;
			if(municion > 0) { _GiveWeapon(playerid, arma, municion); }
		}
		user[playerid][jm_Derecha] = Bol;
		user[playerid][jm_DerechaCant] = Cant;
		PonerObjeto(playerid, 1, Bol);
		user[jugador][jBolsillo][id] = 0;
		user[jugador][jBolsilloCant][id] = 0;
		format(string, sizeof(string), "Cogiste de los bolsillos de %s un(a) %s.", NombreJugador(jugador), InfoObjeto[Bol][NombreObjeto]);
		_Mensaje(playerid, 4, "A7CE00", string);
		idrobado[playerid] = -1;
		return 1;
	}
	else if(user[playerid][jm_Izquierda] == 0)
	{
		user[playerid][jm_Izquierda] = Bol;
		user[playerid][jm_IzquierdaCant] = Cant;
		PonerObjeto(playerid, 2, Bol);
		user[jugador][jBolsillo][id] = 0;
		user[jugador][jBolsilloCant][id] = 0;
		format(string, sizeof(string), "Cogiste de los bolsillos de %s un(a) %s.", NombreJugador(jugador), InfoObjeto[Bol][NombreObjeto]);
		_Mensaje(playerid, 4, "A7CE00", string);
		idrobado[playerid] = -1;
	} else return _Mensaje(playerid, 0, "9", "Tus manos están ocupadas.");
	return 1;
}
funcion S_Bol(playerid, id)
{
	update_Manos(playerid);
	new Bol = user[playerid][jBolsillo][id], Cant = user[playerid][jBolsilloCant][id], string[128];
	if(Bol == 0) return 1;
	if(user[playerid][jm_Derecha] == 0)
	{
		if(InfoObjeto[Bol][IDArma] > 0)
		{
			new arma = InfoObjeto[Bol][IDArma], municion = Cant;
			if(municion > 0) { _GiveWeapon(playerid, arma, municion); }
		}
		user[playerid][jm_Derecha] = Bol;
		user[playerid][jm_DerechaCant] = Cant;
		PonerObjeto(playerid, 1, Bol);
		user[playerid][jBolsillo][id] = 0;
		user[playerid][jBolsilloCant][id] = 0;
		format(string, sizeof(string), "Sacaste de tus bolsillos un(a) %s.", InfoObjeto[Bol][NombreObjeto]);
		_Mensaje(playerid, 4, "A7CE00", string);
		return 1;
	}
	else if(user[playerid][jm_Izquierda] == 0)
	{
		user[playerid][jm_Izquierda] = Bol;
		user[playerid][jm_IzquierdaCant] = Cant;
		PonerObjeto(playerid, 2, Bol);
		user[playerid][jBolsillo][id] = 0;
		user[playerid][jBolsilloCant][id] = 0;
		format(string, sizeof(string), "Sacaste de tus bolsillos un(a) %s.", InfoObjeto[Bol][NombreObjeto]);
		_Mensaje(playerid, 4, "A7CE00", string);
	} else return _Mensaje(playerid, 0, "9", "Tus manos están ocupadas.");
	return 1;
}
funcion G_Bol(playerid, mano)
{
	if (GetPVarInt(playerid, "EnCrack") == 1) return _Mensaje(playerid, 0, "12", "No puedes usar este comando mientras estás herido.");
	update_Manos(playerid);
	if(mano == 1)
	{
		if(user[playerid][jm_Derecha] == 0) return _Mensaje(playerid, 0, "9", "No tienes un objeto en tu mano derecha.");
		new Mano = user[playerid][jm_Derecha], Cant = user[playerid][jm_DerechaCant], string[128], BolsilloLibre;
		if(InfoObjeto[Mano][Guardable] == 2 || InfoObjeto[Mano][Guardable] == 3) return _Mensaje(playerid, 0, "9", "Este objeto es demasiado grande.");
		for(new x = 0; x < 10; x++)
		{
			if(user[playerid][jBolsillo][x] == 0)
			{
				user[playerid][jBolsillo][x] = Mano;
				user[playerid][jBolsilloCant][x] = Cant;
				RemovePlayerAttachedObject(playerid, 6);
				ResetPlayerWeapons(playerid);
				user[playerid][jm_Derecha] = 0;
				user[playerid][jm_DerechaCant] = 0;
				format(string, sizeof(string), "Guardaste en tus bolsillos un(a) %s.", InfoObjeto[Mano][NombreObjeto]);
				_Mensaje(playerid, 4, "A7CE00", string);
				BolsilloLibre = 1;
				return 1;
			}
		}
		if(BolsilloLibre == 0) return _Mensaje(playerid, 0, "9", "No tienes espacio en tus bolsillos.");
	}
	else if(mano == 2)
	{
		if(user[playerid][jm_Izquierda] == 0) return _Mensaje(playerid, 0, "9", "No tienes un objeto en tu mano izquierda.");
		new Mano = user[playerid][jm_Izquierda], Cant = user[playerid][jm_IzquierdaCant], string[128], BolsilloLibre;
		if(InfoObjeto[Mano][Guardable] == 2 || InfoObjeto[Mano][Guardable] == 3) return _Mensaje(playerid, 0, "9", "Este objeto es demasiado grande.");
		for(new x = 0; x < 10; x++)
		{
			if(user[playerid][jBolsillo][x] == 0)
			{
				user[playerid][jBolsillo][x] = Mano;
				user[playerid][jBolsilloCant][x] = Cant;
				RemovePlayerAttachedObject(playerid, 7);
				user[playerid][jm_Izquierda] = 0;
				user[playerid][jm_IzquierdaCant] = 0;
				format(string, sizeof(string), "Guardaste en tus bolsillos un(a) %s.", InfoObjeto[Mano][NombreObjeto]);
				_Mensaje(playerid, 4, "A7CE00", string);
				BolsilloLibre = 1;
				return 1;
			}
		}
		if(BolsilloLibre == 0) return _Mensaje(playerid, 0, "9", "No tienes espacio en tus bolsillos.");
	}
	return 1;
}
funcion C_Mano(playerid)
{
	update_Manos(playerid);
	if(user[playerid][jm_Derecha] == 0 && user[playerid][jm_Izquierda] == 0) { _Mensaje(playerid, 0, "9", "No tienes nada en ninguna mano."); return 1; }
	new ManoDer = user[playerid][jm_Derecha], ManoDerCant = user[playerid][jm_DerechaCant];
	new ManoIzq = user[playerid][jm_Izquierda], ManoIzqCant = user[playerid][jm_IzquierdaCant];
	if(ManoDer == 0)
	{
		RemovePlayerAttachedObject(playerid, 7);
		PonerObjeto(playerid, 1, ManoIzq);
		_Mensaje(playerid, 4, "F8D48C", "Has intercambiado los objetos de tus manos.");
		if(InfoObjeto[ManoIzq][IDArma] > 0) {
			_GiveWeapon(playerid, InfoObjeto[ManoIzq][IDArma], ManoIzqCant);
		}
	}
	else if(ManoIzq == 0)
	{
		PonerObjeto(playerid, 2, ManoDer);
		ResetPlayerWeapons(playerid);
		RemovePlayerAttachedObject(playerid, 6);
		_Mensaje(playerid, 4, "F8D48C", "Has intercambiado los objetos de tus manos.");
	}
	else
	{
		ResetPlayerWeapons(playerid);
		PonerObjeto(playerid, 1, ManoIzq);
		PonerObjeto(playerid, 2, ManoDer);
		_Mensaje(playerid, 4, "F8D48C", "Has intercambiado los objetos de tus manos.");
		if(InfoObjeto[ManoIzq][IDArma] > 0) { _GiveWeapon(playerid, InfoObjeto[ManoIzq][IDArma], ManoIzqCant); }
	}
	user[playerid][jm_DerechaCant] = ManoIzqCant, user[playerid][jm_Derecha] = ManoIzq;
	user[playerid][jm_IzquierdaCant] = ManoDerCant, user[playerid][jm_Izquierda] = ManoDer;
	return 1;
}
//
public OnPlayerPressButton(playerid, buttonid)
{
	if(buttonid == BotonPuertaLSPDINT)
	{
		if(!Es_Faccion(playerid, 1))
		{
			_Mensaje(playerid, 0, "6", "Tu no tienes acceso a abrir esta puerta.");
			return 1;
		}
		MoveDynamicObject(PuertaLSPDINT, 228.2162, 153.5847, 1002.0262, 0.8);
		SetTimer("CerrarPuertaLSPDINT", 5000, 0);
	}
	else if(buttonid == BotonPuertaLSPDINT1)
	{
		if(!Es_Faccion(playerid, 1))
		{
			_Mensaje(playerid, 0, "6", "Tu no tienes acceso a abrir esta puerta.");
			return 1;
		}
		MoveDynamicObject(PuertaLSPDINT, 228.2162, 153.5847, 1002.0262, 0.8);
		SetTimer("CerrarPuertaLSPDINT", 5000, 0);
	}
	else if(buttonid == BotonPuertaSasd)
	{
		if(!Es_Faccion(playerid, 1))
		{
			_Mensaje(playerid, 0, "6", "Tu no tienes acceso a abrir esta puerta.");
			return 1;
		}
		MoveDynamicObject(PuertaSasd, -448.1926, 693.9017, 3851.9309, 0.8);
		SetTimer("CerrarPuertaSasd", 5000, 0);
	}
	else if(buttonid == BotonPuertaSasd1)
	{
		if(!Es_Faccion(playerid, 1))
		{
			_Mensaje(playerid, 0, "6", "Tu no tienes acceso a abrir esta puerta.");
			return 1;
		}
		MoveDynamicObject(PuertaSasd, -448.1926, 693.9017, 3851.9309, 0.8);
		SetTimer("CerrarPuertaSasd", 5000, 0);
	}
	return false;
}

funcion CerrarPuertaLSPDINT(playerid) return MoveDynamicObject(PuertaLSPDINT, 228.25906, 152.26401, 1002.02618, 0.8);
funcion CerrarPuertaSasd(playerid) return MoveDynamicObject(PuertaSasd, -448.1926, 692.63770, 3851.9309, 0.8);

funcion EliminarHerido(playerid) {
    DeletePVar(playerid, "EnCrack");
    DeletePVar(playerid, "Llamada_LSED");
    DeletePVar(playerid, "Esta_Herido");
	DeletePVar(playerid, "Necesita_LSED");
	return 1;
}

public OnPlayerText(playerid, text[])
{
	new string[256];
	if (!JugadorEnSeccion {playerid}) return 0;
	if (user[playerid][jEncarcelado] == 1) { _Mensaje(playerid, 4, "FFF000", "No puedes hablar ni colocar comandos en jail OOC."); return 0; }
	if (_2Entrevista[playerid] != INVALID_PLAYER_ID)
	{
		if (Es_Faccion(playerid, 3))
		{
			format(string, sizeof(string), "[SAN] Reportero %s: %s", NombreJugador(playerid), text);
			_MensajeSAN(0x00DC76FF, string);
		}
		else
		{
			format(string, sizeof(string), "[SAN] Invitado %s: %s", NombreJugador(playerid), text);
			_MensajeSAN(0x00A476FF, string);
		}
		return 0;
	}
	if ( _sanCall == playerid )
	{
		format(string, sizeof(string), "[SAN] Línea telefónica: %s", text);
		_MensajeSAN(0x00DC3AFF, string);
		return 0;
	}
	if(PersonaEnLlamada[playerid] != -1)
	{
		if(EnLlamada[playerid] == 2 || EnLlamada[playerid] == 3 || EnLlamada[playerid] == 912)
		{
			if(Altavoz[PersonaEnLlamada[playerid]] == 0)
			{
				if(EnLlamada[PersonaEnLlamada[playerid]] == 912) format(string, sizeof(string), "[Teléfono: 911]: %s", text);
				else format(string, sizeof(string), "[Teléfono: %d]: %s", user[playerid][jTelefono], text);
				_Mensaje(PersonaEnLlamada[playerid], 4, "FFF000", string);
			}
			else
			{
				if(EnLlamada[PersonaEnLlamada[playerid]] == 912) format(string, sizeof(string), "[T. Altavoz: 911]: %s", text);
				else format(string, sizeof(string), "[T. Altavoz: %d]: %s", user[playerid][jTelefono], text);
				ProxDetector(4.5, PersonaEnLlamada[playerid], string, 0xFFF000FF, 0xFFF000FF, 0xFFF000FF, 0xFFF000FF, 0xFFF000FF);
			}
			format(string, sizeof(string), "%s por teléfono: %s", NombreJugador(playerid), text);
			ProxDetector(8.0, playerid, string, C_FADE1, C_FADE2, C_FADE3, C_FADE4, C_FADE5);
		}
		return 0;
	}
	if (!IsPlayerInAnyVehicle(playerid))
	{
		Hablando(playerid, text);
		format(string, sizeof(string), "%s dice: %s", NombreJugador(playerid), text);
		ProxDetector(15.0, playerid, string, C_FADE1, C_FADE2, C_FADE3, C_FADE4, C_FADE5);
	}
	else
	{
		new carid = GetPlayerVehicleID(playerid);
		if (EnMotos_Bicis(carid) || EstaEnAvion(carid) || EstaEnBote(carid))
		{
			format(string, sizeof(string), "%s dice: %s", NombreJugador(playerid), text);
			ProxDetector(15.0, playerid, string, C_FADE1, C_FADE2, C_FADE3, C_FADE4, C_FADE5);
		}
		else
		{
			if (VehicleWindows[GetPlayerVehicleID(playerid)] == 0)
			{
				format(string, sizeof(string), "%s dice: %s", NombreJugador(playerid), text);
				ProxDetector(4.0, playerid, string, C_FADE1, C_FADE2, C_FADE3, C_FADE4, C_FADE5);
			}
			else
			{
				format(string, sizeof(string), "%s dice: %s", NombreJugador(playerid), text);
				ProxDetector(15.0, playerid, string, C_FADE1, C_FADE2, C_FADE3, C_FADE4, C_FADE5);
			}
		}
	} // fin charla ic
	return 0;
}

funcion Hablando(playerid, text[]) {
    if (GetPVarInt(playerid, "HaciendoMueble") == 1) return 1;
    if (GetPVarInt(playerid, "_heridoC") == 1) return 1;
    if (GetPVarInt(playerid, "Llamada_LSED") == 1) return 1;
    if (GetPVarInt(playerid, "EnEvento") == 1) return 1;
    if (GetPVarInt(playerid, "EnCrack") == 1) return 1;
    if (_Gomas[playerid] == 1 || Taseado[playerid] == 1) return 1;
	new anim = GetPlayerAnimationIndex(playerid);
    if (!IsPlayerInAnyVehicle(playerid)) {
        if (JugadorSentado[playerid] != 1) {
            if (!JugadorUsandoAnimacion[playerid]) {
                if (!B_Manos[playerid]) {
                    if ((anim != 1538 || anim != 1539 || anim != 1540 || anim != 1541 || anim != 1542)) {
                        ApplyAnimation(playerid, "PED", "IDLE_chat", 4.1, 7, 5, 1, 1, 1, 1);
                        SetTimerEx("FinHablar", strlen(text) * 300, false, "d", playerid);
                        return 1;
                    }
                }
            }
        }
    }
    return 1;
}

funcion FinHablar(playerid) {
    JugadorUsandoAnimacion[playerid] = 0;
    ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0, 1);
    return 1;
}

public OnPlayerCommandReceived(playerid, cmdtext[]) {
    printf("[cmd] [%s]: %s", NombreRJugador(playerid), cmdtext);
    if(!JugadorEnSeccion {playerid}) return _Mensaje(playerid, 0, "646", "No puedes utilizar comandos si no estás logeado en el servidor");
    if(GetPVarInt(playerid, "CargandoObjetos") == 1) {
        _Mensaje(playerid, 0, "647", "No puedes usar comandos, mientras esten cargando los objetos.");
        return 0;
    }
	if (user[playerid][jEncarcelado] == 1) {
		if(!strfind(cmdtext, "/w", true)){ }
		else if(!strfind(cmdtext, "/mp", true)){ }
		else if(!strfind(cmdtext, "/duda", true)){ }
		else if(!strfind(cmdtext, "/fam", true)){ }
		else if(!strfind(cmdtext, "/fac", true)){ }
		else if(!strfind(cmdtext, "/a", true)){ }
		else if(!strfind(cmdtext, "/liberar", true)){ }
		else
		{
			_Mensaje(playerid, 4, "FFF000", "No puedes hablar ni colocar comandos en jail OOC.");
			_Mensaje(playerid, 5, "0", "Sólo /mp - /duda");
			return 0;
		}
	}
    if(user[playerid][jAdmin] < 1) {
        if(strfind(cmdtext, ":", true) != -1) {
            new i_numcount, i_period, i_pos;
            while(cmdtext[i_pos]) {
                if('0' <= cmdtext[i_pos] <= '9') i_numcount++;
                else if(cmdtext[i_pos] == '.') i_period++;
                i_pos++;
            }
            if(i_numcount >= 8 && i_period >= 3) {
                new string[128];
                format(string, sizeof(string), "[SistemaAdmin]:{FFFFFF} (ID: %d) %s puede estar haciendo SPAM: '%s'.", playerid, NombreRJugador(playerid), cmdtext);
                MensajeAdmin(string);
                return 0;
            }
        }
    }
    if(EnServicioADM[playerid] == 0){
    new ComandoAtual[20], Parametro;
	ComandoAtual = strtok(cmdtext, Parametro);
	if(!strcmp(ComandoAtual, Comandos[playerid], true) && strlen(Comandos[playerid]))
	{
 		FloodComandos[playerid]++;
 		if(FloodComandos[playerid] == 12) {
		    _Mensaje(playerid, 4, "FF0000","[STAFF]:{ffffff} Prohibido el flood de comandos, llevas repetido 12 veces el mismo comando.");
		    _Mensaje(playerid, 4, "FF0000","[STAFF]:{ffffff} Escribe otro comando así se reinicia la secuencia o te kickeara el servidor.");
        } else if(FloodComandos[playerid] == 30) {
   			Comandos[playerid] = ("");
			FloodComandos[playerid] = 0;
			_Expulsar(playerid, 0, "Flood de comandos");
		}
   		return 1;
	}
	else
	{
		FloodComandos[playerid] = 0;
	    format(Comandos[playerid], 20, "%s", ComandoAtual);
	}
	}
    return 1;
}

public OnPlayerCommandPerformed(playerid, cmdtext[], success)
{
	if(!success)
	{
		_Mensaje(playerid, 4, "ADC3E7", "Error:{ffffff} Comando desconocido, escribe {ADC3E7}/ayuda{ffffff}.");
	}
	return 1;
}

stock _SVehiculo(jugador)
{
	ClearAnimations(jugador);
	new Float: slx,Float: sly,Float: slz;
	GetPlayerPos(jugador, slx, sly, slz);
	SetPlayerPos(jugador, slx, sly, slz);
	_Mensaje(jugador, 0, "1", "No tienes las llaves de este vehiculo.");
	return 1;
}
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	if(GetPVarInt(playerid, "EnCrack") == 1) SetPVarInt(playerid, "_Ejcet", 1);

	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	if(engine == VEHICLE_PARAMS_UNSET) switch(GetVehicleModel(vehicleid))
	{
		case 509, 481, 510: GasolinaInicialVeh[vehicleid] = 200, arr_Engine {vehicleid} = 1, SetVehicleParamsEx(vehicleid, VEHICLE_PARAMS_ON, lights, alarm, doors, bonnet, boot, objective), arr_Engine {vehicleid} = 1;
		default: SetVehicleParamsEx(vehicleid, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, alarm, doors, bonnet, boot, objective), arr_Engine {vehicleid} = 0;
	}

	Casco[playerid] = 0;
	if(GasolinaInicialVeh[vehicleid] <= 0)
	{
		EncenderVehiculo(vehicleid, playerid);
	}
	if(!ispassenger)
	{
		if(cocheocupado(vehicleid))
		{
			ClearAnimations(playerid);
			_Mensaje(playerid, 0, "1", "No esta permitido el CJ, en este servidor.");
			TogglePlayerControllable(playerid, false);
			SetTimerEx("Descongelar", 3000, 0, "i", playerid);
		}

		//facciones
		if(LSPD_Veh(vehicleid))
		{
			if(Es_Faccion(playerid, 1)) {
				if(user[playerid][jDivision] != 1) return _SVehiculo(playerid);
			} else return _SVehiculo(playerid);
        }
		else if(SASD_Veh(vehicleid))
		{
			if(Es_Faccion(playerid, 1)) {
				if(user[playerid][jDivision] != 2) return _SVehiculo(playerid);
			} else return _SVehiculo(playerid);
        }
		else if(SAN_Vehicle(vehicleid))
		{
			if(!Es_Faccion(playerid, 3)) return _SVehiculo(playerid);
		}
		else if(GOB_Vehicle(vehicleid))
		{
			if(!Es_Faccion(playerid, 4)) return _SVehiculo(playerid);
		}
		else if(LSED_Vehicle(vehicleid))
		{
			if(!Es_Faccion(playerid, 5)) return _SVehiculo(playerid);
		}

		//trabajos
		else if(Pescador_Vehicle(vehicleid))
		{
			if(!Es_job(playerid, 3)) return _SVehiculo(playerid);

			if(user[playerid][jHabilidad2][2] <= 2)
			{
				RemovePlayerFromVehicle(playerid);
				new Float: slx, Float: sly, Float: slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
				_Mensaje(playerid, 0, "124", "No tienes el nivel de habilidad (3).");
				return 1;

			}
        }
  		else if(Camionero_Vehicle(vehicleid))
		{
			if(!Es_job(playerid, 4)) return _SVehiculo(playerid);

			if(GetVehicleModel(vehicleid) == 413 || GetVehicleModel(vehicleid) == 456)
			{

				new string[256], contenido = _Contenido[vehicleid], texting[50];

				if(contenido == 1) format(texting, sizeof(texting), "productos {771BA9}de ropa");
				else if(contenido == 2) format(texting, sizeof(texting), "productos {2788FE}generales");
				else if(contenido == 3) format(texting, sizeof(texting), "productos {2788FE}electrónicos");
				else if(contenido == 4) format(texting, sizeof(texting), "productos {2788FE}de comida");
				else if(contenido == 5) format(texting, sizeof(texting), "{2788FE}mercancia");
				if(contenido != 0) { format(string, sizeof(string), "Vehiculo de camionero [%s-%d], contiene %s{ffffff}.", NombreVehiculo(vehicleid), vehicleid, texting), _Mensaje(playerid, 4, "FFFFFF",string); }

				if(_CamVeh[playerid] == INVALID_VEHICLE_ID) _Mensaje(playerid, 4, "A7CE00", "Puedes comenzar a trabajar escribiendo /camionero.");
				else if(_CamVeh[playerid] == vehicleid) _Mensaje(playerid, 4, "2788FE", "Este es tu vehiculo de camionero, llévalo al punto marcado en el radar.");
				else if(_CamVeh[playerid] != INVALID_VEHICLE_ID) { _Mensaje(playerid, 4, "2788FE", "[ERROR]{ffffff} Este vehiculo es de otro chófer, utiliza /borrarcarga."); }
            }
		}
		else if(Granjero_Vehicle(vehicleid))
		{
			if(!Es_job(playerid, 10)) return _SVehiculo(playerid);
		}


    }
	else if(!CercaDelVehiculo(playerid, vehicleid, 7.5) || VehSeguro[vehicleid] >= 1)// G-bugging fix
	{
		ClearAnimations(playerid);
	}
	return 1;
}

funcion cocheocupado(vehicleid) {
    for(new i; i < GetMaxPlayers(); i++)
    if(IsPlayerConnected(i) && IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == PLAYER_STATE_DRIVER) return 1;
    return 0;
}
// FLOATS --- CAMIONERO -- V.2.X BY COURIER 2022
new Float:X_Carga[3][3] =
{
	{1843.9279, -1863.0637, 13.4591}, //unity
	{1798.3921, -1441.8682, 13.3058}, //glen park
	{2092.6326, -1343.3174, 23.9050} //jefferson
};
new Float:A_Carga[3][3] =
{
	{2139.8669, -1207.1927, 23.9445}, //jefferson
	{1449.1597, -1149.7483, 23.8987}, //vinewood
	{486.9438, -1468.7220, 18.5618} //playa
};
new Float:B_Carga[3][3] =
{
	{2358.1895, -1472.5239, 23.7326},
	{1832.9298, -1403.4407, 13.3343},
	{1574.1155, -1286.5681, 17.3694}
};
new Float:C_Carga[3][3] =
{
	{788.4850, -1608.5558, 13.3503}, //playa
	{951.4890, -1366.0647, 13.2354}, //cnn
	{2400.4500, -1496.9219, 23.7326} //east
};
new Float:Ex_Carga[2][3] =
{
	{-2033.2224,-95.0304,35.5155},
	{2103.3979,2037.3856,11.1668}
};
stock lugar_(playerid, Float:x, Float:y, Float:z){
	TogglePlayerAllDynamicCPs(playerid, false);
	SetPlayerCheckpoint(playerid, x, y, z, 5);
	SetPVarFloat(playerid, "x23", x);
	SetPVarFloat(playerid, "x24", y);
	SetPVarFloat(playerid, "x25", z);
}

//Prox detector
ProxDetector(Float: f_Radius, playerid, string[], col1, col2, col3, col4, col5) {
    new Float: f_playerPos[3];
    GetPlayerPos(playerid, f_playerPos[0], f_playerPos[1], f_playerPos[2]);
    foreach(Player, i) {
        if(!BigEar[i]) {
            if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid)) {
                if(_enPos(i, f_Radius / 16, f_playerPos[0], f_playerPos[1], f_playerPos[2])) {
                    SendSplitMessage(i, col1, string);
                } else if(_enPos(i, f_Radius / 8, f_playerPos[0], f_playerPos[1], f_playerPos[2])) {
                    SendSplitMessage(i, col2, string);
                } else if(_enPos(i, f_Radius / 4, f_playerPos[0], f_playerPos[1], f_playerPos[2])) {
                    SendSplitMessage(i, col3, string);
                } else if(_enPos(i, f_Radius / 2, f_playerPos[0], f_playerPos[1], f_playerPos[2])) {
                    SendSplitMessage(i, col4, string);
                } else if(_enPos(i, f_Radius, f_playerPos[0], f_playerPos[1], f_playerPos[2])) {
                    SendSplitMessage(i, col5, string);
                }
            }
        } else Mensaje_(i, col1, string);
    }
    return 1;
}

funcion SendSplitMessage(playerid, color, final[]) {
    new buffer[MAX_SPLITLENGTH + 10];
    new len = strlen(final);
    if(len > MAX_SPLITLENGTH) {
        new times = (len / MAX_SPLITLENGTH);
        for(new i = 0; i < times + 1; i++) {
            strdel(buffer, 0, MAX_SPLITLENGTH + 5);
            if(len - (i * MAX_SPLITLENGTH) > MAX_SPLITLENGTH) {
                strmid(buffer, final, MAX_SPLITLENGTH * i, MAX_SPLITLENGTH * (i + 1));
                if(!i) format(buffer, sizeof(buffer), "%s ...", buffer);
                else format(buffer, sizeof(buffer), "... %s ...", buffer);
            } else {
                strmid(buffer, final, MAX_SPLITLENGTH * i, len);
                format(buffer, sizeof(buffer), "... %s", buffer);
            }
            Mensaje_(playerid, color, buffer);
        }
    } else {
        Mensaje_(playerid, color, final);
    }
}

public OnPlayerEnterDynamicCP(playerid, checkpointid) {
	new string[256];

	switch(GetPlayerVehicleSeat(playerid)) {
		case -1: {
			for(new cid = 0; cid != MAX_CASAS; cid++) {
				if(checkpointid == _casaCP[cid]) {
					if (InfoCasa[cid][cComprado] == 0) {
						format(string, sizeof(string), "~n~~n~~n~~g~Llave ~w~%d ~n~~g~En venta ~n~~g~Espacio: ~w~%s ~n~~g~Precio: ~w~%d",
						cid, _EspacioC(cid), InfoCasa[cid][cPrecio]);
						GameTextForPlayer(playerid, _text(string), 3000, 3);
					} else {
						if (InfoCasa[cid][cRentable] > 0) {
						    if (EnServicioADM[playerid] == 0) format(string, sizeof(string), "~n~~g~Llave ~w~%d ~n~~y~Rentable ~n~%s ~n~~g~Espacio: ~w~%s ~n~~g~Renta: ~w~%d ", cid, _EstadoC(cid,1), _EspacioC(cid), InfoCasa[cid][cRentaPrecio]);
						    else format(string, sizeof(string), "~n~~g~Llave ~w~%d ~n~~g~Dueño: ~w~%s ~n~~g~Espacio: ~w~%s", cid, InfoCasa[cid][cComprador], _EspacioC(cid));
							GameTextForPlayer(playerid, _text(string), 3000, 3);
				        } else {
							new location[MAX_ZONE_NAME];
							Get2DZone(location, MAX_ZONE_NAME, InfoCasa[cid][cExteriorX], InfoCasa[cid][cExteriorY], InfoCasa[cid][cExteriorZ]);

							if (EnServicioADM[playerid] == 0) format(string, sizeof(string), "~n~~n~~n~~g~Llave ~w~%d ~n~~p~%s ~n~%s ~n~~g~Espacio: ~w~%s", cid, location, _EstadoC(cid,1), _EspacioC(cid));
							else format(string, sizeof(string), "~n~~g~Llave ~w~%d ~n~~g~Dueño: ~w~%s ~n~~g~Espacio: ~w~%s", cid, InfoCasa[cid][cComprador], _EspacioC(cid));
							GameTextForPlayer(playerid, _text(string), 3000, 3);
						}
					}
					return 1;
				}
			}


		}
	    /*case 0: {
	    }*/
	}

	for(new gid = 0; gid != MAX_GARAJES; gid++)
	{
		if(checkpointid == _gajCP[gid])
		{
			format(string, sizeof(string), "~n~~n~~n~~b~~w~Garaje ~w~%d ~y~%d~n~%s ~n~~g~Espacio: ~w~%s", InfoGaraje[gid][gIDCasa], gid, _EstadoG(gid), _EspacioG(gid));
			GameTextForPlayer(playerid, _text(string), 3000, 3);
			return 1;
		}
	}

	return 1;
}

funcion _Encargo(playerid, n_id)
{
	DeletePVar(playerid, "Congelado");
	TogglePlayerControllable(playerid, 1);
	new vehiculo = GetPlayerVehicleID(playerid), tipo = GetPVarInt(playerid, "TipoCarga"), lugarex = random(sizeof(Ex_Carga)),
	lugarx = random(sizeof(X_Carga)), lugara = random(sizeof(A_Carga)), lugarb = random(sizeof(B_Carga)), lugarc = random(sizeof(C_Carga));
	_Contenido[vehiculo] = tipo;
	_CamVeh[playerid] = vehiculo;
	new location[MAX_ZONE_NAME], tipo2[40];
	switch (tipo) {
		case 1: {
		    tipo2 = "productos de ropa";
			lugar_(playerid, A_Carga[lugara][0], A_Carga[lugara][1], A_Carga[lugara][2]);
			SetPVarInt(playerid, "TeleportCamionero", 15);
			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TIPO_TELEPORTCAMIONERO);
		}
		case 2: {
		    tipo2 = "productos generales";
			lugar_(playerid, X_Carga[lugarx][0], X_Carga[lugarx][1], X_Carga[lugarx][2]);
			SetPVarInt(playerid, "TeleportCamionero", 15);
			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TIPO_TELEPORTCAMIONERO);
		}
		case 3: {
		    tipo2 = "productos electrónicos";
			lugar_(playerid, B_Carga[lugarb][0], B_Carga[lugarb][1], B_Carga[lugarb][2]);
			SetPVarInt(playerid, "TeleportCamionero", 15);
			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TIPO_TELEPORTCAMIONERO);
		}
		case 4: {
		    tipo2 = "productos de comida";
			lugar_(playerid, C_Carga[lugarc][0], C_Carga[lugarc][1], C_Carga[lugarc][2]);
			SetPVarInt(playerid, "TeleportCamionero", 15);
			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TIPO_TELEPORTCAMIONERO);
		}
		case 5: {
		    tipo2 = "mercancia grande";
			lugar_(playerid, Ex_Carga[lugarex][0], Ex_Carga[lugarex][1], Ex_Carga[lugarex][2]);
			SetPVarInt(playerid, "TeleportCamionero", 350);
			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TIPO_TELEPORTCAMIONERO);
		}
	}
	Get2DZone(location, MAX_ZONE_NAME, GetPVarFloat(playerid, "x23"), GetPVarFloat(playerid, "x24"), GetPVarFloat(playerid, "x25"));
	SetPVarInt(playerid, "EnCheckPoint", 5);
	new string[128];
	format(string, sizeof(string), "El vehiculo fue cargado con %s, llévalos a %s.", tipo2, location);
	_Mensaje(playerid, 4, "0D5B95", string);
	return 1;
}

En_camion(veh)
{
	new camions[] = {422, 428, 440, 482, 498, 499};
	for(new i = 0; i < sizeof(camions); i++) { if(GetVehicleModel(veh) == camions[i]) return 1; }
	return 0;
}

public OnPlayerEnterCheckpoint(playerid)
{
	PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
	new carid = GetPlayerVehicleID(playerid), vehicleid = GetPlayerVehicleID(playerid);
	if (GetPVarInt(playerid, "EnCheckPoint") == 1)
	{
		DeletePVar(playerid, "EnCheckPoint");
		_Mensaje(playerid, 5, "0", "Llegaste al destino marcado.");
		TogglePlayerAllDynamicCPs(playerid, true);
		DisablePlayerCheckpoint(playerid);
	}
	else if (GetPVarInt(playerid, "EnCheckPoint") == 2)
	{
		DeletePVar(playerid, "EnCheckPoint");
		DisablePlayerCheckpoint(playerid);
		TogglePlayerAllDynamicCPs(playerid, true);
		if (_Medic2Call[playerid] == 1)
		{
            _Medic2Call[playerid] = 0;
            _MedicAcept[playerid] = 999;
			_Mensaje(playerid, 4, "fcc1fd", "Llegaste al llamado de un médico.");
            return 1;
		}
		else if (_Bomb2Call[playerid] == 1)
		{
            _Bomb2Call[playerid] = 0;
            _BombAcept[playerid] = 999;
			_Mensaje(playerid, 4, "EF2F28", "Llegaste al llamado de un bombero.");
            return 1;
		}
	}
	else if (GetPVarInt(playerid, "EnCheckPoint") == 3) //repartos, tipo 1 empresas
	{
		if(!_enPos(playerid,12,-114.8255, -330.7507, 0.9912) && !_enPos(playerid,12,-183.9354, -277.5449, 1.0257) && !_enPos(playerid,12,65.1676, -273.5888, 1.1238)) return _Mensaje(playerid, 0, "126", "No estás en el lugar de mercancía.");
		if(!IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "151", "No estás dentro de un vehículo.");
		if(!En_camion(vehicleid))
		{
			TogglePlayerAllDynamicCPs(playerid, true);
			DeletePVar(playerid, "EnCheckPoint");
			DisablePlayerCheckpoint(playerid);
			if (r_negocio[playerid] != -1)
			{
				i_Negocio[r_negocio[playerid]][EnPedido] = 0;
				r_negocio[playerid] = -1;
			}
			_Mensaje(playerid, 4, "b0b0b0", "Este vehículo no tiene suficiente espacio, busca uno de la empresa.");
		    return 1;
		}
		DeletePVar(playerid, "EnCheckPoint");
		DisablePlayerCheckpoint(playerid);
		TogglePlayerControllable(playerid, 0);
		SetPVarInt(playerid, "Congelado", 1);
		r_vehiculo[playerid] = vehicleid;
		GameTextForPlayer(playerid,"~w~subiendo ~g~mercancia...",10000,3);
		SetTimerEx("_Encargo", 10000, false, "ii", playerid, r_negocio[playerid]);
	}
	else if (GetPVarInt(playerid, "EnCheckPoint") == 5)
	{
		DeletePVar(playerid, "EnCheckPoint");
		DisablePlayerCheckpoint(playerid);
		TogglePlayerAllDynamicCPs(playerid, true);
	}
	else if (GetPVarInt(playerid, "EnCheckPoint") == 6) //robo de coches
	{
		if(checkcoche[playerid] == 414)
		{

			if(!_enPos(playerid,10, 956.7439, -1530.1982, 13.3456)) return _Mensaje(playerid, 0, "126", "No estás en el lugar del pedido.");

			DeletePVar(playerid, "EnCheckPoint");
			DisablePlayerCheckpoint(playerid);
			TogglePlayerAllDynamicCPs(playerid, true);

			_Mensaje(playerid, 4, "b0b0b0", " Baja del vehículo y vete del lugar.");
			_Mensaje(playerid, 4, "b0b0b0", " Posees 10 segundos antes que la policía sea avisada.");

			SetTimerEx("_roboVeh", 10000, false, "ii", playerid, vehicleid);

		}
	}
	if (Pedido[playerid] == 2)
	{
        if(!_enPos(playerid,10,2315.2449, 33.6971, 27.3995)) return _Mensaje(playerid, 0, "126", "No estás en el lugar del pedido.");
        Pedido[playerid] = 0;
        if (RevisarDinero(playerid, 9000))
		{
            new objeto = 112;
           	if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
           	if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, objeto); user[playerid][jm_Derecha] = objeto, user[playerid][jm_DerechaCant] = 400;}
           	else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, objeto); user[playerid][jm_Izquierda] = objeto, user[playerid][jm_IzquierdaCant] = 400;}
            DarDineroGC(playerid, -9000);
            _Mensaje(playerid, 4, "b0b0b0", " Pagaste 9,000$ dólares por 400 gramos de crack.");
        	DisablePlayerCheckpoint(playerid);
        	TogglePlayerAllDynamicCPs(playerid, true);
        	new year, month, day;
			getdate(year, month, day);
			user[playerid][jTiempos][10] = day;
        }
        return 1;
    }
	else if (Pedido[playerid] == 3)
	{
        if(!_enPos(playerid,10,1281.0088, 305.0030, 19.5505)) return _Mensaje(playerid, 0, "126", "No estás en el lugar del pedido.");
        Pedido[playerid] = 0;
        if (RevisarDinero(playerid, 10000))
		{
            new objeto = 111;
           	if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
           	if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, objeto); user[playerid][jm_Derecha] = objeto, user[playerid][jm_DerechaCant] = 500;}
           	else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, objeto); user[playerid][jm_Izquierda] = objeto, user[playerid][jm_IzquierdaCant] = 500;}
            DarDineroGC(playerid, -10000);
            _Mensaje(playerid, 4, "b0b0b0", " Pagaste 10,000$ dólares por 500 gramos de cocaína.");
        	DisablePlayerCheckpoint(playerid);
        	TogglePlayerAllDynamicCPs(playerid, true);
        	new year, month, day;
			getdate(year, month, day);
			user[playerid][jTiempos][10] = day;
        }
        return 1;
    }
	else if (Pedido[playerid] == 4)
	{
        if(!_enPos(playerid,10,2195.8572, -1971.3330, 13.7833)) return _Mensaje(playerid, 0, "126", "No estás en el lugar del pedido.");
        Pedido[playerid] = 0;
    	if (RevisarDinero(playerid, 8000))
		{
            new objeto = 113;
           	if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
           	if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, objeto); user[playerid][jm_Derecha] = objeto, user[playerid][jm_DerechaCant] = 180;}
           	else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, objeto); user[playerid][jm_Izquierda] = objeto, user[playerid][jm_IzquierdaCant] = 180;}
            DarDineroGC(playerid, -8000);
            _Mensaje(playerid, 4, "b0b0b0", " Pagaste 8,000$ dólares por heroína.");
        	DisablePlayerCheckpoint(playerid);
        	TogglePlayerAllDynamicCPs(playerid, true);
        	new year, month, day;
			getdate(year, month, day);
			user[playerid][jTiempos][10] = day;
        }
        return 1;
    }
	else if (Pedido[playerid] == 5)
	{
        if(!_enPos(playerid,10,1667.4683, -2095.2505, 13.7241)) return _Mensaje(playerid, 0, "126", "No estás en el lugar del pedido.");
        Pedido[playerid] = 0;
        if (RevisarDinero(playerid, 5000)) {
            new objeto = 114;
           	if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
           	if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, objeto); user[playerid][jm_Derecha] = objeto, user[playerid][jm_DerechaCant] = 200;}
           	else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, objeto); user[playerid][jm_Izquierda] = objeto, user[playerid][jm_IzquierdaCant] = 200;}
            DarDineroGC(playerid, -5000);
            _Mensaje(playerid, 4, "b0b0b0", " Pagaste 5,000$ dólares por lsd.");
        	DisablePlayerCheckpoint(playerid);
        	TogglePlayerAllDynamicCPs(playerid, true);
        	new year, month, day;
			getdate(year, month, day);
			user[playerid][jTiempos][10] = day;
        }
        return 1;
    }
	else if (Pedido[playerid] == 6)
	{
        if(!_enPos(playerid,10,2494.1326, -1464.6361, 24.0107)) return _Mensaje(playerid, 0, "126", "No estás en el lugar del pedido.");
        Pedido[playerid] = 0;
        if (RevisarDinero(playerid, 2200)) {
            new objeto = 79;
           	if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
           	if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, objeto); user[playerid][jm_Derecha] = objeto, user[playerid][jm_DerechaCant] = 20;}
           	else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, objeto); user[playerid][jm_Izquierda] = objeto, user[playerid][jm_IzquierdaCant] = 20;}
            DarDineroGC(playerid, -2200);
            _Mensaje(playerid, 4, "b0b0b0", " Pagaste 2,200$ dólares por 20 semillas de marihuana.");
        	DisablePlayerCheckpoint(playerid);
        	TogglePlayerAllDynamicCPs(playerid, true);
        	new year, month, day;
			getdate(year, month, day);
			user[playerid][jTiempos][10] = day;
        }
        return 1;
    }
	if (_enPos(playerid, 2.0, 2201.2773, -2223.5308, 13.5513))//tomar caja (carguero)
	{
		if (IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "151", "No puedes hacer esto en un vehículo.");
		DisablePlayerCheckpoint(playerid);
		GameTextForPlayer(playerid, "~g~Bajando carga...", 9000, 3);
		SetPVarInt(playerid, "HaciendoMueble", 1);
		TogglePlayerControllable(playerid, 0);
		SetPVarInt(playerid, "Congelado", 1);
		SetTimerEx("BajarCarga", 10000, 0, "d", playerid);
		_Mensaje(playerid, 2, "0", "Espera mientras bajas la carga.");
	}
	if (_enPos(playerid, 2.0, 2231.3271, -2284.2815, 14.3955))//dejar caja (carguero)
	{
		if (IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "151", "No puedes hacer esto en un vehículo.");
		if (GetPVarInt(playerid, "TeleportTrabajo1") != 0) { Detectar_TT(playerid, 1); return 1; }

		SetPlayerCheckpoint(playerid, 2201.2773, -2223.5308, 13.5513, 2.0);
		SetPVarInt(playerid, "EnCheckPoint", 5);
		user[playerid][jCargas]++;
		user[playerid][jHabilidad][4]++;
		SetPVarInt(playerid, "HaciendoMueble", 0);
		if (IsPlayerAttachedObjectSlotUsed(playerid, 9)) RemovePlayerAttachedObject(playerid, 9);
		ApplyAnimation(playerid, "PED", "IDLE_tired", 4.1, 1, 0, 0, 0, 1500, 1);
	}
	if (_enPos(playerid, 3.0, 2154.4087, -2168.1611, 13.5084))//dejar muebles (carpintero)
	{
		if (IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "151", "No puedes hacer esto en un vehículo.");
		DisablePlayerCheckpoint(playerid);
		user[playerid][jMuebles]++;
		user[playerid][jHabilidad][5]++;
		SetPVarInt(playerid, "MueblesCreados", 0);
		SetPVarInt(playerid, "HaciendoMueble", 0);
		SetPVarInt(playerid, "TomoCarpintero", 1);
		SetPVarInt(playerid, "TrabajandoC", 0);
		if (IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid, 5);
		if (IsPlayerAttachedObjectSlotUsed(playerid, 9)) RemovePlayerAttachedObject(playerid, 9);
		ColocarObject(playerid, 9, 18635, 6, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
		ApplyAnimation(playerid, "PED", "IDLE_tired", 4.1, 1, 0, 0, 0, 1500, 1);
	}
	if (_enPos(playerid, 5.0, -422.4325, -1767.3252, 5.0382))//dejar troncos (leñador)
	{
		if (IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "151", "No puedes hacer esto en un vehículo.");
		DisablePlayerCheckpoint(playerid);
		new tronc = Random(3, 8);
		user[playerid][jTroncos] += tronc;
		user[playerid][jHabilidad][6]++;
		SetPVarInt(playerid, "TrabajandoL", 1);
		SetPVarInt(playerid, "HaciendoMueble", 0);
		SetPVarInt(playerid, "TroncosCreados", 0);
		if (IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid, 5);
		ColocarObject(playerid,9,341,6,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000);
		ApplyAnimation(playerid, "PED", "IDLE_tired", 4.1, 1, 0, 0, 0, 1500, 1);
	}
	if (GetPVarInt(playerid, "TipoDroga") > 0) {
		if (GetPVarInt(playerid, "TeleportTafricante") != 0) { Detectar_TT(playerid, 3); return 1; }
		if (!_Pdrogas(playerid)) {
			DeletePVar(playerid, "TipoDroga");
			user[playerid][jPaquetes] = 0;
			DisablePlayerCheckpoint(playerid);
			_Mensaje(playerid, 4, "ff0000", "Entraste a un checkpoint erronéo. No se completó la entrega.");
			return 1;
		}
		DisablePlayerCheckpoint(playerid);
		new pagai, pagat[32], level = user[playerid][jHabilidad2][1];
		if (GetPVarInt(playerid, "TipoDroga") == 1) { //- Marihuana
			if (level == 1) pagai = 15;
    		else if (level == 2) pagai = 24;
    		else if (level == 3) pagai = 35;
    		else if (level == 4) pagai = 45;
    		else if (level == 5) pagai = 50;
			pagat = "marihuana";
		} else if (GetPVarInt(playerid, "TipoDroga") == 2) { //- Crack
			if (level == 1) pagai = 800;
    		else if (level == 2) pagai = 950;
    		else if (level == 3) pagai = 1050;
    		else if (level == 4) pagai = 1150;
    		else if (level == 5) pagai = 1250;
			pagat = "crack";
		} else if (GetPVarInt(playerid, "TipoDroga") == 3) { //- Heroína
			if (level == 1) pagai = 900;
    		else if (level == 2) pagai = 1100;
    		else if (level == 3) pagai = 1200;
    		else if (level == 4) pagai = 1300;
    		else if (level == 5) pagai = 1400;
			pagat = "heroína";
		} else if (GetPVarInt(playerid, "TipoDroga") == 4) { //- lsd
			if (level == 1) pagai = 1200;
    		else if (level == 2) pagai = 1300;
    		else if (level == 3) pagai = 1400;
    		else if (level == 4) pagai = 1500;
    		else if (level == 5) pagai = 1600;
			pagat = "lsd";
		} else if (GetPVarInt(playerid, "TipoDroga") == 5) { //- cocaina
			if (level == 1) pagai = 1500;
    		else if (level == 2) pagai = 1600;
    		else if (level == 3) pagai = 1700;
    		else if (level == 4) pagai = 1800;
    		else if (level == 5) pagai = 2000;
			pagat = "cocaína";
		}
		DarDineroGC(playerid, pagai);
		new string[128];
		format(string, sizeof(string), "* Realizaste la entrega de {b00000}%s{ffffff} con éxito.", pagat), _Mensaje(playerid, 4, "ffffff", string);
		format(string, sizeof(string), "** Te pagamos por el pedido {00c200}$%d{ffffff} dólares.", pagai), _Mensaje(playerid, 4, "ffffff", string);
        DeletePVar(playerid, "TipoDroga");
        user[playerid][jPaquetes] = 0;
        user[playerid][jHabilidad][1]++;
        user[playerid][jTiempos][6] = 3;
		TogglePlayerAllDynamicCPs(playerid, true);
        return 1;
    }
    if (_enPos(playerid, 6.0, 2473.4478, -2090.3552, 13.5563)) { //- Dejar carga | Camionero
		if (GetPVarInt(playerid, "TeleportCamionero") != 0) { Detectar_TT(playerid, 4); return 1; }
		if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) { return _Mensaje(playerid, 4, "ADC3E7", "{90C3D4}>]{ffffff} Debes estar dentro del vehiculo."); }
		if (_CamVeh[playerid] != INVALID_VEHICLE_ID && vehicleid != _CamVeh[playerid]) { return _Mensaje(playerid, 4, "ADC3E7", "{90C3D4}>]{ffffff} No te encuentras en tu vehiculo de camionero, búscalo y tráelo."); }
		DisablePlayerCheckpoint(playerid);
		new Float: VehHP;
		GetVehicleHealth(vehicleid, VehHP);
		SetVehicleToRespawn(vehicleid);
		new pagac, pagai, level = user[playerid][jHabilidad2][0];
  		if(GetVehicleModel(vehicleid) == 413) {
			if (level == 1) pagac = 200, pagai = 150;
    		else if (level == 2) pagac = 300, pagai = 300;
    		else if (level == 3) pagac = 400, pagai = 400;
    		else if (level == 4) pagac = 500, pagai = 500;
    		else if (level == 5) pagac = 600, pagai = 600;
		} else if(GetVehicleModel(vehicleid) == 456) {
		    if (level == 3) pagac = 400, pagai = 400;
    		else if (level == 4) pagac = 500, pagai = 500;
    		else if (level == 5) pagac = 600, pagai = 600;
		}
		new Percent_damage = floatround(VehHP/10), string[128];
		pagai -= (300-(Percent_damage*3));
		if(pagai > 1001)
		{
			format(string, sizeof(string), "{90C3D4}[Administración] {FFFFFF} %s ha sido bloqueado, Razón:[Repair car en camionero]", NombreRJugador(playerid));
			_MensajeOOC(0xFF6347FF, string);
		    format(string, sizeof(string), "Registros: %s ha sido bloqueado, dinero %d$.", NombreRJugador(playerid), pagai);
			Log("Registros/BanCamionero.log", string);
			user[playerid][jBaneado] = 20;

			new thetime[92], Year, Month, Day, horas, mins, segs;
			getdate(Year, Month, Day);
			gettime(horas, mins, segs);

			format(thetime, sizeof(thetime), "%s %d de %s de %d [%d:%d]", GetWeekDay(), Day, GetMonth(Month), Year, horas, mins);

			alm(user[playerid][jBmomento], thetime);
			alm(user[playerid][jBculpable], "SERVER:");
			alm(user[playerid][jBrazon], "Repair car en camionero");

			format(thetime, sizeof(thetime), "%s", "Repair car en camionero");
			_Expulsar(playerid, 0, thetime);
		    return 1;
		}
		DineroEstado -= pagai;
		ActualizarEst();
		DarDineroGC(playerid, pagai);
		_Mensaje(playerid, 4, "000000", "[ ---- LOS SANTOS TRANSPORTS ----- ]");
		format(string, sizeof(string), "* Realizaste la entrega con éxito. Se te pagará: {ADC3E7}%d{ffffff}.", pagac), _Mensaje(playerid, 4, "ffffff", string);
		format(string, sizeof(string), "** ¡El vehículo es de la empresa! Los daños {b00000}%d{ffffff} causados.", (300-(Percent_damage*3)) ), _Mensaje(playerid, 4, "ffffff", string);
		format(string, sizeof(string), "*** Tu pago final será de {00c200}%d{ffffff} [ingresados en cuenta].", pagai), _Mensaje(playerid, 4, "ffffff", string);
		_Mensaje(playerid, 4, "000000", "[ ------ GRACIAS POR TU VIAJE -----]");
		_CamVeh[playerid] = INVALID_VEHICLE_ID;
		DeletePVar(playerid, "TipoCarga");
		user[playerid][jHabilidad][0]++;
        TogglePlayerAllDynamicCPs(playerid, true);
		return 1;
	}
	if (GetPVarInt(playerid, "TipoCarga") > 0) {
		if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) { return _Mensaje(playerid, 4, "ADC3E7", "{90C3D4}>]{ffffff} Debes estar dentro del vehiculo."); }
		if (_CamVeh[playerid] != INVALID_VEHICLE_ID && vehicleid != _CamVeh[playerid]) { return _Mensaje(playerid, 4, "ADC3E7", "{90C3D4}>]{ffffff} No te encuentras en tu vehiculo de camionero, búscalo y tráelo."); }
		if (GetPVarInt(playerid, "TeleportCamionero") != 0) { Detectar_TT(playerid, 4); return 1; }
		if (!_Pentregas(playerid)) {
			_CamionCancel(playerid);
			_Mensaje(playerid, 4, "ff0000", "Entraste a un checkpoint erronéo. No se completó la entrega.");
			return 1;
		}
		_Contenido[vehicleid] = 0;
		_Mensaje(playerid, 4, "F8D48C", "Entregaste la carga con éxito, devuelve el vehiculo para la paga.");
		DisablePlayerCheckpoint(playerid);
		user[playerid][jTiempos][9] += 1;
		SetPlayerCheckpoint(playerid, 2473.4478, -2090.3552, 13.5563, 5);
		SetPVarInt(playerid, "EnCheckPoint", 5);
		GameTextForPlayer(playerid, "~r~Lugar: ~w~Willowfield", 5000, 1);
		if(GetVehicleModel(vehicleid) == 413)
		{
			SetPVarInt(playerid, "TeleportCamionero", 15);
			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TIPO_TELEPORTCAMIONERO);
		} else {
			SetPVarInt(playerid, "TeleportCamionero", 150);
			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TIPO_TELEPORTCAMIONERO);
		}
		return 1;
	}
	if (Es_job(playerid, 10))
	{
		if (Granjero[playerid] == 1)
		{
			if (Granjero_Vehicle(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
			{
				if (!EstaEnPuntosCosechas(playerid))
				{
					DisablePlayerCheckpoint(playerid);
					Granjero[playerid] = 0;
					SetVehicleToRespawn(GetPlayerVehicleID(playerid));
					_Mensaje(playerid, 4, "ff0000", "Entraste a un checkpoint erronéo.");
					PlayerTextDrawHide(playerid, TextTrabajo[playerid]);
					return 1;
				}
				if (user[playerid][jCosechas] < 301)
				{
					if (GetPVarInt(playerid, "TeleportGranjero") != 0) { Detectar_TT(playerid, 5); return 1; }
					new cos = random(8);
					DisablePlayerCheckpoint(playerid);
					user[playerid][jCosechas] += cos + 1;
					user[playerid][jHabilidad][7]++;
					SetPVarInt(playerid, "TeleportGranjero", 3);
					SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TIPO_TELEPORTGRANJERO);
					SetTimerEx("OtroGramo", 4000, false, "i", playerid);
					return 1;
				}
				else
				{
					DisablePlayerCheckpoint(playerid);
					_Mensaje(playerid, 0, "460", "Tienes más de 300 gramos, no puedes llevar más.");
					Granjero[playerid] = 0;
					SetVehicleToRespawn(GetPlayerVehicleID(playerid));
					PlayerTextDrawHide(playerid, TextTrabajo[playerid]);
					return 1;
				}
			} else {
				_Mensaje(playerid, 2, "0", "No estás en el tractor de granja.");
				Granjero[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
				PlayerTextDrawHide(playerid, TextTrabajo[playerid]);
				return 1;
			}
		}
	}

	if(IsPlayerInRangeOfPoint(playerid, 7.0, 2777.1331, -2594.8616, 0.0169))
	{
		if (GetPVarInt(playerid, "TeleportPescador") != 0) { Detectar_TT(playerid, 6); return 1; }
		if(BOTE(GetPlayerVehicleID(playerid)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER && _Pesca[playerid] == 1)
		{

			new atext[20], paga, peso;
			switch(pesca[playerid])
			{
				case 1: atext = "la tortuga";
				case 2: atext = "el delfin";
				case 3: atext = "el tiburon";
			}
			vehicleid = GetPlayerVehicleID(playerid);
			SetVehicleToRespawn(vehicleid);
			SetPosEx(playerid, 2772.2725, -2578.0652, 3.0243, 37.0000, 0, 0);
			DestroyObject(pescador[playerid]);
			DisablePlayerCheckpoint(playerid);
			RemovePlayerMapIcon(playerid, 99);
			_Pesca[playerid] = 0;
			pescando[playerid] = 0;
			if (user[playerid][jHabilidad2][2] == 3)
			{
				new intento = random(3);
				switch(intento)
				{
					case 0: peso=120,paga=327;
					case 1: peso=147,paga=350;
					case 2: peso=164,paga=378;
				}
			}
			else if (user[playerid][jHabilidad2][2] == 4)
			{
				new intento = random(3);
				switch(intento)
				{
					case 0: peso=206,paga=410;
					case 1: peso=220,paga=453;
					case 2: peso=231,paga=489;
				}
			}
			else if (user[playerid][jHabilidad2][2] == 5)
			{
				new intento = random(3);
				switch(intento)
				{
					case 0: peso=295,paga=499;
					case 1: peso=305,paga=562;
					case 2: peso=335,paga=620;
				}
			}
			new at[128];
			format(at, 128, "* Recibiste $%d por %s de %dkg.", paga, atext, peso);
			_Mensaje(playerid, 4, "33CCFF", at);

			DarDineroGC(playerid, paga);

			user[playerid][jHabilidad][2] += 3;

		}
	}

	return 1;
}

funcion _roboVeh(jugador, coche)
{
	new Float: posx, Float: posy, Float: posz;
	GetVehiclePos(coche, posx, posy, posz);

	new location[MAX_ZONE_NAME];
	Get2DZone(location, MAX_ZONE_NAME, posx, posy, posz);

	new text_[128];
	format(text_, sizeof(text_), "*[CH|911|Central, S: 4A: Informe reciente en %s, trafico del vehículo %s.", location, NombreVehiculo(coche));
	_MensajeRfac(1, C_COLORPOLICIA, text_, 1, 2);

	DarDineroGC(jugador, 3000);

	DestroyVehicle(cocherobo[jugador]);

	cocherobo[jugador] = 0;
    checkcoche[jugador] = 0;

    user[jugador][jTiempos][17] = 360;

    _Mensaje(jugador, 4, "A7CE00", "El camión fue entregado con éxito, recibiste 3.000$ por el.");

    if (user[jugador][jHabilidad][3] < 40) user[jugador][jHabilidad][3] += 3;

	return 1;
}

funcion OtroGramo(playerid) {
	new randomize = random(sizeof(_Granjero));
	SetPlayerCheckpoint(playerid, _Granjero[randomize][0], _Granjero[randomize][1], _Granjero[randomize][2], 5.0);
	SetPVarInt(playerid, "EnCheckPoint", 5);
}

funcion Detectar_TT(jugador, tipo) {
	new string[256], trabajo[32];
	if (tipo == 1) trabajo = "Carguero";
	else if (tipo == 3) trabajo = "Traficante";
	else if (tipo == 4) trabajo = "Camionero";
	else if (tipo == 5) trabajo = "Granjero";
	else if (tipo == 6) trabajo = "Pescador";
    format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}El jugador %s fue expulsado. {E00000}Razón{ffffff}: TP (%s).", NombreRJugador(jugador), trabajo);
	MensajeAdmin(string);
	Dialog(jugador, D_INVALIDO, DIALOG_STYLE_MSGBOX, "Server: {FF0000}Advertencia", "{ffffff}El servidor te ha expulsado por posible teleport hack.", "Desconectar", "");
	SetTimerEx("TimerKICK", 2000, 0, "d", jugador);
	format(string, sizeof(string), "Registros: El jugador %s fue expulsado. Razón: TP (%s). (Expulsiones BOT)", NombreRJugador(jugador), trabajo);
	Log("Registros/TeleportHack.log", string);
	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
	new string[128], engine, lights, alarm, doors, bonnet, boot, objective;
	if (IsPlayerNPC(playerid))
	{
		if (newstate == PLAYER_STATE_SPECTATING)
		{
			TogglePlayerSpectating(playerid, false);
		}
		return 1;
	}
	if (SpectadorID[playerid] != 999)
	{
		new spectator = SpectadorID[playerid];
		if (!IsPlayerConnected(spectator))
		{
			SpectadorID[playerid] = 999;
			Spectate[spectator] = 999;
		}
		if (newstate == PLAYER_STATE_DRIVER && user[spectator][jAdmin] >= 1 || newstate == PLAYER_STATE_PASSENGER && user[spectator][jAdmin] >= 1)
		{
			TogglePlayerSpectating(spectator, true);
			new carid = GetPlayerVehicleID(playerid);
			PlayerSpectateVehicle(spectator, carid);
			SetPVarInt(spectator, "SpecState", newstate);
		}
		else if (newstate == PLAYER_STATE_ONFOOT && user[spectator][jAdmin] >= 1)
		{
			TogglePlayerSpectating(spectator, true);
			PlayerSpectatePlayer(spectator, playerid);
			SetPlayerInterior(spectator, GetPlayerInterior(playerid));
			SetPVarInt(spectator, "SpecState", newstate);
		}
	}
	if (oldstate == PLAYER_STATE_DRIVER) { PlayerTextDrawHide(playerid, Velocimetro[playerid]); }
	if (newstate == PLAYER_STATE_ONFOOT)
	{
		if (escuchandop[playerid] == 1)
		{
			StopAudioStreamForPlayer(playerid);
			escuchandop[playerid] = 0;
			estacionp[playerid] = 0;
		}
		if (Granjero[playerid] == 1)
		{
			PlayerTextDrawHide(playerid, TextTrabajo[playerid]);
			DisablePlayerCheckpoint(playerid);
			Granjero[playerid] = 0;
			_Mensaje(playerid, 2, "0", "Dejaste de cosechar.");
			if (Granjero_Vehicle(GetPlayerVehicleID(playerid))) { SetVehicleToRespawn(GetPlayerVehicleID(playerid)); }
		}
	}
	if (newstate == PLAYER_STATE_PASSENGER)
	{
	    veh_asiento[playerid] = GetPlayerVehicleSeat(playerid);
		if (estacionveh[GetPlayerVehicleID(playerid)] != 0)
		{
			new station[126], name[126];
			switch (estacionveh[GetPlayerVehicleID(playerid)])
			{
				case 1: format(station, sizeof(station), "http://54house.stream-balancer.de:80") && format(name, sizeof(name), "54 House");
				case 2: format(station, sizeof(station), "http://184.154.94.194:8028/listen.pls") && format(name, sizeof(name), "Top Latino");
				case 3: format(station, sizeof(station), "http://148.251.91.15:7004") && format(name, sizeof(name), "Dubbase.FM");
				case 4: format(station, sizeof(station), "http://listen.shoutcast.com/reggaetonhits.m3u") && format(name, sizeof(name), "Reggae Hits");
				case 5: format(station, sizeof(station), "http://216.230.231.122:8000/MP3128") && format(name, sizeof(name), "MBradio.FM");
				case 6: format(station, sizeof(station), "http://listen.shoutcast.com/113fmtheeagle.m3u") && format(name, sizeof(name), "113 FM TEagle");
				case 7: format(station, sizeof(station), "http://108.61.73.119:8028") && format(name, sizeof(name), "181 FM");
				case 8: format(station, sizeof(station), "http://173.244.215.163:8380") && format(name, sizeof(name), "Soft Rock Cafe");
				case 9: format(station, sizeof(station), "http://69.4.232.118:80") && format(name, sizeof(name), "HardRadio.com");
				case 10: format(station, sizeof(station), "http://64.202.98.133:2010") && format(name, sizeof(name), "Aural Moon");
				case 11: format(station, sizeof(station), "http://50.117.115.211:80") && format(name, sizeof(name), "Idobi Radio");
				case 12: format(station, sizeof(station), "http://108.61.30.179:4010") && format(name, sizeof(name), "www.Hot108.com");
				case 13: format(station, sizeof(station), "http://50.7.64.226:80/frisky_mp3_hi") && format(name, sizeof(name), "Sensacion Peru");
				case 14: format(station, sizeof(station), "http://5.135.223.251:9000") && format(name, sizeof(name), "BluePoint");
				case 15: format(station, sizeof(station), "http://62.210.209.179:8030/stream") && format(name, sizeof(name), "PaganMetalRadio");
				case 16: format(station, sizeof(station), "http://198.211.102.165:8000") && format(name, sizeof(name), "Dirty Beats Radio 24/7");
				case 17: format(station, sizeof(station), "http://somafm.com/tags.pls") && format(name, sizeof(name), "The Trip");
				case 18: format(station, sizeof(station), "http://streaming.latina101.com.ar/listen.pls") && format(name, sizeof(name), "Latina FM (Arg)");
				case 19: format(station, sizeof(station), "http://s3.voscast.com:8002/;.m3u") && format(name, sizeof(name), "Amor latino");
				case 20: format(station, sizeof(station), "http://listen.radionomy.com/hotmixradio-hiphop-128.m3u") && format(name, sizeof(name), "Hotmixradio");
				case 21: format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=139278") && format(name, sizeof(name), "Naxi Café Radio");
				case 22: format(station, sizeof(station), "http://listen.shoutcast.com:80/RadioHunter-TheHitzChannel") && format(name, sizeof(name), "Radio Hunter");
				case 23: format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=654138") && format(name, sizeof(name), "181.0 - BCEver");
			}
			StopAudioStreamForPlayer(playerid);
			estacionp[playerid] = EscucharMusica(playerid, station);
			escuchandop[playerid] = 1;
			format(string, sizeof(string), "> Estación de radio: {FFFFFF}%s.", name);
			_Mensaje(playerid, 4, "00A2FF", string);
		}
		if(GetPVarInt(playerid, "_Ejcet") >= 1)
		{
			SetPVarInt(playerid, "_Ejcet", 0);
			RemovePlayerFromVehicle( playerid );
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X, Y, Z);
			SetPlayerPos(playerid, X, Y, Z+2);
			if(GetPVarInt(playerid, "EnCrack") == 1)
			{
				TogglePlayerControllable(playerid, 0);
				ClearAnimations(playerid);
				ApplyAnimation(playerid, "WUZI", "CS_Dead_Guy", 4.0, 0, 0, 0, 1, 0, 1);
			}
		}
		_vVelocidad[playerid] = 0.0;
		new name[50 + MAX_PLAYER_NAME];
		GetPlayerName(playerid, name, sizeof(name));
		new vehicleid = GetPlayerVehicleID(playerid);
		QuienManejo[playerid] = vehicleid;
	}
	if (newstate == PLAYER_STATE_DRIVER)
	{
		veh_asiento[playerid] = GetPlayerVehicleSeat(playerid);
		if (estacionveh[GetPlayerVehicleID(playerid)] != 0)
		{
			new station[126], name[126];
			switch (estacionveh[GetPlayerVehicleID(playerid)])
			{
				case 1: format(station, sizeof(station), "http://54house.stream-balancer.de:80") && format(name, sizeof(name), "54 House");
				case 2: format(station, sizeof(station), "http://184.154.94.194:8028/listen.pls") && format(name, sizeof(name), "Top Latino");
				case 3: format(station, sizeof(station), "http://148.251.91.15:7004") && format(name, sizeof(name), "Dubbase.FM");
				case 4: format(station, sizeof(station), "http://listen.shoutcast.com/reggaetonhits.m3u") && format(name, sizeof(name), "Reggae Hits");
				case 5: format(station, sizeof(station), "http://216.230.231.122:8000/MP3128") && format(name, sizeof(name), "MBradio.FM");
				case 6: format(station, sizeof(station), "http://listen.shoutcast.com/113fmtheeagle.m3u") && format(name, sizeof(name), "113 FM TEagle");
				case 7: format(station, sizeof(station), "http://108.61.73.119:8028") && format(name, sizeof(name), "181 FM");
				case 8: format(station, sizeof(station), "http://173.244.215.163:8380") && format(name, sizeof(name), "Soft Rock Cafe");
				case 9: format(station, sizeof(station), "http://69.4.232.118:80") && format(name, sizeof(name), "HardRadio.com");
				case 10: format(station, sizeof(station), "http://64.202.98.133:2010") && format(name, sizeof(name), "Aural Moon");
				case 11: format(station, sizeof(station), "http://50.117.115.211:80") && format(name, sizeof(name), "Idobi Radio");
				case 12: format(station, sizeof(station), "http://108.61.30.179:4010") && format(name, sizeof(name), "www.Hot108.com");
				case 13: format(station, sizeof(station), "http://50.7.64.226:80/frisky_mp3_hi") && format(name, sizeof(name), "Sensacion Peru");
				case 14: format(station, sizeof(station), "http://5.135.223.251:9000") && format(name, sizeof(name), "BluePoint");
				case 15: format(station, sizeof(station), "http://62.210.209.179:8030/stream") && format(name, sizeof(name), "PaganMetalRadio");
				case 16: format(station, sizeof(station), "http://198.211.102.165:8000") && format(name, sizeof(name), "Dirty Beats Radio 24/7");
				case 17: format(station, sizeof(station), "http://somafm.com/tags.pls") && format(name, sizeof(name), "The Trip");
				case 18: format(station, sizeof(station), "http://streaming.latina101.com.ar/listen.pls") && format(name, sizeof(name), "Latina FM (Arg)");
				case 19: format(station, sizeof(station), "http://s3.voscast.com:8002/;.m3u") && format(name, sizeof(name), "Amor latino");
				case 20: format(station, sizeof(station), "http://listen.radionomy.com/hotmixradio-hiphop-128.m3u") && format(name, sizeof(name), "Hotmixradio");
				case 21: format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=139278") && format(name, sizeof(name), "Naxi Café Radio");
				case 22: format(station, sizeof(station), "http://listen.shoutcast.com:80/RadioHunter-TheHitzChannel") && format(name, sizeof(name), "Radio Hunter");
				case 23: format(station, sizeof(station), "http://yp.shoutcast.com/sbin/tunein-station.pls?id=654138") && format(name, sizeof(name), "181.0 - BCEver");
			}
			StopAudioStreamForPlayer(playerid);
			estacionp[playerid] = EscucharMusica(playerid, station);
			escuchandop[playerid] = 1;
			format(string, sizeof(string), "> Estación de radio: {FFFFFF}%s - Puedes cambiar la emisora. {00C2FF}'/estereo'.", name);
			_Mensaje(playerid, 4, "00A2FF", string);
		}
		_vVelocidad[playerid] = 0.0;
		new newcar = GetPlayerVehicleID(playerid);
		GetVehicleParamsEx(newcar, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(newcar, arr_Engine {newcar}, lights, alarm, doors, bonnet, boot, objective);
		if ((engine == VEHICLE_PARAMS_UNSET || engine == VEHICLE_PARAMS_ON) && GetVehicleModel(newcar) != 509 && GetVehicleModel(newcar) != 481 && GetVehicleModel(newcar) != 510)
		{
			PlayerTextDrawShow(playerid, Velocimetro[playerid]);
		}
		if (GetPVarInt(playerid, "_Ejcet") >= 1)
		{
			SetPVarInt(playerid, "_Ejcet", 0);
			RemovePlayerFromVehicle( playerid );
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X, Y, Z);
			SetPlayerPos(playerid, X, Y, Z+2);
			if(GetPVarInt(playerid, "EnCrack") == 1) {
				TogglePlayerControllable(playerid, 0);
				ClearAnimations(playerid);
				ApplyAnimation(playerid, "WUZI", "CS_Dead_Guy", 4.0, 0, 0, 0, 1, 0, 1);
			}
		}
		QuienManejo[playerid] = newcar;
		foreach(Player, i)
		{
			new v = TieneLlavesCoche(i, newcar);
			if (v != -1)
			{
				if (i == playerid)
				{
					format(string, sizeof(string), "Eres propietario de este vehículo [modelo: %s]. Usa '/motor' para introducir las llaves en el contacto.", NombreVehiculo(newcar));
					_Mensaje(playerid, 5, "0", string);
				}
				else if (InfoVehiculo[v][vUSeguro] == 1 && InfoVehiculo[v][vSeguro] == 1)
				{
					GetVehicleParamsEx(newcar, engine, lights, alarm, doors, bonnet, boot, objective);
					SetVehicleParamsEx(newcar, engine, lights, VEHICLE_PARAMS_ON, doors, bonnet, boot, objective);
					SetTimerEx("DetenerAlarma", 20000, 0, "d", newcar);
				}
				else if (InfoVehiculo[v][vUSeguro] == 1 && InfoVehiculo[v][vSeguro] == 2)
				{
					GetVehicleParamsEx(newcar, engine, lights, alarm, doors, bonnet, boot, objective);
					SetVehicleParamsEx(newcar, engine, lights, VEHICLE_PARAMS_ON, doors, bonnet, boot, objective);
					SetTimerEx("DetenerAlarma", 20000, 0, "d", newcar);
				}
				else
				{
					GetVehicleParamsEx(newcar, engine, lights, alarm, doors, bonnet, boot, objective);
					if (doors == VEHICLE_PARAMS_ON)
					{
						format(string, sizeof(string), "[SistemaAdmin]:{FFFFFF}El jugador %s(%d) ha entrado a un vehículo con el seguro cerrado. (Posible Hack)", NombreRJugador(playerid), playerid);
						MensajeAdmin(string);
						format(string, sizeof(string), "Registros: El jugador %s(%d) ha entrado a un vehículo con el seguro cerrado. (Posible Hack)", NombreRJugador(playerid), playerid);
						Log("Registros/HackVehicle.log", string);
					}
				}
				return 1;
			}
		}
	}
	if (oldstate == PLAYER_STATE_ONFOOT && newstate == PLAYER_STATE_DRIVER)
	{
		new newcar = GetPlayerVehicleID(playerid);
		QuienManejo[playerid] = newcar;
	}
	return 1;
}

funcion CercaDelWeon(Float:radi, playerid, playerid2) {
	new Float: fp_playerPos[3];
	GetPlayerPos(playerid2, fp_playerPos[0], fp_playerPos[1], fp_playerPos[2]);
	if(_enPos(playerid, radi, fp_playerPos[0], fp_playerPos[1], fp_playerPos[2]) && GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(playerid2)) { return 1; }
	return 0;
}

stock MensajeVIP(color, string[]) {
    foreach(Player, i) {
        if((user[i][jPremium] >= 1 || user[i][jAdmin] >= 1) && B_VIP[i] >= 1) {
            Mensaje_(i, color, string);
        }
    }
}

stock _MensajeOOC(color, string[]) {
    foreach(Player, i) {
        if(!B_OOC[i]) {
            Mensaje_(i, color, string);
        }
    }
}

stock _MensajeSAN(color, string[]) {
    foreach(Player, i) {
        if(!B_SAN[i]) {
			SendSplitMessage(i, color, string);
        }
    }
}

stock _MensajeRfac(member, color, string[], division = -1, division2 = -1, division3 = -1)
{
	foreach(Player, i)
	{
	    if(member == 1)
	    {
			if(user[i][jMiembro] == member)
			{
			    if(user[i][jDivision] == division || user[i][jDivision] == division2 || user[i][jDivision] == division3)
				{
					SendSplitMessage(i, color, string);
				}
			}
	    }
	    else
	    {
			if(user[i][jMiembro] == member)
			{
				SendSplitMessage(i, color, string);
			}
		}
	}
}

stock MensajeFaccion(facid, color, string[], division = 0)
{
	foreach(Player, i)
	{
		if (facid == 1)
		{
			if(user[i][jMiembro] == facid || user[i][jLider] == facid)
			{
			    if(user[i][jDivision] == division)
				{
					if(!B_Faccion[i])
					{
						Mensaje_(i, color, string);
					}
				}
			}
		}
		else
		{
			if(user[i][jMiembro] == facid || user[i][jLider] == facid)
			{
				if(!B_Faccion[i])
				{
					Mensaje_(i, color, string);
				}
			}
		}
	}
}

stock _FamWSP(famid, color, string[]) {
    foreach(Player, i) {
        if(user[i][jLiderFam] == famid || user[i][jMiembroFam] == famid) {
            if(!B_WSP[i]) {
                SendSplitMessage(i, color, string);
            }
        }
    }
}

stock MensajeFamilia(famid, color, string[]) {
    foreach(Player, i) {
        if(user[i][jLiderFam] == famid || user[i][jMiembroFam] == famid) {
            if(!B_Familia[i]) {
                Mensaje_(i, color, string);
            }
        }
    }
}

stock MensajeAdmin(string[], color = 1) {
    foreach(Player, i) {
        if(user[i][jAdmin] >= 1 && B_Admin[i] == 0) {
            if(color == 1) Mensaje_(i, 0xFFFF0093, string);
            else if(color == 2) Mensaje_(i, 0xFFFF00FF, string);
        }
    }
    return 1;
}

stock MensajeAdmin2(string[]) {
    foreach(Player, i) {
        if(user[i][jAdmin] >= 1 && B_Admin[i] == 0) {
            Mensaje_(i, C_ROJO, string);
        }
    }
    return 1;
}

stock MensajeAdmin3(string[]) {
    foreach(Player, i) {
        if(user[i][jAdmin] >= 1 && B_Admin[i] == 0) {
            Mensaje_(i, C_GCRP, string);
        }
    }
    return 1;
}

stock MensajeAdmins(color, string[]) {
    for(new i = 0; i < MAX_PLAYERS; i++) {
        if(IsPlayerConnected(i)) {
            if(user[i][jAdmin] >= 1 && B_Admin[i] == 0) {
                Mensaje_(i, color, string);
            }
        }
    }
}

stock MensajeMPS(color, string[]) {
    for(new i = 0; i < MAX_PLAYERS; i++) {
        if(IsPlayerConnected(i)) {
            if(user[i][jAdmin] >= 1 && VerPrivados[i] == 0) {
                SendSplitMessage(i, color, string);
            }
        }
    }
}

stock MessageEx(playerid_1, playerid_2, const color, const string[]) {
    Mensaje_(playerid_1, color, string);
    Mensaje_(playerid_2, color, string);
}

stock Float:GetPlayerDistanceToVehicle(playerid, vehicleid)
{
	new Float:PCoords[3], Float:VCoords[3];
	GetPlayerPos(playerid, PCoords[0], PCoords[1], PCoords[2]);
	GetVehiclePos(vehicleid, VCoords[0], VCoords[1], VCoords[2]);
	new Float:Distance[4];
	for(new n=0; n<3; n++)
	{

		Distance[n] = floatabs(PCoords[n]) - floatabs(VCoords[n]);
	}
	Distance[3] = floatsqroot((Distance[0] * Distance[0]) + (Distance[1] * Distance[1]) + (Distance[2] * Distance[2]));
	return Distance[3];
}

stock MenuComponentes(playerid, vehiclemodel, specific = false, component_type = 0) {
    if (vehiclemodel < 400 || vehiclemodel > 611) return 0;
    new str[1024];
    new component, count = 1, conteo = 0;
    while(IsModelComponentCompatibleEx(vehiclemodel, count, component)) {
        if(specific) {
            if(GetVehicleComponentType(component) != component_type) {
                count ++;
                continue;
            }
        }
        if(component != 0) {
            format(str, sizeof str, "%s{ffffff}%s ($%d)\n", str, GetComponentName(component), GetComponentPrice(component));
            TipoTunning[playerid][conteo] = component;
            conteo++;
        }
        count ++;
    }
	if(isnull(str))
	{
		Menu_Tuneo(playerid);
		_Mensaje(playerid, 0, "0", "Este vehiculo no admite dichos componentes.");
		return 1;
	}
	Dialog(playerid, D_Tmecanico2, DIALOG_STYLE_LIST, "{D6E1EB}Opciones - Tunning", str, "Seleccionar", "Volver");
	return 1;
}

funcion BajarCarga(playerid) {
	DeletePVar(playerid, "Congelado");
	TogglePlayerControllable(playerid, 1);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 1, 0, 0, 1, 1, 1);
	ColocarObject(playerid, 9, 1221, 17, -0.028000, 0.424000, -0.049999, -10.499997, 97.500030, 1.200000, 0.446000, 0.249000, 0.490000);
	SetPlayerCheckpoint(playerid, 2231.3271, -2284.2815, 14.3955, 2.0);
	SetPVarInt(playerid, "EnCheckPoint", 5);
	_Mensaje(playerid, 2, "0", "Lleva la carga al tren.");
	SetPVarInt(playerid, "HaciendoMueble", 0);
	SetPVarInt(playerid, "TeleportTrabajo1", 3);
	SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TIPO_TELEPORTTRABAJO1);
    return 1;
}
dinero_productos(n_id)
{
	new dinero = 0, tipo = i_Negocio[n_id][nTipo];
	switch (tipo)
	{
		case 1: dinero = 980;
		case 2: dinero = 1000;
		case 3: dinero = 1050;
		case 4: dinero = 780;
		case 5: dinero = 740;
		case 6: dinero = 710;
		case 7: dinero = 2200;
		case 8: dinero = 700;
		case 9: dinero = 660;
		case 10: dinero = 610;
		case 11: dinero = 1700;
		case 12: dinero = 990;
		case 13: dinero = 1100;
		case 14: dinero = 1850;
		case 15: dinero = 1400;
		case 16: dinero = 1560;
		case 17: dinero = 1300;
	}
	return dinero;
}

Uso_Dop(string[], color, Float: radio, Float: x, Float: y, Float: z, vw)
{
	foreach(Player, i)
	{
		if(!BigEar[i])
		{
			if(GetPlayerVirtualWorld(i) == vw)
			{
				if(_enPos(i, radio / 16, x, y, z))
				{
					SendSplitMessage(i, color, string);
				}
				else if(_enPos(i, radio / 8, x, y, z))
				{
					SendSplitMessage(i, color, string);
				}
				else if(_enPos(i, radio / 4, x, y, z))
				{
					SendSplitMessage(i, color, string);
				}
				else if(_enPos(i, radio / 2, x, y, z))
				{
					SendSplitMessage(i, color, string);
				}
				else if(_enPos(i, radio, x, y, z))
				{
					SendSplitMessage(i, color, string);
				}
			}
		} else SendSplitMessage(i, color, string);
	}
	return 1;
}

// Inicio de comandos.
//Comando /placa añadido en la 2.X por Courier
CMD:placa(playerid, params[])
{
	new
		string[128],
		playerid2
	;
	new MsgCheckMe[MAX_TEXT_CHAT];
	if (!Es_Faccion(playerid, 1)) return _Mensaje(playerid, 0, "175", "No eres miembro de la PD.");
	if (sscanf(params, "d", playerid2)) return _Mensaje(playerid, 3, "0", "/placa [id jugador]");
	if (!IsPlayerConnected(playerid2)) return _Mensaje(playerid, 0, "0", "ERROR: El jugador seleccionado no se encuentra conectado.");
	if (!CercaDelWeon(5.0, playerid, playerid2)) return _Mensaje(playerid, 0, "133", "Estás lejos del jugador.");
	format(MsgCheckMe, sizeof(MsgCheckMe), "muestra su placa a %s", NombreRJugador(playerid2));
	AccionesRol(playerid, 0, MsgCheckMe);
	format(string, sizeof(string), "[Gobierno de EE.UU | PD%d - %s]", user[playerid]);
	SendClientMessage(playerid2, 0xffff00ff, string);
	return 1;
} // añadido comando para la 2.X para ue puedan recargar el taser.
CMD:rt(playerid)
{
    if(user[playerid][jm_Derecha] == 40 && user[playerid][jm_DerechaCant] == 0) {
    if(TaserRecarga[playerid] != 0){_Mensaje(playerid, 0, "0", "Espera 5 segundos antes de recargar."); return 1;}
    AccionesRol(playerid, 0, "recarga su pistola táser (400V).");
	_GiveWeapon(playerid, 23, 2);
	user[playerid][jm_DerechaCant] = 2;
	ApplyAnimation(playerid,"SILENCED","Silence_reload",4.1,0,1,1,0,0,1);
		}
	return 1;
}
CMD:tallerfd(playerid) //repara interior FD
{
	if (!Es_Faccion(playerid, 5)) return _Mensaje(playerid, 0, "175", "No eres FD.");
	if (!_enPos(playerid, 4.0, 1360.0743, 1371.0730, 10.8500)) return _Mensaje(playerid, 0, "110", "No estás cerca del taller de la FD.");
	if (!IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "130", "Usted no se encuentra en ningún vehículo.");
	Dialog(playerid, D_PDmecanico, DIALOG_STYLE_LIST, "{D6E1EB}Tipos de reparación", "{FFFFFF}Motor\nCarrocería\nRuedas", "Seleccionar", "Atrás");
	return 1;
}


CMD:tallerpd(playerid) // repara en el interior de la pd
{
	if (Es_Faccion(playerid, 1))
	{
		if (_enPos(playerid, 4.0, 2278.1614,2443.0762,3.2734) || _enPos(playerid, 4.0, 1357.9662,-33.9916,-91.6174))
		{
			if(!IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "130", "No estás en ningún vehículo.");
			Dialog(playerid, D_PDmecanico, DIALOG_STYLE_LIST, "{D6E1EB}Tipos de reparación", "{FFFFFF}Motor\nCarrocería\nRuedas", "Seleccionar", "Atrás");
		} else _Mensaje(playerid, 0, "110", "No estás cerca del taller de policía.");
	} else _Mensaje(playerid, 0, "175", "No eres LSPD.");
	return 1;
} // Cierre- Empiza comando para activar el sistema de purga
new modo_purga = 0;
CMD:activarpurga(playerid)
	{
    new Str[128];
    new string[4000];
    if (!IsPlayerConnected(playerid)) return _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
    if (user[playerid][jAdmin] < 5) return _Mensaje(playerid, 0, "88", "Tú no tienes acceso a el comando /activarpurga.");
    foreach(Player, i) {
    StopAudioStreamForPlayer(i);
    format(Str, sizeof(Str), "https://dl.dropboxusercontent.com/s/lgdlgnry4hz8znk/Understandpurga.mp3");
    EscucharMusica(i, Str);
    TextDrawShowForAll(TextPurga0);
    TextDrawShowForAll(TextPurga1);
    TextDrawShowForAll(TextPurga2);
    TextDrawShowForAll(TextPurga3);
    TextDrawShowForAll(TextPurga4);
    TextDrawShowForAll(TextPurga5);
    CleanScreen();
    }
    format(string, sizeof(string), "[Gobierno de LS]: Cualquier delito será legal, incluido el asesinato después de sonar la alarma");
    _MensajeOOC(0xEFD110FF, string);
    format(string, sizeof(string), "[Gobierno de LS]: ¡Recuerda que cuando vuelva a sonar la alarma la purga termina!");
    _MensajeOOC(0xEFD110FF, string);
    format(string, sizeof(string), "[Gobierno de LS]: Funcionarios Gubernamentales de rango 10 no deben de ser agredidos.");
    _MensajeOOC(0xEFD110FF, string);
    format(string, sizeof(string), "[Gobierno de LS]: Si esta noche no vas a purgar, te recomendamos no salir.");
    _MensajeOOC(0xEFD110FF, string);
    format(string, sizeof(string), "[Gobierno de LS]: Que Dios bendiga a nuestros padres fundadores de los EE.UU, ¡feliz purga!");
    _MensajeOOC(0xEFD110FF, string);
    SetTimerEx("Onlineremove",3500*10,false,"playerid",playerid);
	if (modo_purga != 1)
	{
		modo_purga = 1;
		SendClientMessageToAll(0x00cc00ff, "[Sistema Admin]: El evento de la purga ha comenzado, recuerda cumplir las normativas o serás bloqueado.");
	}
    return 1;
}
CMD:finpurga(playerid)
	{
	new Str[128];
    if (!IsPlayerConnected(playerid)) return _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
    if (user[playerid][jAdmin] < 5) return _Mensaje(playerid, 0, "88", "Tú no tienes acceso a el comando /finpurga.");
    foreach(Player, i){
    StopAudioStreamForPlayer(i);
    format(Str, sizeof(Str), "https://dl.dropboxusercontent.com/s/wshwf2cqwm4he3d/Findelapurga.mp3");
    EscucharMusica(i, Str);
    CleanScreen();
   	if (modo_purga != 0)
	{
		modo_purga = 0;
		SendClientMessageToAll(0x00cc00ff, "[Sistema Admin]: El evento de la purga ha terminado.");
	}
    }
    return 1;
}
CMD:dop(playerid, params[])
{
    if(!CheckTimer(5, Intentar2[playerid]))
	{
		new string[256];
		if (sscanf(params, "s[128]", params[0])) return _Mensaje(playerid, 4, "ffffff", "* /dop {9EC73D}[Entorno o Aclaración]");
		for (new pid = 0; pid < MAX_PUERTAS; pid++) //puertas dinamicas
		{
			if (_enPos(playerid, 2, InfoPuerta[pid][pExteriorX], InfoPuerta[pid][pExteriorY], InfoPuerta[pid][pExteriorZ]))
			{
            	Intentar2[playerid] = gettime();
				format(string, sizeof(string), "[EXTERIOR | %d] %s", playerid, params[0]);
				Uso_Dop(string, 0x60CD0097, 50, InfoPuerta[pid][pInteriorX], InfoPuerta[pid][pInteriorY], InfoPuerta[pid][pInteriorZ], InfoPuerta[pid][pInteriorVW]);
				Uso_Dop(string, 0x60CD0097, 8, InfoPuerta[pid][pExteriorX], InfoPuerta[pid][pExteriorY], InfoPuerta[pid][pExteriorZ], InfoPuerta[pid][pExteriorVW]);
				return 1;
			}
			if (_enPos(playerid, 2.0, InfoPuerta[pid][pInteriorX], InfoPuerta[pid][pInteriorY], InfoPuerta[pid][pInteriorZ]) && user[playerid][jVirtualWorld] == InfoPuerta[pid][pInteriorVW])
			{
            	Intentar2[playerid] = gettime();
				format(string, sizeof(string), "[INTERIOR | %d] %s", playerid, params[0]);
				Uso_Dop(string, 0x60CD0097, 20, InfoPuerta[pid][pExteriorX], InfoPuerta[pid][pExteriorY], InfoPuerta[pid][pExteriorZ], InfoPuerta[pid][pExteriorVW]);
				Uso_Dop(string, 0x60CD0097, 8, InfoPuerta[pid][pInteriorX], InfoPuerta[pid][pInteriorY], InfoPuerta[pid][pInteriorZ], InfoPuerta[pid][pInteriorVW]);
				return 1;
			}
		}
		for (new nid = 0; nid < MAX_NEGOCIOS; nid++) //negocios
		{
			if (_enPos(playerid, 2, i_Negocio[nid][nExteriorX], i_Negocio[nid][nExteriorY], i_Negocio[nid][nExteriorZ]))
			{
            	Intentar2[playerid] = gettime();
				format(string, sizeof(string), "[EXTERIOR | %d] %s", playerid, params[0]);
				Uso_Dop(string, 0x60CD0097, 50, i_Negocio[nid][nInteriorX], i_Negocio[nid][nInteriorY], i_Negocio[nid][nInteriorZ], nid + 300);
				Uso_Dop(string, 0x60CD0097, 8, i_Negocio[nid][nExteriorX], i_Negocio[nid][nExteriorY], i_Negocio[nid][nExteriorZ], 0);
				return 1;
			}
			if (_enPos(playerid, 3, i_Negocio[nid][nInteriorX], i_Negocio[nid][nInteriorY], i_Negocio[nid][nInteriorZ]) && user[playerid][jVirtualWorld] == nid + 300)
			{
            	Intentar2[playerid] = gettime();
				format(string, sizeof(string), "[INTERIOR | %d] %s", playerid, params[0]);
				Uso_Dop(string, 0x60CD0097, 20, i_Negocio[nid][nExteriorX], i_Negocio[nid][nExteriorY], i_Negocio[nid][nExteriorZ], 0);
				Uso_Dop(string, 0x60CD0097, 8, i_Negocio[nid][nInteriorX], i_Negocio[nid][nInteriorY], i_Negocio[nid][nInteriorZ], nid + 300);
				return 1;
			}
		}
		for (new i = 0; i < MAX_CASAS; i++) //casas
		{
			if (_enPos(playerid, 2, InfoCasa[i][cExteriorX], InfoCasa[i][cExteriorY], InfoCasa[i][cExteriorZ]) && user[playerid][jVirtualWorld] == InfoCasa[i][c_VW])
			{
            	Intentar2[playerid] = gettime();
				format(string, sizeof(string), "[EXTERIOR | %d] %s", playerid, params[0]);
				Uso_Dop(string, 0x60CD0097, 50, InfoCasa[i][cInteriorX], InfoCasa[i][cInteriorY], InfoCasa[i][cInteriorZ], i + 6000);
				Uso_Dop(string, 0x60CD0097, 8, InfoCasa[i][cExteriorX], InfoCasa[i][cExteriorY], InfoCasa[i][cExteriorZ], InfoCasa[i][c_VW]);
				return 1;
			}
			if (_enPos(playerid, 3, InfoCasa[i][cInteriorX], InfoCasa[i][cInteriorY], InfoCasa[i][cInteriorZ]) && user[playerid][jVirtualWorld] == i + 6000)
			{
            	Intentar2[playerid] = gettime();
				format(string, sizeof(string), "[INTERIOR | %d] %s", playerid, params[0]);
				Uso_Dop(string, 0x60CD0097, 20, InfoCasa[i][cExteriorX], InfoCasa[i][cExteriorY], InfoCasa[i][cExteriorZ], InfoCasa[i][c_VW]);
				Uso_Dop(string, 0x60CD0097, 8, InfoCasa[i][cInteriorX], InfoCasa[i][cInteriorY], InfoCasa[i][cInteriorZ], i + 6000);
				return 1;
			}
		}
		for (new i = 0; i < MAX_EMPRESAS; i++) //empresas
		{
			if (_enPos(playerid, 2, i_Empresa[i][eExteriorX], i_Empresa[i][eExteriorY], i_Empresa[i][eExteriorZ]))
			{
            	Intentar2[playerid] = gettime();
				format(string, sizeof(string), "[EXTERIOR | %d] %s", playerid, params[0]);
				Uso_Dop(string, 0x60CD0097, 50, i_Empresa[i][eInteriorX], i_Empresa[i][eInteriorY], i_Empresa[i][eInteriorZ], i + 666);
				Uso_Dop(string, 0x60CD0097, 8, i_Empresa[i][eExteriorX], i_Empresa[i][eExteriorY], i_Empresa[i][eExteriorZ], 0);
				return 1;
			}
			if (_enPos(playerid, 3, i_Empresa[i][eInteriorX], i_Empresa[i][eInteriorY], i_Empresa[i][eInteriorZ]) && user[playerid][jVirtualWorld] == i + 666)
			{
            	Intentar2[playerid] = gettime();
				format(string, sizeof(string), "[INTERIOR | %d] %s", playerid, params[0]);
				Uso_Dop(string, 0x60CD0097, 20, i_Empresa[i][eExteriorX], i_Empresa[i][eExteriorY], i_Empresa[i][eExteriorZ], 0);
				Uso_Dop(string, 0x60CD0097, 8, i_Empresa[i][eInteriorX], i_Empresa[i][eInteriorY], i_Empresa[i][eInteriorZ], i + 666);
				return 1;
			}
		}
    }
	else
	{
		new string[128];
        format(string, 144, "Faltan %d segundos para que puedas usar este comando.", CheckTimer(5, Intentar2[playerid]));
        _Mensaje(playerid, 4, "b0b0b0", string);
    }
	return 1;
}

CMD:casas(playerid, params[])
{
	new string[256], radius;
	if (user[playerid][jAdmin] < 10) return _Mensaje(playerid, 0, "451", "Tú no tienes acceso a este comando.");
	if (sscanf(params, "d", radius)) return _Mensaje(playerid, 3, "0", "/casas [radio]");
	if (radius < 1 || radius > 100) { _Mensaje(playerid, 4, "b0b0b0", "El radio debe ser de 1 a 100."); return 1; }
	for (new i = 0; i < MAX_CASAS; i++) //- Sistema de casas
	{
		if (_enPos(playerid, radius, InfoCasa[i][cExteriorX], InfoCasa[i][cExteriorY], InfoCasa[i][cExteriorZ]) && user[playerid][jVirtualWorld] == InfoCasa[i][c_VW])
		{
		    format(string, sizeof(string), "Casa ID: %d", i);
			Mensaje_(playerid, 0xb0b0b0ff, string);
		}
	}
    return 1;
}

//   ---- A PARTIR DE AQUÍ COMIENZA EL CONCESIONARIO -- PUEDE SER FUTURA MODIFICACIÓN EN VERSION 3 ---

CMD:catalogo(playerid)
{
	if(!en_Concesionaria(playerid)) return _Mensaje(playerid, 0, "89", "No estás cerca de ningún punto de venta.");
	if (_enPos(playerid, 5.0, 1981.1210, -2100.5159, 13.4231)) //motos
	{
		new Str[256], Str_[3000], i_ = 0;
		for (new veh = 0; veh < MAX_VEH_VENTA; veh++)
		{
			if (i_Conce[veh][eTipo] == 1)
			{
				Formato(Str, "{ffffff}%s - Precio: {1CB54C}%d{ffffff} - ({33CCFF}%d{ffffff})\n", nombre_vehiculo[i_Conce[veh][eModeloVeh] - 400], i_Conce[veh][ePrecioVeh], i_Conce[veh][eDisponibles]);
				strcat(Str_, Str);
				Formato(Str, "GPS_vehC_%d", i_);
				SetPVarInt(playerid, Str, veh);
				i_++;
			}
		}
		if (i_ == 0) Dialog(playerid, -1, DIALOG_STYLE_LIST, "{D6E1EB}Vehículos en venta", "No hay ningún vehículo disponible", "Cerrar", "");
		Dialog(playerid, D_Cvehiculo1, DIALOG_STYLE_LIST, "{D6E1EB}Vehículos en venta", Str_, "Comprar", "Cancelar");
		return 1;
	}
	else if (_enPos(playerid, 5.0, 2131.8674, -1151.0360, 23.8920)) //Coutt And Schutz
	{
		new Str[256], Str_[3000], i_ = 0;
		for (new veh = 0; veh < MAX_VEH_VENTA; veh++)
		{
			if (i_Conce[veh][eTipo] == 2)
			{
				Formato(Str, "{ffffff}%s - Precio: {1CB54C}%d{ffffff} - ({33CCFF}%d{ffffff})\n", nombre_vehiculo[i_Conce[veh][eModeloVeh] - 400], i_Conce[veh][ePrecioVeh], i_Conce[veh][eDisponibles]);
				strcat(Str_, Str);
				Formato(Str, "GPS_vehC_%d", i_);
				SetPVarInt(playerid, Str, veh);
				i_++;
			}
		}
		if (i_ == 0) Dialog(playerid, -1, DIALOG_STYLE_LIST, "{D6E1EB}Vehículos en venta", "No hay ningún vehículo disponible", "Cerrar", "");
		Dialog(playerid, D_Cvehiculo1, DIALOG_STYLE_LIST, "{D6E1EB}Vehículos en venta", Str_, "Comprar", "Cancelar");
		return 1;
	}
	else if (_enPos(playerid, 5.0, 519.0496, -1293.6548, 17.2224)) //grotti
	{
		new Str[256], Str_[3000], i_ = 0;
		for (new veh = 0; veh < MAX_VEH_VENTA; veh++)
		{
			if (i_Conce[veh][eTipo] == 3)
			{
				Formato(Str, "{ffffff}%s - Precio: {1CB54C}%d{ffffff} - ({33CCFF}%d{ffffff})\n", nombre_vehiculo[i_Conce[veh][eModeloVeh] - 400], i_Conce[veh][ePrecioVeh], i_Conce[veh][eDisponibles]);
				strcat(Str_, Str);
				Formato(Str, "GPS_vehC_%d", i_);
				SetPVarInt(playerid, Str, veh);
				i_++;
			}
		}
		if (i_ == 0) Dialog(playerid, -1, DIALOG_STYLE_LIST, "{D6E1EB}Vehículos en venta", "No hay ningún vehículo disponible", "Cerrar", "");
		Dialog(playerid, D_Cvehiculo1, DIALOG_STYLE_LIST, "{D6E1EB}Vehículos en venta", Str_, "Comprar", "Cancelar");
		return 1;
	}
	else if (_enPos(playerid, 5.0, 2793.1045, -1087.5013, 30.6801)) //camionetas
	{
		new Str[256], Str_[3000], i_ = 0;
		for (new veh = 0; veh < MAX_VEH_VENTA; veh++)
		{
			if (i_Conce[veh][eTipo] == 4)
			{
				Formato(Str, "{ffffff}%s - Precio: {1CB54C}%d{ffffff} - ({33CCFF}%d{ffffff})\n", nombre_vehiculo[i_Conce[veh][eModeloVeh] - 400], i_Conce[veh][ePrecioVeh], i_Conce[veh][eDisponibles]);
				strcat(Str_, Str);
				Formato(Str, "GPS_vehC_%d", i_);
				SetPVarInt(playerid, Str, veh);
				i_++;
			}
		}
		if (i_ == 0) Dialog(playerid, -1, DIALOG_STYLE_LIST, "{D6E1EB}Vehículos en venta", "No hay ningún vehículo disponible", "Cerrar", "");
		Dialog(playerid, D_Cvehiculo1, DIALOG_STYLE_LIST, "{D6E1EB}Vehículos en venta", Str_, "Comprar", "Cancelar");
		return 1;
	}
	else if (_enPos(playerid, 5.0, 2006.0568, -2271.4482, 13.5344)) //aviones
	{
		new Str[256], Str_[3000], i_ = 0;
		for (new veh = 0; veh < MAX_VEH_VENTA; veh++)
		{
			if (i_Conce[veh][eTipo] == 5)
			{
				Formato(Str, "{ffffff}%s - Precio: {1CB54C}%d{ffffff} - ({33CCFF}%d{ffffff})\n", nombre_vehiculo[i_Conce[veh][eModeloVeh] - 400], i_Conce[veh][ePrecioVeh], i_Conce[veh][eDisponibles]);
				strcat(Str_, Str);
				Formato(Str, "GPS_vehC_%d", i_);
				SetPVarInt(playerid, Str, veh);
				i_++;
			}
		}
		if (i_ == 0) Dialog(playerid, -1, DIALOG_STYLE_LIST, "{D6E1EB}Vehículos en venta", "No hay ningún vehículo disponible", "Cerrar", "");
		Dialog(playerid, D_Cvehiculo1, DIALOG_STYLE_LIST, "{D6E1EB}Vehículos en venta", Str_, "Comprar", "Cancelar");
		return 1;
	}
	else if (_enPos(playerid, 5.0, 2515.4216, -1957.9753, 16.7286)) //Nuevased
	{
		new Str[256], Str_[3000], i_ = 0;
		for (new veh = 0; veh < MAX_VEH_VENTA; veh++)
		{
			if (i_Conce[veh][eTipo] == 6)
			{
				Formato(Str, "{ffffff}%s - Precio: {1CB54C}%d{ffffff} - ({33CCFF}%d{ffffff})\n", nombre_vehiculo[i_Conce[veh][eModeloVeh] - 400], i_Conce[veh][ePrecioVeh], i_Conce[veh][eDisponibles]);
				strcat(Str_, Str);
				Formato(Str, "GPS_vehC_%d", i_);
				SetPVarInt(playerid, Str, veh);
				i_++;
			}
		}
		if (i_ == 0) Dialog(playerid, -1, DIALOG_STYLE_LIST, "Concesionario: {D6E1EB}Vehículos", "No hay ningún vehículo disponible", "Cerrar", "");
		Dialog(playerid, D_Cvehiculo1, DIALOG_STYLE_LIST, "Concesionario: {D6E1EB}Vehículos", Str_, "Comprar", "Cancelar");
		return 1;
	}
	else if (_enPos(playerid, 5.0, 2589.1169, -2219.4470, 13.5184)) //coches usados
	{
		new Str[256], Str_[3000], i_ = 0;
		for (new veh = 0; veh < MAX_VEH_USADO; veh++)
		{
			if (i_Usado[veh][uModeloVeh] > 0)
			{
				Formato(Str, "{ffffff}%s - Precio: {1CB54C}%d{ffffff}\n", nombre_vehiculo[i_Usado[veh][uModeloVeh] - 400], i_Usado[veh][uPrecioVeh], i_Usado[veh][uVida]);
				strcat(Str_, Str);
				Formato(Str, "GPS_vehC_%d", i_);
				SetPVarInt(playerid, Str, veh);
				i_++;
			}
		}
		if (i_ == 0) Dialog(playerid, -1, DIALOG_STYLE_LIST, "Concesionario: {D6E1EB}Segunda mano", "No hay ningún vehículo disponible", "Cerrar", "");
		Dialog(playerid, D_Uvehiculo1, DIALOG_STYLE_LIST, "Concesionario: {D6E1EB}Segunda mano", Str_, "Comprar", "Cancelar");
		return 1;
	}
	return 1;
}

CMD:usar(playerid, params[])
{
	if (!sscanf(params, "s[32]", params[0]))
	{
		if (strcmp(params[0], "billete", true) == 0)
		{
			if(user[playerid][jm_Derecha] != 107 && user[playerid][jm_Izquierda] != 107) { _Mensaje(playerid, 0, "9", "No tienes billetes en ninguna mano."); return 1;}
			if(user[playerid][jm_Derecha] == 107){ DarDineroGC(playerid, user[playerid][jm_DerechaCant]); user[playerid][jm_DerechaCant] = 0;}
			else if(user[playerid][jm_Izquierda] == 107){ DarDineroGC(playerid, user[playerid][jm_IzquierdaCant]); user[playerid][jm_IzquierdaCant] = 0;}
			_Mensaje(playerid, 4, "b0b0b0", "Guardaste el dinero en tus bolsillos.");
			update_Manos(playerid);
			return 1;
		}
	} else _Mensaje(playerid, 3, "0", "/usar [billete]");
	return 1;
}

CMD:taller(playerid)
{
	if(EnTaller[playerid] == 0) return _Mensaje(playerid, 0, "89", "No estás de un taller dinámico.");
	if(_Tusando[playerid] == 1) return _Mensaje(playerid, 4, "b0b0b0", "Espera que termine la operación.");
	Dialog(playerid, D_OpTaller, DIALOG_STYLE_LIST, "{D6E1EB}Menú", "Reparaciones\nGasolina (150$)\nPintura (200$)", "Seleccionar", "Cancelar");
	return 1;
}
CMD:entrart(playerid)
{
	if(!EstaAfueraTaller(playerid)) return _Mensaje(playerid, 0, "89", "No estás cerca de ningún taller dinámico.");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return _Mensaje(playerid, 0, "126", "No eres el conductor.");

	new idcoche = GetPlayerVehicleID(playerid);
	new Float:X, Float:Y, Float:Z, Float:Angulo;

	GetVehiclePos(idcoche, X, Y, Z);
	GetVehicleZAngle(idcoche, Angulo);
	TallerX[idcoche] = X; TallerY[idcoche] = Y; TallerZ[idcoche] = Z; TallerAngulo[idcoche] = Angulo;

	if (IsPlayerInVehicle(playerid, idcoche))
	{
		SetPlayerInterior(playerid, 3);
		LinkVehicleToInterior(idcoche, 3);
		SetPlayerVirtualWorld(playerid, idcoche);
		SetPlayerInterior(playerid, 3);
		SetVehicleVirtualWorld(idcoche, idcoche);
		LinkVehicleToInterior(idcoche, 3);
		SetVehiclePos(idcoche, 614.198608,-124.396858,997.992187);
		SetVehicleZAngle(idcoche, 91.528572);
		foreach(Player, p)
		{
			if (IsPlayerInVehicle(p, GetPlayerVehicleID(playerid)))
			{
				EnTaller[p] = 1;
				SetPlayerInterior(p, 3);
				TogglePlayerControllable(p, 0);
				SetPlayerVirtualWorld(p, idcoche);
				SetPlayerCameraPos(p,610.7142,-129.6326,999.0937);
				SetPlayerCameraLookAt(p,2242.000,2415.000,15.000);
			}
		}
		Mensaje_(playerid, 0x33CCFFff, "Usa el comando '/taller', para abrir el menú.");
		Mensaje_(playerid, 0x33CCFFff, "Para salir del taller, use el comando '/salirt'.");
		return 1;
	}
	return 1;
}
CMD:salirt(playerid)
{
	if(EnTaller[playerid] == 0) return _Mensaje(playerid, 0, "89", "No estás dentro de ningún taller dinámico.");
	if(_Tusando[playerid] == 1) return _Mensaje(playerid, 0, "89", "No puedes salir del taller ahora.");

	new idcoche = GetPlayerVehicleID(playerid);

	for(new i=0; i <= MAX_VEHICLES; i++)
	{
		if (VehicleToPoint(5.0, i, TallerX[idcoche], TallerY[idcoche], TallerZ[idcoche]) && (GetVehicleVirtualWorld(i) == 0))
		{
			_Mensaje(playerid, 0, "540", "Hay un vehículo cerca del portón, espera a que se mueva.");
			return 1;
		}
	}

	if (IsPlayerInVehicle(playerid, idcoche))
	{
		LinkVehicleToInterior(idcoche, 0);
		SetVehicleVirtualWorld(idcoche, 0);
		SetVehiclePos(idcoche, TallerX[idcoche], TallerY[idcoche], TallerZ[idcoche]);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetVehicleZAngle(idcoche, TallerAngulo[idcoche]);
		foreach(Player, p)
		{
			if (IsPlayerInVehicle(p, idcoche))
			{
				SetPlayerInterior(p, 0);
				SetPlayerVirtualWorld(p, 0);
				EnTaller[p] = 0;
				SetCameraBehindPlayer(p);
				TogglePlayerControllable(p, 1);
				DeletePVar(p, "Congelado");
			}
		}
		return 1;
	}
	return 1;
}

CMD:tirardni(playerid)
{
	if(user[playerid][jf_Dni] == 0) return _Mensaje(playerid, 0, "89", "No posees un documento falso.");
	user[playerid][jf_Dni] = 0;
	user[playerid][jf_Edad] = 0;
	strmid(user[playerid][jf_Nombre], "Ninguno", 0, strlen("Ninguno"), 12);
	DarDineroGC(playerid, 500);
	_Mensaje(playerid, 4, "b0b0b0", " Has tirado tu documento falso.");
	return 1;
}

CMD:secambio(playerid, params[])
{
	if (user[playerid][jAdmin] < 10) return _Mensaje(playerid, 0, "492", "Tú no tienes acceso a el comando.");
	if (isnull(params)) return _Mensaje(playerid, 3, "0", "/secambio [Nombre_Apellido]");
	if (INI_Exist(params))
	{
		new data[60], string[128];
		format(data, sizeof data, DATOS_CUENTAS, params);
		new INI: File = INI_Open(data);
		INI_WriteInt(File, "Fuerza", 100);
		INI_WriteInt(File, "Trabajo_1", 0);
		INI_WriteInt(File, "Trabajo_2", 0);
		INI_WriteInt(File, "Trabajo_3", 0);
		INI_WriteInt(File, "Habilidad_1", 0);
		INI_WriteInt(File, "Habilidad_2", 0);
		INI_WriteInt(File, "Habilidad_3", 0);
		INI_WriteInt(File, "Habilidad_4", 0);
		INI_WriteInt(File, "Habilidad_5", 0);
		INI_WriteInt(File, "Habilidad_6", 0);
		INI_WriteInt(File, "Habilidad_7", 0);
		INI_WriteInt(File, "Habilidad_8", 0);
		INI_WriteInt(File, "Habilidad2_1", 1);
		INI_WriteInt(File, "Habilidad2_2", 1);
		INI_WriteInt(File, "Habilidad2_3", 1);
		INI_WriteInt(File, "Habilidad2_4", 1);
		INI_WriteInt(File, "Habilidad2_5", 1);
		INI_WriteInt(File, "Habilidad2_6", 1);
		INI_WriteInt(File, "Habilidad2_7", 1);
		INI_WriteInt(File, "Habilidad2_8", 1);
		INI_WriteInt(File, "Adiccion0", 0);
		INI_WriteInt(File, "Adiccion1", 0);
		INI_WriteInt(File, "Adiccion2", 0);
		INI_WriteInt(File, "Adiccion3", 0);
		INI_WriteInt(File, "Adiccion4", 0);
		INI_WriteInt(File, "Arrestos", 0);
		INI_WriteInt(File, "Documento", 0);
        INI_WriteString(File, "Delito1", "Ninguno");
        INI_WriteString(File, "Delito2", "Ninguno");
        INI_WriteString(File, "Delito3", "Ninguno");
        INI_WriteString(File, "Delito4", "Ninguno");
        INI_WriteString(File, "Delito5", "Ninguno");
        INI_WriteString(File, "Delito6", "Ninguno");
        INI_WriteString(File, "Delito7", "Ninguno");
        INI_WriteString(File, "Delito8", "Ninguno");
        INI_WriteString(File, "Delito9", "Ninguno");
        INI_WriteString(File, "Delito10", "Ninguno");
        INI_WriteInt(File, "ODelito1", 0);
        INI_WriteInt(File, "ODelito2", 0);
        INI_WriteInt(File, "ODelito3", 0);
        INI_WriteInt(File, "ODelito4", 0);
        INI_WriteInt(File, "ODelito5", 0);
        INI_WriteInt(File, "ODelito6", 0);
        INI_WriteInt(File, "ODelito7", 0);
        INI_WriteInt(File, "ODelito8", 0);
        INI_WriteInt(File, "ODelito9", 0);
        INI_WriteInt(File, "ODelito10", 0);
        INI_WriteInt(File, "CambioN", 0);
		INI_Close(File);
		format(string, 128, "[AvisoAdmin]: {FFFFFF} Game Admin %s activó el cambio de nombre de %s.", NombreRJugador(playerid), params);
		MensajeAdmin(string);
		format(string, sizeof(string), "Registros: Game Admin %s activó el cambio de nombre de %s. (Cambio de nombre Admin)", NombreRJugador(playerid), params);
		Log("Registros/CambiosNombres.log", string);
	} else _Mensaje(playerid, 0, "179", "Esa cuenta no existe.");
	return 1;
}

CMD:muebles(playerid)
{
	if (user[playerid][jVirtualWorld] == 0) return _Mensaje(playerid, 0, "580", "No estás en ningún interior.");
    for (new n_id = 0; n_id < MAX_NEGOCIOS; n_id++) //negocios
	{
		if (user[playerid][jVirtualWorld] == n_id + 300)
		{
			if (user[playerid][jNegocioKey] != n_id && user[playerid][jNegocioKey2] != n_id && user[playerid][jNegocioLlaves] != n_id) return _Mensaje(playerid, 0, "580", "No tienes las llaves de este negocio o no eres el propietario.");

			Dialog(playerid, D_NEGOCIO_MUEBLES, DIALOG_STYLE_LIST, "Sistema Muebles: {FFFF00}Negocio", "{FFFFFF}Poner muebles\nGuardar muebles\nEditar posición\nVender muebles\nBorrar muebles\nComprar muebles", "Aceptar", "Cancelar");
			DentroNegocio[playerid] = n_id;
		}
	}
    for (new c_id = 0; c_id < MAX_CASAS; c_id++) //casas
	{
		if (user[playerid][jVirtualWorld] == c_id + 6000)
		{
			if (user[playerid][jCasaKey] != c_id && user[playerid][jCasaKey2] != c_id && user[playerid][jCasaLlaves] != c_id) return _Mensaje(playerid, 0, "580", "No tienes las llaves de esta casa o no eres el propietario.");

			Dialog(playerid, D_CASA_MUEBLES, DIALOG_STYLE_LIST, "Sistema Muebles: {FFFF00}Casa", "{FFFFFF}Poner muebles\nGuardar muebles\nEditar posición\nVender muebles\nBorrar muebles\nComprar muebles", "Seleccionar", "Cancelar");
			DentroCasa[playerid] = c_id;
		}
	}
    for (new g_id = 0; g_id < MAX_GARAJES; g_id++) //garajes dañado
	{
		if (user[playerid][jVirtualWorld] == g_id + 100)
		{
		    if(strcmp(NombreRJugador(playerid), InfoCasa[InfoGaraje[DentroGarage[playerid]][gIDCasa]][cComprador])) return _Mensaje(playerid, 0, "580", "No tienes las llaves de este garaje o ¡no está asociado a tu casa!");
			Dialog(playerid, D_GARAGE_MUEBLES, DIALOG_STYLE_LIST, "Sistema Muebles: {FFFF00}Garaje [casa]", "{FFFFFF}Poner muebles\nGuardar muebles\nEditar posición\nVender muebles\nBorrar muebles\nComprar muebles", "Seleccionar", "Cancelar");
		}
	}
	for (new e_id = 0; e_id < MAX_EMPRESAS; e_id++) //empresas
	{
		if (user[playerid][jVirtualWorld] == e_id + 666)
		{
			if (user[playerid][jEmpresaKey] != e_id && user[playerid][jEmpresaLlaves] != e_id) return _Mensaje(playerid, 0, "580", "No tienes las llaves de esta empresa o no eres un empleado con nivel.");
			Dialog(playerid, D_EMPRESA_MUEBLES, DIALOG_STYLE_LIST, "Sistema Muebles: {FFFF00}Empresa", "{FFFFFF}Poner muebles\nGuardar muebles\nEditar posición\nVender muebles\nBorrar muebles\nComprar muebles", "Seleccionar", "Cancelar");
			DentroEmpresa[playerid] = e_id;
		}
	}
	return 1;
}

//comandos de empresas
CMD:ecoches(playerid)
{
	if (GetPVarInt(playerid, "Llamada_LSED") == 1) return _Mensaje(playerid, 0, "647", "No puedes usar este comando en este momento.");
	new string[256], dialog[1024], e_id = user[playerid][jEmpresaKey];
	if (e_id == -1) return _Mensaje(playerid, 0, "647", "No tienes ninguna empresa.");
	for(new i = 0; i < 10; i++)
	{
  		if(InfoVehEmp[e_id][i][vID] == 0) { format(string, sizeof(string), "\n{b0b0b0}Sin vehículos en propiedad (ran. vacía)"); }
		else {
			format(string, sizeof(string), "\n{ffffff}Modelo: %s - Matricula (IDllave): {F8D48C}LS-%d", nombre_vehiculo[InfoVehEmp[e_id][i][vModelo] - 400], InfoVehEmp[e_id][i][vID]);
		}
		strcat(dialog, string);
	}
	Dialog(playerid, D_empresa_O4, DIALOG_STYLE_LIST, "Empresa: {FFFF00}Vehículos", dialog, "Seleccionar", "Cancelar");
	return 1;
}

CMD:editare(playerid, params[])
{
	new e_id, string[256], input;
	if (user[playerid][jAdmin] < 10) return _Mensaje(playerid, 0, "546", "Tú no tienes acceso a el comando /editare.");
	if (sscanf(params, "s[32]", params))
	{
		_Mensaje(playerid, 3, "0", "/editare [nombre] [empresa] [codigo]");
		_Mensaje(playerid, 1, "exterior - precio - dinero - interior.", "Nombres:");
		return 1;
	}
	if (!strcmp(params, "exterior", true, 8))
	{
		if (sscanf(params, "s[32]i", params, e_id)) return _Mensaje(playerid, 3, "0", "/editarn exterior [empresa]");
		GetPlayerPos(playerid, i_Empresa[e_id][eExteriorX], i_Empresa[e_id][eExteriorY], i_Empresa[e_id][eExteriorZ]);
		_EmpresaP(e_id);
		_Mensaje(playerid, 4, "ffffff", "[AvisoServidor]: Editaste el exterior de la empresa.");
		format(string, sizeof(string), "Registros: El jugador %s ha cambiado el exterior de la (empresa ID %d).", NombreRJugador(playerid), e_id);
		Log("Registros/Empresas.log", string);
	}
	else if (!strcmp(params, "precio", true, 6))
	{
		if (sscanf(params, "s[32]ii", params, e_id, input)) return _Mensaje(playerid, 3, "0", "/editarn precio [empresa] [cantidad]");
		if (!i_Empresa[e_id][eTipo]) return _Mensaje(playerid, 0, "548", "Id empresa invalida.");
		if (user[playerid][jAdmin] < 10) return _Mensaje(playerid, 0, "546", "Tú no tienes acceso a el comando /editarn.");
		i_Empresa[e_id][ePrecio] = input;
		save_Empresa(e_id);
		_Mensaje(playerid, 4, "ffffff", "[AvisoServidor]: Editaste el precio de la empresa.");
		format(string, sizeof(string), "Registros: El jugador %s ha puesto el (empresa ID %d) (precio $%d).", NombreRJugador(playerid), e_id, input);
		Log("Registros/Empresas.log", string);
	}
	else if (!strcmp(params, "interior", true, 8))
	{
		if (sscanf(params, "s[32]i", params, e_id)) return _Mensaje(playerid, 3, "0", "/editarn interior [empresa]");
		GetPlayerPos(playerid, i_Empresa[e_id][eInteriorX], i_Empresa[e_id][eInteriorY], i_Empresa[e_id][eInteriorZ]);
		GetPlayerFacingAngle(playerid, i_Empresa[e_id][eInteriorR]);
		i_Empresa[e_id][eInterior] = GetPlayerInterior(playerid);
		_EmpresaP(e_id);
		_Mensaje(playerid, 4, "ffffff", "[AvisoServidor]: Editaste el interior de la empresa.");
		format(string, sizeof(string), "Registros: El jugador %s ha cambiado el exterior de la (empresa ID %d).", NombreRJugador(playerid), e_id);
		Log("Registros/Empresas.log", string);
	}
	else if (!strcmp(params, "dinero", true, 6))
	{
		if (sscanf(params, "s[32]ii", params, e_id, input)) return _Mensaje(playerid, 3, "0", "/editarn dinero [empresa] [cantidad]");
		if (!i_Empresa[e_id][eTipo]) return _Mensaje(playerid, 0, "548", "ID empresa invalida.");
		if (user[playerid][jAdmin] < 10) return _Mensaje(playerid, 0, "546", "Tú no tienes acceso a el comando /editarn.");
		i_Empresa[e_id][eDinero] = input;
		_EmpresaP(e_id);
		_Mensaje(playerid, 4, "ffffff", "Editaste el dinero de la empresa.");
		format(string, sizeof(string), "Registros: El jugador %s ha cambiado el dinero ($%d) de la (empresa ID %d).", NombreRJugador(playerid), input, e_id);
		Log("Registros/Empresas.log", string);
	}
	save_Empresa(e_id);
	return 1;
}

CMD:empresa(playerid) return cmd_miempresa(playerid);
CMD:miempresa(playerid)
{
	new tDialogo[300];
	if(user[playerid][jEmpresaKey] == -1 && user[playerid][jEmpresaLlaves] == -1) return _Mensaje(playerid, 0, "580", "No tienes ninguna empresa o no tienes las llaves de una.");
	new e_id = user[playerid][jEmpresaKey], e_id2 = user[playerid][jEmpresaLlaves];
	if (GetPlayerVirtualWorld(playerid) == user[playerid][jEmpresaKey] + 666)
	{
		format(tDialogo, sizeof(tDialogo), "{ffffff}Nombre ({0095B5}%s{ffffff})\nDinero ({00C200}$%d{ffffff})", i_Empresa[e_id][eNombre], i_Empresa[e_id][eDinero]);
		Dialog(playerid, D_empresa_O, DIALOG_STYLE_LIST, "{D6E1EB}Menú de empresa", tDialogo, "Seleccionar", "Cancelar");
		DentroEmpresa[playerid] = e_id;
	}
	else if (GetPlayerVirtualWorld(playerid) == user[playerid][jEmpresaLlaves] + 666)
	{
		format(tDialogo, sizeof(tDialogo), "{ffffff}Nombre ({0095B5}%s{ffffff})\nDinero ({00C200}$%d{ffffff})", i_Empresa[e_id2][eNombre], i_Empresa[e_id2][eDinero]);
		Dialog(playerid, D_empresa_O, DIALOG_STYLE_LIST, "Opciones: {FFFF00}Mi empresa", tDialogo, "Seleccionar", "Cancelar");
		DentroEmpresa[playerid] = e_id2;
	} else _Mensaje(playerid, 0, "580", "No estás en ninguna empresa.");
	return 1;
}

CMD:colorcoche(playerid, params[])
{
	new e_id = user[playerid][jContrato];
	if (user[playerid][jContrato] == -1) return _Mensaje(playerid, 4, "b0b0b0", "No trabajas en ninguna empresa.");
	if (i_Empresa[e_id][eTipo] != 2) return _Mensaje(playerid, 4, "b0b0b0", "No trabajas en ninguna empresa mecánica.");
	if (!_enPos(playerid, 100.0, 1881.0397, -2196.4153, 12.5398) || (GetPlayerVirtualWorld(playerid) < 665)) return _Mensaje(playerid, 4, "b0b0b0", "No te encuentras dentro del taller.");
	new playerid2, color[2];
	if (sscanf(params, "iii", playerid2, color[0], color[1])) { return _Mensaje(playerid, 3, "0", "/colorcoche [id jugador] [color 1] [color 2]."); }
	if (!CercaDelWeon(4.0, playerid, playerid2)) return _Mensaje(playerid, 4, "b00000", "Ese jugador está muy lejos.");
	if (!IsPlayerInAnyVehicle(playerid2)) { return _Mensaje(playerid, 0, "130", "Ese jugador no está en ningún vehículo."); }
	if (m_operacion[playerid2][3] != -1) return _Mensaje(playerid, 0, "130", "Ese jugador ya está en otra operación.");
	if (!(0 <= color[0] <= 255 && 0 <= color[1] <= 255)) { return _Mensaje(playerid, 0, "359", "Color inválido, elige entre 0 al 255"); }
	new iVeh = GetPlayerVehicleID(playerid2), Str[256];

	m_operacion[playerid2][0] = 3;
	m_operacion[playerid2][1] = iVeh;
	m_operacion[playerid2][2] = e_id;
	m_operacion[playerid2][3] = playerid;
	m_operacion[playerid2][4] = color[0];
	m_operacion[playerid2][5] = color[1];
	Formato(Str, "Mecánico te ofrece color %d/%d ($32). Escribe '/aceptar' para proceder con la operación.", color[0], color[1]);
	_Mensaje(playerid2, 5, "0", Str);
	return 1;
}

CMD:paintcoche(playerid, params[])
{
	new e_id = user[playerid][jContrato];
	if (user[playerid][jContrato] == -1) return _Mensaje(playerid, 4, "b0b0b0", "No trabajas en ninguna empresa.");
	if (i_Empresa[e_id][eTipo] != 2) return _Mensaje(playerid, 4, "b0b0b0", "No trabajas en ninguna empresa mecánica.");
	if (!_enPos(playerid, 100.0, 1881.0397, -2196.4153, 12.5398) || (GetPlayerVirtualWorld(playerid) < 665)) return _Mensaje(playerid, 4, "b0b0b0", "No te encuentras dentro del taller.");
	new playerid2, color;
	if (sscanf(params, "ii", playerid2, color)) { return _Mensaje(playerid, 3, "0", "/paintcoche [id jugador] [paint 0/2]."); }
	if (!CercaDelWeon(4.0, playerid, playerid2)) return _Mensaje(playerid, 4, "b00000", "Ese jugador está muy lejos.");
	if (!IsPlayerInAnyVehicle(playerid2)) { return _Mensaje(playerid, 0, "130", "Ese jugador no está en ningún vehículo."); }
	if (m_operacion[playerid2][3] != -1) return _Mensaje(playerid, 0, "130", "Ese jugador ya está en otra operación.");
	if (!(0 <= color <= 3)) { return _Mensaje(playerid, 0, "361", "Pintura debe ser del ID 0 al 3."); }
	new iVeh = GetPlayerVehicleID(playerid2), Str[256];

	m_operacion[playerid2][0] = 2;
	m_operacion[playerid2][1] = iVeh;
	m_operacion[playerid2][2] = e_id;
	m_operacion[playerid2][3] = playerid;
	m_operacion[playerid2][4] = color;
	Formato(Str, "Mecánico te ofrece paintjob %d ($35). Escribe '/aceptar' para proceder con la operación.", color);
	_Mensaje(playerid2, 5, "0", Str);
	return 1;
}

CMD:repararmotor(playerid, params[])
{
	new e_id = user[playerid][jContrato];
	if (user[playerid][jContrato] == -1) return _Mensaje(playerid, 4, "b0b0b0", "No trabajas en ninguna empresa.");
	if (i_Empresa[e_id][eTipo] != 2) return _Mensaje(playerid, 4, "b0b0b0", "No trabajas en ninguna empresa mecánica.");

	new playerid2;
	if (sscanf(params, "i", playerid2)) { return _Mensaje(playerid, 3, "0", "/repararmotor [id jugador]."); }
	if (!CercaDelWeon(4.0, playerid, playerid2)) return _Mensaje(playerid, 4, "b00000", "Ese jugador está muy lejos.");
	if (!IsPlayerInAnyVehicle(playerid2)) { return _Mensaje(playerid, 0, "130", "Ese jugador no está en ningún vehículo."); }
	if (m_operacion[playerid2][3] != -1) return _Mensaje(playerid, 0, "130", "Ese jugador ya está en otra operación.");
	new iVeh = GetPlayerVehicleID(playerid2);

	m_operacion[playerid2][0] = 1;
	m_operacion[playerid2][1] = iVeh;
	m_operacion[playerid2][2] = e_id;
	m_operacion[playerid2][3] = playerid;
	_Mensaje(playerid2, 5, "0", "Mecánico te ofrece reparar el motor ($300). Escribe '/aceptar' para proceder con la operación.");
	return 1;
}

CMD:gasolina(playerid, params[])
{
	new e_id = user[playerid][jContrato];
	if (user[playerid][jContrato] == -1) return _Mensaje(playerid, 4, "b0b0b0", "No trabajas en ninguna empresa.");
	if (i_Empresa[e_id][eTipo] != 2) return _Mensaje(playerid, 4, "b0b0b0", "No trabajas en ninguna empresa mecánica.");

	new playerid2;
	if (sscanf(params, "i", playerid2)) { return _Mensaje(playerid, 3, "0", "/gasolina [id jugador]."); }
	if (!CercaDelWeon(4.0, playerid, playerid2)) return _Mensaje(playerid, 4, "b00000", "Ese jugador está muy lejos.");
	if (!IsPlayerInAnyVehicle(playerid2)) { return _Mensaje(playerid, 0, "130", "Ese jugador no está en ningún vehículo."); }
	if (m_operacion[playerid2][3] != -1) return _Mensaje(playerid, 0, "130", "Ese jugador ya está en otra operación.");
	new iVeh = GetPlayerVehicleID(playerid2);

	m_operacion[playerid2][0] = 6;
	m_operacion[playerid2][1] = iVeh;
	m_operacion[playerid2][2] = e_id;
	m_operacion[playerid2][3] = playerid;
	_Mensaje(playerid2, 5, "0", "Mecánico te ofrece gasolina ($100). Escribe '/aceptar' para proceder con la operación.");
	return 1;
}

CMD:ruedas(playerid, params[])
{
	new e_id = user[playerid][jContrato];
	if (user[playerid][jContrato] == -1) return _Mensaje(playerid, 4, "b0b0b0", "No trabajas en ninguna empresa.");
	if (i_Empresa[e_id][eTipo] != 2) return _Mensaje(playerid, 4, "b0b0b0", "No trabajas en ninguna empresa mecánica.");
	if (!_enPos(playerid, 100.0, 1881.0397, -2196.4153, 12.5398) || (GetPlayerVirtualWorld(playerid) < 665)) return _Mensaje(playerid, 4, "b0b0b0", "No te encuentras dentro del taller.");

	new playerid2;
	if (sscanf(params, "i", playerid2)) { return _Mensaje(playerid, 3, "0", "/ruedas [id jugador]."); }
	if (!CercaDelWeon(4.0, playerid, playerid2)) return _Mensaje(playerid, 4, "b00000", "Ese jugador está muy lejos.");
	if (!IsPlayerInAnyVehicle(playerid2)) { return _Mensaje(playerid, 0, "130", "Ese jugador no está en ningún vehículo."); }
	if (m_operacion[playerid2][3] != -1) return _Mensaje(playerid, 0, "130", "Ese jugador ya está en otra operación.");
	new iVeh = GetPlayerVehicleID(playerid2);

	m_operacion[playerid2][0] = 4;
	m_operacion[playerid2][1] = iVeh;
	m_operacion[playerid2][2] = e_id;
	m_operacion[playerid2][3] = playerid;
	_Mensaje(playerid2, 5, "0", "Mecánico te ofrece ruedas nuevas ($50). Escribe '/aceptar' para proceder con la operación.");
	return 1;
}

CMD:carroceria(playerid, params[])
{
	new e_id = user[playerid][jContrato];
	if (user[playerid][jContrato] == -1) return _Mensaje(playerid, 4, "b0b0b0", "No trabajas en ninguna empresa.");
	if (i_Empresa[e_id][eTipo] != 2) return _Mensaje(playerid, 4, "b0b0b0", "No trabajas en ninguna empresa mecánica.");
	if (!_enPos(playerid, 100.0, 1881.0397, -2196.4153, 12.5398) || (GetPlayerVirtualWorld(playerid) < 665)) return _Mensaje(playerid, 4, "b0b0b0", "No te encuentras dentro del taller.");

	new playerid2;
	if (sscanf(params, "i", playerid2)) { return _Mensaje(playerid, 3, "0", "/carroceria [id jugador]."); }
	if (!CercaDelWeon(4.0, playerid, playerid2)) return _Mensaje(playerid, 4, "b00000", "Ese jugador está muy lejos.");
	if (!IsPlayerInAnyVehicle(playerid2)) { return _Mensaje(playerid, 0, "130", "Ese jugador no está en ningún vehículo."); }
	if (m_operacion[playerid2][3] != -1) return _Mensaje(playerid, 0, "130", "Ese jugador ya está en otra operación.");
	new iVeh = GetPlayerVehicleID(playerid2);

	m_operacion[playerid2][0] = 5;
	m_operacion[playerid2][1] = iVeh;
	m_operacion[playerid2][2] = e_id;
	m_operacion[playerid2][3] = playerid;
	_Mensaje(playerid2, 5, "0", "Mecánico te ofrece carrocería nueva ($350). Escribe '/aceptar' para proceder con la operación.");
	return 1;
}

CMD:tuneo(playerid)
{
	if (veh_tune[playerid] == 0) return _Mensaje(playerid, 4, "b0b0b0", "Nadie te ha ofrecido tuneo.");
	Menu_Tuneo(playerid);
	return 1;
}
CMD:tunear(playerid, params[])
{
	new e_id = user[playerid][jContrato];
	if (user[playerid][jContrato] == -1) return _Mensaje(playerid, 4, "b0b0b0", "No trabajas en ninguna empresa.");
	if (i_Empresa[e_id][eTipo] != 2) return _Mensaje(playerid, 4, "b0b0b0", "No trabajas en ninguna empresa mecánica.");
	if (!_enPos(playerid, 100.0, 1881.0397, -2196.4153, 12.5398) || (GetPlayerVirtualWorld(playerid) < 665)) return _Mensaje(playerid, 4, "b0b0b0", "No te encuentras dentro del taller.");
	new playerid2;
	if (sscanf(params, "i", playerid2)) { return _Mensaje(playerid, 3, "0", "/tunear [id jugador]"); }
	if (!CercaDelWeon(4.0, playerid, playerid2)) return _Mensaje(playerid, 4, "b00000", "Ese jugador está muy lejos.");
	if (!IsPlayerInAnyVehicle(playerid2)) { return _Mensaje(playerid, 0, "130", "Ese jugador no está en ningún vehículo."); }
	if (id_tune[playerid2] != -1) return _Mensaje(playerid, 0, "130", "Ya le ofreciste o ofrecieron el menú de tuneo.");

	_Mensaje(playerid2, 5, "0", "Mecánico te ofrece menú de tuneo. Escribe '/aceptar' para proceder con la operación.");
	id_tune[playerid2] = playerid;
	e_tune[playerid2] = e_id;
	return 1;
}
CMD:vertuneo(playerid, params[])
{
	new e_id = user[playerid][jContrato];
	if (user[playerid][jContrato] == -1) return _Mensaje(playerid, 4, "b0b0b0", "No trabajas en ninguna empresa.");
	if (i_Empresa[e_id][eTipo] != 2) return _Mensaje(playerid, 4, "b0b0b0", "No trabajas en ninguna empresa mecánica.");
	if (!_enPos(playerid, 100.0, 1881.0397, -2196.4153, 12.5398) || (GetPlayerVirtualWorld(playerid) < 665)) return _Mensaje(playerid, 4, "b0b0b0", "No te encuentras dentro del taller.");
	new playerid2;
	if (sscanf(params, "i", playerid2)) { return _Mensaje(playerid, 3, "0", "/vertuneo [id jugador]"); }
	if (!CercaDelWeon(4.0, playerid, playerid2)) return _Mensaje(playerid, 4, "b00000", "Ese jugador está muy lejos.");
	if (!IsPlayerInAnyVehicle(playerid2)) { return _Mensaje(playerid, 0, "130", "Ese jugador no está en ningún vehículo."); }
	if (id_tune[playerid2] == -1) return _Mensaje(playerid, 0, "130", "Ese jugador no le han ofrecido tuneo.");
	new Str2[256], i_ = 0;
	for (new i = 0; i < 11; i++) { if (pieza_tune[playerid2][i] > 0) { i_++; } }
	Formato(Str2, "Piezas actuales ({33CCFF}}%d{ffffff}), Total a pagar: {00c200}}%d$", i_, pago_tune[playerid2]);
	Mensaje_(playerid, 0xffffffff, Str2);
	return 1;
}

CMD:precios(playerid, params[])
{
	new e_id = user[playerid][jContrato];
	if (user[playerid][jContrato] == -1) return _Mensaje(playerid, 4, "b0b0b0", "No trabajas en ninguna empresa.");
	if (i_Empresa[e_id][eTipo] != 2) return _Mensaje(playerid, 4, "b0b0b0", "No trabajas en ninguna empresa mecánica.");
	new playerid2;
	if (sscanf(params, "i", playerid2)) { return _Mensaje(playerid, 3, "0", "/precios [id jugador]"); }
	if (!CercaDelWeon(4.0, playerid, playerid2)) return _Mensaje(playerid, 4, "b00000", "Ese jugador está muy lejos.");
	Mensaje_(playerid2, 0xffffffff, "Carrocería: {00c200}350${ffffff} - Motor: {00c200}300${ffffff}");
	Mensaje_(playerid2, 0xffffffff, "Ruedas: {00c200}50${ffffff} - Gasolina: {00c200}100${ffffff} - Pintura: {00c200}32$");
	Mensaje_(playerid, 0xffffffff, "Ya le mostraste los precios, espera repuesta.");
	return 1;
}
CMD:eseguro(playerid)
{
	new e_id = user[playerid][jEmpresaKey], e_id2 = user[playerid][jContrato];
    if (e_id != -1 && (_enPos(playerid, 3.0, i_Empresa[e_id][eExteriorX], i_Empresa[e_id][eExteriorY], i_Empresa[e_id][eExteriorZ]) || _enPos(playerid, 3.0, i_Empresa[e_id][eInteriorX], i_Empresa[e_id][eInteriorY], i_Empresa[e_id][eInteriorZ])))
	{
		if (!i_Empresa[e_id][eSeguro])
		{
            i_Empresa[e_id][eSeguro] = 1;
            AccionesRol(playerid, 0, "saca sus llaves de empresa y la abre.");
            TextoPantalla(playerid, "~g~Empresa abierta", 3500, 1);
        }
		else if (i_Empresa[e_id][eSeguro])
		{
            i_Empresa[e_id][eSeguro] = 0;
            AccionesRol(playerid, 0, "saca sus llaves de empresa y la cierra.");
            TextoPantalla(playerid, "~r~Empresa Cerrada", 3500, 1);
        }
        save_Empresa(e_id);
    } else if (e_id2 != -1 && (_enPos(playerid, 3.0, i_Empresa[e_id2][eExteriorX], i_Empresa[e_id2][eExteriorY], i_Empresa[e_id2][eExteriorZ]) || _enPos(playerid, 3.0, i_Empresa[e_id2][eInteriorX], i_Empresa[e_id2][eInteriorY], i_Empresa[e_id2][eInteriorZ]))) {
        if (!i_Empresa[e_id2][eSeguro])
		{
            i_Empresa[e_id2][eSeguro] = 1;
            AccionesRol(playerid, 0, "saca sus llaves de empresa y la abre.");
            TextoPantalla(playerid, "~g~Empresa abierta", 3500, 1);
        }
		else if (i_Empresa[e_id2][eSeguro])
		{
            i_Empresa[e_id2][eSeguro] = 0;
            AccionesRol(playerid, 0, "saca sus llaves de empresa y la cierra.");
            TextoPantalla(playerid, "~r~Empresa Cerrada", 3500, 1);
        }
        save_Empresa(e_id2);
    } else _Mensaje(playerid, 0, "560", "No tienes una empresa o no estás cerca de la puerta para hacer esto.");
    return 1;
}

CMD:mercancia(playerid)
{
	new e_id = user[playerid][jContrato];
	if (user[playerid][jContrato] == -1) return _Mensaje(playerid, 4, "b0b0b0", "No trabajas en ninguna empresa.");
	if (i_Empresa[e_id][eTipo] != 1) return _Mensaje(playerid, 4, "b0b0b0", "No trabajas en ninguna empresa de repartos.");
	if (r_negocio[playerid] == -1) return _Mensaje(playerid, 4, "b0b0b0", "No te encuentras en ningún pedido, usa /repartos.");
	if (r_vehiculo[playerid] == 0) return _Mensaje(playerid, 4, "b0b0b0", "No has cargado ningún vehículo con mercancía.");
	if (r_vehiculo[playerid] != GetPVarInt(playerid, "veh_bajo")) return _Mensaje(playerid, 4, "b0b0b0", "No bajaste del vehículo que cargaste la mercancía, búscalo.");
	new n_id = r_negocio[playerid];
	if (!_enPos(playerid, 3.0, i_Negocio[n_id][nExteriorX], i_Negocio[n_id][nExteriorY], i_Negocio[n_id][nExteriorZ])) return _Mensaje(playerid, 4, "b0b0b0", "No estás en la puerta del negocio.");
	i_Negocio[n_id][nProductos] += 1005;
	i_Negocio[n_id][nPedido]--;

	_Mensaje(playerid, 4, "84C000", "Recibiste el 40 por ciento del dinero, el resto fue a la empresa.");
	i_Empresa[e_id][eDinero] += floatround(dinero_productos(n_id)*0.6);
	DarDineroGC(playerid, floatround(dinero_productos(n_id)*0.4));
	save_Negocio(r_negocio[playerid]);
	save_Empresa(e_id);
	i_Negocio[r_negocio[playerid]][EnPedido] = 0;
	r_negocio[playerid] = -1;
	r_vehiculo[playerid] = 0;
	return 1;
}

CMD:repartos(playerid)
{
	new e_id = user[playerid][jContrato];
	if (user[playerid][jContrato] == -1) return _Mensaje(playerid, 4, "b0b0b0", "No trabajas en ninguna empresa.");
	if (i_Empresa[e_id][eTipo] != 1) return _Mensaje(playerid, 4, "b0b0b0", "No trabajas en ninguna empresa de repartos.");
	if (!_enPos(playerid, 3.0, i_Empresa[e_id][eExteriorX], i_Empresa[e_id][eExteriorY], i_Empresa[e_id][eExteriorZ])) return _Mensaje(playerid, 4, "b0b0b0", "No estás cerca del punto de la empresa.");
	new Str[256], Str_[3000], i_ = 0;
	for (new i = 0; i < MAX_NEGOCIOS; i++)
	{
		if (i_Negocio[i][nPedido] > 0)
		{
			Formato(Str, "» {FFEA5F}(%s)\n", i_Negocio[i][nNombre]);
			strcat(Str_, Str);
			Formato(Str, "GPS_Puto_%d", i_);
			SetPVarInt(playerid, Str, i);
			i_++;
		}
	}
	if (i_ == 0) Dialog(playerid, D_INVALIDO, DIALOG_STYLE_LIST, "{D6E1EB}Repartir productos", "No hay negocios con solicitud de productos.", "Seleccionar", "Cancelar");
	Dialog(playerid, D_Repartos, DIALOG_STYLE_LIST, "{D6E1EB}Repartir productos", Str_, "Seleccionar", "Cancelar");
	return 1;
}

CMD:quitarempresa(playerid, params[])
{
	new string[256];
	if (!sscanf(params, "d", params[0]))
	{
		if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
		if (user[playerid][jAdmin] >= 10)
		{
            user[params[0]][jEmpresaKey] = INVALID_NEGOCIO_ID;
            format(string, 128, "[AvisoAdmin]: {FFFFFF}Game Admin %s utilizó '/quitarempresa', Jugador: %s[ID:%d].", NombreRJugador(playerid), NombreRJugador(params[0]),params[0]);
            MensajeAdmin(string);
        } else _Mensaje(playerid, 0, "728", "Tú no tienes acceso a el comando /quitarempresa.");
    } else _Mensaje(playerid, 3, "0", "/quitarempresa [id jugador]");
    return 1;
}

CMD:irempresa(playerid, params[])
{
	new e_id, string[128];
    if (user[playerid][jAdmin] < 1) return _Mensaje(playerid, 0, "550", "Tú no tienes acceso a el comando /Irempresa.");
	if (sscanf(params, "i", e_id)) return _Mensaje(playerid, 3, "0", "/irempresa [id empresa]");
    if (e_id < 0 || e_id >= MAX_EMPRESAS) return _Mensaje(playerid, 0, "453", "ID de empresa errónea.");
    if (!i_Empresa[e_id][eTipo]) return _Mensaje(playerid, 0, "548", "ID empresa inválida.");
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerInterior(playerid, 0);
    SetPlayerPos(playerid, i_Empresa[e_id][eExteriorX], i_Empresa[e_id][eExteriorY], i_Empresa[e_id][eExteriorZ]);
    format(string, sizeof(string), " Usted se teletransporto a la empresa ID %d.", e_id);
    _Mensaje(playerid, 4, "ffffff", string);
    return 1;
}

CMD:venderempresa(playerid)
{
	new string[128], e_id = user[playerid][jEmpresaKey];
	if (e_id == -1) return _Mensaje(playerid, 0, "736", "No tienes ninguna empresa.");

	if (_enPos(playerid, 3.0, i_Empresa[e_id][eExteriorX], i_Empresa[e_id][eExteriorY], i_Empresa[e_id][eExteriorZ]))
	{
		if (e_id != -1 && strcmp(NombreRJugador(playerid), i_Empresa[e_id][eDueno], true) == 0)
		{
			new precio = i_Empresa[e_id][ePrecio];
			Ganancia(playerid, precio);
			format(string, sizeof(string), "Has vendido tu empresa. Has recuperado %d$", precio);
			_Mensaje(playerid, 4, "ffffff", string);
			i_Empresa[e_id][eSeguro] = 1;
			i_Empresa[e_id][eComprado] = 0;
			i_Empresa[e_id][eSeguro] = 0;
			format(i_Empresa[e_id][eDueno], 32, "enventa");
			_EmpresaP(e_id);
			save_Empresa(e_id);

			user[playerid][jEmpresaKey] = -1;
		} else _Mensaje(playerid, 0, "737", "Esta empresa no está a tu nombre.");
	} else _Mensaje(playerid, 0, "738", "Debes estar cerca de tu empresa para venderla.");
	return 1;
}

CMD:comprarempresa(playerid)
{
	new string[128];
	if (user[playerid][j_Mascara] == 1) return _Mensaje(playerid, 0, "0", "No puedes comprar una propiedad con /mascara.");
	for (new e_id = 0; e_id < MAX_EMPRESAS; e_id++)
	{
		if (_enPos(playerid, 2.0, i_Empresa[e_id][eExteriorX], i_Empresa[e_id][eExteriorY], i_Empresa[e_id][eExteriorZ]))
		{
			if (i_Empresa[e_id][eComprado] == 1) return _Mensaje(playerid, 0, "553", "Esta empresa ya tiene dueño.");
			if (user[playerid][jEmpresaKey] != -1) return _Mensaje(playerid, 0, "553", "Ya posees una empresa.");
			if (ComprobarDineroJ(playerid) >= i_Empresa[e_id][ePrecio])
			{
				DarDineroGC(playerid, -i_Empresa[e_id][ePrecio]);
				user[playerid][jEmpresaKey] = e_id;
				i_Empresa[e_id][eComprado] = 1;
				strmid(i_Empresa[e_id][eDueno], NombreRJugador(playerid), 0, strlen(NombreRJugador(playerid)), 255);
				_EmpresaP(e_id);
				_Mensaje(playerid, 4, "b0b0b0", "¡Felicitaciones!, has comprado esta empresa.");
				format(string, sizeof(string), "Registros: %s ha comprado la empresa id %d.", NombreRJugador(playerid), e_id);
				Log("Registros/Empresas.log", string);
				save_Empresa(e_id);
				GuardarCuenta(playerid);
				return 1;
			} else _Mensaje(playerid, 0, "555", "No tienes fondos suficientes para comprarte este negocio.");
		}
	}
	return 1;
}

CMD:comprarcoches(playerid)
{
	if (user[playerid][jEmpresaKey] == -1) return _Mensaje(playerid, 4, "b0b0b0", "No eres dueño de ninguna empresa.");
	new e_id = user[playerid][jEmpresaKey];
	if (i_Empresa[e_id][eTipo] == 1)
	{
		Dialog(playerid, D_VehEmpresa, DIALOG_STYLE_LIST, "Catálogo: {D6E1EB}Vehículos para empresas", "\n\
		{ffffff}Bobcat - {A7CE00}9,500$\n\
		{ffffff}Securicar - {A7CE00}11,300$\n\
		{ffffff}Rumpo - {A7CE00}8,200$\n\
		{ffffff}Sanchez - {A7CE00}8,700$\n\
		{ffffff}Burrito - {A7CE00}18,000$\n\
		{ffffff}Boxville - {A7CE00}22,400$\n\
		{ffffff}Benson - {A7CE00}16,700$\n\
		{ffffff}Towtruck - {A7CE00}20,000$", "Seleccionar", "Cancelar");
	}
	else if (i_Empresa[e_id][eTipo] == 2)
	{
		Dialog(playerid, D_VehEmpresa, DIALOG_STYLE_LIST, "Catálogo: {D6E1EB}Vehículos para empresas", "\n\
		{ffffff}Utility Van - {A7CE00}18,500$\n\
		{ffffff}Towtruck - {A7CE00}20,000$\n\
		{ffffff}Sanchez - {A7CE00}8,700$\n\
		{ffffff}Premier - {A7CE00}20,000$", "Seleccionar", "Cancelar");
	}
	return 1;
}

CMD:darempleo(playerid, params[])
{
	new string[256];
	if (user[playerid][jEmpresaKey] == -1) return _Mensaje(playerid, 4, "b0b0b0", "No eres dueño de ninguna empresa.");
	if (i_Empresa[user[playerid][jEmpresaKey]][eMiembros] >= MAX_MEMBERS-1) return _Mensaje(playerid, 4, "b0b0b0", "Ya alcanzaste el máximo de empleados en tu empresa.");
	if (sscanf(params, "i", params[0])) return _Mensaje(playerid, 3, "0", "/darempleo [id jugador]");
	if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "367", "Jugador desconectado.");
	if (user[params[0]][jContrato] != -1) return _Mensaje(playerid, 0, "367", "Ese jugador ya posee un contrato con una empresa.");
	if (TomandoTrabajo[params[0]] != -1) return _Mensaje(playerid, 0, "368", "Este jugador está en otra tarea, espera.");

	NumeroEmpresa[params[0]] = user[playerid][jEmpresaKey];
	TomandoTrabajo[params[0]] = playerid;
	format(string, sizeof(string), "\n{b0b0b0}{FFFFFF} %s te ofreció empleo en {b0b0b0}'%s'\n\n{b0b0b0}{FFFFFF} ¿Aceptas la propuesta?", NombreJugador(playerid), i_Empresa[user[playerid][jEmpresaKey]][eNombre]);
	Dialog(params[0], D_Iempresa, DIALOG_STYLE_MSGBOX, "{D6E1EB}Contrato", string, "Aceptar", "Rechazar");
	format(string, sizeof(string), "* Ofreciste empleo a %s en tu empresa, espera la respuesta de él.", NombreJugador(params[0]));
	_Mensaje(playerid, 4, "33CCFF", string);

	return 1;
}

CMD:infoempresa(playerid)
{
	if (user[playerid][jEmpresaKey] == -1) return _Mensaje(playerid, 0, "367", "No eres dueño de ninguna empresa.");
	new pathpro[60];
	format(pathpro, sizeof(pathpro), "Empresas/iEmpresa_%d.pro",  user[playerid][jEmpresaKey]);
	if(!fexist(pathpro)) return _Mensaje(playerid, 0, "367", "No se encontró el archivo de información de la empresa, tienes que tener almenos un miembro.");
	new string[35], idusuarios = 0, nombre[25], horasjugadas, asco[55], dialogo[45*MAX_MEMBERS] = "Nombre\tHoras\tEstado\n", andaconectado;
	new File:llavesita = fopen(pathpro ,io_read);
	while(fread(llavesita, string))
	{
		strdel(string, strlen(string)-4, strlen(string));
        if (sscanf(string, "s[25]d", nombre, horasjugadas))
        {
			format(asco,sizeof(asco),"miembroinfo%d",idusuarios);
			SetPVarString(playerid,asco,string);
			idusuarios++;
			sscanf(nombre, "u", andaconectado);
			if (IsPlayerConnected(andaconectado))
			{
				format(asco, sizeof(asco), "%s\t%d\t{00c200}Conectado\n", nombre, user[andaconectado][jHorasE]);
			}
			else
			{
				format(asco, sizeof(asco), "%s\t%d\t{b00000}Desconectado\n", nombre, horasjugadas);
			}
			strcat(dialogo, asco);
		}
	}
	if(idusuarios == 0) ShowPlayerDialog(playerid, D_INVALIDO, DIALOG_STYLE_LIST, "Información de la empresa", "No se encontaron miembros", "Salir", "");
	else ShowPlayerDialog(playerid, DIALOGO_EMPRESA, DIALOG_STYLE_TABLIST_HEADERS, "Información de la empresa", dialogo, "Opciones", "Salir");
	fclose(llavesita);
	return 1;
}

CMD:salirempleo(playerid)
{
	new string[158];
	if (user[playerid][jContrato] == -1) return _Mensaje(playerid, 4, "b0b0b0", "No eres empleado de ninguna empresa.");
	foreach(Player, i) if (IsPlayerConnected(i))
		if (user[i][jEmpresaKey] == user[playerid][jContrato])
		{
			format(string, sizeof(string), "* Pidió su renuncia hace poco de tu empresa.", NombreJugador(playerid));
			_Mensaje(i, 4, "33CCFF", string);
		}

	i_Empresa[user[playerid][jContrato]][eMiembros]--;
	format(string, sizeof(string), "* Ahora ya no trabajas para la empresa '%s'.", i_Empresa[user[playerid][jContrato]][eNombre]);
	_Mensaje(playerid, 4, "b0b0b0", string);

	new linea = 0, siono = -1, string2[60];
	format(string2, sizeof(string2), "Empresas/iEmpresa_%d.pro", user[playerid][jContrato]);
	new File:llavesita = fopen(string2 ,io_read);
	if(llavesita)
	{
		while(fread(llavesita, string))
		{
			linea++;
			if(strfind(string, N_Apellido(playerid), true) != -1)
			{
				siono = linea;
				break;
			}
		}
		if(siono != -1) fdeleteline(string2, siono);
	}
	fclose(llavesita);

	user[playerid][jContrato] = -1;
	user[playerid][jHorasE] = 0;
	return 1;
}

fdeleteline(filename[], line)
{
	new count, string[256], File:file, File:temp;
	file= fopen(filename, io_read);
	temp = fopen("tmpfile.tmp", io_write);
	while (fread(file, string))
		if (++count != line)
		{
		    fwrite(temp, string);
			fclose(file);
		}
	fclose(temp);
	file= fopen(filename, io_write);
	temp = fopen("tmpfile.tmp", io_read);
	while (fread(temp, string))
		fwrite(file, string);
	fclose(file);
	fclose(temp);
	fremove("tmpfile.tmp");
}

CMD:crearempresa(playerid, params[])
{
	new string[128];
	if (user[playerid][jAdmin] < 10) return _Mensaje(playerid, 0, "556", "Tú no tienes acceso a el comando /crearempresa.");
	if (sscanf(params, "iii", params[0], params[1], params[2]))
	{
		_Mensaje(playerid, 3, "0", "/crearempresa [tipo] [precio] [espacio]");
		_Mensaje(playerid, 1, "1) Reparto | 2) Mecánica", "Tipos:");
		return 1;
	}
	new tipo = params[0], precio = params[1], espacio = params[2];
	if (tipo < 1 || tipo > 3) return _Mensaje(playerid, 4, "b0b0b0", "Las empresas están entre 1 - 3.");
	if (espacio < 1 || espacio > 3) return _Mensaje(playerid, 4, "b0b0b0", "Las mecánica están entre 1 - 3.");
	for (new e_id = 0; e_id < MAX_EMPRESAS; e_id++)
	{
		if (!i_Empresa[e_id][eTipo])
		{
			i_Empresa[e_id][eTipo] = tipo;
			i_Empresa[e_id][eSeguro] = 0;
			i_Empresa[e_id][ePrecio] = precio;
			format(i_Empresa[e_id][eDueno], 32, "enventa");
			i_Empresa[e_id][eComprado] = 0;

			if (tipo == 1) // reparto
			{
				GetPlayerPos(playerid, i_Empresa[e_id][eExteriorX], i_Empresa[e_id][eExteriorY], i_Empresa[e_id][eExteriorZ]);
				GetPlayerFacingAngle(playerid, i_Empresa[e_id][eExteriorR]);

				i_Empresa[e_id][eInteriorX] = 1033.6868;
				i_Empresa[e_id][eInteriorY] = 1204.3094;
				i_Empresa[e_id][eInteriorZ] = 10.8488;
				i_Empresa[e_id][eInteriorR] = 357.1075;
				i_Empresa[e_id][eInterior] = 15;
				format(i_Empresa[e_id][eNombre], 32, "Empresa de reparto");
			}
			else if (tipo == 2) // mecánica
			{
				GetPlayerPos(playerid, i_Empresa[e_id][eExteriorX], i_Empresa[e_id][eExteriorY], i_Empresa[e_id][eExteriorZ]);
				GetPlayerFacingAngle(playerid, i_Empresa[e_id][eExteriorR]);
				GetPosInFrontOfPlayer(playerid, i_Empresa[e_id][eExteriorX_V], i_Empresa[e_id][eExteriorY_V], 2);

				format(i_Empresa[e_id][eNombre], 32, "Taller mecánico");
				if (espacio == 1) //
				{
				    i_Empresa[e_id][eEspacio] = 1;
					i_Empresa[e_id][eInterior] = 22;
					i_Empresa[e_id][eInteriorX] = 1874.7659;
					i_Empresa[e_id][eInteriorY] = -2203.8647;
					i_Empresa[e_id][eInteriorZ] = 13.2516;
					i_Empresa[e_id][eInteriorR] = 0.6926;
				}
				else if (espacio == 2) //
				{
				    i_Empresa[e_id][eEspacio] = 2;
					i_Empresa[e_id][eInterior] = 21;
					i_Empresa[e_id][eInteriorX] = 1893.3794;
					i_Empresa[e_id][eInteriorY] = -2203.5474;
					i_Empresa[e_id][eInteriorZ] = 13.2516;
					i_Empresa[e_id][eInteriorR] = 357.4664;
				}
				else if (espacio == 3) //
				{
				    i_Empresa[e_id][eEspacio] = 3;
					i_Empresa[e_id][eInterior] = 20;
					i_Empresa[e_id][eInteriorX] = 1879.5406;
					i_Empresa[e_id][eInteriorY] = -2216.0437;
					i_Empresa[e_id][eInteriorZ] = 13.2514;
					i_Empresa[e_id][eInteriorR] = 4.1174;
				}
            }
            _EmpresaP(e_id);
            format(string, sizeof(string), "Registros: Super Head Admin %s ha creado una empresa (empresa ID %d).", NombreRJugador(playerid), e_id);
            Log("Registros/Empresas.log", string);
            save_Empresa(e_id);
            e_id = MAX_EMPRESAS;
        }
    }
    return 1;
}

CMD:borrarempresa(playerid, params[])
{
	new string[128];
	if (user[playerid][jAdmin] < 10) return _Mensaje(playerid, 0, "558", "Tú no tienes acceso a el comando /Borrarempresa.");
	if (sscanf(params, "i", params[0])) return _Mensaje(playerid, 3, "0", "/borrarempresa [id empresa]");
	new id = params[0];
	if (!i_Empresa[id][eTipo]) return _Mensaje(playerid, 0, "548", "ID empresa inválida.");
	foreach(Player, i)
	{
		if (IsPlayerConnected(i))
		{
			if (user[i][jEmpresaKey] == id)
			{
				user[i][jEmpresaKey] = -1;
				format(string, sizeof(string), "* Super Head Admin %s ha borrado tu empresa (STAFF).", NombreRJugador(playerid));
				_Mensaje(i, 4, "b0b0b0", string);
			}
		}
	}
	format(i_Empresa[id][eNombre], 32, "nada");
	format(i_Empresa[id][eDueno], 32, "enventa");
	i_Empresa[id][eTipo] = 0;
	i_Empresa[id][eSeguro] = 0;
	i_Empresa[id][eComprado] = 0;
	i_Empresa[id][eExteriorX] = 0.0;
	i_Empresa[id][eExteriorY] = 0.0;
	i_Empresa[id][eExteriorZ] = 0.0;
	i_Empresa[id][eExteriorR] = 0.0;
	i_Empresa[id][eExteriorX_V] = 0.0;
	i_Empresa[id][eExteriorY_V] = 0.0;
	i_Empresa[id][eInteriorX] = 0.0;
	i_Empresa[id][eInteriorY] = 0.0;
	i_Empresa[id][eInteriorZ] = 0.0;
	i_Empresa[id][eInteriorR] = 0.0;
	i_Empresa[id][eDinero] = 0;
	i_Empresa[id][ePrecio] = 0;
	i_Empresa[id][eInterior] = 0;
	DestroyDynamicPickup(i_Empresa[id][eIcono]);
	_Empresa2P(id);
	save_Empresa(id);
	return 1;
}

CMD:expulsarfaccion(playerid, params[])
{
	if (!Es_Faccion(playerid, 1)) return _Mensaje(playerid, 0, "200", "No formas parte de LSPD.");
	if (user[playerid][jLider] != 1) return _Mensaje(playerid, 0, "200", "No eres líder de LSPD");
    new pID;
 	if (sscanf(params, "u", pID)) return _Mensaje(playerid, 3, "0", "/expulsarfaccion Nombre_Apellido");
 	if (IsPlayerConnected(pID)) return _Mensaje(playerid, 0, "75", "Jugador está conectado.");
	new fcuenta[120];
	format(fcuenta, sizeof(fcuenta), DATOS_CUENTAS, params);
	if(!fexist(fcuenta)) return Mensaje_(playerid, -1, "Esta cuenta no existe.");
	INI_ParseFile(fcuenta, "CargarFaccion", .bExtra = true, .extra = playerid);
	if(xDias[playerid] != 1) return Mensaje_(playerid, C_GCRP, "Este usuario no es LSPD.");
    new INI: File = INI_Open(fcuenta);
    INI_WriteInt(File, "LiderFac", 0);
    INI_WriteInt(File, "MiembroFac", 0);
    INI_WriteInt(File, "RangoFac", 0);
    INI_Close(File);
    format(fcuenta, sizeof(fcuenta), "Expulsaste a %s de la facción.", params);
    _Mensaje(playerid, 2, "0", fcuenta);
	return 1;
}

funcion CargarFaccion(playerid, name[], value[]) {
	INI_Int("MiembroFac", xDias[playerid]);
	return 1;
}

CMD:transmisionmusica(playerid)
{
    if (!Es_Faccion(playerid, 3)) return _Mensaje(playerid, 0, "200", "No formas parte de SAN.");
    if (user[playerid][jRango] < 4) _Mensaje(playerid, 0, "418", "Usted debe ser al menos rango 4.");
	if(SanMusic == 0)
	{
        _MensajeSAN(0x00DC76FF, "[SAN] Inicio de transmisión de música por SAN MUSIC. ((/sintonizar))");
        SanMusic = 1;
        return 1;
	}
	if(SanMusic == 1)
	{
        _MensajeSAN(0x00DC76FF, "[SAN] Termina transmisión de música por SAN MUSIC.");
        SanMusic = 0;
        return 1;
	}
	return 1;
}

CMD:musicacnn(playerid, params[])
{
    if (!Es_Faccion(playerid, 3)) return _Mensaje(playerid, 0, "200", "No formas parte de SAN.");
    if (user[playerid][jRango] < 2) _Mensaje(playerid, 0, "418", "Usted debe ser al menos rango 2.");
	if(SanMusic == 0) _Mensaje(playerid, 0, "200", "No hay una transmision de música activa. ");
	if (isnull(params)) return _Mensaje(playerid, 3, "0", "/musicacnn [nombre de la canción]");
	new chao[148], chao2[148];
	format(chao, sizeof(chao), "https://6t.pe/?song=%s", params);
	format(chao2, sizeof(chao2), "[SAN] Sonando actualmente: %s.", params);
    foreach(Player, a)
	{
        if(B_SANMUSIC[a] == 1)
        {
            StopAudioStreamForPlayer(a);
            EscucharMusica(a, chao);
            Mensaje_(a, 0x00DC76FF, chao2);
        }
    }
	return 1;
}

CMD:sintonizar(playerid)
{
	if(B_SANMUSIC[playerid] == 0)
	{
	    _Mensaje(playerid, 4, "A7CE00", "Sintonizas a la transmisión de música de SAN MUSIC.");
	    B_SANMUSIC[playerid] = 1;
	    return 1;
	}
	if(B_SANMUSIC[playerid] == 1)
	{
	    _Mensaje(playerid, 4, "A7CE00", "Dejaste de sintonizar a SAN MUSIC.");
   		B_SANMUSIC[playerid] = 0;
   		StopAudioStreamForPlayer(playerid);
   		return 1;
	}
	return 1;
}

CMD:altavoz(playerid)
{
	if(Altavoz[playerid] == 0)
	{
		Altavoz[playerid] = 1;
		_Mensaje(playerid, 4, "A7CE00", "Altavoz activado.");
	} else {
		Altavoz[playerid] = 0;
		_Mensaje(playerid, 4, "A7CE00", "Altavoz desactivado.");
	}
	return 1;
}

//--- Job: Delincuente robar caja -- modificado en la 2.0.X
CMD:robarcaja(playerid)
{
    if (user[playerid][jHabilidad][3] < 29) return _Mensaje(playerid, 4, "b00000", " Habilidad mínima para este comando (30).");
	new _txt[128];
	if (!Es_job(playerid, 2)) return _Mensaje(playerid, 0, "681", "No eres delicuente.");
	if (!_Dnegocio(playerid, 5.0) || (GetPlayerVirtualWorld(playerid) < 300)) return _Mensaje(playerid, 4, "b00000", "No te encuentras dentro de un negocio.");
	if (user[playerid][jm_Derecha] != 128 && user[playerid][jm_Izquierda] != 128){ _Mensaje(playerid, 0, "9", "No tienes una palanca en ninguna mano."); return 1;}
	if (user[playerid][jTiempos][16] > 0) { format(_txt, sizeof(_txt), " Debes esperar %d minutos para hacer alguna acción ilegal.", user[playerid][jTiempos][16]); return _Mensaje(playerid, 4, "b00000", _txt); }
	new n_id = GetPlayerVirtualWorld(playerid) - 300;
	TogglePlayerControllable(playerid, 0);
	SetPVarInt(playerid, "Congelado", 1);
    QuitarManos(playerid);
	GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~y~tomando ~g~caja de dinero...",11000,3);
	SetTimerEx("_robocaja", 10000, false, "ii", playerid, n_id);
	ApplyAnimation(playerid, "DEALER", "DEALER_DEAL", 4.0, 0, 1, 1, 1, 1);
	new location[MAX_ZONE_NAME], string[256];
	Get2DZone(location, MAX_ZONE_NAME, i_Negocio[n_id][nExteriorX], i_Negocio[n_id][nExteriorY], i_Negocio[n_id][nExteriorZ]);
	format(string, sizeof(string), "*[CH|911|Central, S: 4A: Informo de robo en el negocio %s en %s.", i_Negocio[n_id][nNombre], location);
    _MensajeRfac(1, C_COLORPOLICIA, string, 1, 2);
	format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Jugador '%s' está robando el negocio (ID: %s).", user[playerid], i_Negocio[n_id]);
	MensajeAdmin(string);
	return 1;
}
CMD:rcaja(playerid, params[])
{
	new money[32];
	if (sscanf(params, "s[20]", params)) return _Mensaje(playerid, 3, "0", "/rcaja [sacar - guardar]");
	if (user[playerid][jm_Derecha] != 131){ _Mensaje(playerid, 0, "9", "No tienes ninguna caja registradora en manos."); return 1;}
	if (!strcmp(params, "sacar", true, 5))
	{
		if (sscanf(params, "s[20]s[20]", params, money)) return _Mensaje(playerid, 3, "0", "/rcaja [sacar - guardar]");
		if (!isnumeric(money)) return _Mensaje(playerid, 3, "0", "/rcaja [sacar - guardar]");
		new dinero = strval(money);
		if (dinero > user[playerid][jm_DerechaCant]) return _Mensaje(playerid, 4, "b0b0b0", "No posee ese dinero la caja registradora.");
		DarDineroGC(playerid, dinero);
		user[playerid][jm_DerechaCant] -= dinero;
		update_Manos(playerid);
		GuardarCuenta(playerid);
		new string[128];
		format(string, sizeof(string), "Sacaste de la caja %d$ dólares.", dinero);
		_Mensaje(playerid, 4, "b0b0b0", string);
    }
	else if (!strcmp(params, "guardar", true, 7))
	{
		if (sscanf(params, "s[20]s[20]", params, money)) return _Mensaje(playerid, 3, "0", "/rcaja [sacar - guardar]");
		if (!isnumeric(money)) return _Mensaje(playerid, 3, "0", "/rcaja [sacar - guardar]");
        new dinero = strval(money);
		if (dinero > ComprobarDineroJ(playerid)) return _Mensaje(playerid, 4, "b0b0b0", "No posees esa cantidad.");
		if (dinero < 1 || dinero > 30000) return _Mensaje(playerid, 4, "b0b0b0", "Máximo: $30.000.");
		if (user[playerid][jm_DerechaCant] > 35000) return _Mensaje(playerid, 4, "b0b0b0", "No puedes guardar tanto dinero (35.000$).");

		DarDineroGC(playerid, -dinero);
		user[playerid][jm_DerechaCant] += dinero;
		update_Manos(playerid);
		GuardarCuenta(playerid);
		new string[128];
		format(string, sizeof(string), "Guardaste en la caja (%d$) dólares.", dinero);
		_Mensaje(playerid, 4, "b0b0b0", string);
	}
	return 1;
}
funcion _robocaja(playerid, nid)
{
	new dinero = i_Negocio[nid][nDinero];
    if(user[playerid][jm_Derecha] == 0 && user[playerid][jm_Izquierda] == 0)
	{
		DeletePVar(playerid, "Congelado");
		TogglePlayerControllable(playerid, 1);
		ClearAnimations(playerid);
		ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0, 1);

	    PonerObjeto(playerid, 1, 131); user[playerid][jm_Derecha] = 131, user[playerid][jm_DerechaCant] = dinero;
		update_Manos(playerid);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);

		if (user[playerid][jHabilidad][3] < 60) user[playerid][jHabilidad][3] += 3;
		user[playerid][jTiempos][16] = 900;

		_Mensaje(playerid, 4, "A7CE00", "Cogiste la caja registradora (/robarcaja).");

        i_Negocio[nid][nDinero] -= user[playerid][jm_DerechaCant];
	} else return _Mensaje(playerid, 0, "9", "Debes tener las manos vacías.");
	return 1;
}

CMD:graffitis(playerid)
{
    if (user[playerid][jAdmin] < 2) return _Mensaje(playerid, 0, "492", "Tú no tienes acceso a el comando /graffitis.");
    new pro[100], pro2[1024], tgraffitis;
	for(new a = 0; a < MAX_GRAFFITIS; a++)
	{
	    if(Graffiti[a][gPosX] > 0.0)
	    {
	        tgraffitis++;
			format(pro, sizeof(pro), "ID: %d | Dueño: %s | POS: %0.2f,%0.2f,%0.2f\n", a, Graffiti[a][gDueno], Graffiti[a][gPosX], Graffiti[a][gPosY], Graffiti[a][gPosZ]);
			strcat(pro2, pro);
	    }
	}
 	if(tgraffitis > 0) ShowPlayerDialog(playerid, D_INVALIDO, DIALOG_STYLE_LIST, "Graffitis", pro2, "Aceptar", "");
 	else ShowPlayerDialog(playerid, D_INVALIDO, DIALOG_STYLE_LIST, "Graffitis", "Ninguno", "Aceptar", "");
 	return 1;
}

CMD:eliminargraffiti(playerid)
{
	for(new a = 0; a < MAX_GRAFFITIS; a++)
	{
		if(_enPos(playerid, 3.0, Graffiti[a][gPosX], Graffiti[a][gPosY], Graffiti[a][gPosZ]))
		{
			if(strcmp(N_Apellido(playerid), Graffiti[a][gDueno])) return _Mensaje(playerid, 4, "b00000", "Este graffiti no fue creado por ti.");
 			if(IsValidDynamicObject(Graffiti[a][gObjeto])) DestroyDynamicObject(Graffiti[a][gObjeto]);
			ResetGraffiti(a);
			new pro[148];
			format(pro, sizeof(pro), DATOS_GRAFFITIS, a);
			fremove(pro);
			Mensaje_(playerid, -1, "Borraste tu graffiti.");
			return 1;
		}
	}
	_Mensaje(playerid, 0, "492", "No estás cerca ningún graffiti.");
	return 1;
}

CMD:borrargraffiti(playerid, params[])
{
	if(user[playerid][jAdmin] < 4) return _Mensaje(playerid, 0, "492", "Tú no tienes acceso a el comando /borrargraffiti.");
	for(new a = 0; a < MAX_GRAFFITIS; a++)
	{
		if(Graffiti[a][gPosX] > 0.0)
		{
			if(_enPos(playerid, 3.0, Graffiti[a][gPosX], Graffiti[a][gPosY], Graffiti[a][gPosZ]))
			{
			    if(IsValidDynamicObject(Graffiti[a][gObjeto])) DestroyDynamicObject(Graffiti[a][gObjeto]);
				ResetGraffiti(a);
				new pro[148];
				format(pro, sizeof(pro), DATOS_GRAFFITIS, a);
				fremove(pro);
				format(pro, sizeof(pro), "[AvisoAdmin]: {FFFFFF} Game Admin %s(%d) borró un graffiti [ID:%d] ", NombreRJugador(playerid), playerid, a);
    			MensajeAdmin(pro);
			    return 1;
			}
		}
	}
	return 1;
}

CMD:irgraffiti(playerid, params[])
{
    if (user[playerid][jAdmin] < 2) return _Mensaje(playerid, 0, "492", "Tú no tienes acceso a el comando /irgraffiti.");
    if (sscanf(params, "i", params[0])) return _Mensaje(playerid, 3, "0", "/irgraffiti idgraffiti");
    if (params[0] < 0 || params[0] >= MAX_GRAFFITIS) return _Mensaje(playerid, 0, "453", "ID de graffiti inválido.");
    SetPlayerPos(playerid, Graffiti[params[0]][gPosX], Graffiti[params[0]][gPosY], Graffiti[params[0]][gPosZ]);
    _Mensaje(playerid, 2, "0", "Teleportado.");
	return 1;
}

CMD:graffiti(playerid) return cmd_creargraffiti(playerid);
CMD:creargraffiti(playerid)
{
	if(!user[playerid][jPuntosRol]) return _Mensaje(playerid, 0, "9", "Debes tener al menos un punto de rol.");
	if(user[playerid][j_Mascara] == 1) return _Mensaje(playerid, 0, "492", "No puedes crear graffitis si estás enmascarado.");
	if(user[playerid][jGraffitiE] != -1) return _Mensaje(playerid, 0, "492", "Ya estás editando un graffiti.");
	new maxpers;
	for(new a = 0; a < MAX_GRAFFITIS; a++)
	{
		if(Graffiti[a][gPosX])
		{
			if(!strcmp(N_Apellido(playerid), Graffiti[a][gDueno]))
			{
				maxpers++;
				if(maxpers > 1)
				{
					_Mensaje(playerid, 4, "b00000", "Imposible crear más de 2 graffitis.");
					return 1;
				}
			}
		}
	}
	for(new a = 0; a < MAX_GRAFFITIS; a++)
	{
		if(!Graffiti[a][gPosX])
		{
			if(user[playerid][jm_Derecha] != 71) return _Mensaje(playerid, 0, "492", "No tienes un Spray en tu mano derecha.");
			user[playerid][jm_DerechaCant]--;

			Graffiti[a][gPosX] = 5.0;
			user[playerid][jGraffitiE] = a;
			ShowPlayerDialog(playerid, D_GRAFFITI, DIALOG_STYLE_LIST, "Graffiti", "Texto\nColor\nFuente\nTamaño\nCrear", "Aceptar", "Salir");
			return 1;
		}
	}
	_Mensaje(playerid, 4, "b00000", "Se alcanzó el límite de graffitis.");
	return 1;
}

CMD:irobjetoadmin(playerid, params[])
{
	if (user[playerid][jAdmin] < 3) return _Mensaje(playerid, 0, "492", "Tú no tienes acceso a el comando /irobjetoadmin.");
	if (sscanf(params, "i", params[0])) return _Mensaje(playerid, 3, "0", "/irobjetoadmin idobjeto");
	if (params[0] < 0 || params[0] >= MAX_POBJETOS) return _Mensaje(playerid, 0, "453", "ID de objeto admin inválido.");
	SetPlayerPos(playerid, cObjeto[params[0]][pPosX], cObjeto[params[0]][pPosY], cObjeto[params[0]][pPosZ]);
	_Mensaje(playerid, 2, "0", "Teleportado.");
	return 1;
}

CMD:borrarobjetoadmin(playerid)
{
	if (user[playerid][jAdmin] < 3) return _Mensaje(playerid, 0, "492", "Tú no tienes acceso a el comando /borrarobjetoadmin.");
	for(new a = 0; a < MAX_POBJETOS; a++)
	{
		if(cObjeto[a][pOID] > 0)
		{
			if(_enPos(playerid, 3.0, cObjeto[a][pPosX], cObjeto[a][pPosY], cObjeto[a][pPosZ]))
			{
			    DestroyDynamicObject(cObjeto[a][pObjeto]);
			    cObjeto[a][pPosX] = 0.0;
			    cObjeto[a][pPosY] = 0.0;
			    cObjeto[a][pPosZ] = 0.0;
			    cObjeto[a][pPosRX] = 0.0;
			    cObjeto[a][pPosRY] = 0.0;
			    cObjeto[a][pPosRZ] = 0.0;
			    cObjeto[a][pVw] = 0;
			    cObjeto[a][pInt] = 0;
			    cObjeto[a][pOID] = 0;
			    GuardarObjetosAdmin();
			    return 1;
			}
		}
	}
	return 1;
}

CMD:objetosadmin(playerid)
{
    if (user[playerid][jAdmin] < 3) return _Mensaje(playerid, 0, "492", "Tú no tienes acceso a el comando /objetosadmin.");
    new pro[100], pro2[1024], tobjects;
	for(new a = 0; a < MAX_POBJETOS; a++)
	{
	    if(cObjeto[a][pOID] > 0)
	    {
	        tobjects++;
			format(pro, sizeof(pro), "ID: %d | OBJETO: %d |\n", a, cObjeto[a][pOID]);
			strcat(pro2, pro);
	    }
	}
 	if(tobjects > 0) ShowPlayerDialog(playerid, D_INVALIDO, DIALOG_STYLE_LIST, "Objetos admin", pro2, "Aceptar", "");
 	else ShowPlayerDialog(playerid, D_INVALIDO, DIALOG_STYLE_LIST, "Objetos admin", "Ninguno", "Aceptar", "");
	return 1;
}


CMD:crearobjetoadmin(playerid, params[])
{
    if (user[playerid][jAdmin] < 3) return _Mensaje(playerid, 0, "492", "Tú no tienes acceso a el comando /crearobjetoadmin.");
	if(isnull(params))
	{
		new OA[20];
    	OA[0] = 2636; OA[1] = 2121; OA[2] = 1811; OA[3] = 2748; OA[4] = 2763; OA[5] = 2644; OA[6] = 2188; OA[7] = 11691; OA[8] = 2111; OA[9] = 1824; OA[10] = 1896;
    	OA[11] = 1516; OA[12] = 15037; OA[13] = 2636; OA[14] = 3039; OA[15] = 3862; OA[16] = 3040; OA[17] = 3860; OA[18] = 8572; OA[19] = 19470;
    	ShowModelSelectionMenuEx(playerid, OA, 20, "Objetos	", D_OBJETOSADMIN);
	}
	else
	{
	    new modelid;
	    if (sscanf(params, "i", modelid)) return _Mensaje(playerid, 3, "0", "/crearobjetoadmin ID OBJETO");
	    new objeto = -1;
 		for(new a = 0; a < MAX_POBJETOS;a++)
	    {
			if(cObjeto[a][pOID] == 0)
			{
				objeto = a;
				break;
		    }
		}
  		if(objeto == -1) return _Mensaje(playerid, 4, "b00000", "Se alcanzó el límite de objetos admin.");
		GetPlayerPos(playerid, cObjeto[objeto][pPosX], cObjeto[objeto][pPosY], cObjeto[objeto][pPosZ]);
		cObjeto[objeto][pOID] = modelid;
		cObjeto[objeto][pObjeto]  = CreateDynamicObject(modelid, cObjeto[objeto][pPosX]-2.0, cObjeto[objeto][pPosY]-1.0, cObjeto[objeto][pPosZ], 0.0, 0.0, 0.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, MAX_RADIO_STREAM_MIN);
		cObjeto[objeto][pInt] = GetPlayerInterior(playerid);
		cObjeto[objeto][pVw] = GetPlayerVirtualWorld(playerid);
		EditDynamicObject(playerid, cObjeto[objeto][pObjeto]);
		SetPVarInt(playerid, "OBJ_ADM", 1);
	}
	return 1;
}

CMD:multicuenta(playerid, params[])
{
    if (user[playerid][jAdmin] < 5) return _Mensaje(playerid, 0, "492", "Tú no tienes acceso a el comando /Multicuenta.");
	new string[128], playerid2;
	if (sscanf(params, "d", playerid2)) return _Mensaje(playerid, 3, "0", "/multicuenta [id jugador]");
	if (!IsPlayerConnected(playerid2)) return _Mensaje(playerid, 0, "367", "Jugador desconectado.");

	new autoip[32]; GetPlayerIp(playerid2, autoip, 32);
	if (user[playerid2][jMulticuenta] == 0)
	{
		format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Head Game Admin %s autorizó la multicuenta a (%s).", NombreRJugador(playerid), NombreRJugador(playerid2));
		MensajeAdmin(string);
		format(string, sizeof(string), "Registros: Head Game Admin %s autorizó la multicuenta a %s [IP: %s]. (Autorizar multicuenta)", NombreRJugador(playerid), NombreRJugador(playerid2), autoip);
		Log("Registros/multicuentas.log", string);
		user[playerid2][jMulticuenta] = 1; // Multicuenta Autorizada.
	}
	else
	{
		format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Head Game Admin %s rechazó la multicuenta a %s. Sólo puede tener una cuenta.", NombreRJugador(playerid), NombreRJugador(playerid2));
		MensajeAdmin(string);
		format(string, sizeof(string), "Registros: Head Game Admin %s rechazó la multicuenta a %s [IP: %s]. (Rechazar multicuenta)", NombreRJugador(playerid), NombreRJugador(playerid2), autoip);
		Log("Registros/multicuentas.log", string);
		user[playerid2][jMulticuenta] = 0; // Mlticuenta No Autorizada.
	}
	return 1;
}

CMD:antibalas(playerid)
{
	if(user[playerid][jAdmin] >= 10)
	{
	    if(AntiG[Balas])
	    {
         	MensajeAdmin3("Anticheat de balas deshabilitado.");
         	AntiG[Balas] = false;
	    }
	    else
	    {
	        MensajeAdmin3("Anticheat de balas habilitado.");
	        AntiG[Balas] = true;
	    }
	}
	return 1;
}

CMD:cambios(playerid)
{
	new DialogStatus[1200];
	strcat(DialogStatus, "{CB2700}{FFFFFF}¡Bienvenidos! a Gangstes Roleplay España.\n");
	Dialog(playerid, D_INVALIDO, DIALOG_STYLE_MSGBOX, "{D6E1EB}Versión v.2.X", DialogStatus, "Cerrar", "");
	return 1;
}

CMD:maleterosd(playerid)
{
    if (Es_Faccion(playerid, 1))
	{
        if (user[playerid][jDivision] != 2) return _Mensaje(playerid, 0, "165", "No eres de la división SD.");
        new car, Float:distancia = 4.0, Float:vX, Float:vY, Float:vZ;
        for(new x=0; x <= MAX_VEHICLES; x++)
		{
            GetVehiclePos(x, vX, vY, vZ);
            if(_enPos(playerid, 4.0, vX, vY, vZ) && !EstaEnBicis(x)) { if(GetPlayerDistanceFromPoint(playerid, vX, vY, vZ) <= distancia)distancia = GetPlayerDistanceFromPoint(playerid, vX, vY, vZ), car = x; }
        }
        if(car == 0)return _Mensaje(playerid, 0, "391", "No se encontró ningún vehículo con el maletero abierto cerca.");
        new engine, lights, alarm, doors, bonnet, boot, objective;
        GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
        if (boot == VEHICLE_PARAMS_OFF || boot == VEHICLE_PARAMS_UNSET) return _Mensaje(playerid, 2, "0", "Necesitas tener el maletero abierto cerca.");
        if(SASD_Veh(car))
		{
            ver_MaleteroF(playerid, car);
            VehMaleteroPlayer[playerid] = car;
		}
		else _Mensaje(playerid, 0, "165", "No estás cerca de un vehículo de la Sheriff.");
    }
	else _Mensaje(playerid, 0, "165", "No eres de la facción Defensa.");
    return 1;
}

CMD:miembros(playerid)
{
	new miembro = user[playerid][jMiembro];

	if (user[playerid][jMiembro] == 0) return _Mensaje(playerid, 0, "687", "No perteneces a ninguna facción.");

	if (user[playerid][jMiembro] == 1)
	{
	    new conteo = 0, text[70];
		foreach(Player, i)
		{
			new _members[128], division[32];
			if (IsPlayerConnectedEx(i))
			{

				if (user[i][jDivision] == 0) division = "{ffffff}Sin asignación{b0b0b0}";
				else if (user[i][jDivision] == 1) division = "{9B9BFF}PD{b0b0b0}";
				else if (user[i][jDivision] == 2) division = "{00c200}SD{b0b0b0}";
				else if (user[i][jDivision] == 3) division = "{b00000}SD Prision{b0b0b0}";

				if (user[i][jMiembro] == miembro) format(_members, sizeof(_members), "[ID: %d] %s - Rango: %d (%s)", i, NombreRJugador(i), user[i][jRango], division), conteo++;
				if (strlen(_members) > 0) _Mensaje(playerid, 4, "b0b0b0", _members);
			}
		}
		format(text, sizeof(text), "Actualmente hay {1EB032}%d{ffffff} miembros conectados.", conteo);
		_Mensaje(playerid, 4, "ffffff", text);
	}
	else
	{
	    new conteo = 0, text[70];
		foreach(Player, i)
		{
			new _members[128];
			if (IsPlayerConnectedEx(i))
			{

				if (user[i][jMiembro] == miembro) format(_members, sizeof(_members), "[ID: %d] %s - Rango: %d", i, NombreRJugador(i), user[i][jRango]), conteo++;
				if (strlen(_members) > 0) _Mensaje(playerid, 4, "b0b0b0", _members);
			}
		}
		format(text, sizeof(text), "Actualmente hay ({1EB032}%d{ffffff}) miembros conectados.", conteo);
		_Mensaje(playerid, 4, "ffffff", text);
	}
	return 1;
}

CMD:invitar(playerid, params[])
{
	new ID_PFac = user[playerid][jLider],
	ID_PFam = user[playerid][jLiderFam];
	new string[256];
	if (!ID_PFac && !ID_PFam) return _Mensaje(playerid, 0, "367", "No eres lider de ninguna familia/facción.");
	if (sscanf(params, "ds[32]", params[0], params[1])) return _Mensaje(playerid, 3, "0", "/invitar [id jugador] [faccion ó famila]");
	if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "367", "Jugador desconectado.");
	if (isnumeric(params[1])) return _Mensaje(playerid, 0, "476", "No puedes colocar números (faccion ó familia).");
	if (TomandoTrabajo[params[0]] != -1) return _Mensaje(playerid, 0, "368", "Este jugador está en otra tarea, espera.");
	if (strlen(params[1]) > 20 || strlen(params[1]) < 6) { _Mensaje(playerid, 0, "476", "Escribe bien la invitación (faccion ó familia)."); return 1; }

	if (!strcmp(params[1], "faccion", true))
	{
		if (!ID_PFac) return _Mensaje(playerid, 0, "367", "No eres lider de ninguna facción.");
		if (user[params[0]][jLider]) return _Mensaje(playerid, 0, "367", "Ese jugador es lider.");
		if (user[params[0]][jMiembro]) return _Mensaje(playerid, 0, "367", "Ese jugador ya es miembro de una facción.");
		switch (user[playerid][jLider])
		{
			//legales
			case 1: NombreFaccion[params[0]] = "Defensa";
			case 2: NombreFaccion[params[0]] = "Mecánico";
			case 3: NombreFaccion[params[0]] = "Network";
			case 4: NombreFaccion[params[0]] = "Gobierno";
			case 5: NombreFaccion[params[0]] = "LSED";
		}
		NumeroFaccion[params[0]] = ID_PFac;
		TomandoTrabajo[params[0]] = playerid;
		format(string, sizeof(string), "\n{b0b0b0}{FFFFFF} %s te invitó a {00C200}'%s'\n\n{b0b0b0}{FFFFFF} ¿Aceptas la propuesta?", NombreJugador(playerid), NombreFaccion[params[0]]);
		Dialog(params[0], D_Ifaccion, DIALOG_STYLE_MSGBOX, "{D6E1EB}Ingreso", string, "Aceptar", "Rechazar");
		format(string, sizeof(string), "* Invitaste a %s a tu facción, espera la respuesta de él.", NombreJugador(params[0]));
		_Mensaje(playerid, 4, "33CCFF", string);
		return 1;
	}
	else if (!strcmp(params[1], "familia", true))
	{
		if (!ID_PFam) return _Mensaje(playerid, 0, "367", "No eres lider de ninguna familia.");
		if (user[params[0]][jLiderFam]) return _Mensaje(playerid, 0, "367", "Ese jugador es lider de una familia.");
		if (user[params[0]][jMiembroFam]) return _Mensaje(playerid, 0, "367", "Ese jugador ya es miembro de una familia.");
		NumeroFamilia[params[0]] = ID_PFam;
		TomandoTrabajo[params[0]] = playerid;
		format(string, sizeof(string), "\n{b0b0b0}{FFFFFF} %s te invitó a {00C200}'%s'\n\n{b0b0b0}{FFFFFF} ¿Aceptas la invitación?", NombreJugador(playerid), InfoFamilia[ID_PFam][fNombre]);
		Dialog(params[0], D_Ifamilia, DIALOG_STYLE_MSGBOX, "{D6E1EB}Ingreso", string, "Aceptar", "Rechazar");
		format(string, sizeof(string), "* Invitaste a %s a tu facción, espera la respuesta de él.", NombreJugador(params[0]));
		_Mensaje(playerid, 4, "33CCFF", string);
		return 1;
	}
	return _Mensaje(playerid, 3, "0", "/invitar [id jugador] [faccion ó famila]");
}
CMD:despedir(playerid, params[])
{
	if (user[playerid][jLider] == 0) return _Mensaje(playerid, 0, "370", "Usted no es lider de facción.");
	if (sscanf(params, "d", params[0])) return _Mensaje(playerid, 3, "0", "/despedir [id jugador]");
	if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
	if (user[playerid][jLider] == user[params[0]][jMiembro])
	{
	    new string[128];
	    format(string, sizeof(string), "Líder %s expulsó de la facción a %s.", NombreRJugador(playerid), NombreRJugador(params[0]));
		MensajeFaccion(user[playerid][jMiembro], C_LIGHTBLUE, string, user[playerid][jDivision]);

		user[params[0]][jLider] = 0;
		user[params[0]][jMiembro] = 0;
		user[params[0]][jRango] = 0;
		user[params[0]][jDivision] = 0;
		Skin_(params[0], 299);

	} else _Mensaje(playerid, 0, "371", "El jugador no pertenece a tu facción.");
	return 1;
}

CMD:darrango(playerid, params[])
{
	if (user[playerid][jLider] == 0) return _Mensaje(playerid, 0, "370", "No eres lider de facción.");
	if (sscanf(params, "dd", params[0], params[1])) return _Mensaje(playerid, 3, "0", "/darrango [id jugador] [rango]");
	if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "370", "Ese jugador no está conectado.");
	if (user[playerid][jLider] != user[params[0]][jMiembro]) return _Mensaje(playerid, 0, "370", "Ese jugador no es de tu facción.");
	if (Es_Faccion(playerid, 1))
	{
		if (user[playerid][jDivision] != user[params[0]][jDivision]) return _Mensaje(playerid, 0, "370", "Ese jugador no es de tu división.");
		if (user[playerid][jDivision] == 0) return _Mensaje(playerid, 4, "b0b0b0", " No estás asignado a ninguna división (/contratar).");
		if (params[1] > 12 || params[1] < 0) { _Mensaje(playerid, 4, "b0b0b0", " El máximo de rangos es de 12."); return 1; }
	}
	else if (Es_Faccion(playerid, 2))
	{
		if (params[1] > 5 || params[1] < 0) { _Mensaje(playerid, 4, "b0b0b0", " En (Mecánicos) el máximo de rangos es de 5."); return 1; }
	}
	else if (Es_Faccion(playerid, 3))
	{
		if (params[1] > 7 || params[1] < 0) { _Mensaje(playerid, 4, "b0b0b0", " En (Noticias) el máximo de rangos es de 7."); return 1; }
	}
	else if (Es_Faccion(playerid, 4))
	{
		if (params[1] > 7 || params[1] < 0) { _Mensaje(playerid, 4, "b0b0b0", " En (Gobierno) el máximo de rangos es de 7."); return 1; }
	}
	else if (Es_Faccion(playerid, 5))
	{
		if (params[1] > 12 || params[1] < 0) { _Mensaje(playerid, 4, "b0b0b0", " En (LSED) el máximo de rangos es de 12."); return 1; }
	}

	new string[128];
	user[params[0]][jRango] = params[1];
	format(string, sizeof(string), "Líder %s asignó rango %d al miembro %s.", NombreJugador(playerid), params[1], NombreJugador(params[0]));
	MensajeFaccion(user[playerid][jMiembro], C_LIGHTBLUE, string, user[playerid][jDivision]);

	return 1;
}
CMD:dardivision(playerid, params[])
{
	if (user[playerid][jLider] != 1) return _Mensaje(playerid, 0, "370", "Función solo para la facción Defensa.");
	if (sscanf(params, "ds[32]", params[0], params[1])) return _Mensaje(playerid, 3, "0", "/dardivision [id jugador] [PD - SD - SADOC]");
	if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "370", "Ese jugador no está conectado.");
	if (user[playerid][jLider] != user[params[0]][jMiembro]) return _Mensaje(playerid, 0, "370", "Ese jugador no es de tu facción.");

	if (strlen(params[1]) > 6 || strlen(params[1]) < 2) { _Mensaje(playerid, 0, "476", "Escribe bien división (PD - SD - SADOC)."); return 1; }

	if (!strcmp(params[1], "pd", true))
	{
	    if (user[params[0]][jDivision] == 1) return _Mensaje(playerid, 0, "370", "Ese jugador ya es PD.");

		if (user[params[0]][jLider] == 0) user[params[0]][jRango] = 0;
		else user[params[0]][jRango] = 12;

        user[params[0]][jDivision] = 1;

		new string[128];
		format(string, sizeof(string), "Líder %s asignó en la PD a %s.", NombreJugador(playerid), NombreJugador(params[0]));
		MensajeFaccion(1, C_LIGHTBLUE, string, 1);

	}
	else if (!strcmp(params[1], "sd", true))
	{
	    if (user[params[0]][jDivision] == 2) return _Mensaje(playerid, 0, "370", "Ese jugador ya es SD.");

		if (user[params[0]][jLider] == 0) user[params[0]][jRango] = 0;
		else user[params[0]][jRango] = 8;

        user[params[0]][jDivision] = 2;

		new string[128];
		format(string, sizeof(string), "Líder %s asignó en la SD a %s.", NombreJugador(playerid), NombreJugador(params[0]));
		MensajeFaccion(1, C_LIGHTBLUE, string, 2);

	}
	else if (!strcmp(params[1], "sadoc", true))
	{
	    if (user[params[0]][jDivision] == 3) return _Mensaje(playerid, 0, "370", "Ese jugador ya es SADOC.");

		if (user[params[0]][jLider] == 0) user[params[0]][jRango] = 0;
		else user[params[0]][jRango] = 2;

        user[params[0]][jDivision] = 3;

		new string[128];
		format(string, sizeof(string), "Líder %s asignó en la SADOC a %s.", NombreJugador(playerid), NombreJugador(params[0]));
		MensajeFaccion(1, C_LIGHTBLUE, string, 3);

	}
	return 1;
}

CMD:botiquin(playerid)
{
	if(user[playerid][jSangre] >= 80) return _Mensaje(playerid, 0, "229", "No necesitas el botiquin ahora mismo.");
	if(user[playerid][jm_Derecha] != 130 && user[playerid][jm_Izquierda] != 130) return _Mensaje(playerid, 0, "229", "No tienes ningún botiquin en alguna mano.");
	if(user[playerid][jm_Derecha] == 130) user[playerid][jm_DerechaCant]--;
	else user[playerid][jm_IzquierdaCant]--;
	CongelarEx(playerid, 15);
	ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 1, 1, 1, 1, 1, 1);
	AccionesRol(playerid, 0, "toma su botiquin de primeros auxilios y comienza a aplicarlo.");
	SetTimerEx("CurarBotiquin", 15000, false, "i", playerid);
	update_Manos(playerid);
	return 1;
}

funcion CurarBotiquin(playerid)
{
    ClearAnimations(playerid);
	new Float: health = user[playerid][jSangre];
	if (health >= 50) Sangre_(playerid, 100);
	else Sangre_(playerid, health + 50.0);
}
CMD:taclear(playerid, params[])
{
	if (!Es_Faccion(playerid, 1)) return _Mensaje(playerid, 0, "229", "No eres de la división SADOC.");
	if (user[playerid][jDivision] != 3) return _Mensaje(playerid, 0, "229", "No eres de la división SADOC.");
	if (sscanf(params, "u", params[0])) return _Mensaje(playerid, 3, "0", "* /taclear [id jugador].");
	if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "229", "Este usuario no está conectado.");
	if(!CercaDelWeon(5.0, playerid, params[0])) return _Mensaje(playerid, 0, "229", "Este usuario no está cerca tuyo.");
	if(params[0] == playerid) return _Mensaje(playerid, 0, "229", "No te puedes taclear a ti mismo.");

	CongelarEx(params[0], 10);
	ApplyAnimation(params[0], "PED", "KO_skid_front", 4.1, 0, 1, 1, 1, 1, 1);
	_Mensaje(params[0], 5, "0", "Has sido tacleado");
	new pro[144];
	format(pro, sizeof(pro), "Has tacleado a %s.", NombreJugador(params[0]));
	_Mensaje(playerid, 5, "0", pro);
	return 1;
}

CMD:altavozpf(playerid, params[])
{
	if (!Es_Faccion(playerid, 1)) return _Mensaje(playerid, 0, "229", "No eres de la división SADOC.");
	if (user[playerid][jDivision] != 3 && user[playerid][jDivision] != 2) return _Mensaje(playerid, 0, "229", "No eres de la división SADOC.");
	if (isnull(params)) return _Mensaje(playerid, 3, "0", "* /altavozpf [texto].");

	new texto[144];
	format(texto, sizeof(texto), "[Altavoz PF: [ID]:%d] %s o< %s]", playerid, NombreJugador(playerid), params);
	foreach(Player, a)
	{
		if(user[a][jEncarcelado] == 3 || _enPos(a, 130.0, 231.2809, 1914.1873, 17.6406) || _enPos(a, 50.0, 160.0098,-191.7577,342.9203))
		{
			Mensaje_(a, 0xFF9B6AFF, texto);
		}
	}
	return 1;
}

CMD:drivebug(playerid)
{
	if(!IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "229", "No estás en un vehículo.");
	if(GetPlayerState(playerid) != PLAYER_STATE_PASSENGER) return _Mensaje(playerid, 0, "229", "No estás en un vehículo de pasajero.");
	ApplyAnimation(playerid, "PED", "CAR_GETIN_RHS", 4.1, 0, 0, 0, 0, 1, 1);
	SetPlayerArmedWeapon(playerid, 0);
    SetTimerEx("desbugdrive", 500, false, "ii", playerid, GetPlayerWeapon(playerid));
    return 1;
}

funcion desbugdrive(playerid, arma)
{
    SetPlayerArmedWeapon(playerid, arma);
}

CMD:botondepanico(playerid) return cmd_bp(playerid);
CMD:botonpanico(playerid) return cmd_bp(playerid);
CMD:bp(playerid)
{
	if (!Es_Faccion(playerid, 1)) return _Mensaje(playerid, 0, "165", "No eres de la facción de defensa.");
	if (SolicitaRefuerzos[playerid] == 1 || BotonPanico[playerid] == 1) return _Mensaje(playerid, 0, "229", "Ya tienes un pedido de ayuda.");
	if (user[playerid][jMuerto2] == 2) return _Mensaje(playerid, 0, "229", "No puedes usar este comando muerto.");
	if (user[playerid][jDivision] == 0 || user[playerid][jDivision] == 3) return _Mensaje(playerid, 0, "229", "No eres de la división PD o SD.");

	new Float: px, Float: py, Float: pz, string[128];
	GetPlayerPos(playerid, px, py, pz);
	BotonPanico[playerid] = 1;
	AccionesRol(playerid, 0, "pulsó el botón de pánico.");
	format(string, sizeof(string), "*[CH|911|Central, S: 4A: %s ha pulsado el botón de pánico, se requiere asistencia urgente en su posición.", NombreJugador(playerid));
	_MensajeRfac(1, C_COLORRADIO, string, 1, 2);
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (IsPlayerConnected(i))
		{
			if (Es_Faccion(i, 1) && EnServicioPD[i] == 1)
			{
			    if (user[i][jDivision] == 1 || user[i][jDivision] == 2)
			    {
					SetPlayerMarkerForPlayer(i, playerid, 0xFFB400FF);
				}
			}
		}
	}
	_Mensaje(playerid, 3, "0", "/noref, para cancelar los refuerzos.");
	NoRefAuto[playerid] = SetTimerEx("NoRefAutoF2", 600000, false, "i", playerid);
	return 1;
}
funcion NoRefAutoF2(playerid)
{ //Deja de botón de pánico
	if(BotonPanico[playerid] == 0) return 1;
	new string[128];
	BotonPanico[playerid] = 0;
	format(string, sizeof(string), "*[CH|911|Central, S: 4A: A todas las unidades que están de apoyo, se canceló el pedido, los que estén presente esperar código 4 del superior.");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Es_Faccion(i, 1) && EnServicioPD[i] == 1)
			{
				if (user[i][jDivision] == 1 || user[i][jDivision] == 2)
			    {
					_Mensaje(i, 4, "9B9BFF", string);
					SetPlayerMarkerForPlayer(i, playerid, 0xFFFFFF00);
				}
			}
		}
	}
	_Mensaje(playerid, 2, "0", "Solicitud de refuerzos cancelada automáticamente.");
	return 1;
}

CMD:bpc(playerid) return cmd_bkc(playerid);
CMD:norefuerzos(playerid) return cmd_bkc(playerid);
CMD:noref(playerid) return cmd_bkc(playerid);
CMD:bkc(playerid)
{
	if (Es_Faccion(playerid, 1))
	{
		if (user[playerid][jDivision] == 0 || user[playerid][jDivision] == 3) return _Mensaje(playerid, 0, "229", "No eres de la división PD o SD.");
		if (SolicitaRefuerzos[playerid] == 0 && BotonPanico[playerid] == 0) return _Mensaje(playerid, 0, "165", "No estás solicitando refuerzos.");
		if (SolicitaRefuerzos[playerid] == 1) SolicitaRefuerzos[playerid] = 0;
		else BotonPanico[playerid] = 0;
		new string[128];
		format(string, sizeof(string), "*[CH|911|Central, S: 4A: A todas las unidades que están de apoyo, se canceló el pedido, los que estén presente esperar código 4 del superior.");
        _MensajeRfac(1, C_COLORRADIO, string, 1, 2);
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsPlayerConnected(i))
			{
				if (Es_Faccion(i, 1) && EnServicioPD[i] == 1)
				{
					if (user[i][jDivision] == 1 || user[i][jDivision] == 2) {
						DisablePlayerCheckpoint(i);
						_Mensaje(i, 4, "9B9BFF", string);
						DeletePVar(i, "EnCheckPoint");
						SetPlayerMarkerForPlayer(i, playerid, 0xFFFFFF00);
	 				}
				}
			}
		}
		KillTimer(NoRefAuto[playerid]);
	} else _Mensaje(playerid, 0, "165", "No formas parte de la Ley.");
	return 1;
}

CMD:maletero(playerid)
{
    if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
    {
		new vehicleid = GetPlayerVehicleID(playerid);
		if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return _Mensaje(playerid, 0, "126", "No eres el conductor.");
		if (EstaEnBicis(vehicleid)) return _Mensaje(playerid, 0, "388", "No puedes usar este comando si estás en este tipo de vehiculos.");
		if (LSPD_Veh(vehicleid) || SASD_Veh(vehicleid) || SAN_Vehicle(vehicleid) || GOB_Vehicle(vehicleid) || LSED_Vehicle(vehicleid) || Pescador_Vehicle(vehicleid) || Camionero_Vehicle(vehicleid) || Granjero_Vehicle(vehicleid)) {
			VehiculoMaletero(vehicleid, playerid);
		} else {
			for (new v = 0; v < MAX_VEHICULOS; v++) {
				if(InfoVehiculo[v][vID] == vehicleid) {
					if (!TieneLlavesVeh(playerid, InfoVehiculo[v][vID])) { _Mensaje(playerid, 0, "126", "No tienes las llaves de este vehículo."); return 1;}
					VehiculoMaletero(vehicleid, playerid);
				}
			}
		}
	} else {

		new coche, Float:distancia = 4.0, Float:vX, Float:vY, Float:vZ;
		for(new veh=0; veh < MAX_VEHICLES; veh++)
		{
			GetVehiclePos(veh, vX, vY, vZ);
			if(_enPos(playerid, distancia, vX, vY, vZ) && !EstaEnBicis(veh)) { if(GetPlayerDistanceFromPoint(playerid, vX, vY, vZ) <= distancia)distancia = GetPlayerDistanceFromPoint(playerid, vX, vY, vZ), coche = veh; }
		}
		if(coche == 0){_Mensaje(playerid, 0, "391", "No se ha detectado ningún vehículo a tu alrededor."); return 1;}

		if (LSPD_Veh(coche) || SASD_Veh(coche) || SAN_Vehicle(coche) || GOB_Vehicle(coche) || LSED_Vehicle(coche) || Pescador_Vehicle(coche) || Camionero_Vehicle(coche) || Granjero_Vehicle(coche))
		{
			VehiculoMaletero(coche, playerid);
	   	}
		else
		{
			for (new v = 0; v < MAX_VEHICULOS; v++)
			{
				if(InfoVehiculo[v][vID] == coche) {
					if (!TieneLlavesVeh(playerid, InfoVehiculo[v][vID])) { _Mensaje(playerid, 0, "126", "No tienes las llaves de este vehículo."); return 1;}
					VehiculoMaletero(coche, playerid);
				}
			}
		}

	}
	return 1;
}

CMD:palcohol(playerid, params[])
{
	if (!Es_Faccion(playerid, 1)) return _Mensaje(playerid, 0, "165", "No formas parte de la Ley.");
	if (EnServicioPD[playerid] == 0) return _Mensaje(playerid, 0, "166", "No estas en servicio.");
 	if (sscanf(params, "u", params[0])) return _Mensaje(playerid, 3, "0", "/palcohol [id jugador]");
	if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");

	if (CercaDelWeon(2.0, playerid, params[0]))
	{
		if (user[playerid][jm_Derecha] != 129 && user[playerid][jm_Izquierda] != 129) { _Mensaje(playerid, 0, "9", "No tienes un alcoholimetro en ninguna mano."); return 1;}
		new string[150];
		alcoholemia[params[0]] = playerid;

		format(string, sizeof(string), "* Has pedido a %s que acepte la prueba. Espera una respuesta.", NombreJugador(params[0]));
		_Mensaje(playerid, 4, "33CCFF", string);
		format(string, sizeof(string), "* %s te ha pedido que aceptes la prueba de alcoholemia. (/aceptar)", NombreJugador(playerid));
		_Mensaje(params[0], 4, "33CCFF", string);

	} else _Mensaje(playerid, 0, "133", "El jugador no se encuentra cerca de tí.");
	return 1;
}

//trabajo de pescador
CMD:pescar(playerid)
{
	if (!Es_job(playerid, 3)) return _Mensaje(playerid, 0, "681", "No eres pescador.");
	if (!EstaEnMuelle(playerid)) return _Mensaje(playerid, 0, "126", "No estás en el muelle del faro.");

	if (GetPVarInt(playerid, "HaciendoMueble") == 1) return _Mensaje(playerid, 0, "148", "Ya estás pescando.");

	if (user[playerid][jm_Derecha] != 85 && user[playerid][jm_Izquierda] != 85) { _Mensaje(playerid, 0, "9", "No tienes una caña de pesca en ninguna mano."); return 1;}
    if (user[playerid][jLineas] >= 2)
	{
		if (user[playerid][jCarnadas] >= 2)
		{
			if (user[playerid][jPescados] < 101)
			{
				ClearAnimations(playerid);
				SetPVarInt(playerid, "HaciendoMueble", 1);
				GameTextForPlayer(playerid, "~g~Pescando...", 21000, 3);
				SetTimerEx("TerminarPesca", 20000, 0, "%d", playerid);
				ApplyAnimation(playerid, "SWORD", "sword_block", 4.0, 0, 0, 0, 1, 0, 1);

			} else return _Mensaje(playerid, 0, "2", "Has alcanzado el máximo de peces (100), vendelos en un restaurante.");
		} else return _Mensaje(playerid, 0, "126", "No tienes carnadas para pescar.");
	} else return _Mensaje(playerid, 0, "126", "No tienes lineas para la caña de pesca.");
	return 1;
}
funcion TerminarPesca(playerid)
{
	new string[200], alean = Random(1, 2), peces = Random(5, 10);
	if (alean == 1) {
		user[playerid][jPescados] += peces;
		if (user[playerid][jHabilidad2][2] < 4) user[playerid][jHabilidad][2]++;
		format(string, sizeof(string), "Llevas la cantidad de %d peces, atrapaste esta vez %d.", user[playerid][jPescados], peces);
		_Mensaje(playerid, 4, "F8D48C", string);
		user[playerid][jCarnadas] -= 2;
		user[playerid][jLineas] -= 1;
	} else if (alean == 2) {
		_Mensaje(playerid, 4, "ff0000", "La línea se rompió.");
		user[playerid][jCarnadas]--;
		user[playerid][jLineas]--;
	}
	TogglePlayerControllable(playerid, 1);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0);
	B_Manos[playerid] = 0;
	SetPVarInt(playerid, "HaciendoMueble", 0);
	return 1;
}
CMD:puerto(playerid)
{
    if (!_enPos(playerid, 2.0, 2795.9546, -2569.3674, 2.9869)) return _Mensaje(playerid, 0, "0", "No estás en el puerto de los santos.");

	Dialog(playerid, D_PUERTO, DIALOG_STYLE_LIST, "{D6E1EB}Port of LS", "{FFFFFF}Carnadas\nLineas\nCaña de pesca\nVender peces", "Comprar", "Cancelar");
	return 1;
}
CMD:venderpeces(playerid)
{
	if (!_enPos(playerid, 30.0, -785.9495, 500.0739, 1371.7422) || (GetPlayerVirtualWorld(playerid) < 300)) return _Mensaje(playerid, 0, "0", "No te encuentras dentro de un restaurante.");

	new string[200], pago = user[playerid][jHabilidad2][2];

	if (user[playerid][jPescados] > 10)
	{
		format(string, sizeof(string), "* Vendiste %d peces al restaurante y sumaste $%i a tu bolsillo.", user[playerid][jPescados], user[playerid][jPescados] * pago);
		_Mensaje(playerid, 4, "33CCFF", string);
		DarDineroGC(playerid, user[playerid][jPescados] * pago);
		user[playerid][jPescados] = 0;
		return 1;
	} else _Mensaje(playerid, 0, "423", "Lo mínimo para vender son diez peces.");
	return 1;
}
CMD:barco(playerid)
{
	if (!Es_job(playerid, 3)) return _Mensaje(playerid, 0, "681", "No eres pescador.");
	if (!IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "683", "No estás dentro de ningún barco.");

	new vehiculo = GetPlayerVehicleID(playerid);
	if (!EstaEnBote(vehiculo)) return _Mensaje(playerid, 0, "378", "Debes estar en un barco.");

	SetPlayerMapIcon(playerid, 99, 890.69623, -2448.19629, -3.40480, 9, 0, MAPICON_GLOBAL);

    _Mensaje(playerid, 4, "b0b0b0", "Se marcó en el mapa las zonas de pesca.");
    _Mensaje(playerid, 4, "b0b0b0", "Cuando llegues con el barco, escribe /arpon.");

	return 1;
}

stock GetPlayerNearestVehicle(playerid)
{
	new nearest[2] = {-1, -1};
	for(new v=0; v < MAX_VEHICLES; v++)
	{
		if(GetVehicleModel(v) == 453)
		{
			if(nearest[0] == -1)
			{
				nearest[0] = v;
				nearest[1] = floatround(GetPlayerDistanceToVehicle(playerid, v));
			}
			else
			{
				if(floatround(GetPlayerDistanceToVehicle(playerid, v)) < nearest[1])
				{
					nearest[0] = v;
					nearest[1] = floatround(GetPlayerDistanceToVehicle(playerid, v));
				}
			}
		}
	}
	return nearest[0];
}
CMD:arpon(playerid)
{
	if (!Es_job(playerid, 3)) return _Mensaje(playerid, 0, "681", "No eres pescador.");

	if (!_enPos(playerid, 50.0, 890.69623, -2448.19629, -3.40480)) return _Mensaje(playerid, 0, "0", "Los arpones se pueden lanzar únicamente en zonas de pesca.");

	if (user[playerid][jm_Derecha] != 85 && user[playerid][jm_Izquierda] != 85) { _Mensaje(playerid, 0, "9", "No tienes una caña de pesca en ninguna mano."); return 1;}

	if (pescando[playerid] == 1) return _Mensaje(playerid, 0, "681", "Ya te encuentras pescando algo.");

	new vehch = GetPlayerNearestVehicle(playerid), Float:Pos[3], objetivo[5];

	GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return _Mensaje(playerid, 0, "681", "No estás en la cubierta de un barco pesquero.");

	if(GetVehicleDistanceFromPoint(vehch, Pos[0], Pos[1], Pos[2]) < 4.0)
	{
		switch(user[playerid][jHabilidad2][2])
		{
			case 3:
			{
				objetivo[0] = 1601;
				objetivo[1] = 1601;
				objetivo[2] = 1601;
				objetivo[3] = 1609;
				ShowModelSelectionMenuEx2(playerid, objetivo, 4, "Selecciona tu objetivo", D_Pesca, 16.0, 0.0, -55.0, 1.0);
			}
			case 4:
			{
				objetivo[0] = 1607;
				objetivo[1] = 1601;
				objetivo[2] = 1601;
				objetivo[3] = 1609;
				ShowModelSelectionMenuEx2(playerid, objetivo, 4, "Selecciona tu objetivo", D_Pesca, 16.0, 0.0, -55.0, 1.0);
			}
			case 5:
			{
				objetivo[0] = 1601;
				objetivo[1] = 1607;
				objetivo[2] = 1608;
				objetivo[3] = 1609;
				ShowModelSelectionMenuEx2(playerid, objetivo, 4, "Selecciona tu objetivo", D_Pesca, 16.0, 0.0, -55.0, 1.0);
			}
		}
	}
	else _Mensaje(playerid, 0, "681", "No estás en la cubierta de un barco pesquero.");
	return 1;
}

CMD:habilidad(playerid)
{
	new habilidad[300], habilidad2[2000];

	strcat(habilidad2, "Trabajo\tNivel\tProgreso\n", sizeof(habilidad2));

	if (user[playerid][jHabilidad2][4] == 5) format(habilidad, sizeof(habilidad), "{E20000}Carguero{FFFFFF}\t(%d)\t({00c200}MÁXIMO{ffffff})\n", user[playerid][jHabilidad2][4]);
	else format(habilidad, sizeof(habilidad), "{FFFFFF}Carguero{FFFFFF}\t(%d)\t(%d / 250)\n", user[playerid][jHabilidad2][4], user[playerid][jHabilidad][4]);
	strcat(habilidad2, habilidad);

	if (user[playerid][jHabilidad2][2] == 5) format(habilidad, sizeof(habilidad), "{E20000}Pescador{FFFFFF}\t(%d)\t({00c200}MÁXIMO{ffffff})\n", user[playerid][jHabilidad2][2]);
	else format(habilidad, sizeof(habilidad), "{FFFFFF}Pescador{FFFFFF}\t(%d)\t(%d / 100)\n", user[playerid][jHabilidad2][2], user[playerid][jHabilidad][2]);
	strcat(habilidad2, habilidad);

	if (user[playerid][jHabilidad2][0] == 5) format(habilidad, sizeof(habilidad), "{E20000}Camionero{FFFFFF}\t(%d)\t({00c200}MÁXIMO{ffffff})\n", user[playerid][jHabilidad2][0]);
	else format(habilidad, sizeof(habilidad), "{FFFFFF}Camionero{FFFFFF}\t(%d)\t(%d / 100)\n", user[playerid][jHabilidad2][0], user[playerid][jHabilidad][0]);
	strcat(habilidad2, habilidad);

	if (user[playerid][jHabilidad2][5] == 5) format(habilidad, sizeof(habilidad), "{E20000}Carpintero{FFFFFF}\t(%d)\t({00c200}MÁXIMO{ffffff})\n", user[playerid][jHabilidad2][5]);
	else format(habilidad, sizeof(habilidad), "{FFFFFF}Carpintero{FFFFFF}\t(%d)\t(%d / 250)\n", user[playerid][jHabilidad2][5], user[playerid][jHabilidad][5]);
	strcat(habilidad2, habilidad);

	if (user[playerid][jHabilidad2][6] == 5) format(habilidad, sizeof(habilidad), "{E20000}Leñador{FFFFFF}\t(%d)\t({00c200}MÁXIMO{ffffff})\n", user[playerid][jHabilidad2][6]);
	else format(habilidad, sizeof(habilidad), "{FFFFFF}Leñador{FFFFFF}\t(%d)\t(%d / 250)\n", user[playerid][jHabilidad2][6], user[playerid][jHabilidad][6]);
	strcat(habilidad2, habilidad);

	if (user[playerid][jHabilidad2][1] == 5) format(habilidad, sizeof(habilidad), "{E20000}Traficante{FFFFFF}\t(%d)\t({00c200}MÁXIMO{ffffff})\n", user[playerid][jHabilidad2][1]);
	else format(habilidad, sizeof(habilidad), "{FFFFFF}Traficante{FFFFFF}\t(%d)\t(%d / 100)\n", user[playerid][jHabilidad2][1], user[playerid][jHabilidad][1]);
	strcat(habilidad2, habilidad);

	if (user[playerid][jHabilidad2][7] == 5) format(habilidad, sizeof(habilidad), "{E20000}Granjero{FFFFFF}\t(%d)\t({00c200}MÁXIMO{ffffff})\n", user[playerid][jHabilidad2][7]);
	else format(habilidad, sizeof(habilidad), "{FFFFFF}Granjero{FFFFFF}\t(%d)\t(%d / 300)\n", user[playerid][jHabilidad2][7], user[playerid][jHabilidad][7]);
	strcat(habilidad2, habilidad);

	ShowPlayerDialog(playerid, D_INVALIDO, DIALOG_STYLE_TABLIST_HEADERS, "Trabajos: {648B19}Habilidades", habilidad2, "Cerrar", "");
	return 1;
}
CMD:mejorar(playerid, params[])
{
	if (sscanf(params, "s[32]", params[0])) return _Mensaje(playerid, 3, "0", "/mejorar (carguero, lenador, carpintero, camionero, pescador, traficante, granjero)");
    new habilidad[300];
	if (strcmp(params[0], "camionero", true) == 0)
	{
		if (user[playerid][jHabilidad2][0] == 5) return _Mensaje(playerid, 4, "b00000", " Ya eres nivel máximo de camionero.");
        if (user[playerid][jHabilidad][0] > 99)
		{
            user[playerid][jHabilidad2][0]++;
            user[playerid][jHabilidad][0] -= 100;

			format(habilidad, sizeof(habilidad), "Ahora eres nivel %d de camionero.", user[playerid][jHabilidad2][0]);
			_Mensaje(playerid, 4, "33CCFF", habilidad);

        } else _Mensaje(playerid, 4, "b0b0b0", " No tienes el progreso necesario, revisa /habilidad.");
	}
	else if (strcmp(params[0], "traficante", true) == 0)
	{
		if (user[playerid][jHabilidad2][1] == 5) return _Mensaje(playerid, 4, "b00000", " Ya eres nivel máximo traficante.");
        if (user[playerid][jHabilidad][1] > 99)
		{
            user[playerid][jHabilidad2][1]++;
            user[playerid][jHabilidad][1] -= 100;

			format(habilidad, sizeof(habilidad), "Ahora eres nivel %d de traficante.", user[playerid][jHabilidad2][1]);
			_Mensaje(playerid, 4, "33CCFF", habilidad);

        } else _Mensaje(playerid, 4, "b0b0b0", " No tienes el progreso necesario, revisa /habilidad.");
	}
	else if (strcmp(params[0], "pescador", true) == 0)
	{
		if (user[playerid][jHabilidad2][2] == 5) return _Mensaje(playerid, 4, "b00000", " Ya eres nivel máximo de pescador.");
        if (user[playerid][jHabilidad][2] > 99)
		{
            user[playerid][jHabilidad2][2]++;
            user[playerid][jHabilidad][2] -= 100;

			format(habilidad, sizeof(habilidad), "Ahora eres nivel %d de pescador.", user[playerid][jHabilidad2][2]);
			_Mensaje(playerid, 4, "33CCFF", habilidad);

        } else _Mensaje(playerid, 4, "b0b0b0", " No tienes el progreso necesario, revisa /habilidad.");
	}
	else if (strcmp(params[0], "carguero", true) == 0)
	{
		if (user[playerid][jHabilidad2][4] == 5) return _Mensaje(playerid, 4, "b00000", " Ya eres nivel máximo carguero.");
        if (user[playerid][jHabilidad][4] > 249)
		{
            user[playerid][jHabilidad2][4]++;
            user[playerid][jHabilidad][4] -= 250;

			format(habilidad, sizeof(habilidad), "Ahora eres nivel %d de carguero.", user[playerid][jHabilidad2][2]);
			_Mensaje(playerid, 4, "33CCFF", habilidad);

        } else _Mensaje(playerid, 4, "b0b0b0", " No tienes el progreso necesario, revisa /habilidad.");
	}
	else if (strcmp(params[0], "carpintero", true) == 0)
	{
		if (user[playerid][jHabilidad2][5] == 5) return _Mensaje(playerid, 4, "b00000", " Ya eres nivel máximo carpintero.");
        if (user[playerid][jHabilidad][5] > 249)
		{
            user[playerid][jHabilidad2][5]++;
            user[playerid][jHabilidad][5] -= 250;

			format(habilidad, sizeof(habilidad), "Ahora eres nivel %d de carpintero.", user[playerid][jHabilidad2][5]);
			_Mensaje(playerid, 4, "33CCFF", habilidad);

        } else _Mensaje(playerid, 4, "b0b0b0", " No tienes el progreso necesario, revisa /habilidad.");
	}
	else if (strcmp(params[0], "lenador", true) == 0)
	{
		if (user[playerid][jHabilidad2][6] == 5) return _Mensaje(playerid, 4, "b00000", " Ya eres nivel máximo de leñador.");
        if (user[playerid][jHabilidad][6] > 249)
		{
            user[playerid][jHabilidad2][6]++;
            user[playerid][jHabilidad][6] -= 250;

			format(habilidad, sizeof(habilidad), "Ahora eres nivel %d de leñador.", user[playerid][jHabilidad2][6]);
			_Mensaje(playerid, 4, "33CCFF", habilidad);

		} else _Mensaje(playerid, 4, "b0b0b0", " No tienes el progreso necesario, revisa /habilidad.");
	}
	else if (strcmp(params[0], "granjero", true) == 0)
	{
		if (user[playerid][jHabilidad2][7] == 5) return _Mensaje(playerid, 4, "b00000", " Ya eres nivel máximo de granjero.");
        if (user[playerid][jHabilidad][7] > 299)
		{
            user[playerid][jHabilidad2][7]++;
            user[playerid][jHabilidad][7] -= 300;

			format(habilidad, sizeof(habilidad), "Ahora eres nivel %d de granjero.", user[playerid][jHabilidad2][6]);
			_Mensaje(playerid, 4, "33CCFF", habilidad);

		} else _Mensaje(playerid, 4, "b0b0b0", " No tienes el progreso necesario, revisa /habilidad.");
	}
	return 1;
}

CMD:fseguro(playerid)
{
	if (!Es_job(playerid, 5)) return _Mensaje(playerid, 0, "681", "No eres ladrón de coches.");
	if(user[playerid][jTiempos][18] != 0) return _Mensaje(playerid, 0, "432", "Tienes que esperar 5 minutos para poder volver a utilizar este comando.");
	new Float: x, Float: y, Float: z;
	for (new v = 0; v < MAX_VEHICULOS; v++) {
        if (InfoVehiculo[v][vID] != INVALID_PLAYER_VEHICLE_ID) GetVehiclePos(InfoVehiculo[v][vID], x, y, z);
        if (_enPos(playerid, 3.0, x, y, z)) {
			if (InfoVehiculo[v][vSeguro] > 0 && InfoVehiculo[v][vUSeguro] == 0) {
                _Mensaje(playerid, 0, "411", "Este vehículo ya está abierto.");
                return 1;
            } else if (InfoVehiculo[v][vSeguro] > 0 && InfoVehiculo[v][vUSeguro] == 1) {
				if(user[playerid][jm_Derecha] == 128 || user[playerid][jm_Izquierda] == 128)
				{
					new a = random(10);
					if(a == 0 || a == 1)
					{
					    _Mensaje(playerid, 0, "399", "Intentaste forzar la cerradura del vehículo pero tu palanca se ha roto en el intento.");
				        if(user[playerid][jm_Izquierda] == 128) user[playerid][jm_IzquierdaCant] --;
				        else user[playerid][jm_DerechaCant] --;
				        return 1;
					}
					else
					{
		                TextoPantalla(playerid, "~w~~h~~h~Vehiculo ~g~Abierto", 5000, 1);
		                PlayerPlaySoundEx(1145, x, y, z);
		                InfoVehiculo[v][vUSeguro] = 0;
		        		VehSeguro[InfoVehiculo[v][vID]] = 0;
		        		vehicle_unlock_doors(InfoVehiculo[v][vID]);
		                AccionesRol(playerid, 0, "toma su palanca y comenzó a forzar la cerradura del vehículo, después de unos segundos consigue abrirlo.");
						ActualizarVehiculo(v);
						user[playerid][jTiempos][18] = 5;
						return 1;
					}
				}
				_Mensaje(playerid, 0, "411", "No tienes una palanca en alguna mano.");
                return 1;
            }
            _Mensaje(playerid, 0, "411", "Este vehículo no tiene sistema de seguro.");
            return 1;
        }
    }
    _Mensaje(playerid, 0, "399", "No estás cerca de un vehiculo.");
    return 1;
}


CMD:estaenjail(playerid, params[])
{
    if(user[playerid][jAdmin] >= 1)
    {
        new pID;
	    if (sscanf(params, "u", pID)) return _Mensaje(playerid, 3, "0", "/estaenjail Nombre_Apellido");
	    if (IsPlayerConnected(pID)) return _Mensaje(playerid, 0, "75", "Jugador está conectado.");
		new fcuenta[120];
		format(fcuenta, sizeof(fcuenta), DATOS_CUENTAS, params);
		if(!fexist(fcuenta)) return Mensaje_(playerid, -1, "Esta cuenta no existe.");
		INI_ParseFile(fcuenta, "CargarSancion", .bExtra = true, .extra = playerid);
		if(xDias[playerid] == 0) return Mensaje_(playerid, C_GCRP, "Este usuario no está sancionado.");
		if(xDias[playerid] == 1)
		{
		    format(fcuenta, sizeof(fcuenta), "Sanción OOC: Tiempo %d minutos.", xMeses[playerid]);
		    Mensaje_(playerid, C_GCRP, fcuenta);
		}
		if(xDias[playerid] == 2)
		{
		    format(fcuenta, sizeof(fcuenta), "Sanción comisaría: Tiempo %d minutos.", xMeses[playerid]);
		    Mensaje_(playerid, C_GCRP, fcuenta);
		}
		if(xDias[playerid] == 3)
		{
		    format(fcuenta, sizeof(fcuenta), "Sanción prisión federal: Tiempo %d minutos.", xMeses[playerid]);
		    Mensaje_(playerid, C_GCRP, fcuenta);
		}
		return 1;
    }
    _Mensaje(playerid, 0, "0", "No tienes acceso al /estaenjail.");
	return 1;
}

funcion CargarSancion(playerid, name[], value[]) {
	INI_Int("Encarcelado", xDias[playerid]);
	INI_Int("TiempoCarcel", xMeses[playerid]);
	return 1;
}

CMD:desbugadmin(playerid, params[])
{
    if(user[playerid][jAdmin] >= 2)
    {
        new pID;
	    if (sscanf(params, "u", pID)) return _Mensaje(playerid, 3, "0", "/desbugadmin Nombre_Apellido");
	    if (IsPlayerConnected(pID)) return _Mensaje(playerid, 0, "75", "Jugador está conectado.");
		new fcuenta[120];
		format(fcuenta, sizeof(fcuenta), DATOS_CUENTAS, params);
		if(!fexist(fcuenta)) return Mensaje_(playerid, -1, "Esta cuenta no existe.");
	    new INI: File = INI_Open(fcuenta);
	 	INI_WriteFloat(File, "Posicion_X", 1679.3351);
	 	INI_WriteFloat(File, "Posicion_Y", -1657.1349);
	 	INI_WriteFloat(File, "Posicion_Z", 13.5395);
	 	INI_WriteFloat(File, "Posicion_R", 318.4477);
	 	INI_WriteInt(File, "Interior", 0);
	 	INI_WriteInt(File, "VirtualWorld", 0);
	 	INI_Close(File);
		format(fcuenta, sizeof(fcuenta), "Desbugeaste al usuario: %s.", params);
		Mensaje_(playerid, -1, fcuenta);
    	}
    else _Mensaje(playerid, 0, "0", "No tienes acceso al /desbugear.");
    return 1;
}

CMD:pedido(playerid, params[])
{

	if (!sscanf(params, "s[32]", params[0]))
	{
		if (strcmp(params[0], "drogas", true) == 0)
		{
			if (Pedido[playerid] != 0) return _Mensaje(playerid, 0, "180", "Ya te encuentras en un pedido (/pedido cancelar).");
			if(strcmp(GetWeekDay(), "Sabado")) return _Mensaje(playerid, 4, "b0b0b0", "El traficante ya no está, hasta dentro de una semana no volverá!");
			new year, month, day;
			getdate(year, month, day);
			if (user[playerid][jMiembroFam] == 0) return _Mensaje(playerid, 0, "180", "No perteneces a una facción.");
			if (InfoFamilia[user[playerid][jMiembroFam]][fTipo] == 3) return _Mensaje(playerid, 0, "180", "No puedes comprar siendo de una facción legal.");
			if (user[playerid][jRangoFam] < 4) return _Mensaje(playerid, 0, "607", "Debes poseer mínimo rango 4.");

			Dialog(playerid, D_CAMELLO, DIALOG_STYLE_TABLIST_HEADERS, "{D6E1EB}Drogas", "Producto\tCantidad\tCosto\n\
			P. Crack\t400\t$400\n\
			P. Cocaina\t500\t$1200\n\
			P. Heroina\t180\t$600\n\
			P. LSD\t200\t$900\n\
			Semillias Maria\t20\t$2,200", "Pedir", "Cancelar");

			return 1;
		}

		if (strcmp(params[0], "camion", true) == 0)
		{
			if (!Es_job(playerid, 5)) return _Mensaje(playerid, 0, "681", "No eres ladrón de coches.");
			if (checkcoche[playerid] != 0) return _Mensaje(playerid, 0, "39", "Posees un pedido pendiente, utiliza /pedido cancelar.");
			new _txt[128];
			if (user[playerid][jTiempos][17] > 0) { format(_txt, sizeof(_txt), " Debes esperar %d minutos para otro encargo.", user[playerid][jTiempos][17]); return _Mensaje(playerid, 4, "b00000", _txt); }

			new d_ran = random(3);
			switch(d_ran)
			{
				case 0: {
					for(new i=0; i <= MAX_VEHICLES; i++)
						{ if (VehicleToPoint(5.0, i, 2086.6370, -2404.8105, 13.6896)) { _Mensaje(playerid, 4, "b00000", "No se encuentran vehículos disponibles, intenta de nuevo más tarde."); return 1; } }
					new Coche = CreateVehicle(414, 2086.6370, -2404.8105, 13.6896, 180.0000, 2, 5, -1);
                    cocherobo[playerid] = Coche;
    				SetVehicleVirtualWorld(Coche, 0);
    				LinkVehicleToInterior(Coche, 0);
					_Mensaje(playerid, 4, "FFEA5F", "[SMS: 0057822]: Necesito el camión cuanto antes, te deje información.");
					SetPlayerCheckpoint(playerid, 2086.6370, -2404.8105, 13.6896, 10.0);
					checkcoche[playerid] = 414;
					SetPVarInt(playerid, "EnCheckPoint", 5);
					TogglePlayerAllDynamicCPs(playerid, false);
					return 1;
				}
				case 1: {
					for(new i=0; i <= MAX_VEHICLES; i++)
						{ if (VehicleToPoint(5.0, i, 1768.0427, -2041.2350, 13.6517)) { _Mensaje(playerid, 4, "b00000", "No se encuentran vehículos disponibles, intenta de nuevo más tarde."); return 1; } }
					new Coche = CreateVehicle(414, 1768.0427, -2041.2350, 13.6517, 90.0000, 8, 9, -1);
                    cocherobo[playerid] = Coche;
    				SetVehicleVirtualWorld(Coche, 0);
    				LinkVehicleToInterior(Coche, 0);
					_Mensaje(playerid, 4, "FFEA5F", "[SMS: 0057822]: Necesito el camión cuanto antes, te deje información.");
					SetPlayerCheckpoint(playerid, 1768.0427, -2041.2350, 13.6517, 10.0);
					checkcoche[playerid] = 414;
					SetPVarInt(playerid, "EnCheckPoint", 5);
					TogglePlayerAllDynamicCPs(playerid, false);
					return 1;
				}
				case 2: {
					for(new i=0; i <= MAX_VEHICLES; i++)
						{ if (VehicleToPoint(5.0, 	i, 2612.5374, -2379.8118, 13.6461)) { _Mensaje(playerid, 4, "b00000", "No se encuentran vehículos disponibles, intenta de nuevo más tarde."); return 1; } }
					new Coche = CreateVehicle(414, 2612.5374, -2379.8118, 13.6461, 0.0000, 1, 4, -1);
                    cocherobo[playerid] = Coche;
    				SetVehicleVirtualWorld(Coche, 0);
    				LinkVehicleToInterior(Coche, 0);
					_Mensaje(playerid, 4, "FFEA5F", "[SMS: 0057822]: Necesito el camión cuanto antes, te deje información.");
					SetPlayerCheckpoint(playerid, 2612.5374, -2379.8118, 13.6461, 10.0);
					checkcoche[playerid] = 414;
					SetPVarInt(playerid, "EnCheckPoint", 5);
					TogglePlayerAllDynamicCPs(playerid, false);
					return 1;
				}
			}
		}
        if (strcmp(params[0], "coche", true) == 0)
		{
			if (!Es_job(playerid, 5)) return _Mensaje(playerid, 0, "681", "No eres ladrón de coches.");

			if (checkcoche[playerid] != 0) return _Mensaje(playerid, 0, "39", "Posees un pedido pendiente, utiliza /pedido cancelar.");
			new _txt[128];
			if (user[playerid][jTiempos][17] > 0) { format(_txt, sizeof(_txt), " Debes esperar %d minutos para otro encargo.", user[playerid][jTiempos][17]); return _Mensaje(playerid, 4, "b00000", _txt); }


		}
        if (strcmp(params[0], "cancelar", true) == 0)
		{
		    if (checkcoche[playerid] != 0)
			{
				DestroyVehicle(cocherobo[playerid]);

				cocherobo[playerid] = 0;
		    	checkcoche[playerid] = 0;

				_Mensaje(playerid, 5, "0", "Cancelaste el pedido, perdiste un punto de delincuente.");

				user[playerid][jHabilidad][3]--;

				return 1;
			}
			if (Pedido[playerid] != 0)
			{
				_Mensaje(playerid, 5, "0", "Cancelaste el pedido de drogas.");
				Pedido[playerid] = 0;
				return 1;
			}
			_Mensaje(playerid, 0, "126", "No te encuentras en ningún pedido.");
		}
	} else _Mensaje(playerid, 3, "0", "/pedido [camion - drogas - robo coche]");
	return 1;
}


CMD:engine(playerid)
{
    new vehicleid = GetPlayerVehicleID(playerid);
    if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return _Mensaje(playerid, 0, "126", "No eres el conductor.");
	if (!IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "126", "No estás en un vehículo.");
	if (GetVehicleModel(vehicleid) == checkcoche[playerid])
	{
	    new engine, lights, alarm, doors, bonnet, boot, objective;
	    GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	    if(engine == VEHICLE_PARAMS_ON) return _Mensaje(playerid, 4, "b00000", "El vehículo ya se encuentra encendido.");

		new location[MAX_ZONE_NAME], Float: x, Float: y, Float: z, string[128];
		GetPlayerPos(playerid, x, y, z);
		Get2DZone(location, MAX_ZONE_NAME, x, y, z);
		SetTimerEx("EncenderVehiculo", 2500, 0, "dd", vehicleid, playerid);
		format(string, sizeof(string), "*[CH|911|Central, S: 4A: Informe reciente en %s, robo de un vehículo %s.", location, NombreVehiculo(vehicleid));
		_MensajeRfac(1, C_COLORPOLICIA, string, 1, 2);

        TogglePlayerAllDynamicCPs(playerid, false);
		SetPVarInt(playerid, "EnCheckPoint", 6);
        if (checkcoche[playerid] == 414) SetPlayerCheckpoint(playerid, 956.7439, -1530.1982, 13.3456, 10.0);

		_Mensaje(playerid, 4, "0ED39E", " Ahora que posees el camión, ve directo al punto de entrega sin llamar la atención.");

	} else return _Mensaje(playerid, 0, "126", "No estás en un vehículo para robar.");
	return 1;
}

CMD:apagarincendio(playerid)
{
    if(Es_Faccion(playerid, 5))
    {
        new FireID = CercaIncendio(playerid);
        if (FireID != -1)
        {
            if(Incendios[FireID][pIntensidad]!=0) return SendClientMessage(playerid, -1, "Este incendio aún no puede ser apagado, usa más el extintor.");
			DestroyFire(FireID);
        	GuardarIncendios();
        	DarDineroGC(playerid, 150);
            _Mensaje(playerid, 5, "0", "Has obtenido 150$ por apagar el incendio.");
        }
        else SendClientMessage(playerid, -1, "No estás cerca de un incendio.");
    }
	return 1;
}

CMD:ultimaconexion(playerid, params[]){
    if(user[playerid][jAdmin] >= 2)
    {
        if(isnull(params)) return Mensaje_(playerid, -1, "/ultimaconexion Nombre_Apellido.");
		new fcuenta[120];
		format(fcuenta, sizeof(fcuenta), DATOS_CUENTAS, params);
		if(!fexist(fcuenta)) return Mensaje_(playerid, -1, "Esta cuenta no existe.");
		INI_ParseFile(fcuenta, "CargarUltimaConexion", .bExtra = true, .extra = playerid);
		format(fcuenta, sizeof(fcuenta), "%s última conexión: %d de %s.", params, xDias[playerid], IDaMes(xMeses[playerid]));
        _Mensaje(playerid, 4, "ffffff", fcuenta);
    	}
    else _Mensaje(playerid, 0, "0", "No tienes acceso al /ultimaconexion.");
	return 1;
}

IDaMes(x)
{
	new pro[30];
	switch(x)
	{
	    case 1: format(pro, sizeof(pro), "Enero");
	    case 2: format(pro, sizeof(pro), "Febrero");
	    case 3: format(pro, sizeof(pro), "Marzo");
	    case 4: format(pro, sizeof(pro), "Abril");
	    case 5: format(pro, sizeof(pro), "Mayo");
	    case 6: format(pro, sizeof(pro), "Junio");
	    case 7: format(pro, sizeof(pro), "Julio");
	    case 8: format(pro, sizeof(pro), "Agosto");
	    case 9: format(pro, sizeof(pro), "Septiembre");
	    case 10: format(pro, sizeof(pro), "Octubre");
	    case 11: format(pro, sizeof(pro), "Noviembre");
	    case 12: format(pro, sizeof(pro), "Diciembre");
	    default: format(pro, sizeof(pro), "??");
	}
	return pro;
}

funcion CargarUltimaConexion(playerid, name[], value[]) {
	INI_Int("Dias", xDias[playerid]);
	INI_Int("Meses", xMeses[playerid]);
	return 1;
}

CMD:optiwand(playerid) {
    if (!Es_Faccion(playerid, 1)) return Mensaje_(playerid, -1, "No eres LSPD.");
	if (user[playerid][jRango] < 1) return Mensaje_(playerid, -1, "No tienes rango para utilizar este comando.");
	if(UsandoOptiwand[playerid] == -1)
    {
		if(user[playerid][jm_Derecha] != 109) return _Mensaje(playerid, 0, "9", "No tienes el optiwand en tu mano derecha.");
	    for (new h; h < sizeof(InfoCasa); h++) if (_enPos(playerid, 3.0, InfoCasa[h][cExteriorX], InfoCasa[h][cExteriorY], InfoCasa[h][cExteriorZ])) {
            SetPlayerVirtualWorld(playerid, h+6000);
			foreach(Player, i) if (GetPlayerVirtualWorld(i) == h+6000 && GetPlayerInterior(i) == InfoCasa[h][cInterior]) TextoPantalla(i, "~n~~n~~n~~n~~n~~n~~n~~n~~w~Escuchas un ruido muy extraño en la puerta", 4000, 3);
	        AccionesRol(playerid, 0, "colocó el optiwand en la puerta de la casa y comenzó a manipularla.");
			SetPlayerInterior(playerid, InfoCasa[h][cInterior]);
			SetPlayerCameraPos(playerid, InfoCasa[h][cInteriorX], InfoCasa[h][cInteriorY], InfoCasa[h][cInteriorZ]);
			if(InfoCasa[h][cInteriorX] == 255.4378) SetPlayerCameraLookAt(playerid, 257.1061,304.8510,999.1484, 0);
			if(InfoCasa[h][cInteriorX] == 2217.9070) SetPlayerCameraLookAt(playerid, 2214.8179,-1089.1539,1050.4844, 0);
			if(InfoCasa[h][cInteriorX] == 222.6111) SetPlayerCameraLookAt(playerid, 222.5809,1273.8151,1082.1406, 0);
			if(InfoCasa[h][cInteriorX] == 263.5031) SetPlayerCameraLookAt(playerid, 263.5275,1267.9364,1080.2578, 0);
			if(InfoCasa[h][cInteriorX] == 276.5541) SetPlayerCameraLookAt(playerid, 276.6017,1238.9812,1084.2578, 0);
			if(InfoCasa[h][cInteriorX] == 446.1162) SetPlayerCameraLookAt(playerid, 446.1162,1366.7433,1084.3120, 0);
			if(InfoCasa[h][cInteriorX] == 294.7744) SetPlayerCameraLookAt(playerid, 294.7744,1448.5236,1080.2578, 0);
			if(InfoCasa[h][cInteriorX] == -1.4793) SetPlayerCameraLookAt(playerid, -1.4793,1340.7427,1084.3750, 0);
			if(InfoCasa[h][cInteriorX] == 54.1827) SetPlayerCameraLookAt(playerid, 54.1827,1325.0161,1083.8594, 0);
			if(InfoCasa[h][cInteriorX] == 110.9865) SetPlayerCameraLookAt(playerid, 110.9865,1367.0673,1083.8623, 0);
			if(InfoCasa[h][cInteriorX] == 242.7206) SetPlayerCameraLookAt(playerid, 242.7206,1132.2473,1080.9922, 0);
			if(InfoCasa[h][cInteriorX] == 198.3604) SetPlayerCameraLookAt(playerid, 198.3604,1060.8588,1084.2101, 0);
			if(InfoCasa[h][cInteriorX] == 188.5331) SetPlayerCameraLookAt(playerid, 188.9374,1008.8438,1084.0117, 0);
			if(InfoCasa[h][cInteriorX] == 1298.8577) SetPlayerCameraLookAt(playerid, 1299.2650,-795.0789,1084.0078, 0);
			UsandoOptiwand[playerid] = h;
			SetPlayerPos(playerid, InfoCasa[h][cInteriorX], InfoCasa[h][cInteriorY], InfoCasa[h][cInteriorZ]-7.0);
			TogglePlayerControllable(playerid, 0);
			break;
	    }
    }
    else
    {
 	   	SetPlayerPos(playerid, InfoCasa[UsandoOptiwand[playerid]][cExteriorX], InfoCasa[UsandoOptiwand[playerid]][cExteriorY], InfoCasa[UsandoOptiwand[playerid]][cExteriorZ]);
    	TogglePlayerControllable(playerid, 1);
		SetCameraBehindPlayer(playerid);
		UsandoOptiwand[playerid] = -1;
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
    }
    return 1;
}

CMD:puntosderol(playerid, params[]){
	if(sscanf(params, "u", params[0])) return _Mensaje(playerid, 3, "0", "/puntosderol ID");
	if(!IsPlayerConnected(params[0])) return Mensaje_(playerid, -1, "ID Inválida.");
	if (!CercaDelWeon(3.5, playerid, params[0])) return _Mensaje(playerid, 0, "9", "La persona que seleccionaste no está cerca tuyo.");
	new p[90];
	format(p, sizeof(p), "%s tiene %d puntos de rol.", NombreJugador(playerid), user[params[0]][jPuntosRol]);
	Mensaje_(playerid, playerid, p);
	return 1;
}

CMD:tickets(playerid)
{
	new coordsstring[16];
	format(coordsstring, sizeof(coordsstring), "  Tickets: %d", user[playerid][jTickets]);
	_Mensaje(playerid, 4, "b0b0b0", coordsstring);
	return 1;
}

CMD:darticket(playerid, params[]) return cmd_dartickets(playerid, params);
CMD:dartickets(playerid, params[]){
    if(user[playerid][jEncarcelado] != 3) return _Mensaje(playerid, 0, "0", "No te encuentras como prisionero.");
	if (sscanf(params, "ud", params[0], params[1])) return _Mensaje(playerid, 3, "0", "/darticket id cantidad");
	if(user[playerid][jTickets] >= params[1])
    {
		new s[128];
  		format(s, sizeof(s), "pasó unos tickets a %s.", NombreJugador(params[0]));
 		AccionesRol(playerid, 0, s);
   		format(s, sizeof(s), "Has recibido %d tickets de %s.", params[1], NombreJugador(playerid));
   		_Mensaje(params[0], 2, "0", s);
        user[playerid][jTickets] -= params[1];
        user[params[0]][jTickets] += params[1];
    }
	return 1;
}

CMD:darheadpuntos(playerid, params[]) {
    new string[128], playerid2;
    if (user[playerid][jAdmin] < 5) return _Mensaje(playerid, 0, "470", "Tú no tienes acceso a el comando /darheadpuntos");
    if (!sscanf(params, "d", playerid2)) {
        if (IsPlayerConnected(playerid2)) {
            user[playerid2][jEncargado][4] = 1;
            format(string, sizeof(string), " %s lo ha asignado encargado de staff.", NombreRJugador(playerid));
            _Mensaje(playerid2, 4, "33CCFF", string);
            format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Head Game Admin %s a modificado permisos Game Admin a %s", NombreRJugador(playerid), NombreRJugador(playerid2));
            MensajeAdmin(string);
            Log("Registros/DarEncargado.log", string);
        } else _Mensaje(playerid, 0, "75", "Jugador no conectado.");
    } else _Mensaje(playerid, 3, "0", "/darheadpuntos [id jugador]");
    return 1;
}

CMD:darpuntorol(playerid, params[])
{
    if (user[playerid][jAdmin] >= 4 || user[playerid][jEncargado][4] == 1)
	if (user[playerid][jEncargado][4] == 0) return _Mensaje(playerid, 0, "514", "No tienes permisos para este comando.");
	new string2[40];
	if (sscanf(params, "us[40]", params[0], string2)) return _Mensaje(playerid, 3, "0", "/darpuntorol [id jugador] [razón]");
	if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
	new string[128];
	user[params[0]][jPuntosRol]++;
 	format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s ha dado un punto de rol a %s. {E00000}Razón: %s", NombreRJugador(playerid), NombreRJugador(params[0]), string2);
 	MensajeAdmin(string);
 	format(string, sizeof(string), "Game Admin %s te dio un punto de rol, razón: %s", NombreRJugador(playerid), string2);
 	Mensaje_(params[0], 0x33CCFFFF, string);
	format(string, sizeof(string), "Registros: Game Admin %s dió un punto de rol a %s. (Razón: %s). (Sistema Puntos Rol)", NombreRJugador(playerid), NombreRJugador(params[0]), string2);
	Log("Registros/PuntosDeRol.log", string);
	return 1;
}

CMD:quitarpuntorol(playerid, params[])
{
    if (user[playerid][jAdmin] >= 4 || user[playerid][jEncargado][4] == 1)
	if (user[playerid][jEncargado][4] == 0) return _Mensaje(playerid, 0, "514", "No tienes permisos para este comando.");
	if (sscanf(params, "u", params[0])) return _Mensaje(playerid, 3, "0", "/quitarpuntorol [id jugador]");
	if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
	new string[128];
	user[params[0]][jPuntosRol]--;
 	format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s ha removido un punto de rol a %s", NombreRJugador(playerid), NombreRJugador(params[0]));
 	MensajeAdmin(string);
 	format(string, sizeof(string), " Game Admin '%s' te removió un punto de rol.", NombreRJugador(playerid));
 	Mensaje_(params[0], 0x33CCFFFF, string);
	format(string, sizeof(string), "Registros: Game Admin %s le quitó un punto de rol a %s (Sistema Puntos Rol)", NombreRJugador(playerid), NombreRJugador(params[0]));
	Log("Registros/PuntosDeRol.log", string);
	return 1;
}

CMD:minar(playerid)
{
	new text_[128];
	if (user[playerid][jEncarcelado] != 3) return _Mensaje(playerid, 0, "0", "No te encuentras como prisionero.");
	if (_Minero[playerid] == 0)
	{
		_Minero[playerid] = 1;
		_Mensaje(playerid, 4, "0ED39E", " Acércate a los pickups para empezar a minar.");
		PlayerTextDrawShow(playerid, TextTrabajo[playerid]);
	}
	else
	{
		if(_Minando[playerid] == 1) return _Mensaje(playerid, 0, "0", "No puedes dejar de minar hasta que rompas esta roca.");
		_Minero[playerid] = 0;
		if(user[playerid][jPiedras] == 0) return _Mensaje(playerid, 5, "0", "Dejaste de minar.");
		else
		{
			user[playerid][jTickets] += user[playerid][jPiedras]/2;
			format(text_, sizeof(text_), " Terminaste. Entregaste un total de %d piedras, recibiste %d tickets.", user[playerid][jPiedras], user[playerid][jPiedras]/2);
			_Mensaje(playerid, 4, "0ED39E", text_);
			user[playerid][jPiedras] = 0;
			PlayerTextDrawHide(playerid, TextTrabajo[playerid]);
		}
	}
	return 1;
}

CMD:tienda(playerid)
{
	if (user[playerid][jEncarcelado] != 3) return _Mensaje(playerid, 0, "0", "No te encuentras como prisionero.");
	if(!_enPos(playerid, 5.0, 231.2809, 1914.1873, 17.6406)) return _Mensaje(playerid, 4, "ADC3E7", "Error:{ffffff} No estás en la tienda.");
	Dialog(playerid, 600, DIALOG_STYLE_TABLIST_HEADERS, "Prisión: {D6E1EB}Tienda", "Producto\tUnidades\tTickets\n\
	Sprunk\t1\t{0ED39E}7\n\
	Bolsa de doritos\t1\t{0ED39E}8\n\
	Bolsa de patatas\t1\t{0ED39E}6\n\
	Burrito\t1\t{0ED39E}10", "Comprar", "Cancelar");
	return 1;
}

CMD:tban(playerid, params[])
{
	if (user[playerid][jAdmin] >= 3 || user[playerid][jEncargado][3] == 1) {
		new text_[128], jugador, variable2[190], variable1;
		if (sscanf(params, "iis[128]", jugador, variable1, variable2)) return _Mensaje(playerid, 3, "0", "/tban [id jugador] [horas] [razón]");
		if(!IsPlayerConnectedEx(jugador)) return _Mensaje(playerid, 0, "0", " El jugador que indicaste no se encuentra conectado.");
		if(variable1 == 0) return _Mensaje(playerid, 0, "0", " No seas tarado baneando por 0 horas.");
		if (user[jugador][jAdmin] > user[playerid][jAdmin]) {
			format(text_, sizeof(text_), "[AvisoAdmin]: {FFFFFF}El jugador %s ha sido auto-baneado. {E00000}Razón: Intento de baneo al staff.", NombreRJugador(playerid));
			MensajeAdmin(text_);
			user[playerid][jBaneado] = 20;
			Kick(playerid);
			return 1;
		} else {
			banipA(jugador, variable2, NombreRJugador(playerid), variable1);
			format(text_, sizeof(text_), "Administración: Jugador %s fue expulsado %d horas por Game Admin %s, Razón:[%s]", NombreRJugador(jugador), variable1, NombreRJugador(playerid), variable2);
			_MensajeOOC(0xFF6347FF, text_);
			return 1;
		}
	}
	return 1;
}

stock banipA(playerid, razon[] = "x razón", baneador[] = "x baneador", worth = -1)
{
	if (IsPlayerConnected(playerid))
	{
		new directorio[200], namepj[MAX_PLAYER_NAME];
		GetPlayerName(playerid, namepj, sizeof(namepj));
		format(directorio, sizeof(directorio), DATOS_CUENTAS, namepj);

		if (!fexist(directorio)) {

			_Mensaje(playerid, 0, "0", "No puedes hacer esto con un usuario no registrado.");

		} else {
			if (worth != 0 && worth != -1) {
				new k = gettime(), elpru[30];
				worth *= 3600;
				k += worth;
				user[playerid][jBaneado] = 10;
				format(elpru, sizeof(elpru), "%d", k);
            	new INI:archivitodelplayer = INI_Open(directorio);
				INI_WriteString(archivitodelplayer,"Ban_t", elpru);
            	INI_Close(archivitodelplayer);
			}
			else user[playerid][jBaneado] = 20;

			new thetime[92], Year, Month, Day, horas, mins, segs;
			getdate(Year, Month, Day);
			gettime(horas, mins, segs);

			format(thetime, sizeof(thetime), "%s %d de %s de %d [%d:%d]", GetWeekDay(), Day, GetMonth(Month), Year, horas, mins);

			alm(user[playerid][jBmomento], thetime);
			alm(user[playerid][jBculpable], baneador);
			alm(user[playerid][jBrazon], razon);

			format(directorio, sizeof(directorio), "%s - Tiempo: %s", razon, thetime);
			_Expulsar(playerid, 0, directorio);
		}
	}
}

stock _Dban(playerid) {
	if(user[playerid][jBaneado] == 20)
	{
		new InfoMjs[150];
		format(InfoMjs, sizeof(InfoMjs), "{ffffff}Game Admin: %s\nRazón: %s\nFecha del sanción: %s", user[playerid][jBculpable], user[playerid][jBrazon], user[playerid][jBmomento]);
		Dialog(playerid, D_INVALIDO, DIALOG_STYLE_MSGBOX, "Server: {B00000}Bloqueo de cuenta", InfoMjs, "Desconectar", "");
		Expulsar(playerid, 2);
		return 1;
	}
	else if (user[playerid][jBaneado] == 10)
	{
		if (user[playerid][jBtiempo] < gettime()) {
			Mensaje_(playerid, 0xb0b0b0ff, " Tu baneo ha terminado.. ¡A JUGAR!");
			user[playerid][jBtiempo] = 0;
			user[playerid][jBaneado] = 0;
			return 1;
		} else {
		    new InfoMjs[150];
		    format(InfoMjs, sizeof(InfoMjs), "{ffffff}Tiempo: %s\nGaame Admin: %s\nRazón: %s\nFecha del sanción: %s", Segundostiempo(user[playerid][jBtiempo] - gettime()), user[playerid][jBculpable], user[playerid][jBrazon], user[playerid][jBmomento]);
     		Dialog(playerid, D_INVALIDO, DIALOG_STYLE_MSGBOX, "Server: {B00000}Bloqueo temporal", InfoMjs, "Desconectar", "");
     		Expulsar(playerid, 2);
			return 0;
		}
	}
	return 1;
}

stock Segundostiempo(segundos)
{
    new tiempito[150];
    new minutos,horitas,dias;
    if(segundos > 59)
    {
        minutos = segundos / 60;
        segundos = segundos - (minutos * 60);
    }
    if(minutos > 59)
    {
        horitas = minutos / 60;
        minutos = minutos - (horitas * 60);
    }
    if(horitas > 23)
    {
        dias = horitas / 24;
        horitas = horitas - (dias * 24);
    }
    if(dias > 0)
    {
        format(tiempito,sizeof(tiempito),"%d días, %d horas, %d minutos, %d segundos",dias,horitas,minutos,segundos);
    }
    else if(horitas > 0)
    {
        format(tiempito,sizeof(tiempito),"%d horas, %d minutos, %d segundos",horitas,minutos,segundos);
    }
    else if(minutos > 0)
    {
        format(tiempito,sizeof(tiempito),"%d minutos, %d segundos",minutos,segundos);
    }
    else
    {
        format(tiempito,sizeof(tiempito),"%d segundos",segundos);
    }
    return tiempito;
}

stock GetMonth(Month)
{
    new MonthStr[15];
    switch(Month)
    {
        case 1:  MonthStr = "Enero";
        case 2:  MonthStr = "Febrero";
        case 3:  MonthStr = "Marzo";
        case 4:  MonthStr = "Abril";
        case 5:  MonthStr = "Mayo";
        case 6:  MonthStr = "Junio";
        case 7:  MonthStr = "Julio";
        case 8:  MonthStr = "Agosto";
        case 9:  MonthStr = "Septiembre";
        case 10: MonthStr = "Octubre";
        case 11: MonthStr = "Noviembre";
        case 12: MonthStr = "Diciembre";
    }
    return MonthStr;
}

GetWeekDay(day=0, month=0, year=0)
{
    if (!day)
    getdate(year, month, day);
    new weekday_str[12],j,e;
    if (month <= 2)
    {
        month += 12;
        --year;
    }
    j = year % 100;
    e = year / 100;
    switch ((day + (month+1)*26/10 + j + j/4 + e/4 - 2*e) % 7)
    {
        case 0: weekday_str = "Sabado";
        case 1: weekday_str = "Domingo";
        case 2: weekday_str = "Lunes";
        case 3: weekday_str = "Martes";
        case 4: weekday_str = "Miercoles";
        case 5: weekday_str = "Jueves";
        case 6: weekday_str = "Viernes";
    }
    return weekday_str;
}

//-
funcion _robo(playerid, tipo, d_ran) {
	if (tipo == 1) {
	    switch(d_ran)
		{
			case 0: {
				new _obj=121;
				if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
				if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, _obj); user[playerid][jm_Derecha] = _obj, user[playerid][jm_DerechaCant] = 1;}
				else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, _obj); user[playerid][jm_Izquierda] = _obj, user[playerid][jm_IzquierdaCant] = 1;}
				_Mensaje(playerid, 4, "0ED39E", " Lograste tomar un teléfono, sal rápido del local.");
			}
			case 1: {
				new _obj=95;
				if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
				if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, _obj); user[playerid][jm_Derecha] = _obj, user[playerid][jm_DerechaCant] = 1;}
				else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, _obj); user[playerid][jm_Izquierda] = _obj, user[playerid][jm_IzquierdaCant] = 1;}
				_Mensaje(playerid, 4, "0ED39E", " Lograste tomar una botella de agua, sal rápido del local.");
			}
			case 2: {
				new _obj=91;
				if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
				if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, _obj); user[playerid][jm_Derecha] = _obj, user[playerid][jm_DerechaCant] = 1;}
				else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, _obj); user[playerid][jm_Izquierda] = _obj, user[playerid][jm_IzquierdaCant] = 1;}
				_Mensaje(playerid, 4, "0ED39E", " Lograste tomar una bolsa de patatas, sal rápido del local.");
			}
			case 3: {
				new _obj=83;
				if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
				if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, _obj); user[playerid][jm_Derecha] = _obj, user[playerid][jm_DerechaCant] = 1;}
				else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, _obj); user[playerid][jm_Izquierda] = _obj, user[playerid][jm_IzquierdaCant] = 1;}
				_Mensaje(playerid, 4, "0ED39E", " Lograste tomar unos dados, sal rápido del local.");
			}
			case 4: {
				new _obj=92;
				if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
				if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, _obj); user[playerid][jm_Derecha] = _obj, user[playerid][jm_DerechaCant] = 1;}
				else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, _obj); user[playerid][jm_Izquierda] = _obj, user[playerid][jm_IzquierdaCant] = 1;}
				_Mensaje(playerid, 4, "0ED39E", " Lograste tomar una bolsa de nachos, sal rápido del local.");
			}
		}
	}
	if (user[playerid][jHabilidad][3] < 12) user[playerid][jHabilidad][3]++;
	user[playerid][jTiempos][16] = 10;
	DeletePVar(playerid, "Congelado");
	TogglePlayerControllable(playerid, 1);
	ClearAnimations(playerid);
	return 1;
}

CMD:hurtar(playerid)
{
	new _txt[128];
	if (!Es_job(playerid, 2)) return _Mensaje(playerid, 0, "681", "No eres delicuente.");
	if (!_enPos(playerid, 40.0, -23.4566, -55.6323, 1003.5469) || (GetPlayerVirtualWorld(playerid) < 300)) return _Mensaje(playerid, 0, "0", "No te encuentras dentro de un 24/7.");
	if (_D2negocio(playerid, 7.5)) return _Mensaje(playerid, 5, "0", "Estás a simple vista, intenta tomar un objeto desde otro punto.");
	if (user[playerid][jTiempos][16] > 0) { format(_txt, sizeof(_txt), " Debes esperar %d minutos para hacer alguna acción ilegal.", user[playerid][jTiempos][16]); return _Mensaje(playerid, 4, "b00000", _txt); }
	new n_id = GetPlayerVirtualWorld(playerid) - 300, d_ran = random(5);
	TogglePlayerControllable(playerid, 0);
	SetPVarInt(playerid, "Congelado", 1);
	GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~w~tomando ~p~objeto...",4000,3);
	SetTimerEx("_robo", 3000, false, "iii", playerid, i_Negocio[n_id][nTipo], d_ran);
	ApplyAnimation(playerid, "DEALER", "DEALER_DEAL", 4.0, 0, 1, 1, 1, 1);
	ApplyAnimation(playerid, "DEALER", "DEALER_DEAL", 4.0, 0, 1, 1, 1, 1);
 	new location[70];
	Get2DZone(location, MAX_ZONE_NAME, i_Negocio[n_id][nExteriorX], i_Negocio[n_id][nExteriorY], i_Negocio[n_id][nExteriorZ]);
	_Mensaje(playerid, 4, "FFEA5F", "Una persona te ha visto robar y ha llamado a la policía.");
	format(_txt, sizeof(_txt), "*[CH|911|Central, S: 4A: Un anónimo ha denunciado que se está cometiendo un robo a una tienda en %s.", location);
	_MensajeRfac(1, C_COLORPOLICIA, _txt, 1, 2);
	return 1;
}

CMD:carterista(playerid, params[])
{
	if (!Es_job(playerid, 2)) return _Mensaje(playerid, 0, "681", "No eres delicuente.");
	if (user[playerid][jHabilidad][3] < 11) return _Mensaje(playerid, 4, "b00000", " Habilidad mínima para este comando (11).");
	if (sscanf(params, "d", params[0])) return _Mensaje(playerid, 3, "0", "/carterista [id jugador]");
	if (IsPlayerConnected(params[0]) && CercaDelWeon(2.0, playerid, params[0])) {
		if (GetPlayerSpecialAction(params[0]) != SPECIAL_ACTION_HANDSUP) return _Mensaje(playerid, 0, "213", "No puedes robar a ese jugador si no esta en /rendirse.");
		idrobado[playerid] = params[0];
		H_Inventario(playerid, params[0]);
	} else _Mensaje(playerid, 0, "76", "Jugador no conectado o esta muy lejos.");
	return 1;
}

CMD:cachear(playerid, params[]) return cmd_revisar(playerid, params);
CMD:revisar(playerid, params[]) {
	if (!Es_Faccion(playerid, 1) && (user[playerid][jHabilidad][3] < 11)) return _Mensaje(playerid, 0, "0", " Debes ser policía o habilidad mínima de delincuente (11).");
	if (GetPVarInt(playerid, "EnCrack") == 1) return _Mensaje(playerid, 0, "12", "No puedes usar este comando mientras estás herido.");
	if (!sscanf(params, "d", params[0])) {
		if (IsPlayerConnected(params[0]) && CercaDelWeon(3.0, playerid, params[0])) {
			if(GetPVarInt(params[0], "EnCrack") == 0) {
				R_Inventario(playerid, params[0]);
				new MsgCheckMe[MAX_TEXT_CHAT];
				format(MsgCheckMe, sizeof(MsgCheckMe), "revisa a %s para encontrar algo.", NombreJugador(params[0]));
				AccionesRol(playerid, 0, MsgCheckMe);
			} else {
				R_Inventario(playerid, params[0]);
				new MsgCheckMe[MAX_TEXT_CHAT];
				format(MsgCheckMe, sizeof(MsgCheckMe), "revisa a %s para encontrar algo.", NombreJugador(params[0]));
				AccionesRol(playerid, 0, MsgCheckMe);
			}
		} else _Mensaje(playerid, 0, "76", "Jugador no conectado o esta muy lejos.");
	} else _Mensaje(playerid, 3, "0", "/revisar [id jugador]");
	return 1;
}

CMD:fuerza(playerid, params[])
{
	new _txt[128];
	if (sscanf(params, "d", params[0])) return _Mensaje(playerid, 3, "0", "/fuerza [id jugador]");
	if (IsPlayerConnected(params[0]) && CercaDelWeon(2.0, playerid, params[0])) {
		format(_txt, sizeof(_txt), " (%s) - Habilidad de fuerza: {b00000}%d{b0b0b0}.", NombreJugador(playerid), user[playerid][jFuerza]);
		_Mensaje(params[0], 4, "b0b0b0", _txt);
	} else _Mensaje(playerid, 0, "76", "Jugador no conectado o esta muy lejos.");
	return 1;
}
CMD:delincuente(playerid, params[])
{
	new _txt[128];
	if (!Es_job(playerid, 2, 5)) return _Mensaje(playerid, 0, "681", "No eres delincuente.");
	if (sscanf(params, "d", params[0])) return _Mensaje(playerid, 3, "0", "/delincuente [id jugador]");
	if (IsPlayerConnected(params[0]) && CercaDelWeon(2.0, playerid, params[0])) {
		format(_txt, sizeof(_txt), " (%s) - Habilidad de delincuente: {b00000}%d{b0b0b0}.", NombreJugador(playerid), user[playerid][jHabilidad][3]);
		_Mensaje(params[0], 4, "b0b0b0", _txt);
	} else _Mensaje(playerid, 0, "76", "Jugador no conectado o esta muy lejos.");
	return 1;
}


CMD:borrarcarga(playerid)
{
	if (!Es_job(playerid, 4)) return _Mensaje(playerid, 0, "681", "No eres camionero.");

	DeletePVar(playerid, "TipoCarga");
	_CamVeh[playerid] = INVALID_VEHICLE_ID;
	gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
	DisablePlayerCheckpoint(playerid);
	_Mensaje(playerid, 4, "b00000", "Carga cancelada.");

	return 1;
}

/* CMD:camionero(playerid, params[])
{
    if (!Es_job(playerid, 4)) return _Mensaje(playerid, 4, "FFE900", "[NPC] [Vigilante] {FFFFFF} Tu no trabajas aqui.");
	{
        Dialog(playerid, P_CAMIONERO, DIALOG_STYLE_TABLIST_HEADERS, "Seleccion de Productos", "Producto\tPaga\n\
        Medicinas\t{33CCFF}100${FFFFFF} + {FF0000}Botiquin{FFFFFF}\n\
        Chalecos\t{33CCFF}150${FFFFFF} + {FF0000}Chaleco{FFFFFF}\n\
        Materiales\t{33CCFF}250${FFFFFF} + {FF0000}10 Materiales{FFFFFF}", "Seleccionar", "Cancelar");
        return 1;
    }
}
CMD:descargar(playerid, params[])
{
  if(!en_Dejarcarga(playerid)) return _Mensaje(playerid, 4, "ADC3E7", "SERVER:{FFFFFF} No estás cerca del punto de Descarga");
  {
    if (sscanf(params, "s[20]", params[0])) return _Mensaje(playerid, 3, "0", "/descargar [medicinas - chalecos - materiales]");
    if (!strcmp(params[0], "medicinas", true))
    if (enrecocamion1[playerid] == 1)
    {
        _Mensaje(playerid, 4, "FFE900", "NPC [Vigilante Hospital]: {ffffff} Ya puedes mover el camión, ya han descargado la carga.");
        SetPlayerCheckpoint(playerid, -23.632495, -273.928619, 5.429687,4);
        enrecocamion1[playerid] = 2;
        return 1;
	}
    if (sscanf(params, "s[20]", params[0])) return _Mensaje(playerid, 3, "0", "/descargar [medicinas - chalecos - materiales]");
    if (!strcmp(params[0], "chalecos", true))
    if (enrecocamion2[playerid] == 1)
    {
        _Mensaje(playerid, 4, "FFE900", "NPC [Police Officer]: {ffffff} Ya hemos descargado el camión, abandone la zona policial.");
        SetPlayerCheckpoint(playerid, -23.632495, -273.928619, 5.429687,4);
        enrecocamion2[playerid] = 2;
        return 1;
	}
    if (sscanf(params, "s[20]", params[0])) return _Mensaje(playerid, 3, "0", "/descargar [medicinas - chalecos - materiales]");
    if (!strcmp(params[0], "materiales", true))
    if (enrecocamion3[playerid] == 1)
    {
        _Mensaje(playerid, 4, "FFE900", "NPC [Anónimo] {ffffff} Ya descargamos las cajas de 'fruta', no te acuerdes de mí cara.");
        SetPlayerCheckpoint(playerid, -23.632495, -273.928619, 5.429687,4);
        enrecocamion3[playerid] = 2;
        return 1;
	}
  }
  return 1;
}
*/
CMD:darpd(playerid, params[]) {
    if (Es_Lider(playerid, 1)) {
        new string[256];
    	if (sscanf(params, "d", params[0])) return _Mensaje(playerid, 3, "0", "/darpd [id jugador]");
        if (IsPlayerConnected(params[0])) {
            if (user[params[0]][jMiembro] == 1) {
				if (user[params[0]][jNivel] == 1) {
				    user[params[0]][jNivel] = 2;
				    user[params[0]][j_Horas] = 11;
				    format(string, sizeof(string), "%s le ha retirado la restricción al miembro %s.", NombreRJugador(playerid), NombreRJugador(params[0]));
        			MensajeFaccion(1, 0xADC3E7FF, string, user[playerid][jDivision]);
            	} else _Mensaje(playerid, 0, "221", "Ese jugador no es nivel 1.");
            } else _Mensaje(playerid, 0, "221", "Ese jugador no pertenece a LSPD.");
        } else _Mensaje(playerid, 0, "222", "ID inválida.");
    } else _Mensaje(playerid, 0, "222", "No eres líder de la facción LSPD.");
    return 1;
}

CMD:transferir(playerid, params[]) {
	if(!_Telefono(playerid)){_Mensaje(playerid, 0, "9","No tienes un teléfono en ninguna mano."); return 1;}
    if(user[playerid][j_Horas] < 2) return _Mensaje(playerid, 0, "9", "No puedes transferir debido a tu restricción de dos horas de juego.");
    if (user[playerid][jDebito] == -1) return _Mensaje(playerid, 0, "245", "No posees una cuenta bancaria.");
	Dialog(playerid, D_BANCOT, DIALOG_STYLE_INPUT, "Banca a Distancia: {D6E1EB}Transferir dinero", "{FFFFFF}Ingrese la ID del jugador (activo)", "Ingresar", "Cancelar");
    return 1;
}

CMD:borrar(playerid)
{
	if (user[playerid][jm_Derecha] == 0 && user[playerid][jm_Izquierda] == 0) { _Mensaje(playerid, 0, "9", "No tienes nada en ninguna mano."); return 1; }
	if (!_enPos(playerid, 4.0, 229.5383, 182.3108, 1002.9111) && !_enPos(playerid, 4.0, 260.7723,71.0477,1003.2422) && !_enPos(playerid, 4.0, -420.6046, 675.0458, 3856.5835)) return _Mensaje(playerid, 0, "0", "No estás en el lugar de borrado.");
	QuitarManos(playerid);
	_Mensaje(playerid, 4, "A7CE00", "Has incautado los objetos que tenías en manos.");
    return 1;
}

CMD:depositar(playerid, params[]) {
	if (!_enPos(playerid, 10.0, -23.4566, -55.6323, 1003.5469)) return _Mensaje(playerid, 0, "0", "No estás en un 24/7 o en el banco.");
	if (user[playerid][jDebito] == -1) return _Mensaje(playerid, 0, "245", "No posees una cuenta bancaria.");
	if (user[playerid][jm_Derecha] != 84 && user[playerid][jm_Izquierda] != 84){ _Mensaje(playerid, 0, "9", "Necesitas tener tu tarjeta de débito en la mano."); return 1;}
	new string[128], dinero;
	if (!sscanf(params, "d", dinero)) {
		if (!isnumeric(params)) return _Mensaje(playerid, 0, "43", "Sólo números porfavor, vuelve a intentarlo.");
		if (dinero > ComprobarDineroJ(playerid)) return _Mensaje(playerid, 0, "187", "No posees esa cantidad.");
		if (dinero < 1 || dinero > 10000) return _Mensaje(playerid, 0, "188", "Máximo: $10.000.");
		Compra(playerid, dinero);
		user[playerid][jBanco] += dinero;
		format(string, sizeof(string), "Depositaste a tu cuenta $%d, total de dinero $%d.", dinero, user[playerid][jBanco]);
		_Mensaje(playerid, 4, "D7D7D4", string);
		format(string, sizeof(string), "Registros: El jugador %s depósito la cantidad total de dinero de $%d. (Sistema Banco)", NombreRJugador(playerid), dinero);
		Log("Registros/D_bank.log", string);
	} else _Mensaje(playerid, 3, "0", "/depositar [cantidad]");
	return 1;
}

CMD:retirar(playerid, params[]) {
	if (!_enPos(playerid, 10.0, -23.4566, -55.6323, 1003.5469)) return _Mensaje(playerid, 0, "0", "No estás en un 24/7 o en el banco.");
	if (user[playerid][jDebito] == -1) return _Mensaje(playerid, 0, "245", "No posees una cuenta bancaria.");
	if (user[playerid][jm_Derecha] != 84 && user[playerid][jm_Izquierda] != 84){ _Mensaje(playerid, 0, "9", "Necesitas tener tu tarjeta de débito en la mano."); return 1;}
	new string[128], dinero;
	if (!sscanf(params, "d", dinero)) {
		if (!isnumeric(params)) return _Mensaje(playerid, 0, "43", "Sólo números porfavor, vuelve a intentarlo.");
		if(dinero > user[playerid][jBanco] || dinero < 1) return _Mensaje(playerid, 0, "72", "Cantidad de dinero incorrecta.");
  		if(dinero < 0) return _Mensaje(playerid, 0, "73", "No puedes retirar menos de 0.");
    	Ganancia(playerid, dinero);
     	user[playerid][jBanco] -= dinero;
		format(string, sizeof(string), "** Retiraste de tu cuenta bancaria ($%d), (saldo actual: $%d).", dinero, user[playerid][jBanco]);
		_Mensaje(playerid, 4, "FAE800", string);
		format(string, sizeof(string), "Registros: El jugador %s retiró la cantidad de dinero de $%d. (Sistema Banco)", NombreRJugador(playerid), dinero);
		Log("Registros/R_bank.log", string);
	} else {
		_Mensaje(playerid, 3, "0", "/retirar [cantidad]");
        format(string, sizeof(string), "** Tienes ($%d) en tu cuenta bancaria.", user[playerid][jBanco]);
		_Mensaje(playerid, 4, "D7D7D4", string);
	}
	return 1;
}

CMD:padelantar(playerid, params[]) {
    if (user[playerid][jAdmin] < 5) return _Mensaje(playerid, 0, "458", "Tú no tienes acceso a el comando /padelantar.");
	for(new f=0;f<MAX_PLANTAS;f++){
		if(_enPos(playerid, 2, InfoMaria[f][sPosicion][0], InfoMaria[f][sPosicion][1], InfoMaria[f][sPosicion][2])){
			if (GetPlayerVirtualWorld(playerid) == InfoMaria[f][sVirtualWorld] && GetPlayerInterior(playerid) == InfoMaria[f][sInterior]) {
				if(InfoMaria[f][sSlot]){
					InfoMaria[f][sTime] = 1;
				 	_Mensaje(playerid, 4, "A7CE00", "Bajaste el tiempo de la planta 1 minuto.");
				 	ActualizarMaria(f);
					return 1;
				}
			}
		}
	}
  	return _Mensaje(playerid, 0, "1", "No estás en cerca de una planta.");
}

CMD:estilo(playerid, params[]) {
    new estilo;
    if (sscanf(params, "d", estilo)) return _Mensaje(playerid, 3, "0", "/estilo [1-12]");
    switch (estilo) {
        case 1: {
            user[playerid][jEstilo] = 1;
            _Mensaje(playerid, 5, "0", "Has cambiado el estilo de caminar a Normal.");
            Caminar(playerid);
		}
        case 2: {
            user[playerid][jEstilo] = 2;
            _Mensaje(playerid, 5, "0", "Has cambiado el estilo de caminar a Pandillero.");
            Caminar(playerid);
		}
        case 3: {
            user[playerid][jEstilo] = 3;
            _Mensaje(playerid, 5, "0", "Has cambiado el estilo de caminar a Pandillero2.");
            Caminar(playerid);
		}
        case 4: {
            user[playerid][jEstilo] = 4;
            _Mensaje(playerid, 5, "0", "Has cambiado el estilo de caminar a Anciano.");
            Caminar(playerid);
		}
        case 5: {
            user[playerid][jEstilo] = 5;
            _Mensaje(playerid, 5, "0", "Has cambiado el estilo de caminar a Anciano-Gordo.");
            Caminar(playerid);
		}
        case 6: {
            user[playerid][jEstilo] = 6;
            _Mensaje(playerid, 5, "0", "Has cambiado el estilo de caminar a Gordo.");
            Caminar(playerid);
		}
        case 7: {
            user[playerid][jEstilo] = 7;
            _Mensaje(playerid, 5, "0", "Has cambiado el estilo de caminar a Mujer.");
            Caminar(playerid);
		}
        case 8: {
            user[playerid][jEstilo] = 8;
            _Mensaje(playerid, 5, "0", "Has cambiado el estilo de caminar a Mujer2.");
            Caminar(playerid);
		}
        case 9: {
            user[playerid][jEstilo] = 9;
            _Mensaje(playerid, 5, "0", "Has cambiado el estilo de caminar a Sexi.");
            Caminar(playerid);
		}
        case 10: {
            user[playerid][jEstilo] = 10;
            _Mensaje(playerid, 5, "0", "Has cambiado el estilo de caminar a Sexi2.");
            Caminar(playerid);
		}
        case 11: {
            user[playerid][jEstilo] = 11;
            _Mensaje(playerid, 5, "0", "Has cambiado el estilo de caminar a Hebrio.");
            Caminar(playerid);
		}
        case 12: {
            user[playerid][jEstilo] = 12;
            _Mensaje(playerid, 5, "0", "Has cambiado el estilo de caminar a Ciego.");
            Caminar(playerid);
		}
        default: _Mensaje(playerid, 3, "0", "/estilo [1-12]");
    }
    return 1;
}
CMD:gunrack(playerid) { // Añadido en la 2.X por Courier.
    if (Es_Faccion(playerid, 1)) {
        if (IsPlayerInAnyVehicle(playerid)) {
            Dialog(playerid, L_GUNRACK, DIALOG_STYLE_LIST, "Gunrack PD", "Chaleco\nMagnum Eagle\nEscopeta\nM4 AMLG1\nTáser", "Seleccionar", "Cancelar");
            }
        } else {
            _Mensaje(playerid, 0, "188", "No eres miembro de LS-PD o no estás en un vehiculo.");
            return 1;
        }
    return 1;
}

CMD:paquete(playerid, params[]) {
    new string[256];
    if (sscanf(params, "s[20]", params[0])) return _Mensaje(playerid, 3, "0", "/paquete [sacar - guardar]");
    if (!strcmp(params[0], "sacar", true)) {
        if (!TienePaquete(playerid, 1) && !TienePaquete(playerid, 2)) { _Mensaje(playerid, 0, "165", "No tienes ningún paquete en ninguna mano."); return 1; }
        if (user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0) { _Mensaje(playerid, 0, "165", "Debes tener una mano vacía."); return 1; }
        if (TienePaquete(playerid, 1)) {
            new objeto = TienePaquete(playerid, 1);
            user[playerid][jm_DerechaCant] -= InfoObjeto[objeto][Capacidad];
            user[playerid][jm_Izquierda] = objeto, PonerObjeto(playerid, 2, objeto);
            user[playerid][jm_IzquierdaCant] = InfoObjeto[objeto][Capacidad];
            format(string, sizeof(string), "%s sacó un(a) %s del paquete.", NombreJugador(playerid), InfoObjeto[objeto][NombreObjeto]);
            ProxDetector(15.0, playerid, string, 0xACC97F22A, 0xACC97F22A, 0xACC97F22A, 0xACC97F22A, 0xACC97F22A);
            return 1;
        } else if (TienePaquete(playerid, 2)) {
            new objeto = TienePaquete(playerid, 2);
            user[playerid][jm_IzquierdaCant] -= InfoObjeto[objeto][Capacidad];
            user[playerid][jm_Derecha] = objeto, PonerObjeto(playerid, 1, objeto);
            user[playerid][jm_DerechaCant] = InfoObjeto[objeto][Capacidad];
            format(string, sizeof(string), "%s sacó un(a) %s del paquete.", NombreJugador(playerid), InfoObjeto[objeto][NombreObjeto]);
            ProxDetector(15.0, playerid, string, 0xACC97F22A, 0xACC97F22A, 0xACC97F22A, 0xACC97F22A, 0xACC97F22A);
            return 1;
        }
    } else if (!strcmp(params[0], "guardar", true)) {
        if (!TienePaquete(playerid, 1) && !TienePaquete(playerid, 2)) { _Mensaje(playerid, 0, "165", "No tienes ningún paquete en ninguna mano."); return 1; }
        if (TienePaquete(playerid, 1)) {
            new objeto = TienePaquete(playerid, 1);
            if(user[playerid][jm_Derecha] != objeto && user[playerid][jm_Izquierda] != objeto){ _Mensaje(playerid, 0, "9", "Tienes una droga diferente del paquete."); return 1;}
            user[playerid][jm_DerechaCant] += user[playerid][jm_IzquierdaCant];
            user[playerid][jm_Izquierda] = 0;
            user[playerid][jm_IzquierdaCant] = 0;
            format(string, sizeof(string), "%s guardó un(a) %s en el paquete.", NombreJugador(playerid), InfoObjeto[objeto][NombreObjeto]);
            ProxDetector(15.0, playerid, string, 0xACC97F22A, 0xACC97F22A, 0xACC97F22A, 0xACC97F22A, 0xACC97F22A);
            return 1;
        } else if (TienePaquete(playerid, 2)) {
            new objeto = TienePaquete(playerid, 2);
            if(user[playerid][jm_Derecha] != objeto && user[playerid][jm_Izquierda] != objeto){ _Mensaje(playerid, 0, "9", "Tienes una droga diferente del paquete."); return 1;}
            user[playerid][jm_IzquierdaCant] += user[playerid][jm_DerechaCant];
            user[playerid][jm_Derecha] = 0;
            user[playerid][jm_DerechaCant] = 0;
            format(string, sizeof(string), "%s guardó un(a) %s en el paquete.", NombreJugador(playerid), InfoObjeto[objeto][NombreObjeto]);
            ProxDetector(15.0, playerid, string, 0xACC97F22A, 0xACC97F22A, 0xACC97F22A, 0xACC97F22A, 0xACC97F22A);
            return 1;
        }
    }
    return 1;
}

CMD:limpiarmaletero(playerid, params[]) {
    if (user[playerid][jAdmin] < 5) return _Mensaje(playerid, 0, "458", "Tú no tienes acceso a el comando /Limpiarmaletero.");
	if (!sscanf(params, "ds[64]", params[0])) {
	    if (!InfoVehiculo[params[0]][vModelo]) return _Mensaje(playerid, 0, "548", "Id vehículo invalida.");
	    _LimpiarM(params[0]);
	    _Mensaje(playerid, 4, "00ABAE", "Maletero indicado ha sido limpiado con éxito.");
    } else _Mensaje(playerid, 3, "0", "/limpiarmaletero [id veh]");
    return 1;
}

CMD:editarv(playerid, params[]) {
    if (user[playerid][jAdmin] < 5) return _Mensaje(playerid, 0, "458", "Tú no tienes acceso a el comando /Editarv.");
	if (!sscanf(params, "ds[64]", params[0], params[1])) {
	    if (!InfoVehiculo[params[0]][vModelo]) return _Mensaje(playerid, 0, "548", "Id vehículo invalida.");
	    format(InfoVehiculo[params[0]][vDueno], 64, "%s", params[1]);
	    ActualizarVehiculo(params[0]);
	    _Mensaje(playerid, 4, "00ABAE", "Vehículo indicado ha sido cambiado de dueño con éxito.");
    } else _Mensaje(playerid, 3, "0", "/editarv  [id veh] [IDUserOn] ");
    return 1;
}
CMD:darhabuser(playerid, params[]) {
	new string[128];
    if (user[playerid][jAdmin] < 5) return _Mensaje(playerid, 0, "458", "Tú no tienes acceso a el comando /Ddarhabuser.");
	if (!sscanf(params, "dd", params[0], params[1])) {
        if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
		if(params[1] < 0 || params[1] > 2) { _Mensaje(playerid, 0, "0", "La ranura debe estar entre 0 y 2."); return 1; }
        user[params[0]][jHabilidad][params[1]] += 50;
		format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Head Admin %s utilizó 'darhabuser' (habilidades a jugador), Jugador: %s[%d].", NombreRJugador(playerid), NombreRJugador(params[0]),params[0]);
  		MensajeAdmin(string);
    } else _Mensaje(playerid, 3, "0", "/Darhabilidad [id jugador] [opción] | [0] Camionero - [1] Traficante - [2] Pescador");
    return 1;
}

CMD:quitarllave(playerid, params[]) {
	new string[256];
    if (!sscanf(params, "dd", params[0], params[1])) {
        if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
	    if (params[1] == 0) return _Mensaje(playerid, 0, "458", "Ranura 0 no existe.");
		if (params[1] < 1 || params[1] > 6) { _Mensaje(playerid, 0, "0", "La ranura debe estar entre 1 y 6."); return 1; }
        if (user[playerid][jAdmin] >= 10) {
            user[params[0]][jLlaveCoche][params[1]-1] = 0;
            format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Super Head Admin %s utilizó '/quitarllave' (llaves de coches), Jugador: %s[%d].", NombreRJugador(playerid), NombreRJugador(params[0]),params[0]);
            MensajeAdmin(string);
        } else _Mensaje(playerid, 0, "728", "Tú no tienes acceso a el comando /Quitarllave.");
    } else _Mensaje(playerid, 3, "0", "/quitarllave [id jugador] [ranura]");
    return 1;
}

CMD:quitarllavep(playerid, params[]) {
	new string[256];
    if (!sscanf(params, "dd", params[0], params[1])) {
        if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
	    if (params[1] == 0) return _Mensaje(playerid, 0, "458", "Ranura 0 no existe.");
		if (params[1] < 1 || params[1] > 5) { _Mensaje(playerid, 0, "0", "La ranura debe estar entre 1 y 5."); return 1; }
        if (user[playerid][jAdmin] >= 10) {
            user[params[0]][jLlaveCochePrestado][params[1]-1] = 0;
            format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Head Admin %s utilizó '/quitarllavep' (coches prestados), Jugador: %s[%d].", NombreRJugador(playerid), NombreRJugador(params[0]),params[0]);
            MensajeAdmin(string);
        } else _Mensaje(playerid, 0, "728", "Tú no tienes acceso a el comando /Quitarllavep.");
    } else _Mensaje(playerid, 3, "0", "/quitarllavep [id jugador] [ranura]");
    return 1;
}

CMD:telefono(playerid, params[]) {
    if (GetPVarInt(playerid, "Llamada_LSED") == 1) return _Mensaje(playerid, 0, "647", "No puedes usar este comando en este momento.");
    if (GetPVarInt(playerid, "EnEvento") == 1) return _Mensaje(playerid, 0, "647", "No puedes usar este comando en un evento.");
	if (user[playerid][jTelefono] == 0) return _Mensaje(playerid, 0, "93", "No tienes un número de teléfono asignado a tu cuenta, compra uno en una tienda de electrónica o 24/7.");
	if(!_Telefono(playerid)){_Mensaje(playerid, 0, "9","No tienes un teléfono en ninguna mano."); return 1;}
	if (B_Telefono[playerid] == 0) { Dialog(playerid, D_TELEFONO, DIALOG_STYLE_LIST, "{D6E1EB}Menú telefónico", "{00c200}Teléfono encendido{ffffff}\nLlamadas\nContactos\nMensajes\nConsultar saldo\nMúsica\nTransferir dinero", "Seleccionar", "Cancelar"); }
    else { Dialog(playerid, D_TELEFONO, DIALOG_STYLE_LIST, "Opciones: {FFFF00}Telefono", "{ff0000}Teléfono apagado{ffffff}\nLlamadas\nContactos\nMensajes\nConsultar saldo\nMúsica\nTransferir dinero", "Seleccionar", "Cancelar"); }
    return 1;
}

CMD:caja(playerid, params[]) {
    new string[256];
    if (sscanf(params, "s[20]", params[0])) return _Mensaje(playerid, 3, "0", "/caja [sacar - guardar]");
    if (!strcmp(params[0], "sacar", true)) {
        if (!TieneCaja(playerid, 1) && !TieneCaja(playerid, 2)) { _Mensaje(playerid, 0, "165", "No tienes una caja en ninguna mano."); return 1; }
        if (user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0) { _Mensaje(playerid, 0, "165", "Debes tener una mano vacía."); return 1; }
        if (TieneCaja(playerid, 1)) {
            new objeto = TieneCaja(playerid, 1);
            user[playerid][jm_DerechaCant]--;
            user[playerid][jm_Izquierda] = objeto, PonerObjeto(playerid, 2, objeto);
            user[playerid][jm_IzquierdaCant] = InfoObjeto[objeto][Capacidad];
            format(string, sizeof(string), "%s sacó un(a) %s de la caja.", NombreJugador(playerid), InfoObjeto[objeto][NombreObjeto]);
            ProxDetector(15.0, playerid, string, 0xACC97F22A, 0xACC97F22A, 0xACC97F22A, 0xACC97F22A, 0xACC97F22A);
            return 1;
        } else if (TieneCaja(playerid, 2)) {
            new objeto = TieneCaja(playerid, 2);
            user[playerid][jm_IzquierdaCant]--;
            user[playerid][jm_Derecha] = objeto, PonerObjeto(playerid, 1, objeto);
            if (InfoObjeto[objeto][IDArma] != 0) { _GiveWeapon(playerid, InfoObjeto[objeto][IDArma], InfoObjeto[objeto][Capacidad]); }
            user[playerid][jm_DerechaCant] = InfoObjeto[objeto][Capacidad];
            format(string, sizeof(string), "%s sacó un(a) %s de la caja.", NombreJugador(playerid), InfoObjeto[objeto][NombreObjeto]);
            ProxDetector(15.0, playerid, string, 0xACC97F22A, 0xACC97F22A, 0xACC97F22A, 0xACC97F22A, 0xACC97F22A);
            return 1;
        }
    } else if (!strcmp(params[0], "guardar", true)) {
        _Mensaje(playerid, 0, "0", "No disponible.");
    }
    return 1;
}

funcion _ordenador(playerid) {
	new _dialog1[3000], _dialog2[300];
	strcat(_dialog1, "{ffffff}1. Identificar una persona\n\
	2. Comprobar historial delictivo\n\
	3. Identificar un vehículo\n\
	4. Atender buzón de llamadas (911)\n\
	5. Comprobar lista de sospechosos\n\
	6. Solicitud de refuerzos a posición", sizeof(_dialog1));
	format(_dialog2, sizeof(_dialog2), "Ordenador policial: {FFFF00}Sesión iniciada: (%s)", NombreJugador(playerid));
	Dialog(playerid, D_PCLSPD1, DIALOG_STYLE_LIST, _dialog2, _dialog1, ">", "Salir");
	return 1;
}

CMD:ordenadorpd(playerid)
{
	if (!Es_Faccion(playerid, 1)) return _Mensaje(playerid, 0, "381", "No formas parte de la policía.");
	if (IsPlayerInAnyVehicle(playerid))
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if (!LSPD_Veh(vehicleid) && !SASD_Veh(vehicleid)) return _Mensaje(playerid, 0, "378", "Debes estar en un vehiculo de LSPD/SASD.");
		_ordenador(playerid);
	}
	else
	{
		if(!_enPos(playerid,4.0,230.5195,164.9984,1003.0234)) return _Mensaje(playerid, 0, "126", "No estás en la oficina de la policía.");
		_ordenador(playerid);
	}
	return 1;
}

CMD:fogata(playerid)
{
	if(user[playerid][jNivel] <= 4) return _Mensaje(playerid, 0, "87", "Debes ser mayor a nivel de 5.");
	Dialog(playerid, D_FOGATA, DIALOG_STYLE_LIST, "{D6E1EB}Fogata", "{FFFFFF}Colocar\nEditar\nBorrar", "Seleccionar", "Cancelar");
	return 1;
}

CMD:entrargpd(playerid, params[])
{
	if(_enPos(playerid, 7, 1201.5192,-1635.3328,13.2420))
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
			SetPlayerPos(playerid, 2295.2043, 2493.5623, 3.2520);
			SetPlayerFacingAngle(playerid, 180.0000);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 10);
		} else {

			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				for(new i=0; i <= MAX_VEHICLES; i++) {
					if (VehicleToPoint(5.0, i, 2300.3340, 2497.5120, 3.0093) && (GetVehicleVirtualWorld(i) == 10)) {
						_Mensaje(playerid, 0, "540", "Hay un vehículo cerca del portón, espera a que se mueva.");
						return 1;
					}
				}
				if(IsPlayerInVehicle(playerid, tmpcar)) {
					SetPlayerVirtualWorld(playerid, 10);
					SetPlayerInterior(playerid, 0);
					SetVehicleVirtualWorld(tmpcar, 10);
					LinkVehicleToInterior(tmpcar, 0);
					SetVehiclePos(tmpcar, 2300.3340, 2497.5120, 3.0093);
					SetVehicleZAngle(tmpcar, -114.1800);
					foreach(Player,p) {
						if(IsPlayerInVehicle(p,GetPlayerVehicleID(playerid))) {
							SetPlayerInterior(p, 0);
							SetPlayerVirtualWorld(p, 10);
						}
					}
					return 1;
				}
			}
		}
	}
	else if(_enPos(playerid, 7, 1351.8196, 1.9216, 34.7111))
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
			SetPlayerPos(playerid, 1373.20020, 40.16479, -91.44099);
			SetPlayerFacingAngle(playerid, 90.0654);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 10);
		} else {

			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				for(new i=0; i <= MAX_VEHICLES; i++) {
					if (VehicleToPoint(5.0, i,1376.7347, 45.0207, -91.9430) && (GetVehicleVirtualWorld(i) == 10)) {
						_Mensaje(playerid, 0, "540", "Hay un vehículo cerca del portón, espera a que se mueva.");
						return 1;
					}
				}
				if(IsPlayerInVehicle(playerid, tmpcar)) {
					SetPlayerVirtualWorld(playerid, 10);
					SetPlayerInterior(playerid, 0);
					SetVehicleVirtualWorld(tmpcar, 10);
					LinkVehicleToInterior(tmpcar, 0);
					SetVehiclePos(tmpcar,1376.7347, 45.0207, -91.9430);
					SetVehicleZAngle(tmpcar, -88.8000);
					foreach(Player,p) {
						if(IsPlayerInVehicle(p,GetPlayerVehicleID(playerid))) {
							SetPlayerInterior(p, 0);
							SetPlayerVirtualWorld(p, 10);
						}
					}
					return 1;
				}
			}
		}
	}
	else if(_enPos(playerid, 7, 624.6062,-601.4883,16.6594))
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
			SetPlayerPos(playerid, 597.3294,-574.6203,-53.7147);
			SetPlayerFacingAngle(playerid, 269.0654);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 10);
		} else {

			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				for(new i=0; i <= MAX_VEHICLES; i++) {
					if (VehicleToPoint(5.0, i,603.8090,-567.2634,-53.9902) && (GetVehicleVirtualWorld(i) == 10)) {
						_Mensaje(playerid, 0, "540", "Hay un vehículo cerca del portón, espera a que se mueva.");
						return 1;
					}
				}
				if(IsPlayerInVehicle(playerid, tmpcar)) {
					SetPlayerVirtualWorld(playerid, 10);
					SetPlayerInterior(playerid, 0);
					SetVehicleVirtualWorld(tmpcar, 10);
					LinkVehicleToInterior(tmpcar, 0);
					SetVehiclePos(tmpcar,603.8090,-567.2634,-53.9902);
					SetVehicleZAngle(tmpcar, 274.1458);
					foreach(Player,p) {
						if(IsPlayerInVehicle(p,GetPlayerVehicleID(playerid))) {
							SetPlayerInterior(p, 0);
							SetPlayerVirtualWorld(p, 10);
						}
					}
					return 1;
				}
			}
		}
	}
    return 1;
}
CMD:salirgpd(playerid, params[])
{
	if(_enPos(playerid, 7, 2300.3340, 2497.5120, 3.0093))
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
			SetPlayerPos(playerid, 1205.7919,-1642.6509,13.5366);
			SetPlayerFacingAngle(playerid, 81.6866);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		} else {
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				for(new i=0; i <= MAX_VEHICLES; i++) {
					if (VehicleToPoint(5.0, i, 1201.5192,-1635.3328,13.2420)) {
						_Mensaje(playerid, 0, "540", "Hay un vehículo cerca del portón, espera a que se mueva.");
						return 1;
					}
				}
				if(IsPlayerInVehicle(playerid, tmpcar)) {
					LinkVehicleToInterior(tmpcar, 0);
					SetVehicleVirtualWorld(tmpcar, 0);
					SetVehiclePos(tmpcar, 1201.5192,-1635.3328,13.2420);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					SetVehicleZAngle(tmpcar, 180.0);
					foreach(Player,p) {
						if(IsPlayerInVehicle(p,tmpcar)) {
							SetPlayerInterior(p,0);
							SetPlayerVirtualWorld(p,0);
						}
					}
					return 1;
				}
			}
		}
	}
	else if(_enPos(playerid, 7, 1376.7347, 45.0207, -91.9430))
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
			SetPlayerPos(playerid, 1352.5796, 5.7109, 35.0775);
			SetPlayerFacingAngle(playerid, 0.0000);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		} else {
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				for(new i=0; i <= MAX_VEHICLES; i++) {
					if (VehicleToPoint(5.0, i, 1351.8196, 1.9216, 34.7111)) {
						_Mensaje(playerid, 0, "540", "Hay un vehículo cerca del portón, espera a que se mueva.");
						return 1;
					}
				}
				if(IsPlayerInVehicle(playerid, tmpcar)) {
					LinkVehicleToInterior(tmpcar, 0);
					SetVehicleVirtualWorld(tmpcar, 0);
					SetVehiclePos(tmpcar, 1351.8196, 1.9216, 34.7111);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					SetVehicleZAngle(tmpcar, -140.6400);
					foreach(Player,p) {
						if(IsPlayerInVehicle(p,tmpcar)) {
							SetPlayerInterior(p,0);
							SetPlayerVirtualWorld(p,0);
						}
					}
					return 1;
				}
			}
		}
	}
	else if(_enPos(playerid, 7, 603.8090,-567.2634,-53.9902))
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
			SetPlayerPos(playerid, 610.9339,-583.6580,18.1435);
			SetPlayerFacingAngle(playerid, 180.6866);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		} else {
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				for(new i=0; i <= MAX_VEHICLES; i++) {
					if (VehicleToPoint(5.0, i, 624.6062,-601.4883,16.6594)) {
						_Mensaje(playerid, 0, "540", "Hay un vehículo cerca del portón, espera a que se mueva.");
						return 1;
					}
				}
				if(IsPlayerInVehicle(playerid, tmpcar)) {
					LinkVehicleToInterior(tmpcar, 0);
					SetVehicleVirtualWorld(tmpcar, 0);
					SetVehiclePos(tmpcar, 624.6062,-601.4883,16.6594);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					SetVehicleZAngle(tmpcar, 270.2603);
					foreach(Player,p) {
						if(IsPlayerInVehicle(p,tmpcar)) {
							SetPlayerInterior(p,0);
							SetPlayerVirtualWorld(p,0);
						}
					}
					return 1;
				}
			}
		}
	}
	return 1;
}

CMD:quitarcasaoff(playerid, params[]) {
    if (user[playerid][jAdmin] >= 10) {
        if (isnull(params)) return _Mensaje(playerid, 3, "0", "/quitarcasaoff [Nombre_Apellido]");
        if (INI_Exist(params)) {
            new data[60], string[128];
            format(data, sizeof data, DATOS_CUENTAS, params);
            new INI: File = INI_Open(data);
            INI_WriteInt(File, "Casa", -1);
            INI_Close(File);
            format(string, 128, "[AvisoAdmin]: {FFFFFF}Super Admin %s le quitó la casa al jugador %s.", NombreRJugador(playerid), params);
            MensajeAdmin(string);
            format(string, sizeof(string), "Registros: Super Admin %s le quitó la casa al jugador %s. (Registro Casas)", NombreRJugador(playerid), params);
            Log("Registros/QuitarCasa.log", string);
        } else _Mensaje(playerid, 0, "179", "Esa cuenta no existe.");
    } else _Mensaje(playerid, 0, "180", "Tú no tienes acceso a este comando.");
    return 1;
}

CMD:quitarnegociooff(playerid, params[]) {
    if (user[playerid][jAdmin] >= 10) {
        if (isnull(params)) return _Mensaje(playerid, 3, "0", "/quitarnegociooff [Nombre_Apellido]");
        if (INI_Exist(params)) {
            new data[60], string[128];
            format(data, sizeof data, DATOS_CUENTAS, params);
            new INI: File = INI_Open(data);
            INI_WriteInt(File, "Negocio", -1);
            INI_Close(File);
            format(string, 128, "[AvisoAdmin]: {FFFFFF}Super Admin %s le quitó el negocio que tenía %s.", NombreRJugador(playerid), params);
            MensajeAdmin(string);
            format(string, sizeof(string), "Registros: Super Admin %s le quitó el negocio que tenía %s. (Registro Negocios)", NombreRJugador(playerid), params);
            Log("Registros/QuitarNegocio.log", string);
        } else _Mensaje(playerid, 0, "179", "Esa cuenta no existe.");
    } else _Mensaje(playerid, 0, "180", "Tú no tienes acceso a el comando /Quitarnegociooff.");
    return 1;
}

CMD:dardinerooff(playerid, params[])
{
	if (user[playerid][jAdmin] >= 10)
	{
		new string[128], name[MAX_PLAYER_NAME], dinero;
		if (sscanf(params, "s[50]d", name, dinero)) return _Mensaje(playerid, 3, "0", "/dardinerooff [Nombre_Apellido] [cantidad]");
		if (INI_Exist(name))
		{
			new data[60];
			format(data, sizeof data, DATOS_CUENTAS, name);
			new INI: File = INI_Open(data);
			INI_WriteInt(File, "Dinero", dinero);
			INI_Close(File);
			format(string, 128, "[AvisoAdmin]: Super Admin %s ha otorgado la cantidad de (%d$) a (%s). (OFF)", NombreRJugador(playerid), dinero, name);
			MensajeAdmin(string);
			format(string, sizeof(string), "Registros: Super Admin %s le cedio la cantidad de (%d$) a (%s). (OFF) (Dar dinero Admin)", NombreRJugador(playerid), dinero, name);
			Log("Registros/DarDinero.log", string);
		} else _Mensaje(playerid, 0, "179", "Esa cuenta no existe.");
	}
	return 1;
}

CMD:heridas(playerid, params[]) {
    new NooSi[30], NooSi2[30],  NooSi3[30],  NooSi4[30],  NooSi5[30],  NooSi6[30],  NooSi7[30],
	a1NooSi[30], a2NooSi2[30],  a3NooSi3[30], a4NooSi4[30], a5NooSi5[30], a6NooSi6[30], a7NooSi7[30], NooSi8[30], playerid2;
    if (sscanf(params, "d", playerid2)) return _Mensaje(playerid, 3, "0", "/heridas [id jugador]");
    if (IsPlayerConnected(playerid2)) {
        if (!CercaDelWeon(3.0, playerid, playerid2)) { _Mensaje(playerid, 0, "0", "Debes estar más cerca de él."); return 1; }
        if (IsPlayerInAnyVehicle(playerid)) { _Mensaje(playerid, 0, "0", "No puedes ver las heridas desde un vehículo."); return 1; }
        if (InfoHeridas[playerid2][Cabezar] == 0) NooSi = "No";
        else if (InfoHeridas[playerid2][Cabezar] > 0) { format(a1NooSi, sizeof(a1NooSi), "Si(%d)", InfoHeridas[playerid2][Cabezar]); NooSi = a1NooSi; }
        if (InfoHeridas[playerid2][Torsor] == 0) NooSi2 = "No";
        else if (InfoHeridas[playerid2][Torsor] > 0) { format(a2NooSi2, sizeof(a2NooSi2), "Si(%d)", InfoHeridas[playerid2][Torsor]); NooSi2 = a2NooSi2; }
        if (InfoHeridas[playerid2][BrazoDr] == 0) NooSi3 = "No";
        else if (InfoHeridas[playerid2][BrazoDr] > 0) { format(a3NooSi3, sizeof(a3NooSi3), "Si(%d)", InfoHeridas[playerid2][BrazoDr]); NooSi3 = a3NooSi3; }
        if (InfoHeridas[playerid2][BrazoIr] == 0) NooSi4 = "No";
        else if (InfoHeridas[playerid2][BrazoIr] > 0) { format(a4NooSi4, sizeof(a4NooSi4), "Si(%d)", InfoHeridas[playerid2][BrazoIr]); NooSi4 = a4NooSi4; }
        if (InfoHeridas[playerid2][EntrePr] == 0) NooSi5 = "No";
        else if (InfoHeridas[playerid2][EntrePr] > 0) { format(a5NooSi5, sizeof(a5NooSi5), "Si(%d)", InfoHeridas[playerid2][EntrePr]); NooSi5 = a5NooSi5; }
        if (InfoHeridas[playerid2][PiernaDr] == 0) NooSi6 = "No";
        else if (InfoHeridas[playerid2][PiernaDr] > 0) { format(a6NooSi6, sizeof(a6NooSi6), "Si(%d)", InfoHeridas[playerid2][PiernaDr]); NooSi6 = a6NooSi6; }
        if (InfoHeridas[playerid2][PiernaIr] == 0) NooSi7 = "No";
        else if (InfoHeridas[playerid2][PiernaIr] > 0) { format(a7NooSi7, sizeof(a7NooSi7), "Si(%d)", InfoHeridas[playerid2][PiernaIr]); NooSi7 = a7NooSi7; }
        if (InfoHeridas[playerid2][Lesionesr] == 0) NooSi8 = "No";
        else if (InfoHeridas[playerid2][Lesionesr] > 0) NooSi8 = "Si";
        new coordsstring[300], DialogStatus[3000], coordsstring2[300];
        strcat(DialogStatus, "Lugar o tipo\tHeridas (disparos)\tDetalles (arma)\n", sizeof(DialogStatus));
        format(coordsstring, sizeof(coordsstring), "{ffffff}Cabeza\t%s\t%s\n",NooSi,InfoHeridas[playerid2][Cabeza]);
        strcat(DialogStatus, coordsstring);
        format(coordsstring, sizeof(coordsstring), "{ffffff}Torso\t%s\t%s\n",NooSi2,InfoHeridas[playerid2][Torso]);
        strcat(DialogStatus, coordsstring);
        format(coordsstring, sizeof(coordsstring), "{ffffff}Brazo derecho\t%s\t%s\n",NooSi3,InfoHeridas[playerid2][BrazoD]);
        strcat(DialogStatus, coordsstring);
        format(coordsstring, sizeof(coordsstring), "{ffffff}Brazo izquierdo\t%s\t%s\n",NooSi4,InfoHeridas[playerid2][BrazoI]);
        strcat(DialogStatus, coordsstring);
        format(coordsstring, sizeof(coordsstring), "{ffffff}Entrepierna\t%s\t%s\n",NooSi5,InfoHeridas[playerid2][EntreP]);
        strcat(DialogStatus, coordsstring);
        format(coordsstring, sizeof(coordsstring), "{ffffff}Pierna derecha\t%s\t%s\n",NooSi6,InfoHeridas[playerid2][PiernaD]);
        strcat(DialogStatus, coordsstring);
        format(coordsstring, sizeof(coordsstring), "{ffffff}Pierna izquierda\t%s\t%s\n",NooSi7,InfoHeridas[playerid2][PiernaI]);
        strcat(DialogStatus, coordsstring);
        format(coordsstring, sizeof(coordsstring), "{ffffff}Cuerpo\t%s\t%d Golpes\n",NooSi8,InfoHeridas[playerid2][Lesionesr]);
        strcat(DialogStatus, coordsstring);
        format(coordsstring2, sizeof(coordsstring2), "{b0b0b0}Heridas de %s", NombreJugador(playerid2));
        Dialog(playerid, D_INVALIDO, DIALOG_STYLE_TABLIST_HEADERS, coordsstring2, DialogStatus, "Cerrar", "");
    }
    return 1;
}

CMD:camello(playerid)
{
 	if(_enPos(playerid, 4.0, 223.1527, 1942.4933, 18.1086))
    {
	Dialog(playerid, 601, DIALOG_STYLE_TABLIST_HEADERS, "{D6E1EB}Camello", "Producto\tUnidades\tTickets\n\
	Mechero\t5\t{0ED39E}20\n\
	Caja de cigarros\t1\t{0ED39E}36\n\
	Goma de mascar\t1\t{0ED39E}9\n\
	TELÉFONO\t1\t{0ED39E}290\n\
	Chip de saldo\t10\t{0ED39E}100", "Comprar", "Cancelar");
	}
	else _Mensaje(playerid, 0, "671", "No estás cerca del camello.");
	return 1;
}

CMD:ftiempo(playerid, params[]) {
	new tiempof[128];
	if(user[playerid][jT_fabrica] != -1) format(tiempof, sizeof(tiempof), "[FABRICA ARMAS]{FFFFFF} Horas: %i - Minutos: %i - Veces: %i", user[playerid][jT_fabrica] / 60, user[playerid][jT_fabrica] % 60, abs(user[playerid][jI_fabrica]-3));
	else format(tiempof, sizeof(tiempof), "[FABRICA ARMAS]{FFFFFF} Horas: 0 - Minutos: 0 - Veces: %i", user[playerid][jT_fabrica] / 60, user[playerid][jT_fabrica], user[playerid][jT_fabrica] % 60, abs(user[playerid][jI_fabrica]-3));
	Mensaje_(playerid, 0x00919DFF, tiempof);
	if(user[playerid][jT_fabrica2] != -1) format(tiempof, sizeof(tiempof), "[FABRICA CARGADORES]{FFFFFF} Horas: %i - Minutos: %i - Veces: %i", user[playerid][jT_fabrica2] / 60, user[playerid][jT_fabrica2] % 60,abs(user[playerid][jI_fabrica2]-3));
	else format(tiempof, sizeof(tiempof), "[FABRICA CARGADORES]{FFFFFF} Horas: 0 - Minutos: 0 - Veces: %i", user[playerid][jT_fabrica2] / 60, user[playerid][jT_fabrica2] % 60,abs(user[playerid][jI_fabrica2]-3));
	Mensaje_(playerid, 0x00919DFF, tiempof);
	return 1;
}

abs(intx)
{
    if (intx < 0)
        return -1*intx;
    else
        return intx;
}

CMD:fabrica(playerid, params[]) {
	if (jPt_fabrica[playerid]) return _Mensaje(playerid, 0, "567", "Tienes un pedido activo, espera a que te lo lleven.");
    if (user[playerid][jT_fabrica] != -1 && user[playerid][jT_fabrica2] != -1) return _Mensaje(playerid, 0, "567", "Aún no puedes traficar, revisa /ftiempo.");
	if (user[playerid][jMiembroFam] >= 1 && user[playerid][jRangoFam] >= 1) {
		if (InfoFamilia[user[playerid][jMiembroFam]][fTipo] == 2) {
			if (_Fabrica(playerid)) {
				if (user[playerid][jm_Izquierda] != 50 && user[playerid][jm_Derecha] != 50) return _Mensaje(playerid, 0, "9", "Necesitas una caja vacía en las manos.");
				if(user[playerid][jT_fabrica] == -1 && user[playerid][jT_fabrica2] == -1 && user[playerid][jI_fabrica] < 3 && user[playerid][jI_fabrica2] < 3)
				{
	            Dialog(playerid, D_FABRICA, DIALOG_STYLE_TABLIST_HEADERS, "{D6E1EB}Fabrica de armas", "Cajas\tMateriales\n\
	            Pistola 45. Glock\t40m\n\
	            Magnum Eagle\t75m\n\
	            Carabina\t98m\n\
	            MAC-10\t100m\n\
	            MP5K\t150m\n\
	            Remignton\870\t200m\n\
	            Recortada\t220m\n\
	            Ak-47\t350m\n\
	            Cargas de 45.Glock\t8m\n\
	            Cargas de M.Eagle\t10m\n\
	            Cargas de Carabina\t12m\n\
	            Cargas de MAC-10\t14m\n\
	            Cargas de MP5K\t18m\n\
	            Cargas de AK-47\t20m\n\
	            Cargas de Escopeta\t30m", "Seleccionar", "Cancelar");
	            return 1;
				}
				else if(user[playerid][jT_fabrica] == -1 && user[playerid][jI_fabrica] < 3 && user[playerid][jI_fabrica2] >= 3)
				{
	            Dialog(playerid, D_FABRICA, DIALOG_STYLE_TABLIST_HEADERS, "{D6E1EB}Fabrica de armas", "Cajas\tMateriales\n\
	            Pistola 45.Glock\t40m\n\
	            M.Eagle\t75m\n\
	            Carabina\t98m\n\
	            MAC-10\t100m\n\
	            MP5K\t150m\n\
	            Remington 870\t200m\n\
	            Escopeta Recortada\t220m\n\
	            Ak-47\t350m\n\
	            No disponible\t8m\n\
	            No disponible\t10m\n\
	            No disponible\t12m\n\
	            No disponible\t14m\n\
	            No disponible\t18m\n\
	            No disponible\t20m\n\
	            No disponible\t30m", "Seleccionar", "Cancelar");
	            return 1;
	            }
	            else if(user[playerid][jT_fabrica2] == -1 && user[playerid][jI_fabrica2] < 3 && user[playerid][jI_fabrica] >= 3)
	            {
	            Dialog(playerid, D_FABRICA, DIALOG_STYLE_TABLIST_HEADERS, "{D6E1EB}Fabrica de armas", "Cajas\tMateriales\n\
	            No disponible\t40m\n\
	            No disponible\t75m\n\
	            No disponible\t98m\n\
	            No disponible\t100m\n\
	            No disponible\t150m\n\
	            No disponible\t200m\n\
	            No disponible\t220m\n\
	            No disponible\t350m\n\
	            Cargas de 45. Glock\t8m\n\
	            Cargas de M.Eagle\t10m\n\
	            Cargas de Carabina\t12m\n\
	            Cargas de MAC-10\t14m\n\
	            Cargas de MP5K\t18m\n\
	            Cargas de AK-47\t20m\n\
	            Cargas de Escopeta\t30m", "Seleccionar", "Cancelar");
	            return 1;
	            }
	    	} else _Mensaje(playerid, 0, "567", "No estas en la fábrica o en lugar indicado.");
		} else _Mensaje(playerid, 0, "180", "Tu familia/organización no es tipo mafia.");
	} else _Mensaje(playerid, 0, "180", "No perteneces a una organización/familia o no eres rango 4.");
    return 1;
}
//---Limpiar bolsillos como administrador nivel 5 (head)--subido el rango el 25/09/21
CMD:limpiarboluser(playerid, params[]) {
    if (user[playerid][jAdmin] >= 5) {
        if (isnull(params)) return _Mensaje(playerid, 3, "0", "/limpiarboluser [Nombre_Apellido]");
        if (INI_Exist(params)) {
            new data[60], string[128];
            format(data, sizeof data, DATOS_CUENTAS, params);
            new INI: File = INI_Open(data);
            for(new i = 0; i < 10; i++) {
            	new sql[100];
     		    format(sql, sizeof(sql), "Bolsillo_%d", i);
            	INI_WriteInt(File, sql, 0);
           	 	format(sql, sizeof(sql), "Bolsillo_Cantidad_%d", i);
            	INI_WriteInt(File, sql, 0);
        	}
			INI_WriteInt(File, "Mano_Izquierda", 0);
        	INI_WriteInt(File, "Mano_Izquierda_Cantidad", 0);
        	INI_WriteInt(File, "Mano_Derecha", 0);
        	INI_WriteInt(File, "Mano_Derecha_Cantidad", 0);
        	INI_WriteInt(File, "Espalda", 0);
        	INI_WriteInt(File, "Espalda_Cantidad", 0);
        	for(new i = 0; i < 6; i++) {
     			new sql[100];
          	  	format(sql, sizeof(sql), "Cinturon_%d", i); INI_WriteInt(File, sql, 0);
            	format(sql, sizeof(sql), "Cinturon_Cantidad_%d", i); INI_WriteInt(File, sql, 0);
	        }
            INI_Close(File);
            format(string, 128, "[AvisoAdmin]: {FFFFFF}Game Admin %s limpio el sistema de inventarios de %s. (CMD OFF)", NombreRJugador(playerid), params);
            MensajeAdmin(string);
            format(string, sizeof(string), "Registros: Game Admin %s limpio el sistema de inventarios de %s. (CMD OFF)", NombreRJugador(playerid), params);
            Log("Registros/LimpiarInventario.log", string);
        } else _Mensaje(playerid, 0, "179", "Esa cuenta no existe.");
    } else _Mensaje(playerid, 0, "180", "Tú no tienes acceso a el comando /limpiartodooff.");
    return 1;
}

funcion SlotVehLibre() {
	Loop(i,MAX_VEH_USADO,0) {
		if(!i_Usado[i][uModeloVeh]) return i;
	}
	return -1;
}

CMD:venderveh(playerid, params[]) //vende vehículo en concesonario
{
	if(!_enPos(playerid, 40, 2594.4885, -2225.3184, 13.1689)) return _Mensaje(playerid, 0, "126", "No estás en la concesionaria de segunda mano (/gps concesionarias).");
	new id;
	if (sscanf(params, "i", id)) return _Mensaje(playerid, 3, "0", "/venderveh [id llave]");
	if (id < 1 || id > 6) { _Mensaje(playerid, 0, "0", "La ranura debe estar entre 1 y 6."); return 1; }
	if (user[playerid][jLlaveCoche][id-1] == 0) { _Mensaje(playerid, 0, "0", "No tienes ningún vehículo en esa ranura."); return 1; }
	if (id == 0) return _Mensaje(playerid, 0, "458", "Ranura 0 no existe.");
	if (user[playerid][jLlaveCoche][id-1] != 0 && strcmp(NombreRJugador(playerid), InfoVehiculo[user[playerid][jLlaveCoche][id-1]-1000][vDueno], true) == 0)
	{
		if (GetPVarInt(playerid, "VenderConfirmado") == 0)
		{
			SetPVarInt(playerid, "VenderConfirmado", 1);
			_Mensaje(playerid, 4, "b0b0b0", "Recuerda que al vender el vehículo recibes la mitad de su precio original, re-escribe /venderveh.");
			_Mensaje(playerid, 4, "ff0000", "IMPORTANTE:{ffffff} Coloca el vehículo en algún espacio vacío de la zona, si es bote es en el agua.");
		}
		else
		{
			DeletePVar(playerid, "VenderConfirmado");
			new vid = user[playerid][jLlaveCoche][id-1]-1000, vehiculo = InfoVehiculo[vid][vID], vehid = SlotVehLibre();
			if (IsPlayerInVehicle(playerid, vehiculo))
			{
				if(vehid < 0) return _Mensaje(playerid, 0, "0", "Ya no hay más espacio, se podrán crear máximo 200 vehículos usados.");
				new Float: x,Float: y,Float: z,Float: angle,Float: health;
				GetVehicleHealth(vehiculo, health);
				GetVehicleDamageStatus(vehiculo, InfoVehiculo[vid][vDanioSuperficie], InfoVehiculo[vid][vDanioPuertas], InfoVehiculo[vid][vDanioLuces], InfoVehiculo[vid][vDanioRuedas]);
				GetVehiclePos(vehiculo, x, y, z);
				GetVehicleZAngle(vehiculo, angle);
				i_Usado[vehid][uModeloVeh] = InfoVehiculo[vid][vModelo];
				i_Usado[vehid][uPrecioVeh] = InfoVehiculo[vid][vPrecio] / 4 * 2;
				DarDineroGC(playerid, InfoVehiculo[vid][vPrecio] / 4 * 2);
				i_Usado[vehid][uSeguro] = InfoVehiculo[vid][vSeguro];
				i_Usado[vehid][uPaintJob] = InfoVehiculo[vid][vPaintJob];
				i_Usado[vehid][uColor_1] = InfoVehiculo[vid][vColor_1];
				i_Usado[vehid][uColor_2] = InfoVehiculo[vid][vColor_2];
				i_Usado[vehid][uDanioSuperficie] = InfoVehiculo[vid][vDanioSuperficie];
				i_Usado[vehid][uDanioPuertas] = InfoVehiculo[vid][vDanioPuertas];
				i_Usado[vehid][uDanioLuces] = InfoVehiculo[vid][vDanioLuces];
				i_Usado[vehid][uDanioRuedas] = InfoVehiculo[vid][vDanioRuedas];
				i_Usado[vehid][uVida] = health;
				i_Usado[vehid][uGasolina] = 150;
				i_Usado[vehid][uStereo] = InfoVehiculo[vid][vStereo];
				i_Usado[vehid][uNeon] = InfoVehiculo[vid][vNeon];
				for (new m = 0; m < MAX_MODVEHICULOS; m++)
				{
					i_Usado[vehid][uModificaciones][m] = InfoVehiculo[vid][vModificaciones][m];
				}
				VehiculoBorrar(vid);
				user[playerid][jLlaveCoche][id-1] = 0;
				GuardarCuenta(playerid);
				_Mensaje(playerid, 5, "0", "Su vehículo ha sido vendido a mitad de precio.");
			} else return _Mensaje(playerid, 0, "327", "No estás dentro del vehículo que escogiste a vender.");
		}
	} else return _Mensaje(playerid, 0, "580", "No tienes este vehículo a tu nombre.");
	return 1;
}

CMD:avisarpd(playerid)
{
	if(GetPVarInt(playerid, "EnCrack") == 0) return _Mensaje(playerid, 0, "12", "No puedes usar este comando sino estás herido.");
	if(YaAviso[playerid] == 1) return _Mensaje(playerid, 0, "12", "Ya usaste este comando, muere de nuevo y lo podrás usar.");
	new string[256],Float: KcyoX, Float: KcyoY, Float: KcyoZ, location[MAX_ZONE_NAME];
	GetPlayerPos(playerid, KcyoX, KcyoY, KcyoZ);
	Get2DZone(location, MAX_ZONE_NAME, KcyoX, KcyoY, KcyoZ);
	format(string, sizeof(string), "*[CH|911|Central, S: 4A: Persona gravemente herida en %s.",location);
	_MensajeRfac(1, C_COLORRADIO, string, 1, 2);
	_MensajeRfac(5, C_COLORRADIO, string);
	ProxDetector(35.0, playerid, "[NPC] Alguna persona que estaba por allí llamó al departamento de policías al ver la situación.", 0x9EC73DAA, 0x9EC73DAA, 0x9EC73DAA, 0x9EC73DAA, 0x9EC73DAA);
	YaAviso[playerid] = 1;
	return 1;
}

CMD:destruir(playerid, params[]) {
    if (!Es_Faccion(playerid, 1)) return _Mensaje(playerid, 0, "165", "No formas parte de la Ley.");
    if (GetPVarInt(playerid, "EnCrack") == 1) return _Mensaje(playerid, 0, "12", "No puedes usar este comando mientras estás herido.");
    new string[128];
    if (!sscanf(params, "d", params[1])) {
        if (!IsPlayerConnected(params[1])) return _Mensaje(playerid, 0, "165", "Ese jugador no esta conectado.");
        if (!CercaDelWeon(5.0, playerid, params[1])) return _Mensaje(playerid, 0, "165", "Ese jugador esta muy lejos de ti.");
        if (!Es_Faccion(params[1], 1)) return _Mensaje(playerid, 0, "165", "Ese jugador no forma parte de la Ley.");
        QuitarManos(params[1]);
        format(string, sizeof(string), "* %s limpió las manos de %s.", NombreJugador(playerid), NombreJugador(params[1]));
        MensajeFaccion(user[playerid][jMiembro], C_LIGHTBLUE, string, user[playerid][jDivision]);
    } else _Mensaje(playerid, 3, "0", "/destruir [id jugador]");
    return 1;
}
//---SISTEMA DE COCHES CON MODIFICACIONES EN LA 2.0.X ---BLOCK
CMD:vercoche(playerid, params[]) {
    if (user[playerid][jAdmin] < 1) return _Mensaje(playerid, 0, "494", "Tú no tienes acceso a el comando /Vercoche.");
    if (isnull(params)) return _Mensaje(playerid, 3, "0", "/vercoche [id vehículo]");
    if (!isnumeric(params)) return _Mensaje(playerid, 0, "43", "Sólo números porfavor, vuelve a intentarlo.");
    new string[128], vehicleid = strval(params);
    for (new v = 0; v < MAX_VEHICULOS; v++) {
    	if(InfoVehiculo[v][vID] == vehicleid) {
     		format(string, sizeof(string), "* ID Activa: %d | Modelo: %s | Propietario: %s | Llave ID/Database: LS-%d", InfoVehiculo[v][vID], NombreVehiculo(InfoVehiculo[v][vID]), InfoVehiculo[v][vDueno], InfoVehiculo[v][vLlave]);
       		_Mensaje(playerid, 4, "33CCFF", string);
       		return 1;
        }
    }
    return 1;
}

CMD:vehiculos(playerid) return cmd_coches(playerid);
CMD:coches(playerid) {
    if (GetPVarInt(playerid, "Llamada_LSED") == 1) return _Mensaje(playerid, 0, "647", "No puedes usar este comando en este momento.");
    new string[256], dialog[1024], stext[62];
	for(new i = 0; i < 6; i++) {
		new veh = user[playerid][jLlaveCoche][i];
  		if(veh == 0) { format(string, sizeof(string), "\n{b0b0b0}Sin vehículos (ranura vacía)"); }
		else {
			switch(InfoVehiculo[veh-1000][vSpawned]) {
				case 0: stext = "{ff0000}Guardado (oculto){ffffff}";
				case 1: format(stext, sizeof(stext), "{FFFF00}ID Activa: %d", InfoVehiculo[veh-1000][vID]);
			}
			if(InfoVehiculo[veh-1000][vEnDeposito] == 1) format(string, sizeof(string), "\n{ffffff}%s - Modelo: %s - {CA3022}Embargado", stext, nombre_vehiculo[InfoVehiculo[veh-1000][vModelo] - 400]);
			else format(string, sizeof(string), "\n{ffffff}%s - Modelo: %s - Llave ID: {00CDFF}%d", stext, nombre_vehiculo[InfoVehiculo[veh-1000][vModelo] - 400], veh);
		}
		strcat(dialog, string);
	}
	Dialog(playerid, D_VEHMENU, DIALOG_STYLE_LIST, "{FFFF00}Propiedades: Menú [Coches]", dialog, "Seleccionar", "Cancelar");
    return 1;
}


// este sistema ver que hacer porque toca los case: de conexion al servidor y si se modifica pude liarse parda al actualizar el server
CMD:vehiculos2(playerid) return cmd_coches2(playerid);
CMD:coches2(playerid) {
/*	_Mensaje(playerid, 5, "0", "/coches2 reparando para próxima versión.");
   if (GetPVarInt(playerid, "Llamada_LSED") == 1) return _Mensaje(playerid, 0, "647", "No puedes usar este comando en este momento.");
    new string[256], dialog[1024], stext[62];
	for(new i = 0; i < 6; i++) {
		new veh = user[playerid][jLlaveCochePrestado][i];
  		if(veh == 0) { format(string, sizeof(string), "\n{b0b0b0}Ranura vacía"); }
		else
		{
		    if(InfoVehiculo[veh][vModelo] != 0)
		    {
				switch(InfoVehiculo[veh-1000][vSpawned])
				{
					case 0: stext = "{ff0000}Guardado{ffffff}";
					case 1: format(stext, sizeof(stext), "ID: %d - Dueño: %s", InfoVehiculo[veh-1000][vID], InfoVehiculo[veh-1000][vDueno]);
				}
				if(InfoVehiculo[veh-1000][vEnDeposito] == 1) format(string, sizeof(string), "\n{ffffff}%s - Vehículo: %s - {CA3022}Embargado", stext, nombre_vehiculo[InfoVehiculo[veh-1000][vModelo] - 400]);
				else format(string, sizeof(string), "\n{ffffff}%s - Vehículo: %s - Matricula: {00CDFF}LS-%d", stext, nombre_vehiculo[InfoVehiculo[veh-1000][vModelo] - 400], veh);
			}
			else
			{
			    format(string, sizeof(string), "\n{b0b0b0}Ranura vacía");
			    user[playerid][jLlaveCochePrestado][i] = 0;
			}
		}
		strcat(dialog, string);
	}
	Dialog(playerid, D_VEHMENU2, DIALOG_STYLE_LIST, "{D6E1EB}Vehículos prestados", dialog, "Seleccionar", "Cancelar");*/
    return 1;
}

CMD:vercoches(playerid, params[]) {
    if (user[playerid][jAdmin] < 1) return _Mensaje(playerid, 0, "494", "Tú no tienes acceso a el comando /Vercoches.");
    new string[256], dialog[1024], stext[62];
    if (sscanf(params, "d", params[1])) return _Mensaje(playerid, 3, "0", "/vercoches [id jugador]");
    if (!IsPlayerConnected(params[1])) return _Mensaje(playerid, 0, "165", "Ese jugador no esta conectado.");
	for(new i = 0; i < 6; i++) {
		new veh = user[params[1]][jLlaveCoche][i];
  		if(veh == 0) { format(string, sizeof(string), "\n{b0b0b0}Sin vehículos (ranura vacía)"); }
		else {
			switch(InfoVehiculo[veh-1000][vSpawned]) {
				case 0: stext = "{ff0000}Guardado (oculto){ffffff}";
				case 1: format(stext, sizeof(stext), "{FFFF00}ID: %d", InfoVehiculo[veh-1000][vID]);
			}
			if(InfoVehiculo[veh-1000][vEnDeposito] == 1) format(string, sizeof(string), "\n{ffffff}%s - Vehículo: %s - {CA3022}Embargado", stext, nombre_vehiculo[InfoVehiculo[veh-1000][vModelo] - 400]);
			else format(string, sizeof(string), "\n{FFFFFF}ID Activa: %s - Modelo: %s - Llave ID: {00CDFF}%d", stext, nombre_vehiculo[InfoVehiculo[veh-1000][vModelo] - 400], veh);
		}
		strcat(dialog, string);
	}
	Dialog(playerid, D_INVALIDO, DIALOG_STYLE_LIST, "{D6E1EB}GS:RP STAFF | VEHÍCULOS DEL USUARIO", dialog, "Seleccionar", "Cancelar");
    return 1;
}

CMD:verllaves(playerid, params[]) {
    if (user[playerid][jAdmin] < 1) return _Mensaje(playerid, 0, "494", "Tú no tienes acceso a el comando /verllaves.");
    new string[256], dialog[1024], stext[62];
    if (sscanf(params, "d", params[1])) return _Mensaje(playerid, 3, "0", "/verllaves [id jugador]");
    if (!IsPlayerConnected(params[1])) return _Mensaje(playerid, 0, "165", "Ese jugador no esta conectado.");
	for(new i = 0; i < 6; i++) {
		new veh = user[params[1]][jLlaveCochePrestado][i];
  		if(veh == 0) { format(string, sizeof(string), "\n{b0b0b0}Sin vehículos (ranura vacía)"); }
		else
		{
		    if(InfoVehiculo[veh][vModelo] != 0)
		    {
				switch(InfoVehiculo[veh-1000][vSpawned])
				{
					case 0: stext = "{ff0000}Guardado (oculto){ffffff}";
					case 1: format(stext, sizeof(stext), "ID: %d - Dueño: %s", InfoVehiculo[veh-1000][vID], InfoVehiculo[veh-1000][vDueno]);
				}
				if(InfoVehiculo[veh-1000][vEnDeposito] == 1) format(string, sizeof(string), "\n{ffffff}%s - Modelo: %s - {CA3022}Embargado", stext, nombre_vehiculo[InfoVehiculo[veh-1000][vModelo] - 400]);
				else format(string, sizeof(string), "\n{ffffff}%s - Modelo: %s - Llave: {00CDFF}%d", stext, nombre_vehiculo[InfoVehiculo[veh-1000][vModelo] - 400], veh);
			}
			else
			{
			    format(string, sizeof(string), "\n{b0b0b0}Sin vehículos (ranura vacía)");
			    user[params[1]][jLlaveCochePrestado][i] = 0;
			}
		}
		strcat(dialog, string);
	}
	Dialog(playerid, D_INVALIDO, DIALOG_STYLE_LIST, "Propiedades: {D6E1EB}L.Prestadas", dialog, "Seleccionar", "Cancelar");
    return 1;
}

CMD:aoa(playerid, params[]) {
    new Str[128];
    if (!IsPlayerConnected(playerid)) return _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
    if (user[playerid][jAdmin] < 5) return _Mensaje(playerid, 0, "88", "Tú no tienes acceso a el comando /aoa.");
    if (isnull(params)) return _Mensaje(playerid, 3, "0", "/aoa [texto]");
    foreach(Player, i) {
        StopAudioStreamForPlayer(i);
        format(Str, sizeof(Str), "http://audio1.spanishdict.com/audio?lang=es&voice=Ximena&speed=25&text=%s", params);
        EscucharMusica(i, Str);
    }
    return 1;
}

CMD:entrarvehadmin(playerid, params[]) {
    new vehicleid, string[256];
    if (user[playerid][jAdmin] < 3) return _Mensaje(playerid, 0, "1", "No puedes usar este comando.");
    if (EnServicioADM[playerid] == 0) return _Mensaje(playerid, 0, "158", "Para usar este comando de forma responsable, [Escribe] /adminservicio.");
    if (!sscanf(params, "d", vehicleid)) {
        PutPlayerInVehicle(playerid, vehicleid, 0);
        format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s utilizó '/entrarvehadmin' (veh usuario) [vehID: %d].", NombreRJugador(playerid), vehicleid);
        MensajeAdmin(string);
    } else _Mensaje(playerid, 0, "158", "/entrarvehadmin [id vehículo]");
    return 1;
}

CMD:darlicencia(playerid, params[]) {
    if (!Es_Faccion(playerid, 1)) return _Mensaje(playerid, 0, "165", "No formas parte de la Ley.");
	if (user[playerid][jDivision] != 1) return _Mensaje(playerid, 0, "229", "No eres de la división PD.");
	if (user[playerid][jRango] < 10) return _Mensaje(playerid, 0, "124", "No eres rango 10 o superior.");
    new string[128];
    if (!sscanf(params, "d", params[1])) {
        if (!IsPlayerConnected(params[1])) return _Mensaje(playerid, 0, "165", "Ese jugador no esta conectado.");
        if (!CercaDelWeon(5.0, playerid, params[1])) return _Mensaje(playerid, 0, "165", "Ese jugador esta muy lejos de ti.");
        user[params[1]][jLicencias][0] = 1;
        format(string, sizeof(string), "%s cede una licencia de armas a %s.", NombreRJugador(playerid), NombreRJugador(params[1]));
        ProxDetector(30.0, playerid, string, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF);
    } else _Mensaje(playerid, 3, "0", "/darlicencia [id jugador]");
    return 1;
}

CMD:balasgoma(playerid, params[]) {
    if (!Es_Faccion(playerid, 1)) return _Mensaje(playerid, 0, "165", "No formas parte de la Ley.");
    if (GetPlayerWeapon(playerid) == 25) {
        if (BalasDeGoma[playerid] == 0) {
            BalasDeGoma[playerid] = 1;
            _Mensaje(playerid, 2, "0", "Has activado el modo escopeta de balas.");
        } else {
            BalasDeGoma[playerid] = 0;
            _Mensaje(playerid, 2, "0", "Has desactivado el modo escopeta de balas.");
        }
    } else _Mensaje(playerid, 0, "165", "No tienes una escopeta en tu mano derecha.");
    return 1;
}

CMD:derribarpuerta(playerid, params[]) return cmd_ram(playerid, params);
CMD:ram(playerid, params[]) {
    if (Es_Faccion(playerid, 1, 5)) {
        for (new i = 0; i < sizeof(InfoCasa); i++) {
        	if (_enPos(playerid, 1, InfoCasa[i][cExteriorX], InfoCasa[i][cExteriorY], InfoCasa[i][cExteriorZ]) && user[playerid][jVirtualWorld] == InfoCasa[i][c_VW]) {
    		    CargarObjetos(playerid);
                SetPlayerInterior(playerid, InfoCasa[i][cInterior]);
                user[playerid][jInterior] = InfoCasa[i][cInterior];
                user[playerid][jVirtualWorld] = i + 6000;
                SetPlayerVirtualWorld(playerid, i + 6000);
                SetPlayerPos(playerid, InfoCasa[i][cInteriorX], InfoCasa[i][cInteriorY], InfoCasa[i][cInteriorZ]);
                SetPlayerFacingAngle(playerid, InfoCasa[i][cInteriorA]);
                SetCameraBehindPlayer(playerid);
                TextoPantalla(playerid, "~r~Has forzado la puerta", 5000, 1);
                EnCasaID[playerid] = i;
            }
        }
        for (new nid = 0; nid < MAX_NEGOCIOS; nid++) {
            if (_enPos(playerid, 2, i_Negocio[nid][nExteriorX], i_Negocio[nid][nExteriorY], i_Negocio[nid][nExteriorZ])) {
                CargarObjetos(playerid);
                SetPlayerPos(playerid, i_Negocio[nid][nInteriorX], i_Negocio[nid][nInteriorY], i_Negocio[nid][nInteriorZ]);
                SetPlayerFacingAngle(playerid, i_Negocio[nid][nInteriorR]);
                SetCameraBehindPlayer(playerid);
                SetPlayerVirtualWorld(playerid, nid + 300);
                user[playerid][jVirtualWorld] = nid + 300;
                SetPlayerInterior(playerid, i_Negocio[nid][nInterior]);
                user[playerid][jInterior] = i_Negocio[nid][nInterior];
                TextoPantalla(playerid, "~r~Has forzado la puerta", 5000, 1);
            }
        }

    } else _Mensaje(playerid, 0, "165", "No formas parte de la Ley.");
    return 1;
}

CMD:verarmarios(playerid, params[]) return cmd_verarmario(playerid, params);
CMD:verarmario(playerid, params[]) {
    if (Es_Faccion(playerid, 1)) {
		if (user[playerid][jDivision] == 0 || user[playerid][jDivision] == 3) return _Mensaje(playerid, 0, "229", "No eres de la división PD o SD.");
		if (EnCasaID[playerid]!= INVALID_CASA_ID) {
            if (_enPos(playerid, 5.0, InfoCasa[EnCasaID[playerid]][cArmarioPos][0], InfoCasa[EnCasaID[playerid]][cArmarioPos][1], InfoCasa[EnCasaID[playerid]][cArmarioPos][2])) {
                _PDArmario(playerid, EnCasaID[playerid]);
            } else return _Mensaje(playerid, 0, "584", "No estás en el armario de la casa o la casa no posee armario.");
        } else _Mensaje(playerid, 0, "580", "No estás dentro de una casa.");
    } else _Mensaje(playerid, 0, "165", "No eres policía.");
    return 1;
}

CMD:maleterolsed(playerid, params[]) {
    if (Es_Faccion(playerid, 5)) {
        new car, Float:distancia = 4.0, Float:vX, Float:vY, Float:vZ;
        for(new x=0; x <= MAX_VEHICLES; x++) {
            GetVehiclePos(x, vX, vY, vZ);
            if(_enPos(playerid, 4.0, vX, vY, vZ) && !EstaEnBicis(x)) { if(GetPlayerDistanceFromPoint(playerid, vX, vY, vZ) <= distancia)distancia = GetPlayerDistanceFromPoint(playerid, vX, vY, vZ), car = x; }
        }
        if(car == 0){_Mensaje(playerid, 0, "391", "No se ha detectado ningún vehículo a tu alrededor con el maletero abierto."); return 1;}
        new engine, lights, alarm, doors, bonnet, boot, objective;
        GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
        if (boot == VEHICLE_PARAMS_OFF || boot == VEHICLE_PARAMS_UNSET) return _Mensaje(playerid, 2, "0", "Necesitas tener el maletero abierto, o no es un vehículo LSED.");
        if(LSED_Vehicle(car)) {
            ver_MaleteroF(playerid, car);
            VehMaleteroPlayer[playerid] = car;
		} else _Mensaje(playerid, 0, "165", "No estás cerca de un vehículo LSED.");
    } else _Mensaje(playerid, 0, "165", "No eres LSED.");
    return 1;
}

CMD:maleteroalc(playerid, params[]) {
    if (Es_Faccion(playerid, 4)) {
        if (IsPlayerInAnyVehicle(playerid)) { _Mensaje(playerid, 0, "389", "No puedes hacer esto mientras estar en el interior del vehículo!"); return 1; }
        new car, Float:distancia = 4.0, Float:vX, Float:vY, Float:vZ;
        for(new x=0; x <= MAX_VEHICLES; x++) {
            GetVehiclePos(x, vX, vY, vZ);
            if(_enPos(playerid, 4.0, vX, vY, vZ) && !EstaEnBicis(x)) { if(GetPlayerDistanceFromPoint(playerid, vX, vY, vZ) <= distancia)distancia = GetPlayerDistanceFromPoint(playerid, vX, vY, vZ), car = x; }
        }
        if(car == 0){_Mensaje(playerid, 0, "391", "No se ha detectado ningún vehículo a tu alrededor con el maletero abierto."); return 1;}
        new engine, lights, alarm, doors, bonnet, boot, objective;
        GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
        if (boot == VEHICLE_PARAMS_OFF || boot == VEHICLE_PARAMS_UNSET) return _Mensaje(playerid, 2, "0", "Necesitas tener el maletero abierto, o no es un vehículo del gobierno.");
        if(GOB_Vehicle(car)) {
            ver_MaleteroF(playerid, car);
            VehMaleteroPlayer[playerid] = car;
		} else _Mensaje(playerid, 0, "165", "No estás cerca de un vehículo del gobierno.");
    } else _Mensaje(playerid, 0, "165", "No formas parte del Gobierno.");
    return 1;
}

CMD:maleterosan(playerid, params[]) {
    if (Es_Faccion(playerid, 3)) {
        if (IsPlayerInAnyVehicle(playerid)) { _Mensaje(playerid, 0, "389", "No puedes hacer esto mientras estar en el interior del vehículo!"); return 1; }
        new car, Float:distancia = 4.0, Float:vX, Float:vY, Float:vZ;
        for(new x=0; x <= MAX_VEHICLES; x++)
        {
            GetVehiclePos(x, vX, vY, vZ);
            if(_enPos(playerid, 4.0, vX, vY, vZ) && !EstaEnBicis(x)) { if(GetPlayerDistanceFromPoint(playerid, vX, vY, vZ) <= distancia)distancia = GetPlayerDistanceFromPoint(playerid, vX, vY, vZ), car = x; }
        }
        if(car == 0){_Mensaje(playerid, 0, "391", "No se ha detectado ningún vehículo a tu alrededor con el maletero abierto."); return 1;}
        new engine, lights, alarm, doors, bonnet, boot, objective;
        GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
        if (boot == VEHICLE_PARAMS_OFF || boot == VEHICLE_PARAMS_UNSET) return _Mensaje(playerid, 2, "0", "Necesitas tener el maletero abierto, o no es un vehículo de SAN.");
        if(SAN_Vehicle(car)) {
            ver_MaleteroF(playerid, car);
            VehMaleteroPlayer[playerid] = car;
		} else _Mensaje(playerid, 0, "165", "No estás cerca de un vehículo de SAN.");
    } else _Mensaje(playerid, 0, "165", "No formas parte de SAN.");
    return 1;
}

CMD:maleteropd(playerid, params[]) {
    if (Es_Faccion(playerid, 1)) {
        if (user[playerid][jDivision] != 1) return _Mensaje(playerid, 0, "165", "No eres de la división PD.");
        new car, Float:distancia = 4.0, Float:vX, Float:vY, Float:vZ;
        for(new x=0; x <= MAX_VEHICLES; x++) {
            GetVehiclePos(x, vX, vY, vZ);
            if(_enPos(playerid, 4.0, vX, vY, vZ) && !EstaEnBicis(x)) { if(GetPlayerDistanceFromPoint(playerid, vX, vY, vZ) <= distancia)distancia = GetPlayerDistanceFromPoint(playerid, vX, vY, vZ), car = x; }
        }
        if(car == 0){_Mensaje(playerid, 0, "391", "No se ha detectado ningún vehículo a tu alrededor con el maletero abierto."); return 1;}
        new engine, lights, alarm, doors, bonnet, boot, objective;
        GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
        if (boot == VEHICLE_PARAMS_OFF || boot == VEHICLE_PARAMS_UNSET) return _Mensaje(playerid, 2, "0", "Necesitas tener el maletero abierto, o no es un vehículo de LSPD/SADOC.");
        if(LSPD_Veh(car)) {
            ver_MaleteroF(playerid, car);
            VehMaleteroPlayer[playerid] = car;
		} else _Mensaje(playerid, 0, "165", "No estás cerca de un vehículo de la policía.");
    } else _Mensaje(playerid, 0, "165", "No eres de la división PD.");
    return 1;
}

CMD:matricula(playerid, params[]) return cmd_callsign(playerid, params);
CMD:callsign(playerid, params[]) {
    new result[128], veh = GetPlayerVehicleID(playerid), string[256];
    if (Es_Faccion(playerid, 1, 6, 5)) {
        if (IsPlayerInAnyVehicle(playerid)) {
            if (sscanf(params, "s[128]", result)) return _Mensaje(playerid, 3, "0", "/callsign [texto]| Si pones este comando cambiaras el código a la patrulla.");
            if (!VehCallSign[veh]) {
                format(string, sizeof(string), "%s", result);
                TextCallSign[veh] = Create3DTextLabel(string, 0xFFFFFFFF, 0.0, 0.0, 0.0, 50.0, 0, 1);
                Attach3DTextLabelToVehicle(TextCallSign[veh], veh, -0.7, -1.9, -0.3);
                VehCallSign[veh] = 1;
                _Mensaje(playerid, 4, "ffffff", " /deletecallsign");
            } else {
                Delete3DTextLabel(TextCallSign[veh]);
                VehCallSign[veh] = 0;
                return 1;
            }
        } else {
            _Mensaje(playerid, 0, "188", "Debes usarlo en un vehículo.");
            return 1;
        }
    } else _Mensaje(playerid, 0, "165", "No formas parte de la Ley.");
    return 1;
}

CMD:borrarmatricula(playerid, params[]) return cmd_deletecallsign(playerid, params);
CMD:deletecallsign(playerid, params[]) {
    if (Es_Faccion(playerid, 1, 6, 5)) {
        new veh = GetPlayerVehicleID(playerid);
        if (IsPlayerInAnyVehicle(playerid)) {
            Delete3DTextLabel(TextCallSign[veh]);
            VehCallSign[veh] = 0;
        } else {
            _Mensaje(playerid, 0, "188", "Debes usarlo en un vehículo.");
        }
    } else _Mensaje(playerid, 0, "165", "No formas parte de la Ley.");
    return 1;
}

CMD:ven(playerid, params[]) return cmd_ventana(playerid, params);
CMD:ventanilla(playerid, params[]) return cmd_ventana(playerid, params);
CMD:ventana(playerid, params[]) {
    if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) {
        _Mensaje(playerid, 0, "184", "No estás en un vehículo como conductor.");
        return 1;
    }
    new carid = GetPlayerVehicleID(playerid);
    if (EnMotos_Bicis(carid) || EstaEnAvion(carid) || EstaEnBote(carid)) {
        _Mensaje(playerid, 0, "184", "Este vehículo no tiene ventanas.");
        return 1;
    }
    if (VehicleWindows[carid] == 0) {
        AccionesRol(playerid, 0, "baja la ventanilla de su vehículo.");
        VehicleWindows[carid] = 1;
    } else {
        AccionesRol(playerid, 0, "sube la ventanilla de su vehículo.");
        VehicleWindows[carid] = 0;
    }
    return 1;
}

CMD:ads(playerid, params[]) return cmd_anuncio(playerid, params);
CMD:anuncio(playerid, params[]) {
    new string[300];
    if(Anuncios == 1) return _Mensaje(playerid, 0, "9","El comando ha sido desactivado temporalmente.");
	if(!_Telefono(playerid)){_Mensaje(playerid, 0, "9","No tienes un teléfono en ninguna mano."); return 1;}
    if (user[playerid][jEncarcelado] > 0) return _Mensaje(playerid, 0, "213", "No puedes usar este comando mientras estás en prisión.");
    if (user[playerid][jTiempos][12] != 0) {
        format(string, sizeof(string), "Necesitas esperar %i minuto(s) para enviar un anuncio.", user[playerid][jTiempos][12]);
        return _Mensaje(playerid, 2, "0", string);
    }
	if (!isnull(params)) {
        if (RevisarDinero(playerid, 2)) {
            format(string, sizeof(string), "[Anuncio] %s. Móvil: %d", params[0], user[playerid][jTelefono]);
            _MensajeSAN(0xFFFF0093, string);
            Compra(playerid, 2);
            format(string, sizeof(string), "Anunciante:{FFFFFF} %s[ID:%d]", NombreRJugador(playerid), playerid);
            MensajeAdmin2(string);
            user[playerid][jTiempos][12] = 8;
            format(string, sizeof string, "%s envió anuncio: %s", NombreRJugador(playerid), params[0]);
            Log("Registros/Anuncios.log", string);
        }
        return 1;
    } else _Mensaje(playerid, 3, "0", "/anuncio [anuncio]");
    return 1;
}

CMD:dobleexp(playerid, params[]) {
    new string[128];
    if (user[playerid][jAdmin] < 5) return _Mensaje(playerid, 0, "235", "Tú no tienes acceso a el comando /dobleexp.");
    if (DobleExperiencia == 0) {
            DobleExperiencia = 1;
            format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Head Admin %s ha activado el sistema de doble experiencia.", NombreRJugador(playerid));
            _MensajeOOC(C_GCRP, string);
        } else {
            DobleExperiencia = 0;
            format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Head Admin %s ha desactivado el sistema de doble experiencia.", NombreRJugador(playerid));
            _MensajeOOC(C_GCRP, string);
    }
    return 1;
}

CMD:jetpack(playerid, params[]) {
    new string[256];
    if (user[playerid][jAdmin] < 2) return _Mensaje(playerid, 0, "235", "Tú no tienes acceso a el comando /jetpack.");
    if (EnServicioADM[playerid] == 0) return _Mensaje(playerid, 0, "158", "Para usar este comando de forma responsable, [Escribe] /adminservicio.");
    if (IsPlayerConnected(playerid)) {
        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USEJETPACK);
        JetPack[playerid] = 1;
        format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s utilizó '/jetpack' (jetpack admin).", NombreRJugador(playerid));
        MensajeAdmin(string);
    }
    return 1;
}

CMD:fianza(playerid, params[]) {
    if (user[playerid][jEncarcelado] >= 2) {
        if (PrecioFianza[playerid] > 0) {
            if (ComprobarDineroJ(playerid) > PrecioFianza[playerid]) {
                new string[128];
                format(string, sizeof(string), "* Pagaste la fianza de $%d, en un minuto serás libre.", PrecioFianza[playerid]);
                _Mensaje(playerid, 4, "33CCFF", string);
                DarDineroGC(playerid, -PrecioFianza[playerid]);
                user[playerid][jTiempoCarcel] = 1;
            } else _Mensaje(playerid, 0, "3", "Departamento de Justicia: No tienes el dinero de la fianza.");
        } else _Mensaje(playerid, 0, "3", "Departamento de Justicia: En tu condena no hay fianza, espera el tiempo de condena.");
    } else _Mensaje(playerid, 0, "3", "No estás en prisión.");
    return 1;
}

CMD:estado(playerid, params[]) return cmd_yo(playerid, params);
CMD:yo(playerid, params[])
{
	if (GetPVarInt(playerid, "EnCrack") == 1) return _Mensaje(playerid, 0, "12", "No puedes usar este comando mientras estás herido.");
	if (usandoYo[playerid] == 1) return _Mensaje(playerid, 0, "12", "Ya posees una descripción, escribe /qyo.");
	if (sscanf(params, "s[128]", params[0])) return _Mensaje(playerid, 3, "0", "/yo [descripción]");
	if (strlen(params[0]) > 45) { _Mensaje(playerid, 4, "b00000", " El máximo de carácteres es de 45."); }

	_Mensaje(playerid, 4, "E9921E", params[0]);
	Update3DTextLabelText(estado[playerid], 0xE9921EFF, params[0]); //0xAA3333FF
	Attach3DTextLabelToPlayer(estado[playerid], playerid, 0.0, 0.0, 0.4);
    usandoYo[playerid] = 1;
	return 1;
}
CMD:sinestado(playerid) return cmd_qyo(playerid);
CMD:qyo(playerid)
{
	if (GetPVarInt(playerid, "EnCrack") == 1) return _Mensaje(playerid, 0, "12", "No puedes usar este comando mientras estás herido.");
	if (usandoYo[playerid] == 0) return _Mensaje(playerid, 0, "12", "No posees ninguna descripción.");
	Update3DTextLabelText(estado[playerid], 0xBFC0C2FF, "void");
	Attach3DTextLabelToPlayer(estado[playerid], playerid, 0.0, 0.0, 1000.0);
	usandoYo[playerid] = 0;
    return 1;
}

CMD:revive(playerid, params[]) return cmd_revivir(playerid, params);
CMD:acurar(playerid, params[]) return cmd_revivir(playerid, params);
CMD:revivir(playerid, params[]) {
    if (user[playerid][jAdmin] >= 1) {
        new string[128], playerid2;
        if (sscanf(params, "d", playerid2)) return _Mensaje(playerid, 3, "0", "/revivir [id jugador]");
        if (IsPlayerConnected(playerid2)) {
            if (GetPVarInt(playerid2, "EnCrack") == 1) {
				_arma[playerid2] = -1;
				format(QuienMato[playerid2], 24, "Nadie");
				asesino[playerid2] = -1;
                format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s utilizó '/revivir', Jugador: %s[%d].", NombreRJugador(playerid), NombreRJugador(playerid2),playerid2);
                MensajeAdmin(string);
                _Mensaje(playerid2, 2, "0", "Fuiste revivido por un administrador.");
                RemovePlayerFromVehicle(playerid2);
                SetCameraBehindPlayer(playerid2);
                EliminarHerido(playerid2);
                YaAviso[playerid2] = 0;
                ClearAnimations(playerid2);
                user[playerid2][jMuerto2] = 0;
                user[playerid2][jMuerto] = 0;
                Sangre_(playerid2, 100);
                usandoYo[playerid2] = 0;
                KillTimer(MuertoTimer[playerid2]);
				Update3DTextLabelText(estado[playerid2], 0xBFC0C2FF, "void");
				Attach3DTextLabelToPlayer(estado[playerid2], playerid, 0.0, 0.0, 1000.0);
                TogglePlayerControllable(playerid2, 1);
                _Limuerte(playerid2);
            } else _Mensaje(playerid, 0, "0", "Este jugador no necesita ser reanimado.");
        }
    } else _Mensaje(playerid, 0, "458", "Tú no tienes acceso a el comando /revivir.");
    return 1;
}

CMD:reanimar(playerid, params[]) {
    new string[128], playerid2;
    if (!Es_Faccion(playerid, 1, 6, 5)) return _Mensaje(playerid, 0, "165", "No formas parte de LSED.");
    if (sscanf(params, "d", playerid2)) return _Mensaje(playerid, 3, "0", "/reanimar [id jugador]");
    if (IsPlayerConnected(playerid2)) {
        if (playerid == playerid2) return _Mensaje(playerid, 0, "0", "No te puedes reanimar a tí mismo.");
        if (!CercaDelWeon(3.0, playerid, playerid2)) { _Mensaje(playerid, 0, "0", "Debes estar más cerca de él."); return 1; }
        if (IsPlayerInAnyVehicle(playerid)) { _Mensaje(playerid, 0, "0", "No puedes reanimar a alguien desde un vehículo."); return 1; }
		if (user[playerid2][jMuerto2] == 2) return _Mensaje(playerid, 0, "12", "No puedes reanimar a los muertos.");
        if (user[playerid2][jMiembro] == user[playerid][jMiembro]) return _Mensaje(playerid, 0, "12", "No puedes reanimar a los de tu facción.");
        if (GetPVarInt(playerid2, "EnCrack") == 1) {
			_arma[playerid2] = -1;
			format(QuienMato[playerid2], 24, "Nadie");
			asesino[playerid2] = -1;
            TogglePlayerControllable(playerid, 0);
            TogglePlayerControllable(playerid2, 0);
            SetTimerEx("Descongelar", 8000, false, "i", playerid);
            SetTimerEx("Descongelar", 8000, false, "i", playerid2);
            ApplyAnimation(playerid, "MEDIC", "CPR", 4.1, 0, 1, 1, 0, 0, 1);
            ApplyAnimation(playerid2, "CRACK", "crckidle2", 4.1, 1, 1, 1, 0, 0, 1);
            YaAviso[playerid2] = 0;
            SetCameraBehindPlayer(playerid2);
            EliminarHerido(playerid2);
            Sangre_(playerid2, 80);
            usandoYo[playerid2] = 0;
			Update3DTextLabelText(estado[playerid2], 0xBFC0C2FF, "void");
			Attach3DTextLabelToPlayer(estado[playerid2], playerid, 0.0, 0.0, 1000.0);
            format(string, sizeof(string), "* %s ha reanimado a %s mediante primeros auxilios.", NombreJugador(playerid), NombreJugador(playerid2));
            ProxDetector(20.0, playerid, string, C_VERDE, C_VERDE, C_VERDE, C_VERDE, C_VERDE);
            format(string, sizeof(string), "Has reanimado a %s.", NombreJugador(playerid2));
            _Mensaje(playerid, 2, "0", string);
            _Mensaje(playerid, 2, "0", "Te han reanimado.");
            _Limuerte(playerid2);
			KillTimer(MuertoTimer[playerid2]);
            user[playerid2][jMuerto2] = 0;
			user[playerid2][jMuerto] = 0;
            if (Es_Faccion(playerid, 5)) {
                DarDineroGC(playerid, 50);
                DarDineroGC(playerid2, -50);
            }
        } else _Mensaje(playerid, 0, "0", "Este jugador no necesita ser reanimado.");
    }
    return 1;
}

CMD:listaobjeto(playerid, params[]) return cmd_listaobjetos(playerid, params);
CMD:listaobjetos(playerid, params[]) {
    if (IsPlayerConnected(playerid)) {
        new DComandosAdmin[3500], as2[60], i = 0;
        if (Admin(4, playerid)) {
	        for(new a = 1; a < sizeof(InfoObjeto); a++)
	        {
	            i++;
	            format(as2, sizeof(as2), "%d - %s | ", a, InfoObjeto[a][NombreObjeto]);
	            strcat(DComandosAdmin, as2);
	            if(i == 5)
	            {
	                i = 0;
	                strcat(DComandosAdmin, "\n");
	            }
        	}
        }
        Dialog(playerid, D_INVALIDO, DIALOG_STYLE_MSGBOX, "{FFFFFF}Lista del /crearobjeto", DComandosAdmin, "Continuar", "");
    }
    return 1;
}

CMD:ah(playerid, params[]) return cmd_adminayuda(playerid, params);
CMD:adminayuda(playerid, params[]) {
	new DComandosAdmin[2300];

    if (Admin(2, playerid)) {
        strcat(DComandosAdmin, "{00C38E}NIVEL #1 / # 2 -- TESTER / GAME ADMIN{ffffff}:\n");
		strcat(DComandosAdmin, "{FFFFFF}TesterACmd: /adminservicio /darskin  /ir /traer /llevar[op/ls/sf/lv] /bloquearmps /vercuenta\n");
		strcat(DComandosAdmin, "{FFFFFF}TesterACoches: /traervehiculo /irvehiculo /vercoche /vercoches /verllaves /verbolsillos\n");
		strcat(DComandosAdmin, "{FFFFFF}TesterAtender: /dudas /aduda /rduda /reportes /areporte /rreporte  /darvida /revivir /respawncar\n");
		strcat(DComandosAdmin, "{FFFFFF}ASanción: /kick /congelar /descongelar /jailcuenta /golpear /jail /liberar\n");
		strcat(DComandosAdmin, "{FFFFFF}AdmnCmd: /ultimaconexion /spec [id] /ao /limpiartodooff /jetpack /darchaleco /limpiartodo /desbugadmin\n");
		strcat(DComandosAdmin, "{FFFFFF}DarUsuario: /jailtipo /editarvw /editarint /respawncars /enmascarados /adminreparo /condinero\n\n");
    }
	if (Admin(3, playerid)) {
		strcat(DComandosAdmin, "{7362A6}NIVEL #3 -- GAME ADMIN{ffffff}:\n");
		strcat(DComandosAdmin, "{FFFFFF}AdmnCmd: /modopecho /bloquearprivados /bloqueardudas /bloquearip /limpiarant /quitardnifalso /verprivadosusers\n");
		strcat(DComandosAdmin, "{FFFFFF}ACoches: /fuelcars /entrarvehadmin /repararvehadmin /fuelcarsno /fuelcars /adminmotor /editarcolorveh\n");
        strcat(DComandosAdmin, "{FFFFFF}AdmCmd: /objetosadmin /crearobjetoadmin /borrarobjetoadmin /incendios /bugentrenar /bloquearreportes\n");
		strcat(DComandosAdmin, "{FFFFFF}ASanción:  /cpantalla /limpiarchat /verip /banip /unbanip /banear /desbanear /adminir/ls/sf/lv\n\n");

	}
	if (Admin(4, playerid)) {
		strcat(DComandosAdmin, "{004F00}NIVEL #4 -- GAME ADMIN{ffffff}:\n");
		strcat(DComandosAdmin, "{FFFFFF}AdmCmd: /crearobjeto(armas,etc) /ircordenada /crearincendio /cambiarclima /darpuntorol /quitarpuntorol\n");
		strcat(DComandosAdmin, "{FFFFFF}AdmCmd: /anuncios /repararvehtodos /borrarreportes /ao /darmascara /borrardudas /iradmin /loteria\n\n");
	}
	if (Admin(5, playerid)) {
		strcat(DComandosAdmin, "{D373B1}NIVEL #5 -- HEAD GAME ADMIN{ffffff}:\n");
		strcat(DComandosAdmin, "{FFFFFF}HeadCmd: /quitarllavesn /quitarllavesc /editarv /irintcasa  /dobleexp  /padelantar /darhabuser /aoa\n");
		strcat(DComandosAdmin, "{FFFFFF}HeadAdm: /dejarfondos  /robobanco /crearnegocio /editarneg /rellenarneg /editarfams /limpiarboluser\n");
		strcat(DComandosAdmin, "{FFFFFF}HeadAdm: /aoa /darlider /darliderfac /darliderfam /daradmin /quitaradmin /facciones /familias\n");
		strcat(DComandosAdmin, "{FFFFFF}HeadEditor: /editarneg /editarcasa /editarcoche /nombreadmin /quitarllavep /cambiarhora\n");
		strcat(DComandosAdmin, "{FFFFFF}HeadCreator: /crearvehfam /borrarvehfam  /darmiembrofam  /editarfam  /crearfamilia /editartipofam /borrarfam\n\n");
	}
	if (Admin(10, playerid)) {
		strcat(DComandosAdmin, "{B00000}NIVEL GOD -- SUPER HEAD ADMIN{ffffff}:\n");
		strcat(DComandosAdmin, "{FFFFFF}/diadepaga /crearvehiculo /editarp2 /crearcasa /quitarllave /crearempresa /darheadban /darheadpuntos\n");
		strcat(DComandosAdmin, "{FFFFFF}/darheadfac  /darheadfam  /darpremium /darstat /borrarvehiculo /borrarempresa /editarempresa /creargarage\n");
		strcat(DComandosAdmin, "{FFFFFF}+cmd:/couriercomandos\n\n");
	}
	Dialog(playerid, D_INVALIDO, DIALOG_STYLE_MSGBOX, "{ADC3E7}STAFF GS:RP.ES - Comandos", DComandosAdmin, "Cerrar", "");
	return 1;
}

CMD:couriercomandos(playerid, params[]) return cmd_comandoscreador(playerid, params);
CMD:comandoscreador(playerid, params[]) {
	new DComandosAdmin[2300];

	if (Admin(10, playerid)) {
		strcat(DComandosAdmin, "{D373B1}NIVEL # 10 -- CONTROL SERVER -- (NO TOCAR{ffffff}:\n");
		strcat(DComandosAdmin, "{FFFFFF}/registro /activartest /diadepaga  /quitarnegocio /aguardar <- no tocar importante -\n");
		strcat(DComandosAdmin, "{D373B1}NIVEL # 10 -- SISTEMA DE REGALOS ALEATORIOS{ffffff}:\n");
		strcat(DComandosAdmin, "{FFFFFF}/crearregalo /reiniciarregalos /regaloatodos /adminevento\n");
		strcat(DComandosAdmin, "{D373B1}NIVEL # 10 -- DAR ADMIN DE SECCIONES O ADMIN DIRECTO {ffffff}:\n");
		strcat(DComandosAdmin, "{FFFFFF}/darheadfac  /darheadfam /darheadban /darencargadopuntos /daradmincourier\n");
        strcat(DComandosAdmin, "{D373B1}NIVEL # 10 -- QUITAR FAMILIAS / CASAS / NEGOCIOS ETC A USUARIOS {ffffff}:\n");
		strcat(DComandosAdmin, "{FFFFFF}/quitarfamiliaoff /quitarfaccionoff /quitaradminoff /dardineroff /quitarcasaoff /quitarnegociooff\n\n");
		strcat(DComandosAdmin, "{FFFFFF}/avecasa /avenegocio /qllave [vender casas / negocios / coches de jugadores]\n\n");
	}
	Dialog(playerid, D_INVALIDO, DIALOG_STYLE_MSGBOX, "{ADC3E7}Nivel (Dios): CMBlock Commands", DComandosAdmin, "Cerrar", "");
	return 1;
}


/*CMD:colorpremium(playerid) return cmd_colorvip(playerid);*/
/*CMD:colorvip(playerid)
{
	if (user[playerid][jPremium] == 0) return _Mensaje(playerid, 0, "39", "No eres usuario premium.");
	if (user[playerid][jColorP] == 0)
	{
		SetPlayerColor(playerid, 0xFFDB4200);
		_Mensaje(playerid, 4, "C93CCE", "[SistemaPremium]: Activaste el color VIP en tu nombre!");
		user[playerid][jColorP] = 1;
	}
	else
	{
		SetPlayerColor(playerid, C_PLAYERBLANCO);
		_Mensaje(playerid, 4, "C93CCE", "[SistemaPremium]: Desactivaste el color VIP en tu nombre!");
		user[playerid][jColorP] = 0;
	}
	return 1;
}*/

CMD:velocimetro(playerid, params[]) {
    if (!IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "683", "No estas dentro de un vehículo.");
    if (MostrarVelocimetro[playerid] == 0) {
        PlayerTextDrawHide(playerid, Velocimetro[playerid]);
        _Mensaje(playerid, 2, "0", "Has removido el texto del velocimetro.");
        MostrarVelocimetro[playerid] = 1;
    } else {
        PlayerTextDrawShow(playerid, Velocimetro[playerid]);
        _Mensaje(playerid, 2, "0", "Has creado el texto del velocimetro.");
        MostrarVelocimetro[playerid] = 0;
    }
    return 1;
}

CMD:reloj(playerid)
{
    new MText[20], Ano, Mes, Dia, Hora, Minutos, Segundos, string[128];
    getdate(Ano, Mes, Dia);
   	gettime(Hora, Minutos, Segundos);
    switch (Mes) {
        case 1: MText = "Enero";
        case 2: MText = "Febrero";
        case 3: MText = "Marzo";
        case 4: MText = "Abril";
        case 5: MText = "Mayo";
        case 6: MText = "Junio";
        case 7: MText = "Julio";
        case 8: MText = "Agosto";
        case 9: MText = "Septiembre";
        case 10: MText = "Octubre";
        case 11: MText = "Noviembre";
        case 12: MText = "Diciembre";
    }
    if (user[playerid][jTiempoCarcel] > 0) {
        if(Hora >= 12) format(string, sizeof(string), "~w~%s %02d %02d ~n~~g~ %02d:%02d:%02d~n~~r~%02d min", MText, Dia, Ano, (Hora == 12) ? (12) : (Hora - 12), Minutos, Segundos, user[playerid][jTiempoCarcel]);
        else if(Hora < 12) format(string, sizeof(string), "~w~%s %02d %02d ~n~~g~ %02d:%02d:%02d~n~~r~%02d min", MText, Dia, Ano, (Hora == 0) ? (12) : (Hora), Minutos, Segundos, user[playerid][jTiempoCarcel]);
    } else {
        if(Hora >= 12) format(string, sizeof(string), "~w~%s %02d %02d ~n~~g~ %02d:%02d:%02d", MText, Dia, Ano, (Hora == 12) ? (12) : (Hora - 12), Minutos, Segundos);
        else if(Hora < 12) format(string, sizeof(string), "~w~%s %02d %02d ~n~~g~ %02d:%02d:%02d", MText, Dia, Ano, (Hora == 0) ? (12) : (Hora), Minutos, Segundos);
    }
    TextoPantalla(playerid, string, 5000, 1);
    return 1;
}
CMD:necesidades(playerid, params[]) return cmd_barras(playerid, params);
CMD:barras(playerid, params[]) {
	new coordsstring[300], DialogStatus[3000];

	format(coordsstring, sizeof(coordsstring), "\n{1CC254}SED:		{ffffff}%d por ciento\n", user[playerid][jSed]);
	strcat(DialogStatus, coordsstring);
	format(coordsstring, sizeof(coordsstring), "{1B48AF}HAMBRE:	{ffffff}%d por ciento\n\n", user[playerid][jHambre]);
	strcat(DialogStatus, coordsstring);

	Dialog(playerid, D_INVALIDO, DIALOG_STYLE_MSGBOX, "{D6E1EB}Necesidades", DialogStatus, "Cerrar", "");
	return 1;
}

CMD:b(playerid, params[]) {
    new string[200];
   	if (sscanf(params, "s[200]", params[0])) { _Mensaje(playerid, 3, "0", "/b [texto]"); return 1; }
		else {
        	if (EnServicioADM[playerid] == 1) {
            	format(string, sizeof(string), "[OOC] Mens. enviado de [ID:%d|%s]: (( %s ))", playerid, NombreRJugador(playerid), params[0]);
            	ProxDetector(30.0, playerid, string, C_VERDE, C_VERDE, C_VERDE, C_VERDE, C_VERDE);
        	} else {
            	format(string, sizeof(string), "[OOC] Mens. enviado de [ID:%d|%s]: (( %s ))", playerid, NombreRJugador(playerid), params[0]);
            	ProxDetector(20.0, playerid, string, C_VERDE, C_VERDE, C_VERDE, C_VERDE, C_VERDE);
      	   	} return 1;
		}
    }
CMD:me(playerid, params[]) {
    if (!sscanf(params, "s[128]", params[0])) {
        AccionesRol(playerid, 0, params[0]);
    } else _Mensaje(playerid, 0, "753", "Tienes que poner algún texto, /me {C57BBB}[acción larga]");
    return 1;
}

CMD:ame(playerid, params[]) {
    new MensajeAR[150];
    if (!sscanf(params, "s[128]", params[0])) {
        format(MensajeAR, sizeof(MensajeAR), "%s %s", NombreJugador(playerid), params[0]);
        SetPlayerChatBubble(playerid, MensajeAR, AccionesColors[1], 15.0, 5000);
		format(MensajeAR, sizeof(MensajeAR), "> %s", params[0]);
		Mensaje_(playerid, AccionesColors[1], MensajeAR);
    } else _Mensaje(playerid, 0, "751", "Tiene que poner algún texto, /ame {C57BBB}[acción corta]");
    return 1;
}

CMD:do(playerid, params[]) {
    if (!sscanf(params, "s[128]", params[0])) {
        AccionesRol(playerid, 2, params[0]);
    } else _Mensaje(playerid, 0, "751", "Tiene que poner algún texto, /do {9EC73D}[Entorno o Aclaración]");
    return 1;
}

CMD:gritar(playerid, params[]) return cmd_g(playerid, params);
CMD:g(playerid, params[]) {
    if (!sscanf(params, "s[256]", params[0])) {
        AccionesRol(playerid, 3, params[0]);
    } else _Mensaje(playerid, 0, "755", "Tiene que poner algún texto, /G {FFFFFF}[Gritar]");
    return 1;
}

CMD:susurrar(playerid, params[]) return cmd_s(playerid, params);
CMD:s(playerid, params[]) {
    if (!sscanf(params, "s[128]", params[0])) {
        AccionesRol(playerid, 4, params[0]);
    } else _Mensaje(playerid, 0, "755", "Tiene que poner algún texto, /S {E600FF}[Susurrar]");
    return 1;
}

CMD:megafono(playerid, params[]) return cmd_m(playerid, params);
CMD:m(playerid, params[]) {
    if (Es_Faccion(playerid, 1, 5, 6)) {
        new car, Float:distancia = 5.0, Float:vX, Float:vY, Float:vZ;
        for(new x=0; x <= MAX_VEHICLES; x++) {
            GetVehiclePos(x, vX, vY, vZ);
            if(_enPos(playerid, distancia, vX, vY, vZ) && !EstaEnBicis(x)) {
                if(GetPlayerDistanceFromPoint(playerid, vX, vY, vZ) <= distancia)distancia = GetPlayerDistanceFromPoint(playerid, vX, vY, vZ), car = x;
            }
        }
        if(car == 0){_Mensaje(playerid, 0, "391", "No se ha detectado ningún vehículo a tu alrededor."); return 1;}
        if(LSPD_Veh(car) || SASD_Veh(car) || LSED_Vehicle(car)) {
            if (sscanf(params, "s[128]", params[0])) return _Mensaje(playerid, 0, "756", "Tienes que poner algún texto, /M {FF9B6A}[Megáfono]");
            AccionesRol(playerid, 5, params[0]);
		} else _Mensaje(playerid, 0, "165", "No estás cerca de un vehículo de LSPD/LSED/SADOC.");
    } else _Mensaje(playerid, 0, "165", "No formas parte de la Ley.");
    return 1;
}

CMD:ao(playerid, params[]) {
    if (!IsPlayerConnected(playerid)) return _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
    if (user[playerid][jAdmin] < 2) return _Mensaje(playerid, 0, "235", "Tú no tienes acceso a el comando /ao.");
    if (isnull(params)) return _Mensaje(playerid, 3, "0", "/ao [texto]");
    new string[128];
    format(string, sizeof(string), "[Server Admin]: Mens. enviado (%s): %s.", NombreRJugador(playerid), params);
    _MensajeOOC(0xEFD110FF, string);
    return 1;
}

CMD:editarint(playerid, params[]) {
    if (user[playerid][jAdmin] < 2) return _Mensaje(playerid, 0, "538", "Tú no tienes acceso a el comando /editarint.");
    if (!sscanf(params, "dd", params[0], params[1])) {
        if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
        new string[128];
        SetPlayerInterior(params[0], params[1]);
        format(string, sizeof(string), "[Sistema Editor]:{ffffff}El interior del jugador %s es ahora (%d)", NombreRJugador(params[0]), params[1]);
        _Mensaje(playerid, 4, "33CCFF", string);
        return _Mensaje(params[0], 4, "33CCFF", string);
    } else _Mensaje(playerid, 3, "0", "/editarint [id jugador] [interior]");
    return 1;
}

CMD:editarvw(playerid, params[]) {
    if (user[playerid][jAdmin] < 2) return _Mensaje(playerid, 0, "539", "Tú no tienes acceso a el comando /editarvw.");
    if (!sscanf(params, "dd", params[0], params[1])) {
        if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
        new string[128];
        SetPlayerVirtualWorld(params[0], params[1]);
        format(string, sizeof(string), "[Sistema Editor]:{ffffff} El VirtualWorld del jugador %s es ahora (%d)", NombreRJugador(params[0]), params[1]);
        _Mensaje(playerid, 4, "33CCFF", string);
        return _Mensaje(params[0], 4, "33CCFF", string);
    } else _Mensaje(playerid, 3, "0", "/editarvw [id jugador] [virtuaworld]");
    return 1;
}

CMD:salirfaccion(playerid, params[]) {
    if (user[playerid][jMiembro] != 0) {
		new string[100];
		format(string, sizeof(string), "%s se ha salido de la facción voluntariamente.", NombreRJugador(playerid));
		MensajeFaccion(user[playerid][jMiembro], 0xADC3E7FF, string, user[playerid][jDivision]);
        user[playerid][jRango] = 0;
        user[playerid][jMiembro] = 0;
        user[playerid][jLider] = 0;
        EnServicio[playerid] = 0;
        EnServicioPD[playerid] = 0;
        GuardarCuenta(playerid);
    } else _Mensaje(playerid, 0, "218", "No estás en una facción.");
    return 1;
}

CMD:darliderfac(playerid, params[]) {
    if (user[playerid][jAdmin] >= 5 || user[playerid][jEncargado][1] == 1) {
        if (!sscanf(params, "di", params[0], params[1])) {
            new ftext[256];
            if (params[1] < 0 || params[1] > MAX_FACCIONES) return _Mensaje(playerid, 0, "511", "ID facción incorrecta.");
            if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
            switch (params[1]) {
                case 0: { user[params[0]][jRango] = 0; ftext = "Sin uso"; }
                case 1: { user[params[0]][jRango] = 12; ftext = "Policía"; }
                case 2: { user[params[0]][jRango] = 5; ftext = "Sin uso"; }
                case 3: { user[params[0]][jRango] = 7; ftext = "Network"; }
                case 4: { user[params[0]][jRango] = 7; ftext = "Gobierno"; }
                case 5: { user[params[0]][jRango] = 12; ftext = "LSED"; }
                default: return _Mensaje(playerid, 0, "512", "La ID de facción es incorrecta [1/5].");
            }
            new string[128];
            user[params[0]][jLider] = params[1];
            user[params[0]][jMiembro] = params[1];
            user[params[0]][jDivision] = 1;
            format(string, sizeof(string), "* %s te asignó el líder de la facción %s.", NombreRJugador(playerid), ftext);
            _Mensaje(params[0], 4, "33CCFF", string);
            format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s asigno líder de la facción %s al jugador %s", NombreRJugador(playerid), ftext, NombreRJugador(params[0]));
            MensajeAdmin(string);
        } else _Mensaje(playerid, 3, "0", "/darliderfac [id jugador] [ID facción] | ID:1 LSPD | ID:2 NO | ID:3 NO | ID:4 GOBIERNO | ID:5 LSED");
        } else _Mensaje(playerid, 0, "485", "Tú no tienes acceso a el comando /darliderfac.");
    return 1;
}

CMD:golpear(playerid, params[]) {
    if (EnServicioADM[playerid] == 0) return _Mensaje(playerid, 0, "158", "Para usar este comando de forma responsable, [Escribe] /adminservicio.");
    new playerid2;
    if (user[playerid][jAdmin] < 1) return _Mensaje(playerid, 0, "486", "Tú no tienes acceso a el comando /golpear.");
    if (!sscanf(params, "d", playerid2)) {
        new Float: slx,Float: sly,Float: slz,string[128];
        if (IsPlayerConnected(playerid2)) {
            GetPlayerPos(playerid2, slx, sly, slz);
            SetPlayerPos(playerid2, slx, sly, slz + 10);
            PlayerPlaySound(playerid2, 1130, slx, sly, slz + 10);
            format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s golpeó al jugador %s", NombreRJugador(playerid), NombreRJugador(playerid2));
            MensajeAdmin(string);
        } else _Mensaje(playerid, 0, "75", "Jugador no conectado.");
    } else _Mensaje(playerid, 3, "0", "/golpear [id jugador]");
    return 1;
}


CMD:sethp(playerid, params[]) return cmd_darvida(playerid, params);
CMD:darvida(playerid, params[]) {
    if (!sscanf(params, "di", params[0], params[1])) {
        if (IsPlayerConnected(params[0])) {
            if (user[playerid][jAdmin] >= 1) {
                if (EnServicioADM[playerid] == 0) return _Mensaje(playerid, 0, "158", "Para usar este comando de forma responsable, [Escribe] /adminservicio.");
                if (params[1] < 5 || params[1] >= 101) return _Mensaje(playerid, 0, "453", "El mínimo 5 - máximo 100.");
                new string[256];
                Sangre_(params[0], params[1]);
                format(string, 256, "[AvisoAdmin]: {FFFFFF}Game Admin %s ha establecido al jugador [%s]/(%d de vida).", NombreRJugador(playerid), NombreRJugador(params[0]), params[1]);
                MensajeAdmin(string);
            } else _Mensaje(playerid, 0, "485", "Tú no tienes acceso a el comando /darvida.");
        } else _Mensaje(playerid, 0, "75", "Jugador no conectado.");
    } else _Mensaje(playerid, 3, "0", "/darvida [id jugador] [cantidad]");
    return 1;
}

CMD:setchaleco(playerid, params[]) return cmd_darchaleco(playerid, params);
CMD:darchaleco(playerid, params[]) {
    if (!sscanf(params, "di", params[0], params[1])) {
        if (IsPlayerConnected(params[0])) {
            if (user[playerid][jAdmin] >= 2) {
                if (EnServicioADM[playerid] == 0) return _Mensaje(playerid, 0, "158", "[Para usar este comando de forma responsable, [Escribe] /adminservicio.");
                if (params[1] < 0 || params[1] >= 101) return _Mensaje(playerid, 0, "453", "La cantidad máxima de chaleco es de 100.");
                new string[256];
                Chaleco_(params[0], params[1]);
                format(string, 256, "[AvisoAdmin]: {FFFFFF}Game Admin %s ha establecido al jugador [%s]/(%d de chaleco).", NombreRJugador(playerid), NombreRJugador(params[0]), params[1]);
                MensajeAdmin(string);
            } else _Mensaje(playerid, 0, "485", "Tú no tienes acceso a el comando /darchaleco.");
        } else _Mensaje(playerid, 0, "75", "Jugador no conectado.");
    } else _Mensaje(playerid, 3, "0", "USO: /darchaleco [id jugador] [cantidad]");
    return 1;
}

CMD:vercuenta(playerid, params[]) {
	new string[256];
	if (user[playerid][jAdmin] < 1) return _Mensaje(playerid, 0, "488", "Tú no tienes acceso a el comando /vercuenta.");
	if (EnServicioADM[playerid] == 0) return _Mensaje(playerid, 0, "158", "Para usar este comando de forma responsable, [Escribe] /adminservicio.");
	if (!sscanf(params, "d", params[0])) {
		if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
		_panelJ(playerid, params[0]);
		format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s utilizó '/vercuenta' (ver datos usuario), Jugador: %s[%d].", NombreRJugador(playerid), NombreRJugador(params[0]),params[0]);
		MensajeAdmin(string);
	} else _Mensaje(playerid, 3, "0", "USO: /vercuenta [id jugador]");
	return 1;
}

CMD:verct(playerid, params[])
{
	new string[256];
	if (user[playerid][jAdmin] < 1) return _Mensaje(playerid, 0, "488", "Tú no tienes acceso a el comando /verct.");
	if (EnServicioADM[playerid] == 0) return _Mensaje(playerid, 0, "158", "Para usar este comando de forma responsable, [Escribe] /adminservicio.");
	if (!sscanf(params, "d", params[0]))
	{
		if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
		if (!Es_Faccion(params[0], 1)) return _Mensaje(playerid, 0, "9", "Ese jugador no tiene un cinturón táctico");
		ver_Cinturon(playerid, params[0]);
		format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s utilizó '/verct', Jugador: %s[%d].", NombreRJugador(playerid), NombreRJugador(params[0]),params[0]);
		MensajeAdmin(string);
	} else _Mensaje(playerid, 3, "0", "USO: /verct [id jugador]");
	return 1;
}

CMD:verbolsillos(playerid, params[]) {
	new string[256];
    if (user[playerid][jAdmin] < 1) return _Mensaje(playerid, 0, "488", "Tú no tienes acceso a el comando /verbolsillos.");
    if (EnServicioADM[playerid] == 0) return _Mensaje(playerid, 0, "158", "Para usar este comando de forma responsable, [Escribe] /adminservicio.");
    if (!sscanf(params, "d", params[0])) {
        if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
        R_Inventario(playerid, params[0]);
        format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}GameAdmin %s utilizó '/verbolsillos', Jugador: %s[%d].", NombreRJugador(playerid), NombreRJugador(params[0]),params[0]);
        MensajeAdmin(string);
    } else _Mensaje(playerid, 3, "0", "USO: /verbolsillos [id jugador]");
    return 1;
}

CMD:dardinero(playerid, params[])
{
	if (sscanf(params, "di", params[0], params[1])) return _Mensaje(playerid, 3, "0", "/dardinero [id jugador] [$]");
	if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
	new pro[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pro, sizeof(pro));
	if (!strcmp(pro, "Steve_Pugliese", true))
	{
		new string[128];
		DarDineroGC(params[0], params[1]);
		format(string, 128, "[AvisoAdmin] Super Head Admin %s ha otorgado la cantidad de %d$ al jugador %s. (ON)", NombreRJugador(playerid), params[1], NombreRJugador(params[0]));
		MensajeAdmin(string, 2);
		format(string, 128, "*Super Admin %s te ha otorgado la cantidad de %d$", NombreRJugador(playerid), params[1]);
		_Mensaje(playerid, 4, "b0b0b0", string);
		format(string, sizeof(string), "Registros: Super Admin %s le cedio la cantidad de %d$ al jugador %s. (ON)", NombreRJugador(playerid), params[1], NombreRJugador(params[0]));
		Log("Registros/DarDinero.log", string);
	} else _Mensaje(playerid, 0, "468", "Tú no tienes acceso a el comando.");
	return 1;
}

CMD:quitarcasa(playerid, params[]) {
	new string[256];
    if (!sscanf(params, "d", params[0])) {
        if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
        if (user[playerid][jAdmin] >= 10) {
            user[params[0]][jCasaKey] = INVALID_CASA_ID;
            format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Super Head Admin %s utilizó '/quitarcasa', Jugador: %s[%d].", NombreRJugador(playerid), NombreRJugador(params[0]),params[0]);
            MensajeAdmin(string);
        } else _Mensaje(playerid, 0, "728", "Tú no tienes acceso a el comando /quitarcasa.");
    } else _Mensaje(playerid, 3, "0", "/quitarcasa [id jugador]");
    return 1;
}

CMD:quitarcasa2(playerid, params[]) {
	new string[256];
    if (!sscanf(params, "d", params[0])) {
        if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
        if (user[playerid][jAdmin] >= 10) {
            user[params[0]][jCasaKey2] = INVALID_CASA_ID;
            format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Super Head Admin %s utilizó '/quitarcasa2', Jugador: %s[%d].", NombreRJugador(playerid), NombreRJugador(params[0]),params[0]);
            MensajeAdmin(string);
        } else _Mensaje(playerid, 0, "728", "Tú no tienes acceso a el comando /quitarcasa2.");
    } else _Mensaje(playerid, 3, "0", "/quitarcasa2 [id jugador]");
    return 1;
}

CMD:quitarllavesn(playerid, params[]) {
	new string[256];
    if (!sscanf(params, "d", params[0])) {
        if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
        if (user[playerid][jAdmin] >= 5) {
            user[params[0]][jNegocioLlaves] = INVALID_CASA_ID;
            format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Head Admin %s utilizó '/quitarllavesn', Jugador: %s[%d].", NombreRJugador(playerid), NombreRJugador(params[0]),params[0]);
            MensajeAdmin(string);
        } else _Mensaje(playerid, 0, "728", "Tú no tienes acceso a el comando /Quitarllavesn.");
    } else _Mensaje(playerid, 3, "0", "/quitarllavesn [id jugador]");
    return 1;
}

CMD:quitarllavesc(playerid, params[]) {
	new string[256];
    if (!sscanf(params, "d", params[0])) {
        if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
        if (user[playerid][jAdmin] >= 5) {
            user[params[0]][jCasaLlaves] = INVALID_CASA_ID;
            format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Head Admin %s utilizó '/quitarllavesc', Jugador: %s[%d].", NombreRJugador(playerid), NombreRJugador(params[0]),params[0]);
            MensajeAdmin(string);
        } else _Mensaje(playerid, 0, "728", "Tú no tienes acceso a el comando /quitarllavesc.");
    } else _Mensaje(playerid, 3, "0", "/quitarllavesc [id jugador]");
    return 1;
}

CMD:quitarnegocio(playerid, params[]) {
	new string[256];
    if (!sscanf(params, "d", params[0])) {
        if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
        if (user[playerid][jAdmin] >= 10) {
            user[params[0]][jNegocioKey] = INVALID_NEGOCIO_ID;
            format(string, 128, "[AvisoAdmin]: {FFFFFF}Super Head Admin %s utilizó '/quitarnegocio', Jugador: %s[%d].", NombreRJugador(playerid), NombreRJugador(params[0]),params[0]);
            MensajeAdmin(string);
        } else _Mensaje(playerid, 0, "728", "Tú no tienes acceso a el comando /quitarnegocio.");
    } else _Mensaje(playerid, 3, "0", "/quitarnegocio [id jugador]");
    return 1;
}

CMD:quitarnegocio2(playerid, params[]) {
	new string[256];
    if (!sscanf(params, "d", params[0])) {
        if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
        if (user[playerid][jAdmin] >= 10) {
            user[params[0]][jNegocioKey2] = INVALID_NEGOCIO_ID;
            format(string, 128, "[AvisoAdmin]: {FFFFFF}Super Head Admin %s utilizó '/quitarnegocio2', Jugador: %s[%d].", NombreRJugador(playerid), NombreRJugador(params[0]),params[0]);
            MensajeAdmin(string);
        } else _Mensaje(playerid, 0, "728", "Tú no tienes acceso a el comando /quitarnegocio2.");
    } else _Mensaje(playerid, 3, "0", "/quitarnegocio2 [id jugador]");
    return 1;
}

CMD:daradminoff(playerid, params[]) {
    if (user[playerid][jAdmin] >= 5 || user[playerid][jEncargado][0] == 1) {
        new string[128], name[MAX_PLAYER_NAME], minutes;
        if (sscanf(params, "s[24]d", name, minutes)) return _Mensaje(playerid, 3, "0", "/daradminoff [Nombre_Apellido] [nivel]");
        if (INI_Exist(name)) {
            new data[60];
            format(data, sizeof data, DATOS_CUENTAS, name);
            new INI: File = INI_Open(data);
            INI_WriteInt(File, "Admin", minutes);
            INI_Close(File);
            format(string, sizeof(string), "[SistemaAdmin]: Head Admin %s promovio a (%s) como Game Admin (nivel %d).", NombreRJugador(playerid), name,minutes);
            Log("Registros/DarAdminOff.log", string);
            format(string, 128, "[SistemaAdmin]: {FFFFFF}Head Admin %s promovio a (%s) como Game Admin (nivel: %d) (CMD OFF).", NombreRJugador(playerid),name,minutes);
            MensajeAdmin(string);
        } else _Mensaje(playerid, 0, "179", "Esa cuenta no existe.");
    }
    return 1;
}

CMD:daradmin(playerid, params[]) {
   if (user[playerid][jAdmin] >= 5 || user[playerid][jEncargado][0] == 1) {
        if (!sscanf(params, "di", params[0], params[1])) {
            if (params[1] < 0 || params[1] > 5) return _Mensaje(playerid, 0, "467", "Rangos admins desde 1 a 5.");
            if (IsPlayerConnected(params[0])) {
                new string[128];
                user[params[0]][jAdmin] = params[1];
                if (params[1] == 0) {
                    user[params[0]][jEncargado][0] = 0;
                    user[params[0]][jEncargado][1] = 0;
                    user[params[0]][jEncargado][2] = 0;
                    user[params[0]][jEncargado][3] = 0;
                    user[params[0]][jEncargado][4] = 0;
                }
                format(string, sizeof(string), "[SistemaAdmin]: Head Admin %s te otorgo un puesto como Game Admin (nivel %d), usa '/ah' para ver más.", NombreRJugador(playerid), params[1]);
                _Mensaje(params[0], 4, "33CCFF", string);
                format(string, sizeof(string), "[SistemaAdmin]: Head Admin %s promovio a (%s) como Game Admin (nivel %d).", NombreRJugador(playerid), NombreRJugador(params[0]), params[1]);
                MensajeAdmin(string);
            	format(string, sizeof(string), "[SistemaAdmin]: Head Admin %s promovio a (%s) como Game Admin (nivel %d).",  NombreRJugador(playerid), NombreRJugador(params[0]), params[1]);
            	Log("Registros/DarAdmin.log", string);
            } else _Mensaje(playerid, 0, "75", "Jugador no conectado.");
        } else _Mensaje(playerid, 3, "0", "/daradmin [id jugador] [nivel]");
   } else _Mensaje(playerid, 0, "514", "[CMBlock_Super_Admin]: ¡NO TIENES ACCESO!");
   return 1;
}

CMD:daradmincourier(playerid, params[]) {
    if (user[playerid][jAdmin] >= 10 || user[playerid][jEncargado][0] == 1) {
        if (!sscanf(params, "di", params[0], params[1])) {
            if (params[1] < 0 || params[1] > 10) return _Mensaje(playerid, 0, "467", "Rangos admins desde 1 a 10.");
            if (IsPlayerConnected(params[0])) {
                new string[128];
                user[params[0]][jAdmin] = params[1];
                if (params[1] == 0) {
                    user[params[0]][jEncargado][0] = 0;
                    user[params[0]][jEncargado][1] = 0;
                    user[params[0]][jEncargado][2] = 0;
                    user[params[0]][jEncargado][3] = 0;
                    user[params[0]][jEncargado][4] = 0;
                }
                format(string, sizeof(string), "[SistemaAdmin]: Head Admin %s te otorgo un puesto como Game Admin (nivel %d), usa '/ah' para ver más.", NombreRJugador(playerid), params[1]);
                _Mensaje(params[0], 4, "33CCFF", string);
                format(string, sizeof(string), "[SistemaAdmin]: Head Admin %s promovio a (%s) como Game Admin (nivel %d).", NombreRJugador(playerid), NombreRJugador(params[0]), params[1]);
                MensajeAdmin(string);
            	format(string, sizeof(string), "[SistemaAdmin]: Head Admin %s promovio a (%s) como Game Admin (nivel %d).",  NombreRJugador(playerid), NombreRJugador(params[0]), params[1]);
            	Log("Registros/DarAdmin.log", string);
            } else _Mensaje(playerid, 0, "75", "Jugador no conectado.");
        } else _Mensaje(playerid, 3, "0", "/daradmin [id jugador] [nivel]");
    } else _Mensaje(playerid, 0, "514", "[CMBlock_Super_Admin]: ¡NO TIENES ACCESO!");
    return 1;
}

CMD:darheadfac(playerid, params[]) {
    new string[128], playerid2;
    if (user[playerid][jAdmin] < 10) return _Mensaje(playerid, 0, "470", "Tú no tienes acceso a el comando /darheadfac.");
    if (!sscanf(params, "d", playerid2)) {
        if (IsPlayerConnected(playerid2)) {
            user[playerid2][jEncargado][1] = 1;
            format(string, sizeof(string), "* %s lo ha asignado moderador de facciones.", NombreRJugador(playerid));
            _Mensaje(playerid2, 4, "33CCFF", string);
            format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Super Admin %s ha asignado encargado de facciones a %s", NombreRJugador(playerid), NombreRJugador(playerid2));
            MensajeAdmin(string);
            Log("Registros/DarEncargado.log", string);
        } else _Mensaje(playerid, 0, "75", "Jugador no conectado.");
    } else _Mensaje(playerid, 3, "0", "/darheadfac [id jugador]");
    return 1;
}

CMD:darmascara(playerid, params[]) {
    if (user[playerid][jAdmin] < 3) return _Mensaje(playerid, 0, "470", "Tú no tienes acceso a el comando /Darmascara.");
    new string[128], playerid2,name[MAX_PLAYER_NAME];
    if (sscanf(params, "d", playerid2)) return _Mensaje(playerid, 3, "0", "/darmascara [id jugador]");
    if (IsPlayerConnected(playerid2)) {
        if (GetPVarInt(playerid2, "UsandoNombreP") == 0) {
            SetPVarInt(playerid2, "UsandoNombreP", 1);
            GetPlayerName(playerid2, name, sizeof(name));
            SetPVarString(playerid2, "NombreP", name);
            format(string, sizeof(string), "Extraño%d", playerid);
            SetPlayerName(playerid2, string);
            user[playerid2][j_Mascara] = 1;
        } else {
            GetPVarString(playerid2, "NombreP", name, sizeof(name));
            SetPVarInt(playerid2, "UsandoNombreP", 0);
            SetPlayerName(playerid2, name);
            user[playerid2][j_Mascara] = 0;
        }
    }
    return 1;
}

CMD:darheadfam(playerid, params[]) {
    new string[128], playerid2;
    if (user[playerid][jAdmin] < 10) return _Mensaje(playerid, 0, "470", "Tú no tienes acceso a el comando /darheadfam.");
    if (!sscanf(params, "d", playerid2)) {
        if (IsPlayerConnected(playerid2)) {
            user[playerid2][jEncargado][2] = 1;
            format(string, sizeof(string), "* %s lo ha asignado encargado de familias.", NombreRJugador(playerid));
            _Mensaje(playerid2, 4, "33CCFF", string);
            format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Super Admin %s ha asignado encargado de facciones a %s", NombreRJugador(playerid), NombreRJugador(playerid2));
            MensajeAdmin(string);
            Log("Registros/DarEncargado.log", string);
        } else _Mensaje(playerid, 0, "75", "Jugador no conectado.");
    } else _Mensaje(playerid, 3, "0", "/darheadfam [id jugador]");
    return 1;
}

CMD:darheadban(playerid, params[]) {
    new string[128], playerid2;
    if (user[playerid][jAdmin] < 5) return _Mensaje(playerid, 0, "470", "Tú no tienes acceso a el comando /darheadban.");
    if (!sscanf(params, "d", playerid2)) {
        if (IsPlayerConnected(playerid2)) {
            user[playerid2][jEncargado][3] = 1;
            format(string, sizeof(string), "* %s lo ha asignado encargado de expulsiones.", NombreRJugador(playerid));
            _Mensaje(playerid2, 4, "33CCFF", string);
            format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Head Admin %s ha asignado encargado de expulsiones a %s", NombreRJugador(playerid), NombreRJugador(playerid2));
            MensajeAdmin(string);
            Log("Registros/DarEncargado.log", string);
        } else _Mensaje(playerid, 0, "75", "Jugador no conectado.");
    } else _Mensaje(playerid, 3, "0", "/darheadban [id jugador]");
    return 1;
}

CMD:darheadstaff(playerid, params[]) {
    new string[128], playerid2;
    if (user[playerid][jAdmin] < 10) return _Mensaje(playerid, 0, "470", "Tú no tienes acceso a el comando /darheadstaff.");
    if (!sscanf(params, "d", playerid2)) {
        if (IsPlayerConnected(playerid2)) {
            user[playerid2][jEncargado][0] = 1;
            format(string, sizeof(string), "* Super Head Admin %s lo ha asignado Head Game Administrator", NombreRJugador(playerid));
            _Mensaje(playerid2, 4, "33CCFF", string);
            format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Super Head Admin %s ha asignado Head Game Admin 5 a %s", NombreRJugador(playerid), NombreRJugador(playerid2));
            MensajeAdmin(string);
            Log("Registros/DarEncargado.log", string);
        } else _Mensaje(playerid, 0, "75", "Jugador no conectado.");
    } else _Mensaje(playerid, 3, "0", "/darheadstaff [id jugador]");
    return 1;
}

CMD:quitaradmin(playerid, params[]) {
    new string[128], playerid2;
    if (user[playerid][jAdmin] >= 5 || user[playerid][jEncargado][0] == 1) {
        if (sscanf(params, "d", playerid2)) return _Mensaje(playerid, 3, "0", "/quitaradmin [id jugador]");
        if (IsPlayerConnected(playerid2)) {
            format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Head Admin %s quito los permisos al Game Admin %s", NombreRJugador(playerid), NombreRJugador(playerid2));
            MensajeAdmin(string);
            format(string, sizeof(string), "Registros: Head Admin %s quito los permisos al Game Admin %s.", NombreRJugador(playerid), NombreRJugador(playerid2));
            Log("Registros/QuitarAdmin.log", string);
            _Mensaje(playerid2, 2, "0", "Te promovieron a nivel de Game Admin (0).");
            EnServicioADM[playerid2] = 0;
            user[playerid2][jAdmin] = 0;
            user[playerid2][jEncargado][0] = 0;
            user[playerid2][jEncargado][1] = 0;
            user[playerid2][jEncargado][2] = 0;
            user[playerid2][jEncargado][3] = 0;
            user[playerid2][jEncargado][4] = 0;
        }
    } else _Mensaje(playerid, 0, "471", "Tú no tienes acceso a el comando /quitaradmin.");
    return 1;
}

CMD:quitarfaccionoff(playerid, params[]) {
    if (user[playerid][jAdmin] >= 10) {
        if (isnull(params)) return _Mensaje(playerid, 3, "0", "/quitarfaccionoff [Nombre_Apellido]");
        if (INI_Exist(params)) {
            new data[60], string[128];
            format(data, sizeof data, DATOS_CUENTAS, params);
            new INI: File = INI_Open(data);
            INI_WriteInt(File, "LiderFac", 0);
            INI_WriteInt(File, "MiembroFac", 0);
            INI_WriteInt(File, "RangoFac", 0);
            INI_WriteInt(File, "Division", 0);
            INI_Close(File);
            format(string, 128, "[AvisoAdmin]: {FFFFFF}El jugador %s fue sacado de la facción en la que estaba por Super Head Admin (%s).", params, NombreRJugador(playerid));
            MensajeAdmin(string);
            format(string, sizeof(string), "Registros: El jugador %s fue sacado de la facción en la que estaba por Super Head Admin (%s).", params, NombreRJugador(playerid));
            Log("Registros/QuitarFaccion.log", string);
        } else _Mensaje(playerid, 0, "179", "Esa cuenta no existe.");
    } else _Mensaje(playerid, 0, "180", "Tú no tienes acceso a el comando /Quitarfaccionoff.");
    return 1;
}

CMD:quitarfamiliaoff(playerid, params[]) {
    if (user[playerid][jAdmin] >= 10) {
        if (isnull(params)) return _Mensaje(playerid, 3, "0", "/quitarfamiliaoff [Nombre_Apellido]");
        if (INI_Exist(params)) {
            new data[60], string[128];
            format(data, sizeof data, DATOS_CUENTAS, params);
            new INI: File = INI_Open(data);
            INI_WriteInt(File, "LiderFam", 0);
            INI_WriteInt(File, "MiembroFam", 0);
            INI_WriteInt(File, "RangoFam", 1);
            INI_Close(File);
            format(string, 128, "[AvisoAdmin]: {FFFFFF}El jugador %s fue sacado de la familia en la que estaba por Super Head Admin (%s).", params, NombreRJugador(playerid));
            MensajeAdmin(string);
            format(string, sizeof(string), "Registros: El jugador %s fue sacado de la familia en la que estaba por Super Head Admin (%s).", params, NombreRJugador(playerid));
            Log("Registros/QuitarFamilia.log", string);
        } else _Mensaje(playerid, 0, "179", "Esa cuenta no existe.");
    } else _Mensaje(playerid, 0, "180", "Tú no tienes acceso a el comando /Quitarfamiliaoff.");
    return 1;
}

CMD:quitaradminoff(playerid, params[]) {
    if (user[playerid][jAdmin] >= 5 || user[playerid][jEncargado][2] == 1) {
        if (isnull(params)) return _Mensaje(playerid, 3, "0", "/quitaradminoff [Nombre_Apellido]");
        if (INI_Exist(params)) {
            new data[60], string[128];
            format(data, sizeof data, DATOS_CUENTAS, params);
            new INI: File = INI_Open(data);
            INI_WriteInt(File, "Encargado_1", 0);
            INI_WriteInt(File, "Encargado_2", 0);
            INI_WriteInt(File, "Encargado_3", 0);
            INI_WriteInt(File, "Encargado_4", 0);
            INI_WriteInt(File, "Encargado_5", 0);
            INI_WriteInt(File, "Admin", 0);
            INI_Close(File);
            format(string, 128, "[AvisoAdmin]: {FFFFFF}Game Admin %s fue sacado del staff por Super Head Admin %s.", params, NombreRJugador(playerid));
            MensajeAdmin(string);
            format(string, sizeof(string), "Registros: Game Admin %s fue sacado del staff por Super Head Admin %s.", params, NombreRJugador(playerid));
            Log("Registros/QuitarAdminOff.log", string);
        } else _Mensaje(playerid, 0, "179", "Esa cuenta no existe.");
    } else _Mensaje(playerid, 0, "180", "Tú no tienes acceso a el comando /Quitaradminoff.");
    return 1;
}

CMD:duda(playerid, params[]) {
    new string[256];
    if(!CheckTimer(60, DudaTimer[playerid])) {
        if (StaffEnLinea() == 0) return _Mensaje(playerid, 0, "197", "No hay miembro del staff online en este momento, intenta más tarde.");
        if (DudaB[playerid] == 1) return _Mensaje(playerid, 0, "472", "El /duda ha sido bloqueado para ti por mal uso.");
        if (isnull(params)) return _Mensaje(playerid, 3, "0", "/duda [texto]");
        if (isnumeric(params)) return _Mensaje(playerid, 0, "476", "No se puede enviar números por este canal.");
        DudaA[playerid] = 1;
        DudaTimer[playerid] = gettime();
        format(string, sizeof(string), "[SistemaSoporte]: Duda de (%s):{FFFFFF} %s {00C200}(ID:%d)", NombreRJugador(playerid), params[0], playerid);
        MensajeAdmin3(string);
        format(DudaT[playerid], 256, "%s", params);
        _Mensaje(playerid, 4, "33CCFF", "Su duda ha sido enviada. Espere a que alguien del equipo administrativo le responda.");
    } else {
        format(string, 144, "Faltan %d segundos para que puedas enviar otra duda.", CheckTimer(60, DudaTimer[playerid]));
        _Mensaje(playerid, 0, "536", string);
    }
    return 1;
}


CMD:ad(playerid, params[]) return cmd_aduda(playerid, params);
CMD:aduda(playerid, params[]) {
    if (user[playerid][jAdmin] >= 1) {
        new string[128], playerid2;
        if (sscanf(params, "d", playerid2)) return _Mensaje(playerid, 3, "0", "/aduda [id jugador]");
        if (playerid2 > 200 || playerid2 < 0) {
            _Mensaje(playerid, 0, "372", "Maximo de dudas es de 200.");
            return 1;
        }
        if (DudaA[playerid2] == 0) {
            _Mensaje(playerid, 0, "477", "Ese usuario no envió ninguna duda o su duda ya fue aceptada o rechazada.");
            return 1;
        } else {
            format(string, sizeof(string), "[SistemaSoporte]: {FFFFFF}Game Admin %s aceptó la duda de [ID:%d] %s.", NombreRJugador(playerid), playerid2, NombreRJugador(playerid2));
            MensajeAdmin(string);
            format(string, sizeof(string), "*Game Admin %s acepto tu duda, en breve te respondera.", NombreRJugador(playerid));
            _Mensaje(playerid2, 4, "33CCFF", string);
            DudaA[playerid2] = 0;
            DudaT[playerid2] = "Nada";
		}
    } else return _Mensaje(playerid, 0, "478", "Tú no tienes acceso a el comando /aduda.");
    return 1;
}

CMD:rduda(playerid, params[]) return cmd_rd(playerid, params);
CMD:rd(playerid, params[]) {
    if (user[playerid][jAdmin] >= 1) {
        new string[128], playerid2;
        if (sscanf(params, "d", playerid2)) return _Mensaje(playerid, 3, "0", "/rd [id jugador]");
        if (playerid2 > 200 || playerid2 < 0) {
            _Mensaje(playerid, 0, "372", "Maximo de dudas es de 200.");
            return 1;
        }
        if (DudaA[playerid2] == 0) {
            _Mensaje(playerid, 0, "477", "Ese usuario no envió ninguna duda o su duda ya fue aceptada o rechazada.");
            return 1;
        } else {
            format(string, sizeof(string), "[SistemaSoporte]: {FFFFFF}Game Admin %s [ID:%i] rechazó la duda del jugador %s (ID: %i).", NombreRJugador(playerid), playerid, NombreRJugador(playerid2), playerid2);
            MensajeAdmin(string);
            format(string, sizeof(string), "%s ha rechazado tu duda, seguro fue un error o la duda no tiene relación con el gamemode.", NombreRJugador(playerid));
            _Mensaje(playerid2, 4, "33CCFF", string);
            DudaA[playerid2] = 0;
            DudaT[playerid2] = "Nada";
        }
    } else return _Mensaje(playerid, 0, "481", "Tú no tienes acceso a el comando /rd.");
    return 1;
}

CMD:bloquearprivados(playerid, params[]) {
    if (user[playerid][jAdmin] >= 3) {
        new string[128], playerid2;
        if (sscanf(params, "d", playerid2)) return _Mensaje(playerid, 3, "0", "/bloquearprivados [id jugador]");
        if (PrivadosB[playerid2] == 0) {
            format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s [ID:%i] bloqueo los permisos de mandar privados a %s (ID: %i).", NombreRJugador(playerid), playerid, NombreRJugador(playerid2), playerid2);
            MensajeAdmin(string);
            format(string, sizeof(string), "Game Admin %s te ha bloqueado los permisos de mandar privados.", NombreRJugador(playerid));
            _Mensaje(playerid2, 4, "33CCFF", string);
            PrivadosB[playerid2] = 1;
            return 1;
        } else {
            format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF} %s [ID:%i] desbloqueo los permisos de mandar privados a %s (ID: %i).", NombreRJugador(playerid), playerid, NombreRJugador(playerid2), playerid2);
            MensajeAdmin(string);
            format(string, sizeof(string), "Game Admnin %s te ha desbloqueado el permiso de mandar privados. Utilizelo bien esta vez.", NombreRJugador(playerid));
            _Mensaje(playerid2, 4, "33CCFF", string);
            PrivadosB[playerid2] = 0;
        }
    } else return _Mensaje(playerid, 0, "480", "Tú no tienes acceso a el comando /bloquearprivados.");
    return 1;
}

CMD:bloqueardudas(playerid, params[]) {
    if (user[playerid][jAdmin] >= 3) {
        new string[128], playerid2;
        if (sscanf(params, "d", playerid2)) return _Mensaje(playerid, 3, "0", "/bloqueardudas [id jugador]");
        if (DudaB[playerid2] == 0) {
            format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s [ID:%i] bloqueo el canal de dudas a %s (ID: %i).", NombreRJugador(playerid), playerid, NombreRJugador(playerid2), playerid2);
            MensajeAdmin(string);
            format(string, sizeof(string), "Game Admin %s te ha bloqueado el canal de dudas por mal uso.", NombreRJugador(playerid));
            _Mensaje(playerid2, 4, "33CCFF", string);
            DudaA[playerid2] = 0;
            DudaT[playerid2] = "Nada";
            DudaB[playerid2] = 1;
            return 1;
        } else {
            format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF} %s [ID:%i] desbloqueo el canal de dudas a %s (ID: %i).", NombreRJugador(playerid), playerid, NombreRJugador(playerid2), playerid2);
            MensajeAdmin(string);
            format(string, sizeof(string), "Game Admin %s te ha desbloqueado el canal de dudas. Utilizelo bien esta vez.", NombreRJugador(playerid));
            _Mensaje(playerid2, 4, "33CCFF", string);
            DudaA[playerid2] = 0;
            DudaT[playerid2] = "Nada";
            DudaB[playerid2] = 0;
        }
    } else return _Mensaje(playerid, 0, "480", "Tú no tienes acceso a el comando /bloqueardudas.");
    return 1;
}

CMD:dudas(playerid, params[]) {
    new string[128];
    if (user[playerid][jAdmin] >= 1) {
        _Mensaje(playerid, 4, "00C200", "Dudas activas:");
        for (new i = 0; i < MAX_PLAYERS; i++) {
            if (IsPlayerConnected(i) && DudaA[i] == 1) {
                format(string, sizeof(string), "%s [ID:%i]: %s", NombreRJugador(i), i, DudaT[i]);
                if (strlen(string) > 0) SendSplitMessage(playerid, 0xFF0000FF, string);
            }
        }
    } else return _Mensaje(playerid, 0, "482", "Tú no tienes acceso a el comando /dudas.");
    return 1;
}

CMD:borrardudas(playerid, params[]) {
    new string[128];
    if (user[playerid][jAdmin] >= 4) {
        for (new i = 0; i < MAX_PLAYERS; i++) {
            if (IsPlayerConnected(i) && DudaA[i] == 1) {
                DudaA[i] = 0;
                DudaT[i] = "Nada";
            }
        }
        format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s [ID:%i] a borrado todas las dudas activas.", NombreRJugador(playerid), playerid);
        MensajeAdmin(string);
    } else return _Mensaje(playerid, 0, "483", "Tú no tienes acceso a el comando /borrardudas.");
    return 1;
}

CMD:iradmin(playerid, params[]) {
    if (user[playerid][jAdmin] < 4) return _Mensaje(playerid, 0, "452", "Tú no tienes acceso a el comando /iradmin.");
    if (sscanf(params, "i", params[0])) return _Mensaje(playerid, 3, "0", "/iradmin [IDPuerta] (Máx ID: 0/50 (más o menos)");
    if (params[0] < 0 || params[0] >= MAX_PUERTAS) return _Mensaje(playerid, 0, "453", "La (ID Puerta) introducida no existe.");
    SetPlayerPos(playerid, InfoPuerta[params[0]][pExteriorX], InfoPuerta[params[0]][pExteriorY], InfoPuerta[params[0]][pExteriorZ]);
    _Mensaje(playerid, 2, "0", "Teleportado.");
    return 1;
}

CMD:qfa(playerid, params[]) {
    new playerid2, string[256];
    if (!sscanf(params, "d", playerid2)) {
        if (!user[playerid][jAdmin]) return _Mensaje(playerid, 0, "455", "Tú no tienes acceso a el comando /qfa.");
        if (IsPlayerConnected(playerid2)) {
            format(string, sizeof(string), "[SISTEMA]:{ffffff} El último usuario que mató a %s, fue %s.", NombreRJugador(playerid2), QuienMato[playerid2]);
            _Mensaje(playerid, 4, "FF0000", string);
        } else return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
    } else {
        if(asesino[playerid] == -1) return _Mensaje(playerid, 0, "75", "Nadie te ha asesinado, posible error.");
        format(string, sizeof(string), "[SISTEMA]:{ffffff} El último usuario que te mato fue %s.", QuienMato[playerid]);
        _Mensaje(playerid, 4, "FF0000", string);
    }
    return 1;
}

CMD:editarp(playerid, params[]) {
    if (user[playerid][jAdmin] < 10) return _Mensaje(playerid, 0, "492", "Tú no tienes acceso a el comando /editarp.");
    new string[256], choice[50], doorid, amount;
    if (sscanf(params, "s[50]ii", choice, doorid, amount)) {
        _Mensaje(playerid, 3, "0", "/editarp [opción] [id puerta] [cantidad]");
        _Mensaje(playerid, 1, "Exterior, Interior, Premium", "Opciones:");
        _Mensaje(playerid, 1, "Familia, Faccion, Borrar.", "Opciones:");
        return 1;
    }
    if (doorid >= MAX_PUERTAS) { return _Mensaje(playerid, 0, "453", "ID de puerta dinamica errónea."); }
    if (strcmp(choice, "exterior", true) == 0) {
        GetPlayerPos(playerid, InfoPuerta[doorid][pExteriorX], InfoPuerta[doorid][pExteriorY], InfoPuerta[doorid][pExteriorZ]);
        GetPlayerFacingAngle(playerid, InfoPuerta[doorid][pExteriorA]);
        InfoPuerta[doorid][pExteriorVW] = GetPlayerVirtualWorld(playerid);
        InfoPuerta[doorid][pExteriorInt] = GetPlayerInterior(playerid);
        _Mensaje(playerid, 2, "0", "Has cambiado el exterior.");
        ActualizarPuertaLabel(doorid);
        ActualizarPuerta();
    } else if (strcmp(choice, "interior", true) == 0) {
        GetPlayerPos(playerid, InfoPuerta[doorid][pInteriorX], InfoPuerta[doorid][pInteriorY], InfoPuerta[doorid][pInteriorZ]);
        GetPlayerFacingAngle(playerid, InfoPuerta[doorid][pInteriorA]);
        InfoPuerta[doorid][pInteriorInt] = GetPlayerInterior(playerid);
        InfoPuerta[doorid][pInteriorVW] = GetPlayerVirtualWorld(playerid);
        _Mensaje(playerid, 2, "0", "Has cambiado el interior.");
        ActualizarPuertaLabel(doorid);
        ActualizarPuerta();
        return 1;
    } else if (strcmp(choice, "premium", true) == 0) {
        InfoPuerta[doorid][pNivelVIP] = amount;
        format(string, sizeof(string), "Has cambiado solo premium de minimo nivel %d.", amount);
        _Mensaje(playerid, 2, "0", string);
        ActualizarPuerta();
        return 1;
    } else if (strcmp(choice, "familia", true) == 0) {
        InfoPuerta[doorid][pFamilia] = amount;
        format(string, sizeof(string), "Has cambiado solo miembros de familia numero %d.", amount);
        _Mensaje(playerid, 2, "0", string);
        ActualizarPuerta();
        return 1;
    } else if (strcmp(choice, "faccion", true) == 0) {
        InfoPuerta[doorid][pFaccion] = amount;
        format(string, sizeof(string), "Has cambiado solo miembros de faccion numero %d.", amount);
        _Mensaje(playerid, 2, "0", string);
        ActualizarPuerta();
        return 1;
    } else if (strcmp(choice, "borrar", true) == 0) {
        InfoPuerta[doorid][pDescripcion] = 0;
        InfoPuerta[doorid][pExteriorVW] = 0;
        InfoPuerta[doorid][pExteriorInt] = 0;
        InfoPuerta[doorid][pInteriorVW] = 0;
        InfoPuerta[doorid][pInteriorInt] = 0;
        InfoPuerta[doorid][pExteriorX] = 0;
        InfoPuerta[doorid][pExteriorY] = 0;
        InfoPuerta[doorid][pExteriorZ] = 0;
        InfoPuerta[doorid][pExteriorA] = 0;
        InfoPuerta[doorid][pInteriorX] = 0;
        InfoPuerta[doorid][pInteriorY] = 0;
        InfoPuerta[doorid][pInteriorZ] = 0;
        InfoPuerta[doorid][pInteriorA] = 0;
        InfoPuerta[doorid][pNivelVIP] = 0;
        InfoPuerta[doorid][pFamilia] = 0;
        InfoPuerta[doorid][pFaccion] = 0;
        ActualizarPuerta();
        format(string, sizeof(string), "Has borrado la puerta dinamica id %d.", doorid);
        _Mensaje(playerid, 2, "0", string);
        return 1;
    }
    return 1;
}

CMD:editarp2(playerid, params[]) {
    if (user[playerid][jAdmin] < 10) return _Mensaje(playerid, 0, "492", "Tú no tienes acceso a el comando /editarp2.");
    new doorid, doorname[128];
    if (sscanf(params, "ds[128]", doorid, doorname)) return _Mensaje(playerid, 3, "0", "/editarp2 [id puerta] [nombre]");
    format(InfoPuerta[doorid][pDescripcion], 128, "%s", doorname);
    _Mensaje(playerid, 2, "0", "Has cambiado el nombre de la puerta.");
    ActualizarPuertaLabel(doorid);
    ActualizarPuerta();
    return 1;
}

CMD:crearvehiculo(playerid, params[]) {
    new string[128], playerid2, modelid, color1, color2, precio;
    if (sscanf(params, "ddddd", playerid2, modelid, color1, color2, precio)) return _Mensaje(playerid, 3, "0", "/crearvehiculo [id jugador] [modelid] [color 1] [color 2] [precio]");
    if (user[playerid][jAdmin] < 10) return _Mensaje(playerid, 0, "492", "Tú no tienes acceso a el comando /crearvehiculo.");
    if (color1 < 0 || color1 > 126) { _Mensaje(playerid, 0, "444", "Numero de color no debe ser menor de 0 o mayor que 126."); return 1; }
    if (color2 < 0 || color2 > 126) { _Mensaje(playerid, 0, "445", "Numero de color 2 no debe ser menor de 0 o mayor que 126."); return 1; }
    if (modelid < 400 || modelid > 611) { _Mensaje(playerid, 0, "446", "Id del vehiculo debe ser del 400 al 611."); return 1; }
    new Float: X, Float: Y, Float: Z, Float: Angle;
    GetPlayerPos(playerid2, X, Y, Z);
    GetPlayerFacingAngle(playerid2, Angle);
    new car = CrearCoche(playerid2, modelid, X, Y, Z, Angle, color1, color2, precio);
    if (car == INVALID_PLAYER_VEHICLE_ID) _Mensaje(playerid, 0, "449", "[Aviso de Error]: Algo salió mal y el vehículo no se creó.");
    else {
        format(string, sizeof(string), "%s creó [M-%d C1-%d C2-%d] a %s", NombreRJugador(playerid), modelid, color1, color2, NombreRJugador(playerid2));
        _Mensaje(playerid, 2, "0", string);
        Log("Registros/CrearAuto.log", string); // Guarda registros de crear coches -- general --
    }
    return 1;
}

CMD:respawncar(playerid, params[]) {
	new string[256], carid;
    if (user[playerid][jAdmin] >= 1) {
        if (sscanf(params, "d", carid)) return _Mensaje(playerid, 3, "0", "/respawncar [carid]");
        format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s utilizó '/respawncar', Vehículo ID: %d.", NombreRJugador(playerid), carid);
        MensajeAdmin(string);
        SetVehicleToRespawn(carid);
    } else _Mensaje(playerid, 0, "450", "Tú no tienes acceso a el comando /respawncar.");
    return 1;
}

CMD:respawncars(playerid, params[]) {
	new string[256], radius;
    if (EnServicioADM[playerid] == 0) return _Mensaje(playerid, 0, "158", "Sistema responsable. [Escribe] /adminservicio");
    if (user[playerid][jAdmin] >= 2) {
        if (sscanf(params, "d", radius)) return _Mensaje(playerid, 3, "0", "/respawncars [radio]");
        if (radius < 1 || radius > 40) {
            _Mensaje(playerid, 0, "662", "El radio debe ser de 1 a 40.");
            return 1;
        }
        RespawnNearbyVehicles(playerid, radius);
        format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s utilizó /respawncars, respawneo todos los vehículos cercanos a él.", NombreRJugador(playerid));
        MensajeAdmin(string);
    } else _Mensaje(playerid, 0, "451", "Tú no tienes acceso a el comando /respawncars.");
    return 1;
}

CMD:racall(playerid, params[]) {
    if (!IsPlayerConnected(playerid)) return _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
    if (user[playerid][jAdmin] >= 3) {
        new bool: unwanted[MAX_VEHICLES];
        for (new player = 0; player < MAX_PLAYERS; player++) {
            if (IsPlayerInAnyVehicle(player)) {
                unwanted[GetPlayerVehicleID(player)] = true;
            }
        }
        for (new car = 0; car < MAX_VEHICLES; car++) {
            if (!unwanted[car]) SetVehicleToRespawn(car);
            SetVehicleParamsEx(car, 0, 0, 0, 0, 0, 0, 0);
            arr_Engine {car} = 0;
        }
        new string[128];
        format(string, sizeof(string), "[Sistema Admin]: {FFFFFF}Respawn general realizado por el Game Admin %s.", NombreRJugador(playerid));
        _MensajeOOC(0xE00000FF,string);
    } else _Mensaje(playerid, 0, "158", "No autorizado para este comando.");
    return 1;
}

CMD:vmiembros(playerid, params[]) {
    new conteo = 0, MSG2[500], rango[500];
    new coordsstring[300];
    new DialogStatus[3000];
    foreach(Player, i) {
        if (user[i][jPremium] >= 1) {
            conteo++;
            if (user[i][jPremium] == 1) {
                rango = "{E2E800}Básico";
            } else if (user[i][jPremium] == 2) {
                rango = "{D10000}Avanzado";
            } else if (user[i][jPremium] == 3) {
                rango = "{00C200}Ultra";
            }
            format(coordsstring, sizeof(coordsstring), "{ffffff}[ID %d] %s | %s\n",i, NombreRJugador(i), rango);
            strcat(DialogStatus, coordsstring);
        }
    }
    if (!conteo) return Dialog(playerid, D_INVALIDO, DIALOG_STYLE_MSGBOX, "0 Miembros", "{FFFFFF}No hay jugadores premium conectado.", "Cerrar", "");
    format(MSG2, sizeof(MSG2), "{FFFFFF}Premium en linea: {C93CCE}%d", conteo);
    Dialog(playerid, D_INVALIDO, DIALOG_STYLE_MSGBOX, MSG2, DialogStatus, "Cerrar", "");
    return 1;
}

CMD:admins(playerid, params[]) {
    new check = 0, info[150];
	SendClientMessage(playerid, 0x54A700E8, "Staff Activo:");
	foreach(Player, i) {
	    if(user[i][jAdmin] > 0) {
            format(info, sizeof(info), "(Nivel Admin: %i) %s (ID: %i) En servicio: %s", user[i][jAdmin], N_Apellido(i), i, EnServicioADM[i] == 1? ("Si") : ("En rol."));
            SendClientMessage(playerid, EnServicioADM[i] == 1? 0x33AA33AA : 0xB5B5B5FF, info);
            check++;
        }
	}
	if(check == 0) return SendClientMessage(playerid, 0xB5B5B5FF, "*** Actualmente no hay administradores conectados.");
	return 1;
}

CMD:loteria(playerid, params[]) {
    if (user[playerid][jAdmin] < 4) return _Mensaje(playerid, 0, "436", "Tú no tienes acceso a el comando /loteria.");
    else {
        _MensajeSAN(C_BLANCO, "{2F99B5}[Gobierno de San Andreas] (Lotería): {FFFFFF}Ha comenzado el sorteo de la loteria.");
        new pay = Random(1, 120);
        Loteria(pay);
    }
    return 1;
}

CMD:trabajar(playerid)
{
	if (user[playerid][jTrabajo1] != 0) return _Mensaje(playerid, 4, "ADC3E7", "Error:{ffffff} Ya posees un trabajo en la ranura 1 (/trabajar2 o /renunciar).");
	if (_enPos(playerid, 3.0, 2137.6953, -2282.5144, 20.7174)) //carguero
	{
		_Mensaje(playerid, 4, "b0b0b0", " Ahora eres {E7D800}carguero{b0b0b0}, escribe (/ayuda) para más información.");
		return user[playerid][jTrabajo1] = 1;
    }
	else if (_enPos(playerid, 3.0, 2259.5535, -1019.1276, 59.3153)) //delincuente
	{
        if(!user[playerid][jPuntosRol]) return _Mensaje(playerid, 0, "9", "Debes tener al menos un punto de rol.");
        _Mensaje(playerid, 4, "b0b0b0", " Ahora eres {E7D800}delincuente{b0b0b0}, escribe (/ayuda) para más información.");
        return user[playerid][jTrabajo1] = 2;
    }
	else if (_enPos(playerid, 3.0, 2753.2439, -2551.0959, 13.6205)) //pescador
	{
        _Mensaje(playerid, 4, "b0b0b0", " Ahora eres {E7D800}pescador{b0b0b0}, escribe (/ayuda) para más información.");
        return user[playerid][jTrabajo1] = 3;
    }
	else if (_enPos(playerid, 3.0, 2429.3569, -2108.7351, 13.5563)) //camionero
	{
        if (user[playerid][jLicencias][2] == 0) return _Mensaje(playerid, 4, "ADC3E7", "SERVER:{ffffff} No tienes licencia de camionero.");
        _Mensaje(playerid, 4, "b0b0b0", " Ahora eres {E7D800}camionero{b0b0b0}, escribe (/ayuda) para más información.");
        return user[playerid][jTrabajo1] = 4;
    }
	else if (_enPos(playerid, 3.0, 1032.0359, -1435.2146, 13.5591)) //ladrón de coches
	{
	    if (!user[playerid][jPuntosRol] && (user[playerid][jHabilidad][3] < 9)) return _Mensaje(playerid, 0, "0", "Debes tener un punto de rol o habilidad mínima de delincuente (10).");
        _Mensaje(playerid, 4, "b0b0b0", " Ahora eres {E7D800}ladrón de coches{b0b0b0}, escribe (/ayuda) para más información.");
        return user[playerid][jTrabajo1] = 5;
	}
	else if (_enPos(playerid, 3.0, 2143.5129, -2161.9673, 13.5084)) //carpintero
	{
        _Mensaje(playerid, 4, "b0b0b0", " Ahora eres {E7D800}carpintero{b0b0b0}, escribe (/ayuda) para más información.");
        return user[playerid][jTrabajo1] = 6;
    }
	else if (_enPos(playerid, 3.0, -418.6058, -1759.5006, 6.2169)) //leñador
	{
        _Mensaje(playerid, 4, "b0b0b0", " Ahora eres {E7D800}leñador{b0b0b0}, escribe (/ayuda) para más información.");
        return user[playerid][jTrabajo1] = 7;
    }
	else if (_enPos(playerid, 3.0, -383.2412, -1438.8146, 26.3249)) //granjero
	{
        if (user[playerid][jLicencias][1] == 0) return _Mensaje(playerid, 0, "302", "No tienes licencia de conducción.");
        _Mensaje(playerid, 4, "b0b0b0", " Ahora eres {E7D800}granjero{b0b0b0}, escribe (/ayuda) para más información.");
        return user[playerid][jTrabajo1] = 10;
    }
	else if (_enPos(playerid, 3.0, 2457.5034,-1901.9773,13.5469)) //traficante de droga
	{
        if(user[playerid][jNivel] <= 4) return _Mensaje(playerid, 0, "87", "Debes ser mayor a nivel de 5, para traficar.");
        _Mensaje(playerid, 4, "b0b0b0", " Ahora eres {E7D800}traficante de drogas{b0b0b0}, ve al punto en el radar.");
        SetPlayerCheckpoint(playerid, 655.2497, -502.9607, 16.3102, 2);
        SetPVarInt(playerid, "EnCheckPoint", 5);
        return user[playerid][jTrabajo1] = 11;
    }
	return 1;
}

CMD:trabajar2(playerid)
{
	if (user[playerid][jTrabajo2] != 0) return _Mensaje(playerid, 4, "ADC3E7", "Error:{ffffff} Ya posees un trabajo en la ranura 2 (/trabajar o /renunciar2).");
	if (_enPos(playerid, 3.0, 2137.6953, -2282.5144, 20.7174)) //carguero
	{
		_Mensaje(playerid, 4, "b0b0b0", " Ahora eres {E7D800}carguero{b0b0b0}, escribe (/ayuda) para más información.");
		return user[playerid][jTrabajo2] = 1;
    }
	else if (_enPos(playerid, 3.0, 2259.5535, -1019.1276, 59.3153)) //delincuente
	{
        if(!user[playerid][jPuntosRol]) return _Mensaje(playerid, 0, "9", "Debes tener al menos un punto de rol.");
        _Mensaje(playerid, 4, "b0b0b0", " Ahora eres {E7D800}delincuente{b0b0b0}, escribe (/ayuda) para más información.");
        return user[playerid][jTrabajo2] = 2;
    }
	else if (_enPos(playerid, 3.0, 2753.2439, -2551.0959, 13.6205)) //pescador
	{
        _Mensaje(playerid, 4, "b0b0b0", " Ahora eres {E7D800}pescador{b0b0b0}, escribe (/ayuda) para más información.");
        return user[playerid][jTrabajo2] = 3;
    }
	else if (_enPos(playerid, 3.0, 2429.3569, -2108.7351, 13.5563)) //camionero
	{
        if (user[playerid][jLicencias][2] == 0) return _Mensaje(playerid, 4, "ADC3E7", "SERVER:{ffffff} No tienes licencia de camionero.");
        _Mensaje(playerid, 4, "b0b0b0", " Ahora eres {E7D800}camionero{b0b0b0}, escribe (/ayuda) para más información.");
        return user[playerid][jTrabajo2] = 4;
    }
	else if (_enPos(playerid, 3.0, 1032.0359, -1435.2146, 13.5591)) //ladrón de coches
	{
	    if (!user[playerid][jPuntosRol] && (user[playerid][jHabilidad][3] < 9)) return _Mensaje(playerid, 0, "0", "Debes tener un punto de rol o habilidad mínima de delincuente (10).");        _Mensaje(playerid, 4, "b0b0b0", " Ahora eres {ffffff}ladrón de coches{b0b0b0}, escribe (/ayuda) para más información.");
        return user[playerid][jTrabajo2] = 5;
	}
	else if (_enPos(playerid, 3.0, 2143.5129, -2161.9673, 13.5084)) //carpintero
	{
        _Mensaje(playerid, 4, "b0b0b0", " Ahora eres {E7D800}carpintero{b0b0b0}, escribe (/ayuda) para más información.");
        return user[playerid][jTrabajo2] = 6;
    }
	else if (_enPos(playerid, 3.0, -418.6058, -1759.5006, 6.2169)) //leñador
	{
        _Mensaje(playerid, 4, "b0b0b0", " Ahora eres {E7D800}leñador{b0b0b0}, escribe (/ayuda) para más información.");
        return user[playerid][jTrabajo2] = 7;
    }
	else if (_enPos(playerid, 3.0, -383.2412, -1438.8146, 26.3249)) //granjero
	{
        if (user[playerid][jLicencias][1] == 0) return _Mensaje(playerid, 0, "302", "No tienes licencia de conducción.");
        _Mensaje(playerid, 4, "b0b0b0", " Ahora eres {ffffff}granjero{b0b0b0}, escribe (/ayuda) para más información.");
        return user[playerid][jTrabajo2] = 10;
    }
	else if (_enPos(playerid, 3.0, 2457.5034,-1901.9773,13.5469)) //traficante de droga
	{
        if(user[playerid][jNivel] <= 4) return _Mensaje(playerid, 0, "87", "Debes ser mayor a nivel de 5, para traficar.");
        _Mensaje(playerid, 4, "b0b0b0", " Ahora eres {E7D800}traficante de drogas{b0b0b0}, ve al punto en el radar.");
        SetPlayerCheckpoint(playerid, 655.2497, -502.9607, 16.3102, 2);
        SetPVarInt(playerid, "EnCheckPoint", 5);
        return user[playerid][jTrabajo2] = 11;
    }
	return 1;
}

CMD:renunciar(playerid)
{
	if (user[playerid][jTrabajo1] > 0)
	{
		user[playerid][jTrabajo1] = 0;
		return _Mensaje(playerid, 4, "ffffff", " Renunciaste a tu trabajo, si poseías un checkpoint usa /eliminarcp.");
	} else if (user[playerid][jTrabajo1] == 0) _Mensaje(playerid, 0, "424", "Tu no tienes trabajo.");
	return 1;
}

CMD:renunciar2(playerid)
{
	if (user[playerid][jTrabajo2] > 0)
	{
		user[playerid][jTrabajo2] = 0;
		return _Mensaje(playerid, 4, "ffffff", " Renunciaste a tu trabajo, si poseías un checkpoint usa /eliminarcp.");
	} else if (user[playerid][jTrabajo2] == 0) _Mensaje(playerid, 0, "425", "Tu no tienes un segundo trabajo.");
	return 1;
}

CMD:renunciar3(playerid)
{
	if (user[playerid][jTrabajo3] > 0)
	{
		user[playerid][jTrabajo3] = 0;
		return _Mensaje(playerid, 4, "ffffff", " Renunciaste a tu trabajo, si poseías un checkpoint usa /eliminarcp.");
	} else if (user[playerid][jTrabajo3] == 0) _Mensaje(playerid, 0, "426", "Tu no tienes un tercer trabajo.");
	return 1;
}

CMD:vendercosecha(playerid)
{
	if (!_enPos(playerid, 2.0, -383.2412, -1438.8146, 26.3249)) return _Mensaje(playerid, 0, "0", "No estás en el punto de trabajar.");

	if (user[playerid][jCosechas] > 1)
	{
		new string[128], level = user[playerid][jHabilidad2][7], pago;

		if (level == 1) pago = 3;
		else if (level == 2) pago = 4;
		else if (level == 3) pago = 5;
		else if (level == 4) pago = 6;
		else if (level == 5) pago = 7;

		format(string, sizeof(string), "* Vendiste %d gramos de cosecha y sumaste $%i a tu bolsillo", user[playerid][jCosechas], user[playerid][jCosechas] * pago / 3);
		_Mensaje(playerid, 4, "33CCFF", string);
		DarDineroGC(playerid, user[playerid][jCosechas] * pago / 3);
		user[playerid][jCosechas] = 0;
		return 1;
	} else _Mensaje(playerid, 0, "423", "Lo mínimo para vender es un gramo.");
	return 1;
}

CMD:traficar(playerid)
{
	if (!Es_job(playerid, 11)) return _Mensaje(playerid, 0, "681", "No eres traficante.");
    new mypoint = -1, string[256];
    if (_enPos(playerid, 4.0, 655.2497, -502.9607, 16.3102)) { mypoint = 5; }
    if (mypoint == -1) return _Mensaje(playerid, 0, "423", "No estás en el punto específico!");
    if (user[playerid][jPaquetes]) return _Mensaje(playerid, 0, "423", "No se puede sostener más paquetes de drogas!");
    if (user[playerid][jTiempos][6] > 0) {
        format(string, sizeof(string), "Ya has traficado. Debes esperar %d minutos.", user[playerid][jTiempos][6]);
        _Mensaje(playerid, 2, "0", string);
        return 1;
    }
	Dialog(playerid, D_DrogaP, DIALOG_STYLE_LIST, "{D6E1EB}¿Qué deseas transportar?", "{FFFFFF}Marihuana\nCrack\nHeroína\nLSD\nCocaina", "Seleccionar", "Cancelar");
    SetPVarInt(playerid, "SeleccionDroga", 1);
    return 1;
}

CMD:cosechar(playerid)
{
    new idcar = GetPlayerVehicleID(playerid);
	if (!Es_job(playerid, 10)) return _Mensaje(playerid, 0, "681", "No eres granjero.");
	if (Granjero_Vehicle(idcar))
	{
		if (Granjero[playerid] == 1) return _Mensaje(playerid, 0, "75", "Ya estás cosechando.");
		Granjero[playerid] = 1;
		new randomize = random(sizeof(_Granjero));
		SetPlayerCheckpoint(playerid, _Granjero[randomize][0], _Granjero[randomize][1], _Granjero[randomize][2], 5.0);
		SetPVarInt(playerid, "EnCheckPoint", 5);
		PlayerTextDrawShow(playerid, TextTrabajo[playerid]);
		_Mensaje(playerid, 2, "0", "Dirígete a los checkpoints para cosechar, si quieres dejar de cosechar escribe /dcosechar.");
	} else return _Mensaje(playerid, 0, "75", "No estás en un tractor.");
	return 1;
}

CMD:dcosechar(playerid, params[]) {
    new idcar = GetPlayerVehicleID(playerid);
    if (!Granjero_Vehicle(idcar)) return _Mensaje(playerid, 0, "75", "No estás en un tractor.");
    if (Granjero[playerid] == 1) {
        if (Granjero[playerid] == 0) return _Mensaje(playerid, 0, "75", "No estás cosechando.");
        Granjero[playerid] = 0;
        SetVehicleToRespawn(idcar);
        _Mensaje(playerid, 2, "0", "Dejaste de cosechar.");
        DisablePlayerCheckpoint(playerid);
		PlayerTextDrawHide(playerid, TextTrabajo[playerid]);
    } else _Mensaje(playerid, 0, "75", "No estás cosechando.");
    return 1;
}

CMD:plantar(playerid, params[]) {
    if (user[playerid][jm_Derecha] != 79) { _Mensaje(playerid, 0, "9", "Necesitas tener la semilla en tu mano derecha."); return 1; }
	new string[128], LimitarSemillas;
	for(new f=0;f<MAX_PLANTAS;f++) {
		if(InfoMaria[f][sSlot]) {
			if(!strcmp(NombreRJugador(playerid), InfoMaria[f][sDueno])) {
				LimitarSemillas++;
				if(LimitarSemillas > 4) {
					_Mensaje(playerid, 4, "ff0000", "Imposible plantar más de 5 semillas.");
					return 1;
				}
			}
		}
	}
	for(new f=0;f<MAX_PLANTAS;f++) {
		if(!InfoMaria[f][sSlot]) {
			if(user[playerid][jm_Derecha] == 79){user[playerid][jm_DerechaCant] --;}
		    ApplyAnimation(playerid, "BOMBER", "BOM_Plant_Crouch_Out", 4.0, 0, 0, 0, 0, 0, 1);
			InfoMaria[f][sSlot] = true;
   			InfoMaria[f][sTime] = 1440;
			InfoMaria[f][sDueno] = NombreRJugador(playerid);
			InfoMaria[f][sInterior] = GetPlayerInterior(playerid);
    		InfoMaria[f][sVirtualWorld] = GetPlayerVirtualWorld(playerid);
			GetPlayerPos(playerid, InfoMaria[f][sPosicion][0], InfoMaria[f][sPosicion][1], InfoMaria[f][sPosicion][2]);
			InfoMaria[f][sPosicion][2] -= 1.5;
			format(string, sizeof(string), "Planta de marihuana\n{ffffff}Madura en %ih %im", InfoMaria[f][sTime] / 60, InfoMaria[f][sTime]);
			InfoMaria[f][sLabel] = CreateDynamic3DTextLabel(string, 0x009F46FF, InfoMaria[f][sPosicion][0], InfoMaria[f][sPosicion][1], InfoMaria[f][sPosicion][2] + 1.5, 8.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, InfoMaria[f][sVirtualWorld], InfoMaria[f][sInterior]);
    		InfoMaria[f][sObjeto] = CreateDynamicObject(19473, InfoMaria[f][sPosicion][0], InfoMaria[f][sPosicion][1], InfoMaria[f][sPosicion][2], 0.0, 0.0, 0.0, InfoMaria[f][sVirtualWorld], InfoMaria[f][sInterior]);
            ActualizarMaria(f);
			break;
		}
	}
	return 1;
}

CMD:splanta(playerid, params[]) {
    if(user[playerid][jm_Derecha] != 127 && user[playerid][jm_Izquierda] != 127){ _Mensaje(playerid, 0, "9", "No tienes unas tijeras en ninguna mano."); return 1;}
	for(new f=0;f<MAX_PLANTAS;f++) {
		if(_enPos(playerid, 2, InfoMaria[f][sPosicion][0], InfoMaria[f][sPosicion][1], InfoMaria[f][sPosicion][2])){
	        if (GetPlayerVirtualWorld(playerid) == InfoMaria[f][sVirtualWorld] && GetPlayerInterior(playerid) == InfoMaria[f][sInterior]) {
				if (InfoMaria[f][sGramos] > 0) {
            		if (user[playerid][jm_Derecha] > 0 && user[playerid][jm_Izquierda] > 0) return _Mensaje(playerid, 0, "9", "Debes tener una mano vacía.");
					new string[128], dGramos = InfoMaria[f][sGramos];
		 			ApplyAnimation(playerid, "BOMBER", "BOM_Plant_Crouch_Out", 4.0, 0, 0, 0, 0, 0, 1);
					format(string, sizeof(string), "Has cosechado %d gramos de marihuana.", dGramos+7);
    				_Mensaje(playerid, 4, "A7CE00", string);
					Borrarplanta(f);
    				if (user[playerid][jm_Derecha] == 0) {
                		user[playerid][jm_Derecha] = 74;
                	    user[playerid][jm_DerechaCant] = dGramos+7;
                	    PonerObjeto(playerid, 1, 74);
                	    return 1;
                	} else if (user[playerid][jm_Derecha] != 0) {
                	   user[playerid][jm_Izquierda] = 74;
                 	   user[playerid][jm_IzquierdaCant] = dGramos+7;
                 	   PonerObjeto(playerid, 2, 74);
                 	   return 1;
					}
	            } else return _Mensaje(playerid, 0, "1", "Esta planta no está lista.");
			}
		}
	}
	return _Mensaje(playerid, 0, "1", "No estás cerca de alguna planta.");
}

CMD:destruirplanta(playerid, params[]) {
    if (!Es_Faccion(playerid, 1)) return _Mensaje(playerid, 0, "1", "No eres de la defensa.");
	if (user[playerid][jDivision] == 0 || user[playerid][jDivision] == 3) return _Mensaje(playerid, 0, "229", "No eres de la división PD o SD.");

	for(new f=0;f<MAX_PLANTAS;f++)
	{
		if(_enPos(playerid, 2, InfoMaria[f][sPosicion][0], InfoMaria[f][sPosicion][1], InfoMaria[f][sPosicion][2]))
		{
			if (GetPlayerVirtualWorld(playerid) == InfoMaria[f][sVirtualWorld] && GetPlayerInterior(playerid) == InfoMaria[f][sInterior])
			{
				if(InfoMaria[f][sSlot])
				{
					AccionesRol(playerid, 0, "destruye la marihuana plantada.");
					Borrarplanta(f);
					return 1;
				}
			}
		}
	}
	return 1;
}

funcion Borrarplanta(s) {
	InfoMaria[s][sGramos] = 0;
	InfoMaria[s][sSlot] = false;
	InfoMaria[s][sPosicion][0] = -1;
	InfoMaria[s][sPosicion][1] = -1;
	InfoMaria[s][sPosicion][2] = -1;
	InfoMaria[s][sInterior] = -1;
	InfoMaria[s][sVirtualWorld] = -1;
	format(InfoMaria[s][sDueno], 24, "SinDueno");
	DestroyDynamic3DTextLabel(InfoMaria[s][sLabel]);
	DestroyDynamicObject(InfoMaria[s][sObjeto]);
	ActualizarMaria(s);
	return 1;
}

CMD:aduty(playerid, params[]) return cmd_adminservicio(playerid, params);
CMD:adminduty(playerid, params[]) return cmd_adminservicio(playerid, params);
CMD:adminservicio(playerid, params[]) {
	new string[256];
    if (user[playerid][jAdmin] < 1) return _Mensaje(playerid, 0, "491", "Sistema responsable. [Escribe] /adminservicio");
    if (EnServicioADM[playerid] == 0) {
        EnServicioADM[playerid] = 1;
        format(string, sizeof(string), "[Sistema Admin]: Game Admin{FFFFFF} %s se encuentra en servicio para atender dudas y reportes.", NombreRJugador(playerid));
        MensajeAdmin(string);
        return 1;
    } else {
        EnServicioADM[playerid] = 0;
        SetPlayerColor(playerid, C_PLAYERBLANCO);
        format(string, sizeof(string), "[Sistema Admin]: Game Admin{FFFFFF} %s no atenderá dudas ni reportes. (modo rol)", NombreRJugador(playerid));
        MensajeAdmin(string);
        return 1;
    }
}

CMD:bugentrenar(playerid, params[]) {
	new string[256];
    if (user[playerid][jAdmin] < 3) return _Mensaje(playerid, 0, "492", "Tú no tienes acceso a el comando /bugentrenar.");
    if (EnServicioADM[playerid] == 0) return _Mensaje(playerid, 0, "158", "Sistema responsable. [Escribe] /adminservicio.");
    UsandoGym[0] = 0; UsandoGym[1] = 0; UsandoGym[2] = 0; UsandoGym[3] = 0; UsandoGym[4] = 0;
    format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s utilizó el comando '/bugentrenar'.", NombreRJugador(playerid));
    MensajeAdmin(string);
    return 1;
}

CMD:la(playerid, params[]) return cmd_adminirls(playerid, params);
CMD:adminirls(playerid, params[]) {
	new string[256];
    if (user[playerid][jAdmin] < 1) return _Mensaje(playerid, 0, "492", "Tú no tienes acceso a el comando /adminirls.");
    if (EnServicioADM[playerid] == 0) return _Mensaje(playerid, 0, "158", "Sistema responsable. [Escribe] /adminservicio");
    if (GetPlayerState(playerid) == 2) {
        return SetVehiclePos(GetPlayerVehicleID(playerid), 1679.3351,-1657.1349,13.5395);
    } else {
        SetPosEx(playerid, 1679.3351,-1657.1349,13.5395,318.4477, 0, 0);
        SetPlayerInterior(playerid, 0);
        user[playerid][jInterior] = 0;
        SetPlayerVirtualWorld(playerid, 0);
        user[playerid][jVirtualWorld] = 0;
        format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s utilizó el comando '/adminirls' (teleport a Los Santos).", NombreRJugador(playerid));
        MensajeAdmin(string);
        return 1;
    }
}

CMD:adminirsf(playerid, params[]) {
	new string[256];
    if (user[playerid][jAdmin] < 1) return _Mensaje(playerid, 0, "493", "Tú no tienes acceso a el comando /adminirsf.");
    if (EnServicioADM[playerid] == 0) return _Mensaje(playerid, 0, "158", "Sistema responsable. [Escribe] /adminservicio.");
    if (GetPlayerState(playerid) == 2) {
        return SetVehiclePos(GetPlayerVehicleID(playerid), -2022.6509, 142.4865, 29.1390);
    } else {
        SetPosEx(playerid, -2022.6509, 142.4865, 29.1390, -0.5400, 0, 0);
        SetPlayerInterior(playerid, 0);
        user[playerid][jInterior] = 0;
        SetPlayerVirtualWorld(playerid, 0);
        user[playerid][jVirtualWorld] = 0;
        format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s utilizó el comando '/adminirsf' (teleport a San Fierro).", NombreRJugador(playerid));
        MensajeAdmin(string);
        return 1;
    }
}

CMD:adminirlv(playerid, params[]) {
	new string[256];
    if (user[playerid][jAdmin] < 1) return _Mensaje(playerid, 0, "494", "Tú no tienes acceso a el comando /adminirlv.");
    if (EnServicioADM[playerid] == 0) return _Mensaje(playerid, 0, "158", "Sistema responsable. [Escribe] /adminservicio.");
    if (GetPlayerState(playerid) == 2) {
        return SetVehiclePos(GetPlayerVehicleID(playerid), 2316.7502,2398.7454,10.8203);
    } else {
        SetPosEx(playerid, 2316.7502,2398.7454,10.8203,2.6704, 0, 0);
        SetPlayerInterior(playerid, 0);
        user[playerid][jInterior] = 0;
        SetPlayerVirtualWorld(playerid, 0);
        user[playerid][jVirtualWorld] = 0;
        format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s utilizó el comando '/adminirlv' (teleport a Las Venturas).", NombreRJugador(playerid));
        MensajeAdmin(string);
        return 1;
    }
}

CMD:llevarls(playerid, params[]) {
	new string[256];
    if (user[playerid][jAdmin] < 1) return _Mensaje(playerid, 0, "495", "Tú no tienes acceso a el comando /llevarls.");
    if (sscanf(params, "d", params[0])) return _Mensaje(playerid, 3, "0", "/llevarls [id jugador]");
    if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
    SetPosEx(params[0], 1679.3351,-1657.1349,13.5395,318.4477, 0, 0);
    SetPlayerInterior(params[0], 0);
    user[params[0]][jInterior] = 0;
    SetPlayerVirtualWorld(params[0], 0);
    user[params[0]][jVirtualWorld] = 0;
    format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s utilizó '/llevarls' a %s. (teleport usuario a Los Santos)", NombreRJugador(playerid), NombreRJugador(params[0]));
    MensajeAdmin(string);
    return 1;
}

CMD:llevarsf(playerid, params[]) {
	new string[256];
    if (user[playerid][jAdmin] < 1) return _Mensaje(playerid, 0, "496", "Tú no tienes acceso a el comando /Llevarsf.");
    if (sscanf(params, "d", params[0])) return _Mensaje(playerid, 3, "0", "/llevarsf [id jugador]");
    if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
    SetPosEx(params[0], -2022.6509, 142.4865, 29.1390, -0.5400, 0, 0);
    SetPlayerInterior(params[0], 0);
    user[params[0]][jInterior] = 0;
    SetPlayerVirtualWorld(params[0], 0);
    user[params[0]][jVirtualWorld] = 0;
    format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s utilizó '/llevarsf' a %s (teleport usuario a San Fierro)", NombreRJugador(playerid), NombreRJugador(params[0]));
    MensajeAdmin(string);
    return 1;
}

CMD:llevarlv(playerid, params[]) {
	new string[256];
    if (user[playerid][jAdmin] < 1) return _Mensaje(playerid, 0, "497", "Tú no tienes acceso a el comando /llevarlv.");
    if (sscanf(params, "d", params[0])) return _Mensaje(playerid, 3, "0", "/llevarlv [id jugador]");
    if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
    SetPosEx(params[0], 2316.7502,2398.7454,10.8203, 0, 0, 0);
    SetPlayerInterior(params[0], 0);
    user[params[0]][jInterior] = 0;
    SetPlayerVirtualWorld(params[0], 0);
    user[params[0]][jVirtualWorld] = 0;
    format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s utilizó '/llevarlv' a %s. (teleport usuario a Las Venturas)", NombreRJugador(playerid), NombreRJugador(params[0]));
    MensajeAdmin(string);
    return 1;
}

//trabajo de carpintero
CMD:crearmueble(playerid)
{
	if (!Es_job(playerid, 6)) return _Mensaje(playerid, 0, "149", "No eres carpintero.");

	if (IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "151", "No puedes hacer esto en un vehículo.");
	if (GetPVarInt(playerid, "HaciendoMueble") == 1) return _Mensaje(playerid, 0, "148", "Ya has comenzado hacer muebles, continua o usa '/dmueble'.");
	if (GetPVarInt(playerid, "TomoCarpintero") == 1) return _Mensaje(playerid, 0, "34", "Ya has usado el /crearmueble, ve hacía los troncos y después mesas.");

	SetPVarInt(playerid, "TomoCarpintero", 1);
	SetPVarInt(playerid, "MueblesCreados", 0);
	SetPlayerCheckpoint(playerid, 2142.0522, -2204.2458, 13.5084, 2.0);
	SetPVarInt(playerid, "EnCheckPoint", 5);
	ColocarObject(playerid, 9, 18635, 6, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
	_Mensaje(playerid, 2, "0", "Busca unos troncos, después hacía las mesas para construir muebles.");
	Carpintero[playerid] = 1;
	PlayerTextDrawShow(playerid, TextTrabajo[playerid]);
	return 1;
}
CMD:dmueble(playerid)
{
	if (!Es_job(playerid, 6)) return _Mensaje(playerid, 0, "149", "No eres carpintero.");

	if (GetPVarInt(playerid, "HaciendoMueble") == 1) return _Mensaje(playerid, 0, "150", "Estas haciendo una mueble, terminalo despues usa '/dmueble'.");
	new string[128], level = user[playerid][jHabilidad2][5], pago;

	if (level == 1) pago = 450;
	else if (level == 2) pago = 550;
	else if (level == 3) pago = 650;
	else if (level == 4) pago = 750;
	else if (level == 5) pago = 850;

	SetPVarInt(playerid, "TomoCarpintero", 0);
	SetPVarInt(playerid, "TrabajandoC", 0);
	SetPVarInt(playerid, "HaciendoMueble", 0);
	SetPVarInt(playerid, "MueblesCreados", 0);

	DarDineroGC(playerid, user[playerid][jMuebles] * pago);
	format(string, sizeof(string), "* Recibiste $%d por los %d muebles creados.", user[playerid][jMuebles] * pago, user[playerid][jMuebles]);
	_Mensaje(playerid, 4, "33CCFF", string);
	user[playerid][jMuebles] = 0;
	if (IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid, 5);
	if (IsPlayerAttachedObjectSlotUsed(playerid, 9)) RemovePlayerAttachedObject(playerid, 9);
	Carpintero[playerid] = 0;
	PlayerTextDrawHide(playerid, TextTrabajo[playerid]);
	return 1;
}

//trabajo de carguero
CMD:empezarcarga(playerid)
{
	if (!Es_job(playerid, 1)) return _Mensaje(playerid, 0, "681", "No eres carguero.");

	if (IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "151", "No puedes hacer esto en un vehículo.");
	if (GetPVarInt(playerid, "HaciendoCarga") == 1) return _Mensaje(playerid, 0, "148", "Para usar este comando escribe /dcarga.");

	SetPlayerCheckpoint(playerid, 2201.2773, -2223.5308, 13.5513, 2.0);
	SetPVarInt(playerid, "EnCheckPoint", 5);
	_Mensaje(playerid, 5, "0", "Comienza a llevar las cajas al tren.");
	SetPVarInt(playerid, "HaciendoCarga", 1);
	ClearAnimations(playerid);
	Carguero[playerid] = 1;
	PlayerTextDrawShow(playerid, TextTrabajo[playerid]);
	return 1;
}
CMD:dcargar(playerid)
{
	if (!Es_job(playerid, 1)) return _Mensaje(playerid, 0, "681", "No eres carguero.");

	if (user[playerid][jCargas] == 0) return _Mensaje(playerid, 0, "213", "Debes por lo menos subir una caja.");
	new string[100], level = user[playerid][jHabilidad2][4], pago;

	if (level == 1) pago = 150;
	else if (level == 2) pago = 250;
	else if (level == 3) pago = 350;
	else if (level == 4) pago = 450;
	else if (level == 5) pago = 550;

	DarDineroGC(playerid, user[playerid][jCargas] * pago);
	format(string, sizeof(string), "* Recibiste $%d por las %d cajas subidas al tren.", user[playerid][jCargas] * pago, user[playerid][jCargas]);
	_Mensaje(playerid, 4, "33CCFF", string);

	user[playerid][jCargas] = 0;
	SetPVarInt(playerid, "HaciendoCarga", 0);
	if (IsPlayerAttachedObjectSlotUsed(playerid, 9)) RemovePlayerAttachedObject(playerid, 9);
	DisablePlayerCheckpoint(playerid);
	Carguero[playerid] = 0;
	PlayerTextDrawHide(playerid, TextTrabajo[playerid]);
	return 1;
}

//trabajo de leñador
CMD:creartronco(playerid)
{
	if (!Es_job(playerid, 7)) return _Mensaje(playerid, 0, "681", "No eres leñador.");

	if (IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "151", "No puedes hacer esto en un vehículo.");
	if (GetPVarInt(playerid, "HaciendoCarga") == 1) return _Mensaje(playerid, 0, "148", "Ya has comenzado hacer troncos, continua o usa '/dtronco'.");

	SetPVarInt(playerid, "HaciendoCarga", 1);
	SetPVarInt(playerid, "TrabajandoL", 1);
	SetPVarInt(playerid, "TroncosCreados", 0);
	ColocarObject(playerid,9,341,6,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000);
	_Mensaje(playerid, 2, "0", "Empieza a talar arboles, para hacer troncos y venderlos.");
	Lenador[playerid] = 1;
	PlayerTextDrawShow(playerid, TextTrabajo[playerid]);
	return 1;
}
CMD:vendertroncos(playerid)
{
    if (!_enPos(playerid, 2.0, 2110.2300, -2155.0627, 13.5084)) return _Mensaje(playerid, 0, "0", "No estás en el punto de venta de troncos (carpintería).");

	if (user[playerid][jTroncos] > 1)
	{
		new string[128], level = user[playerid][jHabilidad2][6], pago;

		if (level == 1) pago = 70;
		else if (level == 2) pago = 85;
		else if (level == 3) pago = 100;
		else if (level == 4) pago = 120;
		else if (level == 5) pago = 145;

		format(string, sizeof(string), "* Vendiste '(%d) troncos cantidad' te pagaron en efectivo $[%i].", user[playerid][jTroncos], user[playerid][jTroncos] * pago);
		_Mensaje(playerid, 4, "33CCFF", string);
		DarDineroGC(playerid, user[playerid][jTroncos] * pago);
		TroncosDis += user[playerid][jTroncos];
		ActualizarTroncoLabel();
		user[playerid][jTroncos] = 0;
		return 1;
	} else _Mensaje(playerid, 0, "423", "Lo mínimo para vender es 1 tronco.");
	return 1;
}
CMD:dtronco(playerid)
{
	if (!Es_job(playerid, 7)) return _Mensaje(playerid, 0, "681", "No eres leñador.");
	if (GetPVarInt(playerid, "TroncosCreados") == 1) return _Mensaje(playerid, 0, "148", "Estás creando un tronco.");

	new string[100];
	format(string, sizeof(string), "Terminaste de talar arboles, llevas '(%d) troncos cantidad'.", user[playerid][jTroncos]);
	_Mensaje(playerid, 5, "0", string);
	_MarcarPos(playerid, 2110.2300, -2155.0627, 13.5084, "Vende los troncos en el punto rojo marcado en el radar.");
	SetPVarInt(playerid, "TrabajandoL", 0);
	SetPVarInt(playerid, "HaciendoCarga", 0);
	SetPVarInt(playerid, "TroncosCreados", 0);
	if (IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid, 5);
	if (IsPlayerAttachedObjectSlotUsed(playerid, 9)) RemovePlayerAttachedObject(playerid, 9);
	DisablePlayerCheckpoint(playerid);
	Lenador[playerid] = 0;
	PlayerTextDrawHide(playerid, TextTrabajo[playerid]);
	return 1;
}

//
CMD:enmascarados(playerid)
{
	if (user[playerid][jAdmin] < 1) return _Mensaje(playerid, 0, "416", "Tú no tienes acceso a el comando /enmascarados");

	_Mensaje(playerid, 4, "33CCFF", "Jugadores Enmascarados:");
	for (new i = 0; i < MAX_PLAYERS; i++) {
		if (IsPlayerConnected(i)) {
			if (user[i][j_Mascara] == 1) {
				new string[128];
				format(string, 128, "[ID:{FFff00} %i{FFFFFF}] | Nombre original: {FF0000}%s{FFFFFF} | Nombre usando: {00c200}%s", i, NombreRJugador(i), NombreJugador(i));
				_Mensaje(playerid, 4, "FFFFFF", string);
			}
		}
	}
	return 1;
}
CMD:enmascaradospd(playerid)
{
	if (user[playerid][jAdmin] < 1) return _Mensaje(playerid, 0, "416", "Tú no tienes acceso a el comando /Enmascaradospd");

	_Mensaje(playerid, 4, "33CCFF", "Jugadores Enmascarados:");
	for (new i = 0; i < MAX_PLAYERS; i++) {
		if (IsPlayerConnected(i)) {
			if (GetPVarInt(i, "UsandoNombreP") == 1) {
				new name[MAX_PLAYER_NAME];
				GetPVarString(i, "NombreP", name, sizeof(name));
				new string[128];
				format(string, 128, "[ID:{FFff00} %i{FFFFFF}] | Nombre original: {FF0000}%s{FFFFFF} | Nombre usando: {00c200}%s", i, name, NombreJugador(i));
				_Mensaje(playerid, 4, "FFFFFF", string);
			}
		}
	}
	return 1;
}

CMD:fmotor(playerid, params[]) {
    if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return _Mensaje(playerid, 0, "126", "No eres el conductor.");
    if (VehiculoGasolina[playerid] == 1) return _Mensaje(playerid, 2, "0", "Se está recargando el tanque de tu vehículo.");
    if (IsPlayerInAnyVehicle(playerid)) {
        new engine, lights, alarm, doors, bonnet, boot, objective, vehicleid = GetPlayerVehicleID(playerid);
        if (GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510) return _Mensaje(playerid, 0, "2", "No puedes usar este comando si estás en este tipo de vehiculos.");
        GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
        if (engine == VEHICLE_PARAMS_ON) {
            EncenderVehiculo(vehicleid, playerid);
        } else if ((engine == VEHICLE_PARAMS_OFF || engine == VEHICLE_PARAMS_UNSET)) {
            for (new f = 0; f < MAX_FAMILIAS; f++) {
                new v = VehiculoDeFamilia(f, vehicleid);
                if (v != -1) {
                    if (user[playerid][jMiembroFam] == f || user[playerid][jLiderFam] == f) {
                        AccionesRol(playerid, 0, "mete la llave en el contacto y lo gira para así encender el vehículo.");
                        SetTimerEx("EncenderVehiculo", 2000, 0, "dd", vehicleid, playerid);
                    } else {
                        _Mensaje(playerid, 0, "1", "No tienes las llaves de este vehiculo.");
                        return 1;
                    }
                    return 1;
                }
            }
        }
    }
    return 1;
} // Arrancar motor como admin (metido en la v.1.0.3)
CMD:adminmotor(playerid, params[]) {
    if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return _Mensaje(playerid, 0, "126", "No eres el conductor.");
    if (VehiculoGasolina[playerid] == 1) return _Mensaje(playerid, 2, "0", "Se está recargando el tanque de tu vehículo.");
    if (IsPlayerInAnyVehicle(playerid)) {
        new engine, lights, alarm, doors, bonnet, boot, objective, vehicleid = GetPlayerVehicleID(playerid);
        if (GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510) return _Mensaje(playerid, 0, "2", "No puedes usar este comando si estás en este tipo de vehiculos.");
        GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
        if (engine == VEHICLE_PARAMS_ON) {
            EncenderVehiculo(vehicleid, playerid);
        } else if ((engine == VEHICLE_PARAMS_OFF || engine == VEHICLE_PARAMS_UNSET)) {
            for (new v = 0; v < MAX_VEHICULOS; v++) {
                if (v != -1) {
                    if (user[playerid][jAdmin] >= 3 ) {
                        AccionesRol(playerid, 0, "mete la llave en el contacto y lo gira para así encender el vehículo.");
                        SetTimerEx("EncenderVehiculo", 2000, 0, "dd", vehicleid, playerid);
                    } else {
                        _Mensaje(playerid, 0, "1", "No eres administador o no tienes permisos suficientes.");
                        return 1;
                    }
                    return 1;
                }
            }
        }
    }
    return 1;
}

CMD:motor(playerid)
{
	if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return _Mensaje(playerid, 0, "126", "No eres el conductor.");
	if (pago_tune[playerid] != 0) return _Mensaje(playerid, 4, "b0b0b0", "No puedes encender el vehículo mientras tuneas el coche.");
	if (VehiculoGasolina[playerid] == 1) return _Mensaje(playerid, 4, "b0b0b0", "No puedes encender el vehículo mientras se llena el tanque.");
	new engine, lights, alarm, doors, bonnet, boot, objective, vehicleid = GetPlayerVehicleID(playerid);
	if (GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510) return _Mensaje(playerid, 0, "2", "No puedes usar este comando si estás en este tipo de vehiculos.");
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	if (engine == VEHICLE_PARAMS_ON)
	{
		EncenderVehiculo(vehicleid, playerid);
	}
	else if ((engine == VEHICLE_PARAMS_OFF || engine == VEHICLE_PARAMS_UNSET))
	{
		if (GetPVarType(playerid, "AreaVehPos")) return _Mensaje(playerid, 0, "148", "Debes apagar el estereo para encender el motor.");
		if (LSPD_Veh(vehicleid) || SASD_Veh(vehicleid) || SAN_Vehicle(vehicleid) || GOB_Vehicle(vehicleid) ||
			LSED_Vehicle(vehicleid) || Pescador_Vehicle(vehicleid) || Camionero_Vehicle(vehicleid) || Granjero_Vehicle(vehicleid))
		{
			AccionesRol(playerid, 0, "mete la llave en el contacto y lo gira para así encender el vehículo.");
			SetTimerEx("EncenderVehiculo", 2000, 0, "dd", vehicleid, playerid);
		}
		else
		{
			for (new v = 0; v < MAX_VEHICULOS; v++)
			{
				if(InfoVehiculo[v][vID] == vehicleid)
				{
					if (InfoVehiculo[v][vEnDeposito] == 1) return _Mensaje(playerid, 0, "148", "Este vehículo se encuentra embargado, paga la multa en LSPD o en el ayuntamiento.");
					if (!TieneLlavesVeh(playerid, InfoVehiculo[v][vID])) { _Mensaje(playerid, 0, "126", "No tienes las llaves de este vehículo."); return 1;}
					AccionesRol(playerid, 0, "mete la llave en el contacto y lo gira para así encender el vehículo.");
					SetTimerEx("EncenderVehiculo", 2000, 0, "dd", vehicleid, playerid);
				}
			}
			for (new e_id = 0; e_id < MAX_EMPRESAS; e_id++)
			{
                new v = veh_Empresa(e_id, vehicleid);
				if (v != -1)
				{
					if (user[playerid][jEmpresaKey] == e_id || user[playerid][jContrato] == e_id)
					{
						AccionesRol(playerid, 0, "mete la llave en el contacto y lo gira para así encender el vehículo.");
						SetTimerEx("EncenderVehiculo", 2000, 0, "dd", vehicleid, playerid);
					}
					else
					{
						_Mensaje(playerid, 0, "126", "No tienes las llaves de este vehículo.");
						return 1;
					}

				}
			}
		}
	}
	return 1;
}
funcion veh_Empresa(f, vehicleid) {
    if(vehicleid == -1) return -1;
    for(new v = 0; v < 10; v++) {
        if(InfoVehEmp[f][v][vID] == vehicleid) {
            return v;
        }
    }
    return -1;
}
CMD:luces(playerid, params[]) {
    if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return _Mensaje(playerid, 0, "126", "No eres el conductor.");
    new vehicleid = GetPlayerVehicleID(playerid);
    if (GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510) return _Mensaje(playerid, 0, "388", "No puedes usar este comando si estás en este tipo de vehiculos.");
    VehiculoLuces(vehicleid, playerid);
    return 1;
}

CMD:capo(playerid, params[]) {
    if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return _Mensaje(playerid, 0, "126", "No eres el conductor.");
    if (IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
        new vehicleid = GetPlayerVehicleID(playerid);
        if (GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510) {
            return _Mensaje(playerid, 0, "388", "No puedes usar este comando si estás en este tipo de vehiculos.");
        }
        VehiculoCapo(vehicleid, playerid);
    } else if (!IsPlayerInAnyVehicle(playerid)) {
        new closestcar = DetectarCerrado(playerid);
        if (CercaDelVehiculo(playerid, closestcar, 5.0)) {
            if (GetVehicleModel(closestcar) == 481 || GetVehicleModel(closestcar) == 509 || GetVehicleModel(closestcar) == 510) {
                return _Mensaje(playerid, 0, "388", "No puedes usar este comando si estás en este tipo de vehiculos.");
            }
            VehiculoCapo(closestcar, playerid);
        }
    }
    return 1;
}

CMD:estadocoche(playerid, params[]) {
    if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return _Mensaje(playerid, 0, "126", "No eres el conductor.");
    if (IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
        new vehicleid = GetPlayerVehicleID(playerid);
        new engine, lights, alarm, doors, bonnet, boot, objective, enginestatus[15], lightstatus[15], string[128];
        GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
        if (GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510) return _Mensaje(playerid, 0, "657", "Este vehiculo no necesita gasolina.");
        if (engine != VEHICLE_PARAMS_ON) format(enginestatus, sizeof(enginestatus), "Apagado");
        else format(enginestatus, sizeof(enginestatus), "Prendido");
        if (lights != VEHICLE_PARAMS_ON) format(lightstatus, sizeof(lightstatus), "Apagadas");
        else format(lightstatus, sizeof(lightstatus), "Prendidas");
        format(string, sizeof(string), "Motor: %s | Luces: %s | Gasolina: %d", enginestatus, lightstatus, GasolinaInicialVeh[vehicleid]);
        _Mensaje(playerid, 2, "0", string);
    }
    return 1;
}

CMD:miranda(playerid)
{
    if (!Es_Faccion(playerid, 1)) return _Mensaje(playerid, 0, "1", "No eres de la defensa.");
	new string[128];
	format(string, sizeof(string), "%s dice: Tienes derecho a guardar silencio, todo lo que diga puede usarse en su contra.", NombreJugador(playerid));
	ProxDetector(30.0, playerid, string, C_FADE1, C_FADE2, C_FADE3, C_FADE4, C_FADE5);
	format(string, sizeof(string), "%s dice: ¿De acuerdo señor?", NombreJugador(playerid));
	ProxDetector(30.0, playerid, string, C_FADE1, C_FADE2, C_FADE3, C_FADE4, C_FADE5);
	return 1;
}

CMD:remolcar(playerid)
{
	if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new Float: vX, Float: vY, Float: vZ, Found = 0, vid = 0, idcar = GetPlayerVehicleID(playerid);
		if (GetVehicleModel(idcar) != 525) return _Mensaje(playerid, 0, "355", "No estás dentro de una grúa.");
		new Float: pX, Float: pY, Float: pZ;
		GetPlayerPos(playerid, pX, pY, pZ);
		while ((vid < MAX_VEHICLES) && (!Found))
		{
			vid++;
			GetVehiclePos(vid, vX, vY, vZ);
			if ((floatabs(pX - vX) < 7.0) && (floatabs(pY - vY) < 7.0) && (floatabs(pZ - vZ) < 7.0) && (vid != GetPlayerVehicleID(playerid)))
			{
				Found = 1;
				if (IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
				{
					DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
				}
				else
				{
					AttachTrailerToVehicle(vid, GetPlayerVehicleID(playerid));
				}
			}
		}
		if (!Found) { _Mensaje(playerid, 0, "354", "No hay ningún vehículo cerca!"); }
	}
	return 1;
}

CMD:bar(playerid)
{
	if (Es_Faccion(playerid, 1, 5))
	{
		if (GetPVarInt(playerid, "TT_BAR") > 0) return _Mensaje(playerid, 0, "362", "Estás editando un objeto de trafico.");
		if (IsPlayerInAnyVehicle(playerid)) { return _Mensaje(playerid, 0, "362", "Tienes que estar en el piso para usar este comando"); }
		new t_objetos[19];  t_objetos[0] = 1238;
		t_objetos[1] = 1237; t_objetos[2] = 1282; t_objetos[3] = 1422;
		t_objetos[4] = 1423; t_objetos[5] = 1424; t_objetos[6] = 1425;
		t_objetos[7] = 1949; t_objetos[8] = 3091; t_objetos[9] = 981;
		t_objetos[10] = 1459; t_objetos[11] = 19834; t_objetos[12] = 19868;
		t_objetos[13] = 19869; t_objetos[14] = 978; t_objetos[15] = 3265; t_objetos[16] = 1437;
		if(Es_Faccion(playerid, 1)) ShowModelSelectionMenuEx(playerid, t_objetos, 17, "Objetos de trafico", D_OBJETOS_TRAFICO);
		else
		{
		    t_objetos[17] = 932;
		    t_objetos[18] = 1997;
		    ShowModelSelectionMenuEx(playerid, t_objetos, 19, "Objetos de trafico", D_OBJETOS_TRAFICO);
		}
	} else _Mensaje(playerid, 0, "165", "No formas parte de la Ley.");
	return 1;
}
CMD:qb(playerid)
{
	if (Es_Faccion(playerid, 1, 5))
	{
		if (GetPVarInt(playerid, "TT_BAR") > 0) return _Mensaje(playerid, 0, "362", "Estás editando un objeto de trafico.");
		if (IsPlayerInAnyVehicle(playerid)) { return _Mensaje(playerid, 0, "362", "Tienes que estar en el piso para usar este comando"); }
		for (new bar = 0; bar < MAX_BARRERAS; bar++)
		{
			if (_enPos(playerid, 5.0, InfoBar[bar][bPosX], InfoBar[bar][bPosY], InfoBar[bar][bPosZ]))
			{
				DestroyDynamicObject(InfoBar[bar][bObjeto]);
				InfoBar[bar][bPosX] = 0;
				InfoBar[bar][bPosY] = 0;
				InfoBar[bar][bPosZ] = 0;
				InfoBar[bar][bObjeto] = 0;
				DeletePVar(playerid, "TT_BAR");
				return 1;
			}
		}
	} else _Mensaje(playerid, 0, "165", "No formas parte de la Ley.");
	return 1;
}
CMD:qbs(playerid)
{
	if (Es_Faccion(playerid, 1, 6))
	{
		for (new bar = 0; bar < MAX_BARRERAS; bar++)
		{
			if (InfoBar[bar][bPosX] != 0)
			{
				new string[128 + MAX_PLAYER_NAME + MAX_ZONE_NAME];
				DestroyDynamicObject(InfoBar[bar][bObjeto]);
				InfoBar[bar][bPosX] = 0;
				InfoBar[bar][bPosY] = 0;
				InfoBar[bar][bPosZ] = 0;
				InfoBar[bar][bObjeto] = 0;
				format(string, sizeof(string), "Objeto ID: %d borrado.", bar);
				_Mensaje(playerid, 2, "0", string);
				return 1;
			}
		}
	} else _Mensaje(playerid, 0, "165", "No formas parte de la Ley.");
	return 1;
}
CMD:pinchos(playerid)
{
	if (Es_Faccion(playerid, 1))
	{
		if (user[playerid][jDivision] == 0 || user[playerid][jDivision] == 3) return _Mensaje(playerid, 0, "229", "No eres de la división PD o SD.");
		_Mensaje(playerid, 4, "33CCFF", "Pinchos actuales:");
		for (new i, string[128 + MAX_PLAYER_NAME]; i < sizeof(SpikeStrips); i++)
		{
			if (SpikeStrips[i][sX] != 0)
			{
				format(string, sizeof(string), "Pincho ID: %d | Localización: %s", i, SpikeStrips[i][sDeployedAt]);
				_Mensaje(playerid, 4, "8D8DFF", string);
			}
		}
	} else _Mensaje(playerid, 0, "165", "No formas parte de la Ley.");
	return 1;
}
CMD:spinchos(playerid)
{
	if (Es_Faccion(playerid, 1))
	{
		if (user[playerid][jDivision] == 0 || user[playerid][jDivision] == 3) return _Mensaje(playerid, 0, "229", "No eres de la división PD o SD.");
		if (user[playerid][jRango] < 2) return _Mensaje(playerid, 0, "124", "No eres rango 2 o superior.");
		for (new i; i < sizeof(SpikeStrips); i++)
		{
			if (SpikeStrips[i][sX] == 0)
			{
				new Float: f_TempAngle, string[128];
				GetPlayerPos(playerid, SpikeStrips[i][sX], SpikeStrips[i][sY], SpikeStrips[i][sZ]);
				GetPlayerFacingAngle(playerid, f_TempAngle);
				SpikeStrips[i][sObjectID] = CreateDynamicObject(2899, SpikeStrips[i][sX], SpikeStrips[i][sY], SpikeStrips[i][sZ] - 0.8, 0.0, 0.0, f_TempAngle);
				GetPlayer3DZone(playerid, SpikeStrips[i][sDeployedAt], MAX_ZONE_NAME);
				format(string, sizeof string, "%s usó el comando /spinchos, para colocar uno cerca de él.", NombreRJugador(playerid));
				MensajeFaccion(1, 0x77c7ffFF, string, user[playerid][jDivision]);
				Log("Registros/Pinchos.log", string);
				return 1;
			}
		}
		_Mensaje(playerid, 0, "366", "No es posible generar más spikes, límite es de 10.");
	} else _Mensaje(playerid, 0, "165", "No formas parte de la Ley.");
	return 1;
}
CMD:qpinchos(playerid)
{
	if (Es_Faccion(playerid, 1))
	{
		if (user[playerid][jDivision] == 0 || user[playerid][jDivision] == 3) return _Mensaje(playerid, 0, "229", "No eres de la división PD o SD.");
		if (user[playerid][jRango] < 2) return _Mensaje(playerid, 0, "124", "No eres rango 2 o superior.");
		for (new id; id < sizeof(SpikeStrips); id++)
		{
			if (SpikeStrips[id][sX] != 0)
			{
				new string[128 + MAX_PLAYER_NAME + MAX_ZONE_NAME];
				DestroyDynamicObject(SpikeStrips[id][sObjectID]);
				SpikeStrips[id][sX] = 0;
				SpikeStrips[id][sY] = 0;
				SpikeStrips[id][sZ] = 0;
				SpikeStrips[id][sObjectID] = 0;
				format(string, sizeof(string), "Pincho ID: %d borrado.", id);
				_Mensaje(playerid, 2, "0", string);
				format(string, sizeof string, "* %s usó el comando /qpinchos, el cual elimino todos los pinchos.", NombreRJugador(playerid));
				MensajeFaccion(1, 0x77c7ffFF, string, user[playerid][jDivision]);
				Log("Registros/Pinchos.log", string);
				return 1;
			}
		}
	} else _Mensaje(playerid, 0, "165", "No formas parte de la Ley.");
	return 1;
}

CMD:irmedico(playerid)
{
	new string[256];
	if (Es_Faccion(playerid, 5))
	{
		if (_Medic2Call[playerid] > 0) return _Mensaje(playerid, 0, "678", "Ya aceptaste un llamado de médico.");
		if (_MedicAcept[playerid] != 999) { _Mensaje(playerid, 0, "0", "Te encuentras en un llamado, si es error escribe /eliminarcp."); return 1; }
		if (_MedicCall < 999) {
			if (IsPlayerConnectedEx(_MedicCall))
			{
				format(string, sizeof(string), "* Médico %s aceptó tu llamada espera en tu actual posición.", NombreJugador(playerid));
				_Mensaje(_MedicCall, 4, "33CCFF", string);
				format(string, sizeof(string), "** %s aceptó la llamada reciente de %s (Médico).", NombreJugador(playerid), NombreJugador(_MedicCall));
				MensajeFaccion(5, C_ROJO, string);
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(_MedicCall, X, Y, Z);
				GameTextForPlayer(playerid, "~n~~r~CheckPoint.", 5000, 1);
				SetPlayerCheckpoint(playerid, X, Y, Z, 5);
				SetPVarInt(playerid, "EnCheckPoint", 2);
				new zone[MAX_ZONE_NAME];
				GetPlayer3DZone(_MedicCall, zone, sizeof(zone));
				format(string, sizeof(string), "%s fue localizado en %s.", NombreJugador(_MedicCall), zone);
				_Mensaje(playerid, 4, "ffffff", string);
				_Medic2Call[playerid] = 1;
				_MedicAcept[playerid] = _MedicCall;
				_MedicCall = 999;
				return 1;
			}
		} else return _Mensaje(playerid, 0, "727", "Nadie ha solicitado un médico.");
	} else return _Mensaje(playerid, 0, "704", "No formas parte del cuerpo de médicos.");
	return 1;
}
CMD:irbombero(playerid)
{
	new string[256];
	if (Es_Faccion(playerid, 5))
	{
		if (_Bomb2Call[playerid] > 0) return _Mensaje(playerid, 0, "678", "Ya aceptaste un llamado de bombero.");
		if (_BombAcept[playerid] != 999) { _Mensaje(playerid, 0, "0", "Te encuentras en un llamado, si es error escribe /eliminarcp."); return 1; }
		if (_BombCall < 999)
		{
			if (IsPlayerConnectedEx(_BombCall))
			{
				format(string, sizeof(string), "* Bombero %s aceptó tu llamada espera en tu actual posición.", NombreJugador(playerid));
				_Mensaje(_BombCall, 4, "33CCFF", string);
				format(string, sizeof(string), "** %s aceptó la llamada reciente de %s (Bombero).", NombreJugador(playerid), NombreJugador(_BombCall));
				MensajeFaccion(5, C_ROJO, string);
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(_BombCall, X, Y, Z);
				GameTextForPlayer(playerid, "~n~~r~CheckPoint.", 5000, 1);
				SetPlayerCheckpoint(playerid, X, Y, Z, 5);
				SetPVarInt(playerid, "EnCheckPoint", 2);
				new zone[MAX_ZONE_NAME];
				GetPlayer3DZone(_BombCall, zone, sizeof(zone));
				format(string, sizeof(string), "%s fue localizado en %s.", NombreJugador(_BombCall), zone);
				_Mensaje(playerid, 4, "ffffff", string);
				_Bomb2Call[playerid] = 1;
				_BombAcept[playerid] = _BombCall;
				_BombCall = 999;
				return 1;
			}
		} else return _Mensaje(playerid, 0, "727", "Nadie ha solicitado un bombero.");
	} else return _Mensaje(playerid, 0, "704", "No formas parte del cuerpo de bomberos.");
	return 1;
}
CMD:cancelar(playerid)
{
	new string[256];
	if (id_tune[playerid] != -1)
	{
		new _txt[128];
		format(_txt, sizeof(_txt), " %s rechaza tu solitud.", NombreJugador(playerid));
		if (IsPlayerConnected(id_tune[playerid])) _Mensaje(id_tune[playerid], 4, "b00000", _txt);

		e_tune[playerid] = -1;
		veh_tune[playerid] = 0;
		id_tune[playerid] = -1;
	    return 1;
	}
	if (alcoholemia[playerid] != 999)
	{
		new _txt[128];
		format(_txt, sizeof(_txt), " %s rechaza tu solitud.", NombreJugador(playerid));
		if (IsPlayerConnected(alcoholemia[playerid])) _Mensaje(alcoholemia[playerid], 4, "b00000", _txt);

		alcoholemia[playerid] = 999;
		return 1;
	}
	if (_Vehdueno[playerid] != 999)
	{
		if (IsPlayerConnected(_Vehdueno[playerid])) _Mensaje(_Vehdueno[playerid], 4, "ADC3E7", "Cancelaron la oferta de tu vehículo.");
		_Vehdueno[playerid] = 999;
		_Vehprecio[playerid] = 0;
		_VehID[playerid] = 0;
		_Mensaje(playerid, 4, "ADC3E7", "Cancelaste la oferta del vehículo.");
		return 1;
	}
	if(PrestadorCoche[playerid] != -1)
	{
		PrestadorCoche[playerid] = -1;
		LlavePrestada[playerid] = -1;
		_Mensaje(playerid, 4, "ADC3E7", "Cancelaste las llaves prestadas.");
		return 1;
	}
	if (CasaOffer[playerid] != 999)
	{
		if (IsPlayerConnected(CasaOffer[playerid])) _Mensaje(CasaOffer[playerid], 4, "ADC3E7", "Cancelaron la oferta de tu casa.");
		CasaOffer[playerid] = 999;
		CasaPrice[playerid] = 0;
		_Mensaje(playerid, 4, "ADC3E7", "Cancelaste la oferta de la casa.");
		return 1;
	}
	if (NegocioOffer[playerid] != 999)
	{
		if (IsPlayerConnected(NegocioOffer[playerid])) _Mensaje(NegocioOffer[playerid], 4, "ADC3E7", "Cancelaron la oferta de tu negocio.");
		NegocioOffer[playerid] = 999;
		NegocioPrice[playerid] = 0;
		_Mensaje(playerid, 4, "ADC3E7", "Cancelaste la oferta del negocio.");
		return 1;
	}
	if (_Entrevista[playerid] != 999)
	{
		_Entrevista[playerid] = 999;
		_Mensaje(playerid, 4, "ADC3E7", "Cancelaste la invitación para una entrevista.");
		return 1;
	}
	if (MultaOfrecer[playerid] != 999)
	{
		AccionesRol(playerid, 0, "tomó el papel de facturación de la multa y la tiró.");
		format(string, sizeof(string), "%s canceló el pago de una multa de %d$.", NombreJugador(playerid), MultaPrecio[playerid]);
		if (IsPlayerConnected(MultaOfrecer[playerid])) _Mensaje(MultaOfrecer[playerid], 4, "33CCFF", string);
		MultaOfrecer[playerid] = 999;
		MultaPrecio[playerid] = 0;
		FacturaMulta[playerid] = 0;
		return 1;
	}
	_Mensaje(playerid, 4, "b0b0b0", "Nadie te ha ofrecido algo.");
	return 1;
}
CMD:aceptar(playerid)
{
	new string[256];
	if (m_operacion[playerid][3] != -1)
	{
	    new playerid2 = m_operacion[playerid][3], e_id = m_operacion[playerid][2];
	    if (m_operacion[playerid][0] == 1)
	    {
			if (ComprobarDineroJ(playerid) < 300)
			{
				_Mensaje(playerid, 4, "b0b0b0", "No tienes los 300$ dólares para pagar la reparación.");
				_Mensaje(playerid2, 4, "b0b0b0", "El jugador no posee la cantidad a pagar.");
				m_operacion[playerid][0] = 0;
				m_operacion[playerid][1] = 0;
				m_operacion[playerid][2] = -1;
				m_operacion[playerid][3] = -1;
				return 1;
			}
			new VehID = GetPlayerVehicleID(playerid);

			new panels, doors, lights, tires;
			GetVehicleDamageStatus(VehID, panels, doors, lights, tires);
			RepairVehicle(VehID);
			UpdateVehicleDamageStatus(VehID, panels, doors, lights, tires);
			SetVehicleHealth(VehID, 1000);
			new MsgCheckMe[MAX_TEXT_CHAT];
			format(MsgCheckMe, sizeof(MsgCheckMe), "repara el motor del %s.", NombreVehiculo(VehID));
			AccionesRol(playerid2, 0, MsgCheckMe);
			DarDineroGC(playerid, -300);
			i_Empresa[e_id][eDinero] += 180;
			DarDineroGC(playerid2, 120);
			save_Empresa(e_id);
			m_operacion[playerid][0] = 0;
			m_operacion[playerid][1] = 0;
			m_operacion[playerid][2] = -1;
			m_operacion[playerid][3] = -1;
			return 1;
		}
		else if (m_operacion[playerid][0] == 2)
	    {
			new vehiculo = GetPlayerVehicleID(playerid);

			if (LSPD_Veh(vehiculo) || SASD_Veh(vehiculo) || SAN_Vehicle(vehiculo) || GOB_Vehicle(vehiculo) || LSED_Vehicle(vehiculo))
			{
				_Mensaje(playerid, 0, "357", "No pueden pintar vehículos facciones.");
				_Mensaje(playerid2, 0, "357", "No puedes pintar vehículos facciones.");
				m_operacion[playerid][0] = 0;
				m_operacion[playerid][1] = 0;
				m_operacion[playerid][2] = -1;
				m_operacion[playerid][3] = -1;
				return 1;
			}
			for(new v = 0; v < MAX_VEHICULOS; v++)
			{
				if(InfoVehiculo[v][vID] == vehiculo)
				{
					DarDineroGC(playerid, -35);
					i_Empresa[e_id][eDinero] += 22;
					DarDineroGC(playerid2, 13);
					save_Empresa(e_id);

					InfoVehiculo[v][vPaintJob] = m_operacion[playerid][4];
					ChangeVehiclePaintjob(vehiculo, m_operacion[playerid][4]);
					_Mensaje(playerid2, 4, "ADC3E7", "Cambiaste el paintjob del vehiculo.");
					_Mensaje(playerid, 4, "ADC3E7", "Cambiaron el paintjob del vehiculo.");
					ActualizarVehiculo(v);
					m_operacion[playerid][0] = 0;
					m_operacion[playerid][1] = 0;
					m_operacion[playerid][2] = -1;
					m_operacion[playerid][3] = -1;
				}
			}
			_Mensaje(playerid, 0, "357", "No pueden pintar ese vehículo.");
			_Mensaje(playerid2, 0, "357", "No puedes pintar ese vehículo.");
			m_operacion[playerid][0] = 0;
			m_operacion[playerid][1] = 0;
			m_operacion[playerid][2] = -1;
			m_operacion[playerid][3] = -1;
			return 1;
		}
		else if (m_operacion[playerid][0] == 3)
	    {
	    	new vehiculo = GetPlayerVehicleID(playerid);

			if (LSPD_Veh(vehiculo) || SASD_Veh(vehiculo) || SAN_Vehicle(vehiculo) || GOB_Vehicle(vehiculo) || LSED_Vehicle(vehiculo))
			{
				_Mensaje(playerid, 0, "357", "No pueden pintar vehículos facciones.");
				_Mensaje(playerid2, 0, "357", "No puedes pintar vehículos facciones.");
				m_operacion[playerid][0] = 0;
				m_operacion[playerid][1] = 0;
				m_operacion[playerid][2] = -1;
				m_operacion[playerid][3] = -1;
				return 1;
			}
			for(new v = 0; v < MAX_VEHICULOS; v++)
			{
				if(InfoVehiculo[v][vID] == vehiculo)
				{
					DarDineroGC(playerid, -32);
					i_Empresa[e_id][eDinero] += 20;
					DarDineroGC(playerid2, 12);
					save_Empresa(e_id);

					InfoVehiculo[v][vColor_1] = m_operacion[playerid][4],
					InfoVehiculo[v][vColor_2] = m_operacion[playerid][5];
					format(string, sizeof(string), "Cambiaste el color del vehiculo. [%d - %d]", m_operacion[playerid][4], m_operacion[playerid][5]);
					_Mensaje(playerid2, 4, "ADC3E7", string);
					format(string, sizeof(string), "Cambiaron el color del vehiculo. [%d - %d]", m_operacion[playerid][4], m_operacion[playerid][5]);
					_Mensaje(playerid, 4, "ADC3E7", string);
					ChangeVehicleColor(vehiculo, m_operacion[playerid][4], m_operacion[playerid][5]);
					ActualizarVehiculo(v);
					m_operacion[playerid][0] = 0;
					m_operacion[playerid][1] = 0;
					m_operacion[playerid][2] = -1;
					m_operacion[playerid][3] = -1;
					return 1;
				}
			}
			_Mensaje(playerid, 0, "357", "No pueden pintar ese vehículo.");
			_Mensaje(playerid2, 0, "357", "No puedes pintar ese vehículo.");
			m_operacion[playerid][0] = 0;
			m_operacion[playerid][1] = 0;
			m_operacion[playerid][2] = -1;
			m_operacion[playerid][3] = -1;
			return 1;
		}
		else if (m_operacion[playerid][0] == 4)
	    {
			if (ComprobarDineroJ(playerid) < 50)
			{
				_Mensaje(playerid, 4, "b0b0b0", "No tienes los 50$ dólares para pagar las ruedas.");
				_Mensaje(playerid2, 4, "b0b0b0", "El jugador no posee la cantidad a pagar.");
				m_operacion[playerid][0] = 0;
				m_operacion[playerid][1] = 0;
				m_operacion[playerid][2] = -1;
				m_operacion[playerid][3] = -1;
				return 1;
			}
			new idcar = GetPlayerVehicleID(playerid);

			new panels, doors, lights, tires;
			GetVehicleDamageStatus(idcar, panels, doors, lights, tires);
			tires = encode_tires(0, 0, 0, 0);
			UpdateVehicleDamageStatus(idcar, panels, doors, lights, tires);

			new MsgCheckMe[MAX_TEXT_CHAT];
			format(MsgCheckMe, sizeof(MsgCheckMe), "coloca nuevas llantas al %s.", NombreVehiculo(idcar));
			AccionesRol(playerid2, 0, MsgCheckMe);
			DarDineroGC(playerid, -50);
			i_Empresa[e_id][eDinero] += 32;
			DarDineroGC(playerid2, 18);
			save_Empresa(e_id);
			m_operacion[playerid][0] = 0;
			m_operacion[playerid][1] = 0;
			m_operacion[playerid][2] = -1;
			m_operacion[playerid][3] = -1;
			return 1;
		}
		else if (m_operacion[playerid][0] == 5)
	    {
			if (ComprobarDineroJ(playerid) < 350)
			{
				_Mensaje(playerid, 4, "b0b0b0", "No tienes los 350$ dólares para pagar la carrocería.");
				_Mensaje(playerid2, 4, "b0b0b0", "El jugador no posee la cantidad a pagar.");
				m_operacion[playerid][0] = 0;
				m_operacion[playerid][1] = 0;
				m_operacion[playerid][2] = -1;
				m_operacion[playerid][3] = -1;
				return 1;
			}
			new idcar = GetPlayerVehicleID(playerid);

			new Float: cvida;
			GetVehicleHealth(idcar, cvida);
			new panels, doors, lights, tires, tires2;
			GetVehicleDamageStatus(idcar, panels, doors, lights, tires);
			RepairVehicle(idcar);
			SetVehicleHealth(idcar, cvida);
			GetVehicleDamageStatus(idcar, panels, doors, lights, tires2);
			if(tires != 0)
			{
				tires = encode_tires(1, 1, 1, 1);
				UpdateVehicleDamageStatus(idcar, panels, doors, lights, tires);
			}
			new MsgCheckMe[MAX_TEXT_CHAT];
			format(MsgCheckMe, sizeof(MsgCheckMe), "repara la carrocería del %s.", NombreVehiculo(idcar));
			AccionesRol(playerid2, 0, MsgCheckMe);
			DarDineroGC(playerid, -350);
			i_Empresa[e_id][eDinero] += 220;
			DarDineroGC(playerid2, 130);
			save_Empresa(e_id);
			m_operacion[playerid][0] = 0;
			m_operacion[playerid][1] = 0;
			m_operacion[playerid][2] = -1;
			m_operacion[playerid][3] = -1;
			return 1;
		}
		else if (m_operacion[playerid][0] == 6)
	    {
			if (ComprobarDineroJ(playerid) < 100)
			{
				_Mensaje(playerid, 4, "b0b0b0", "No tienes los 100$ dólares para pagar la gasolina.");
				_Mensaje(playerid2, 4, "b0b0b0", "El jugador no posee la cantidad a pagar.");
				m_operacion[playerid][0] = 0;
				m_operacion[playerid][1] = 0;
				m_operacion[playerid][2] = -1;
				m_operacion[playerid][3] = -1;
				return 1;
			}
			new idcar = GetPlayerVehicleID(playerid);

			GasolinaInicialVeh[idcar] = 300;

			new MsgCheckMe[MAX_TEXT_CHAT];
			format(MsgCheckMe, sizeof(MsgCheckMe), "llena el tanque de gasolina del %s.", NombreVehiculo(idcar));
			AccionesRol(playerid2, 0, MsgCheckMe);
			DarDineroGC(playerid, -100);
			i_Empresa[e_id][eDinero] += 68;
			DarDineroGC(playerid2, 32);
			save_Empresa(e_id);
			m_operacion[playerid][0] = 0;
			m_operacion[playerid][1] = 0;
			m_operacion[playerid][2] = -1;
			m_operacion[playerid][3] = -1;
			return 1;
		}
	}
	if (id_tune[playerid] != -1)
	{
		if (!IsPlayerConnected(id_tune[playerid])) { id_tune[playerid] = -1; veh_tune[playerid] = 0; e_tune[playerid] = -1; _Mensaje(playerid, 4, "b0b0b0", "El jugador que te ofreció algo no está conectado."); return 1; }
		if (!IsPlayerInAnyVehicle(playerid)) { _Mensaje(playerid, 4, "b0b0b0", "Se cancelo todo ya que no estás en algún vehículo."); return _Mensaje(id_tune[playerid], 0, "130", "Ese jugador no está en ningún vehículo."); }
		new iVeh = GetPlayerVehicleID(playerid);
		if (LSPD_Veh(iVeh) || SASD_Veh(iVeh) || SAN_Vehicle(iVeh) || GOB_Vehicle(iVeh) || LSED_Vehicle(iVeh) || Granjero_Vehicle(iVeh) || Camionero_Vehicle(iVeh) || Pescador_Vehicle(iVeh))
		{
			e_tune[playerid] = -1;
			veh_tune[playerid] = 0;
			id_tune[playerid] = -1;
			_Mensaje(playerid, 0, "357", "No puedes tunear vehículos de facciones y trabajos.");
			return 1;
		}
		new engine, lights, alarm, doors, bonnet, boot, objective;
		GetVehicleParamsEx(iVeh, engine, lights, alarm, doors, bonnet, boot, objective);
		if (engine == VEHICLE_PARAMS_ON)
		{
			EncenderVehiculo(iVeh, playerid);
		}
		VehSeguro[iVeh] = 1;
		veh_tune[playerid] = iVeh;
		Menu_Tuneo(playerid);
		return 1;
	}
	if (MultaOfrecer[playerid] != 999)
	{
		if (!IsPlayerConnected(MultaOfrecer[playerid])) { MultaOfrecer[playerid] = 999; _Mensaje(playerid, 4, "b0b0b0", "El jugador que te ofreció algo no está conectado."); return 1; }
		format(string, sizeof(string), "* %s pagaste la multa de %d$.", NombreJugador(playerid), MultaPrecio[playerid]);
		_Mensaje(MultaOfrecer[playerid], 4, "33CCFF", string);
		format(string, sizeof(string), "pagó una multa de $%d al oficial.", MultaPrecio[playerid]);
		AccionesRol(playerid, 0, string);
		user[playerid][jBanco] -= MultaPrecio[playerid];
		DineroEstado += MultaPrecio[playerid];
		MultaOfrecer[playerid] = 999;
		MultaPrecio[playerid] = 0;
		FacturaMulta[playerid] = 0;
		return 1;
	}
	if (alcoholemia[playerid] != 999)
	{
		if (!IsPlayerConnected(alcoholemia[playerid])) { alcoholemia[playerid] = 999; _Mensaje(playerid, 4, "b0b0b0", "El jugador que te ofreció algo no está conectado."); return 1; }
		new _txt[128];
		AccionesRol(playerid, 0, "sopla el objeto del control de alcoholemia.");
		format(_txt, sizeof(_txt), " Nivel de alcohol (%s): {b00000}%d{b0b0b0}.", NombreJugador(playerid), user[playerid][jAlcohol]);
		_Mensaje(alcoholemia[playerid], 4, "b0b0b0", _txt);

		alcoholemia[playerid] = 999;
		return 1;
	}
	if (Saludo_ID[playerid] != 999)
	{
		if (!IsPlayerConnected(Saludo_ID[playerid])) { Saludo_ID[playerid] = 999; _Mensaje(playerid, 4, "b0b0b0", "El jugador que te ofreció algo no está conectado."); return 1; }
		new MsgCheckMe[MAX_TEXT_CHAT];
		format(MsgCheckMe, sizeof(MsgCheckMe), "acepta el saludo de %s.", NombreJugador(Saludo_ID[playerid]));
		AccionesRol(playerid, 0, MsgCheckMe);
		ApplyAnimation(playerid, "GANGS", "hndshkfa_swt", 4.1, 0, 0, 0, 0, 0, 1);
		ApplyAnimation(Saludo_ID[playerid], "GANGS", "hndshkfa_swt", 4.1, 0, 0, 0, 0, 0, 1);
		Saludo_ID[playerid] = 999;
		return 1;
	}
	if (CasaOffer[playerid] != 999)
	{
		if (!IsPlayerConnected(CasaOffer[playerid])) { CasaOffer[playerid] = 999; _Mensaje(playerid, 4, "b0b0b0", "El jugador que te ofreció algo no está conectado."); return 1; }
		if (ComprobarDineroJ(playerid) > CasaPrice[playerid])
		{
			if (user[playerid][jCasaKey] != INVALID_CASA_ID) return _Mensaje(playerid, 0, "578", "Ya posees una Casa.");
			if (!CercaDelWeon(8.0, CasaOffer[playerid], playerid)) return _Mensaje(playerid, 0, "321", "No estás cerca del que te va a vender la casa.");
			new casaid = user[CasaOffer[playerid]][jCasaKey];
			if(!strcmp(user[playerid][jIP], user[CasaOffer[playerid]][jIP], false) && user[playerid][jMulticuenta] == 0 && user[CasaOffer[playerid]][jMulticuenta] == 0)
			{
				new ipc[32], stringlog[180]; GetPlayerIp(playerid, ipc, 32);
				format(stringlog, sizeof(stringlog), "[Atención]{FFFFFF} %s pagó $%d a %s por su casa, posibles multicuentas [IP: %s]", NombreRJugador(playerid), CasaPrice[playerid], NombreRJugador(CasaOffer[playerid]), ipc);
				MensajeAdmin(stringlog);
				format(stringlog, sizeof(stringlog), "Registros: %s pagó $%d a %s por su casa. [IP: %s]", NombreRJugador(playerid), CasaPrice[playerid], NombreRJugador(CasaOffer[playerid]), ipc);
				Log("Registros/multicuentas.log", stringlog);
			}
			else
			{
				format(string, sizeof(string), "Registros: %s pagó $%d a %s por su casa.", NombreRJugador(playerid), CasaPrice[playerid], NombreRJugador(CasaOffer[playerid]));
				Log("Registros/VenderCasa.log", string);
			}
			format(string, sizeof(string), "* Has pagado por una casa $%d, de %s. (Usa /ayuda casa para más información)", CasaPrice[playerid], NombreJugador(CasaOffer[playerid]));
			_Mensaje(playerid, 4, "33CCFF", string);
			format(string, sizeof(string), "* Vendiste tu casa a %s por $%d.", NombreJugador(playerid), CasaPrice[playerid]);
			_Mensaje(CasaOffer[playerid], 4, "33CCFF", string);
			DarDineroGC(CasaOffer[playerid], CasaPrice[playerid]);
			DarDineroGC(playerid, -CasaPrice[playerid]);
			user[playerid][jCasaKey] = user[CasaOffer[playerid]][jCasaKey];
			user[CasaOffer[playerid]][jCasaKey] = INVALID_CASA_ID;
			InfoCasa[casaid][cComprado] = 1;
			strmid(InfoCasa[casaid][cComprador], NombreJugador(playerid), 0, strlen(NombreJugador(playerid)), 255);
			ActualizarCasa(casaid);
			GuardarCuenta(playerid);
			GuardarCuenta(CasaOffer[playerid]);
			CasaOffer[playerid] = 999;
			CasaPrice[playerid] = 0;
			return 1;
		} else return _Mensaje(playerid, 0, "328", "No puedes pagar esta casa.");
	}
	if (NegocioOffer[playerid] != 999)
	{
		if (!IsPlayerConnected(NegocioOffer[playerid])) { NegocioOffer[playerid] = 999; _Mensaje(playerid, 4, "b0b0b0", "El jugador que te ofreció algo no está conectado."); return 1; }
		if (ComprobarDineroJ(playerid) > NegocioPrice[playerid])
		{
			if (user[playerid][jNegocioKey] != INVALID_NEGOCIO_ID) return _Mensaje(playerid, 0, "578", "Ya posees un negocio.");
			if (!CercaDelWeon(8.0, NegocioOffer[playerid], playerid)) return _Mensaje(playerid, 0, "321", "No estás cerca del que te va a vender el negocio.");
			new negid = user[NegocioOffer[playerid]][jNegocioKey];
			if(!strcmp(user[playerid][jIP], user[NegocioOffer[playerid]][jIP], false) && user[playerid][jMulticuenta] == 0 && user[NegocioOffer[playerid]][jMulticuenta] == 0)
			{
				new ipc[32], stringlog[180]; GetPlayerIp(playerid, ipc, 32);
				format(stringlog, sizeof(stringlog), "[Atención]{FFFFFF} %s pagó $%d a %s por su negocio, posibles multicuentas [IP: %s]", NombreRJugador(playerid), NegocioPrice[playerid], NombreRJugador(NegocioOffer[playerid]), ipc);
				MensajeAdmin(stringlog);
				format(stringlog, sizeof(stringlog), "Registros: %s pagó $%d a %s por su negocio. [IP: %s]", NombreRJugador(playerid), NegocioPrice[playerid], NombreRJugador(NegocioOffer[playerid]), ipc);
				Log("Registros/multicuentas.log", stringlog);
			}
			else
			{
				format(string, sizeof(string), "Registros: %s pagó $%d a %s por su negocio.", NombreRJugador(playerid), NegocioPrice[playerid], NombreRJugador(NegocioOffer[playerid]));
				Log("Registros/VenderNegocio.log", string);
	 		}
			format(string, sizeof(string), "* Has pagado por un negocio $%d, de %s. (Usa /ayuda negocio para más información)", NegocioPrice[playerid], NombreJugador(NegocioOffer[playerid]));
			_Mensaje(playerid, 4, "33CCFF", string);
			format(string, sizeof(string), "* Vendiste tu negocio a %s por $%d.", NombreJugador(playerid), NegocioPrice[playerid]);
			_Mensaje(NegocioOffer[playerid], 4, "33CCFF", string);
			DarDineroGC(NegocioOffer[playerid], NegocioPrice[playerid]);
			DarDineroGC(playerid, -NegocioPrice[playerid]);
			user[playerid][jNegocioKey] = user[NegocioOffer[playerid]][jNegocioKey];
			user[NegocioOffer[playerid]][jNegocioKey] = INVALID_NEGOCIO_ID;
			strmid(i_Negocio[negid][nDueno], NombreJugador(playerid), 0, strlen(NombreJugador(playerid)), 255);
			save_Negocio(negid);
			GuardarCuenta(playerid);
			GuardarCuenta(NegocioOffer[playerid]);
			_NegocioP(negid);
			NegocioOffer[playerid] = 999;
			NegocioPrice[playerid] = 0;
			return 1;
		} else return _Mensaje(playerid, 0, "328", "No puedes pagar este negocio.");
	}
	if (_Entrevista[playerid] != 999)
	{
		if (!IsPlayerConnected(_Entrevista[playerid])) { _Entrevista[playerid] = 999; _Mensaje(playerid, 4, "b0b0b0", "El jugador que te ofreció algo no está conectado."); return 1; }
		if (CercaDelWeon(5.0, playerid, _Entrevista[playerid]))
		{
			_Mensaje(playerid, 2, "0", "Estarás congelado hasta que termine la entrevista.");
			_Mensaje(_Entrevista[playerid], 2, "0", "Estás congelado hasta que termine la entrevista.");
			_2Entrevista[playerid] = _Entrevista[playerid];
			_2Entrevista[_Entrevista[playerid]] = playerid;
			_Entrevista[playerid] = 999;
			return 1;
		} else return _Mensaje(playerid, 0, "330", "Estás lejos del reportero.");
	}
	if (PrestadorCoche[playerid] != -1)
	{
		if (!IsPlayerConnected(PrestadorCoche[playerid])) { PrestadorCoche[playerid] = -1; _Mensaje(playerid, 4, "b0b0b0", "El jugador que te ofreció algo no está conectado."); return 1; }
		if (!CercaDelWeon(8.0, PrestadorCoche[playerid], playerid)) {
			PrestadorCoche[playerid] = -1;
			LlavePrestada[playerid] = -1;
			return _Mensaje(playerid, 0, "321", "No estás cerca del que te va dar la llave del vehículo.");
		}
		new tieneslotlibre = -1;
		for(new x=0; x<6; x++) { if(user[playerid][jLlaveCochePrestado][x] == 0){tieneslotlibre = x; break;} }
		if(tieneslotlibre == -1){_Mensaje(playerid, 0, "321", "Tienes todas las ranuras de llaves prestadas ocupados."); return 1;}
		user[playerid][jLlaveCochePrestado][tieneslotlibre] = LlavePrestada[playerid];
		format(string, sizeof(string), "* Has aceptado la llave del vehículo LS-%d ofrecida por %s.", LlavePrestada[playerid], NombreJugador(PrestadorCoche[playerid]));
		_Mensaje(playerid, 4, "33CCFF", string);
		format(string, sizeof(string), "* %s ha aceptado tu llave del vehículo LS-%d.", NombreJugador(playerid), LlavePrestada[playerid]);
		_Mensaje(PrestadorCoche[playerid], 4, "33CCFF", string);
		PrestadorCoche[playerid] = -1;
		LlavePrestada[playerid] = -1;
	}
	if (_Vehdueno[playerid] != 999)
	{
		if (!IsPlayerConnected(_Vehdueno[playerid])) { _Vehdueno[playerid] = 999; _Mensaje(playerid, 4, "b0b0b0", "El jugador que te ofreció algo no está conectado."); return 1; }
		new vid = _VehID[playerid], vehiculo = InfoVehiculo[_VehID[playerid]][vID], vendedor = _Vehdueno[playerid], costo = _Vehprecio[playerid];
		if (ComprobarDineroJ(playerid) > costo)
		{
			if (IsPlayerInVehicle(vendedor, vehiculo))
			{
				if (!CercaDelWeon(8.0, vendedor, playerid)) return _Mensaje(playerid, 0, "321", "No estás cerca del que te va a vender el vehículo.");
				new EspacioLibre;
				for(new xd = 0; xd < 6; xd++)
				{
					if(user[playerid][jLlaveCoche][xd] == 0)
					{
						EspacioLibre = 1;
						break;
					}
				}
				if(EspacioLibre == 0) { _Mensaje(playerid, 0, "0", "Ya tienes todas las ranuras de llaves propias ocupadas."); return 1; }
				new carsamount = CVehiculos(playerid);
				if (user[playerid][jPremium] == 0 && carsamount >= 3) return _Mensaje(playerid, 0, "82", "Sólo puedes tener 3 vehículos.");
				if (user[playerid][jPremium] == 1 && carsamount >= 4) return _Mensaje(playerid, 0, "82", "Sólo puedes tener 4 vehículos.");
				if (user[playerid][jPremium] == 2 && carsamount >= 5) return _Mensaje(playerid, 0, "82", "Sólo puedes tener 5 vehículos.");
				if(!strcmp(user[playerid][jIP], user[vendedor][jIP], false) && user[playerid][jMulticuenta] == 0 && user[vendedor][jMulticuenta] == 0)
				{
					new ipc[32], stringlog[180]; GetPlayerIp(playerid, ipc, 32);
					format(stringlog, sizeof(stringlog), "[Atención]{FFFFFF} %s pagó $%d a %s por el %s, posibles multicuentas [IP: %s]", NombreRJugador(playerid), costo, NombreRJugador(vendedor), NombreVehiculo(vehiculo), ipc);
					MensajeAdmin(stringlog);
					format(stringlog, sizeof(stringlog), "Registros: %s pagó $%d a %s por el %s. [IP: %s]", NombreRJugador(playerid), costo, NombreRJugador(vendedor), NombreVehiculo(vehiculo), ipc);
					Log("Registros/multicuentas.log", stringlog);
				}
				else
				{
					format(string, sizeof(string), "Registros: %s pagó $%d a %s por el %s", NombreRJugador(playerid), costo, NombreRJugador(vendedor), NombreVehiculo(vehiculo));
					Log("Registros/VenderAuto.log", string);
				}
				format(string, sizeof(string), "* Has pagado por un %s por $%d a %s.", NombreVehiculo(vehiculo), costo, NombreJugador(vendedor));
				_Mensaje(playerid, 4, "33CCFF", string);
				format(string, sizeof(string), "* Vendiste tu %s a %s por $%d.", NombreVehiculo(vehiculo), NombreJugador(playerid), costo);
				_Mensaje(vendedor, 4, "33CCFF", string);
				DarDineroGC(vendedor, costo);
				DarDineroGC(playerid, -costo);
				RemovePlayerFromVehicle(vendedor);
				new Float: slx, Float: sly, Float: slz;
				GetPlayerPos(vendedor, slx, sly, slz);
				SetPlayerPos(vendedor, slx, sly + 2, slz);
				strmid(InfoVehiculo[vid][vDueno], NombreJugador(playerid), 0, strlen(NombreJugador(playerid)), 255);
				for(new xd; xd < 6; xd++)
				{
					if(user[playerid][jLlaveCoche][xd] == 0)
					{
						user[playerid][jLlaveCoche][xd] = vid+1000;
						break;
					}
				}
				for(new xd; xd < 6; xd++)
				{
					if(user[vendedor][jLlaveCoche][xd] == vid+1000)
					{
						user[vendedor][jLlaveCoche][xd] = 0;
					}
				}
				ActualizarVehiculo(vid);
				_Vehdueno[playerid] = 999;
				_Vehprecio[playerid] = 0;
				_VehID[playerid] = 0;
				return 1;
			} else return _Mensaje(playerid, 0, "327", "El que te va a vender no está en el coche.");
		} else return _Mensaje(playerid, 0, "328", "No puedes pagar este coche.");
	}
	_Mensaje(playerid, 4, "b0b0b0", "Nadie te ha ofrecido algo.");
	return 1;
}

CMD:cinturons(playerid, params[]) {
    if (!IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "130", "No estás en ningún vehículo.");
    if (IsPlayerInAnyVehicle(playerid) == 1 && Casco[playerid] == 0) {
        Casco[playerid] = 1;
        if (EnMotos_Bicis(GetPlayerVehicleID(playerid))) { AccionesRol(playerid, 0, "agarra su casco, y se lo pone."); }
		else { AccionesRol(playerid, 0, "pone las manos en su cinturón y se lo pone."); }
    } else if (IsPlayerInAnyVehicle(playerid) == 1 && Casco[playerid] == 1) {
        Casco[playerid] = 0;
        if (EnMotos_Bicis(GetPlayerVehicleID(playerid))) { AccionesRol(playerid, 0, "pone las manos en su casco, y se lo quita."); }
		else { AccionesRol(playerid, 0, "pone las manos en su cinturón y se lo quita."); }
    }
    return 1;
}

CMD:vercinturon(playerid, params[]) {
    new playerid2;
    if (sscanf(params, "d", playerid2)) return _Mensaje(playerid, 3, "0", "/vercinturon [id jugador]");
    if (GetPlayerState(playerid2) == PLAYER_STATE_ONFOOT) return _Mensaje(playerid, 0, "312", "Ese jugador no está en un vehiculo.");
    if (CercaDelWeon(9.0, playerid, playerid2)) {
        new string[128];
        new stext[4];
        if (Casco[playerid2] == 0) stext = "sin";
        else stext = "con";
        if (EnMotos_Bicis(GetPlayerVehicleID(playerid))) {
            format(string, sizeof(string), "%s está %s casco.", NombreJugador(playerid2), stext);
            _Mensaje(playerid, 4, "33CCFF", string);
            new MsgCheckMe[MAX_TEXT_CHAT];
            format(MsgCheckMe, sizeof(MsgCheckMe), "mira a %s, mirando si tiene puesto su casco.", NombreJugador(playerid2));
            AccionesRol(playerid, 0, MsgCheckMe);
        } else {
            format(string, sizeof(string), "%s está %s cinturón.", NombreJugador(playerid2), stext);
            _Mensaje(playerid, 4, "33CCFF", string);
            new MsgCheckMe[MAX_TEXT_CHAT];
            format(MsgCheckMe, sizeof(MsgCheckMe), "observa a travez de la ventana de %s, mirando si usa el cinturón.", NombreJugador(playerid2));
            AccionesRol(playerid, 0, MsgCheckMe);
        }
    } else {
        _Mensaje(playerid, 0, "133", "El jugador no se encuentra cerca de tí.");
    }
    return 1;
}

CMD:gob(playerid, params[]) {
    new string[128];
    if (isnull(params)) { _Mensaje(playerid, 3, "0", "/gob [texto]"); return 1; }
    if (Es_Lider(playerid, 1, 4, 5)) {
        if (EstaEnGob(playerid)) {
	  		if (Es_Lider(playerid, 1)) {
	            format(string, sizeof(string), "Anuncio del Departamento de Policía: {ffffff}%s", params[0]);
	            EnviarMensajeTodos(0x007ECCFF, string);
	        } else if (Es_Lider(playerid, 4)) {
	            format(string, sizeof(string), "Anuncio del Gobierno de la Ciudad: {ffffff}%s", params[0]);
	            EnviarMensajeTodos(0x007ECCFF, string);
	        } else if (Es_Lider(playerid, 5)) {
	            format(string, sizeof(string), "Anuncio del Departamento de Emergencias: {ffffff}%s", params[0]);
	            EnviarMensajeTodos(0x007ECCFF, string);
	        }
    	} else _Mensaje(playerid, 0, "309", "No estás en el punto de /gob.");
    } else _Mensaje(playerid, 0, "309", "Tú no tienes acceso a el comando /Gob.");
    return 1;
}

CMD:impuesto(playerid, params[]) {
    new string[90];
    if (Es_Lider(playerid, 4)) {
        if (!sscanf(params, "i", params[0])) {
            if (params[0] < 0 || params[0] > 10) return _Mensaje(playerid, 0, "310", "Valor entre 1 - 10.");
            ValorImpuestos = params[0];
            ActualizarEst();
            format(string, sizeof(string), "Anuncio del Gobierno de la Ciudad:{FFFFFF} Nuevo pago por impuesto (%d$) cantidad de dinero.", ValorImpuestos);
            EnviarMensajeTodos(0x007ECCFF, string);
        } else _Mensaje(playerid, 3, "0", "/impuesto [cantidad]");
    } else _Mensaje(playerid, 0, "311", "Tú no tienes acceso a el comando /impuesto.");
    return 1;
}

CMD:cpantalla(playerid, params[]) {
    new text[64], type;
    if (user[playerid][jAdmin] < 3) return _Mensaje(playerid, 0, "305", "Tú no tienes acceso a el comando /cpantalla.");
    if (!sscanf(params, "is", type, text)) {
        if (type == 2) return _Mensaje(playerid, 0, "306", "No puedes elegir el #2.");
        for (new i = 0; i < MAX_PLAYERS; i++) { if (JugadorEnSeccion {i}) { TextoPantalla(i, text, 5000, type); } }
        new string[128];
        format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF} Game Admin %s usó el comando '/cpantalla'.", NombreRJugador(playerid));
        MensajeAdmin(string);
    } else _Mensaje(playerid, 3, "0", "/cpantalla [tipo] [texto]");
    return 1;
}

CMD:climpiar(playerid, params[]) {
    LimpiarPantalla(playerid);
    return 1;
}

CMD:limpiarchat(playerid, params[]) {
    new string[256];
    if (user[playerid][jAdmin] < 3) return _Mensaje(playerid, 0, "295", "Tú no tienes acceso a el comando /limpiarchat.");
    CleanScreen();
    format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s 'utilizó' /limpiarchat.", NombreRJugador(playerid));
    MensajeAdmin(string);
    return 1;
}

CMD:fuelcars(playerid, params[]) {
    if (user[playerid][jAdmin] < 3) return _Mensaje(playerid, 0, "303", "Tú no tienes acceso a el comando /fuelcars.");
    _MensajeOOC(0xE00000FF, "[AvisoAdmin]: {FFFFFF} La gasolina de los vehículos fue llenada.");
    for (new c = 0; c < MAX_VEHICLES; c++) GasolinaInicialVeh[c] = 200;
    return 1;
}

CMD:fuelcarsno(playerid, params[]) {
    if (user[playerid][jAdmin] < 3) return _Mensaje(playerid, 0, "304", "Tú no tienes acceso a el comando /fuelcarsno.");
    _MensajeOOC(0xE00000FF, "[AvisoAdmin]: {FFFFFF} La gasolina de los vehículos fue vaciada.");
    for (new c = 0; c < MAX_VEHICLES; c++) GasolinaInicialVeh[c] = 0;
    return 1;
}

CMD:sfondos(playerid, params[]) {
    if (!Es_Lider(playerid, 4)) return _Mensaje(playerid, 0, "291", "No eres el gobernador.");
    if (ActFondos == 0) return _Mensaje(playerid, 0, "296", "El sistema esta actualmente bloqueado por un administrador.");
    new string[256], amount, reason[64];
    if (sscanf(params, "ds[64]", amount, reason)) {
        _Mensaje(playerid, 3, "0", "/sfondos [cantidad] [razón]");
        format(string, sizeof(string), "Balance: $%d.", DineroEstado);
        _Mensaje(playerid, 2, "0", string);
        return 1;
    }
    if (amount < 0) return _Mensaje(playerid, 0, "292", "La cantidad es inválido.");
    if (amount < 1 || params[1] > 500000) return _Mensaje(playerid, 0, "294", "Máximo: $5.000.000");
    if (DineroEstado > amount) {
        DineroEstado -= amount;
        ActualizarEst();
        DarDineroGC(playerid, amount);
        format(string, sizeof(string), "Retiraste $%d de los fondos del estado.", amount);
        _Mensaje(playerid, 2, "0", string);
        format(string, sizeof(string), "[AvisoAdmin] :{FFFFFF}El jugador %s retiro (cantidad: $%d) de los fondos del estado. {E00000}Razón: %s.", NombreRJugador(playerid), amount, reason);
        MensajeAdmin(string);
        format(string, sizeof(string), "Registros: El jugador %s retiro $%d de los fondos del estado. Razón %s. (Sistema de Dinero)", NombreRJugador(playerid), amount, reason);
        Log("Registros/DineroALC.log", string);
    } else {
        _Mensaje(playerid, 0, "293", "No hay fondos suficientes.");
    }
    return 1;
}

CMD:dfondos(playerid, params[]) {
    if (!Es_Lider(playerid, 4)) return _Mensaje(playerid, 0, "291", "No eres el gobernador.");
    new string[256], amount;
    if (sscanf(params, "d", amount)) {
        _Mensaje(playerid, 3, "0", "/dfondos [cantidad]");
        format(string, sizeof(string), "Balance: $%d.", DineroEstado);
        _Mensaje(playerid, 2, "0", string);
        return 1;
    }
    if (amount > ComprobarDineroJ(playerid)) return _Mensaje(playerid, 0, "187", "No posees esa cantidad.");
    if (amount < 1 || params[1] > 9000000) return _Mensaje(playerid, 0, "294", "Máximo: $9.000.000.");
    DineroEstado += amount;
    ActualizarEst();
    DarDineroGC(playerid, -amount);
    format(string, sizeof(string), "Depositaste (cantidad: $%d) en los fondos del estado.", amount);
    _Mensaje(playerid, 2, "0", string);
    format(string, sizeof(string), "Registros: El jugador (%s) deposito $%d en los fondos del estado.", NombreRJugador(playerid), amount);
    Log("Registros/DineroALC.log", string);
    return 1;
}


CMD:trabajos(playerid, params[]) {
    Dialog(playerid, D_TRABAJOS, DIALOG_STYLE_TABLIST_HEADERS, "Trabajos/Empleos", "Nombre\n\
    Carguero\n\
    Delincuente\n\
    Pescador\n\
    Camionero\n\
    Carpintero\n\
    Leñador\n\
    Granjero\n\
    Traficante", "Seleccionar", "");
    return 1;
}

CMD:facciones(playerid, params[]) {
    Dialog(playerid, D_INVALIDO, DIALOG_STYLE_TABLIST_HEADERS, "Facciones", "Logo\tNombre\tTipo\n\
    (PD/SD)\tDepartamento de Justicia\t{00A2FF}Legal\n\
    (WSLS)\tWorkshop Los Santos\t{00A2FF}Legal\n\
    (SAN)\tSan Andreas Network\t{00A2FF}Legal\n\
    (GOB)\tGobierno de San Andreas\t{00A2FF}Legal\n\
    (LSED)\tLos Santos Emergency Department\t{00A2FF}Legal", "Cerrar", "");
    return 1;
}

CMD:sms(playerid, params[])
{
	new string[256], phonenumb, text[256];
	if (sscanf(params, "ds[256]", phonenumb, text)) return _Mensaje(playerid, 3, "0", "/sms [numero teléfonico] [texto]");
	if (!_Telefono(playerid)){_Mensaje(playerid, 0, "9","No tienes un teléfono en ninguna mano."); return 1;}
	if (user[playerid][jTelefono] == 0) return _Mensaje(playerid, 0, "93", "No tienes un número de teléfono.");
	if (user[playerid][jSaldo] < 2) return _Mensaje(playerid, 0, "40", "No tienes saldo suficiente para enviar un mensaje.");
	foreach(Player, i)
	{
		if (user[i][jTelefono] == phonenumb && phonenumb != 0)
		{
			new playerid2 = i;
			if (IsPlayerConnected(playerid2))
			{
				if (B_Telefono[playerid2] > 0) return _Mensaje(playerid, 0, "276", "Ese jugador tiene el teléfono apagado.");
				format(string, sizeof(string), "[SMS: %d]: %s", user[playerid][jTelefono], text);
				_Mensaje(playerid2, 4, "FFEA5F", string);
				format(string, sizeof(string), "SMS al %d: %s", phonenumb, text);
				_Mensaje(playerid, 4, "b0b0b0", string);
				new Float: cx, Float: cy, Float: cz;
				GetPlayerPos(playerid, cx, cy, cz);
				PlayerPlaySound(playerid, 1053, cx, cy, cz);
				GetPlayerPos(playerid2, cx, cy, cz);
				PlayerPlaySound(playerid2, 1053, cx, cy, cz);
				TextoPantalla(playerid, "~r~$-1~w~ Saldo", 5000, 1);
				user[playerid][jSaldo] -= 1;
				return 1;
			}
		}
	}
	_Mensaje(playerid, 2, "0", "El número que ha marcado no existe o no está disponible.");
	return 1;
}

CMD:agenda(playerid) return cmd_numero(playerid);
CMD:numero(playerid)
{
	if(!_Telefono(playerid)){_Mensaje(playerid, 0, "9","No tienes un teléfono en ninguna mano."); return 1;}
	_Agenda(playerid);
    return 1;
}

CMD:telefonopublico(playerid, params[]) return cmd_publico(playerid, params);
CMD:publico(playerid, params[])
{
	new numero;
	if (!JugadorEnSeccion {playerid}) return _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
	if(numero == user[plaeyrid][jTelefono]){_Menasje(playerid, 0, "281", "No te puedes llamar a tí mismo.");}
	for (new tpid = 0; tpid < sizeof(InfoTelefono); tpid++)
	{
		if (_enPos(playerid, 2.0, InfoTelefono[tpid][tpPosicion][0], InfoTelefono[tpid][tpPosicion][1], InfoTelefono[tpid][tpPosicion][2])) {
			if (sscanf(params, "d", numero)) return _Mensaje(playerid, 3, "0", "/llamar [número telefónico]");
			if (EnLlamada[playerid] != 0)
			{
				_Mensaje(playerid, 0, "279", "Ya estás en una llamada.");
				return 1;
			}

			if(numero == 0){_Mensaje(playerid, 0, "281", "No puedes llamar al número 0."); return 1;}
			if(numero == user[playerid][jTelefono]){_Mensaje(playerid, 0, "281", "No te puedes llamar a tí mismo.");}
			LlamarTelefono(playerid, numero);
			AccionesRol(playerid, 0, "toma el teléfono público y marca unos números.");
		}
	}
	return 1;
}

CMD:saldo(playerid)
{
	new string[200];
	if (user[playerid][jTelefono] == 0) return _Mensaje(playerid, 0, "93", "No tienes un número de teléfono asignado a tu cuenta, compra uno en una tienda de electrónica o 24/7.");
	if(!_Telefono(playerid)){_Mensaje(playerid, 0, "9","No tienes un teléfono en ninguna mano."); return 1;}
	format(string, sizeof(string), "[Compañía teléfonica de San Andreas]: ¡Saldo disponible $%d! para realizar llamadas y mensajes.", user[playerid][jSaldo]);
	_Mensaje(playerid, 4, "FFEA5F", string);
	return 1;
}

CMD:llamar(playerid, params[]) {
    new numero;
    if (sscanf(params, "d", numero)) return _Mensaje(playerid, 3, "0", "/llamar [número telefónico]");
    if (GetPVarInt(playerid, "Llamada_LSED") == 1) return _Mensaje(playerid, 0, "647", "No puedes usar este comando en este momento.");
    if (GetPVarInt(playerid, "EnEvento") == 1) return _Mensaje(playerid, 0, "647", "No puedes usar este comando en un evento.");
    if (numero == user[plaeyrid][jTelefono]){_Menasje(playerid, 0, "281", "No te puedes llamar a tí mismo.");}
	if (user[playerid][jTelefono] == 0) return _Mensaje(playerid, 0, "93", "No tienes un número de teléfono asignado a tu cuenta, compra uno en una tienda de electrónica o 24/7.");
	if(!_Telefono(playerid)){_Mensaje(playerid, 0, "9","No tienes un teléfono en ninguna mano."); return 1;}
    if (user[playerid][jSaldo] < 3) return _Mensaje(playerid, 0, "40", "No tienes saldo suficiente para realizar esta llama.");
    if (B_Telefono[playerid] > 0) return _Mensaje(playerid, 0, "279", "Tu teléfono se encuentra apagado, escribe /encendermovil para encenderlo.");
	if (EnLlamada[playerid] != 0){_Mensaje(playerid, 0, "279", "Ya estás en una llamada."); return 1;}
    if(numero == 0){_Mensaje(playerid, 0, "281", "No puedes llamar al número 0."); return 1;}
    if(numero == user[playerid][jTelefono]){_Mensaje(playerid, 0, "281", "No te puedes llamar a tí mismo.");}
    LlamarTelefono(playerid, numero);
    AccionesRol(playerid, 0, "saca su teléfono y marca unos números.");
    return 1;
}

CMD:atenderpd(playerid) return cmd_centralita(playerid);
CMD:centralita(playerid){
    if (GetPVarInt(playerid, "Llamada_LSED") == 1) return _Mensaje(playerid, 0, "647", "No puedes usar este comando en este momento.");
    if (GetPVarInt(playerid, "EnEvento") == 1) return _Mensaje(playerid, 0, "647", "No puedes usar este comando en un evento.");
	if (EnLlamada[playerid] != 0){_Mensaje(playerid, 0, "9", "Ya estás en una llamada."); return 1;}
	if (user[playerid][jMiembro] == 1 || user[playerid][jMiembro] == 5) {
		new oyente = -1;
		for(new i; i < MAX_PLAYERS; i++) {
			if(EnLlamada[i] == 911) {
				oyente = i;
				break;
			}
		}
		if(oyente != -1) {
			PersonaEnLlamada[playerid] = oyente;
			PersonaEnLlamada[oyente] = playerid;
			_Mensaje(oyente, 2, "0", "Han respondido al teléfono.");
			EnLlamada[playerid] = 2;
			EnLlamada[oyente] = 912;
			AccionesRol(playerid, 0, "contesta su llamada de emergencia.");
		    return 1;
		}
	}
    _Mensaje(playerid, 0, "9", "Parece no haber llamadas entrantes.");
	return 1;
}

CMD:atender(playerid, params[]) return cmd_contestar(playerid, params);
CMD:contestar(playerid, params[]) {
    if (GetPVarInt(playerid, "Llamada_LSED") == 1) return _Mensaje(playerid, 0, "647", "No puedes usar este comando en este momento.");
    if (GetPVarInt(playerid, "EnEvento") == 1) return _Mensaje(playerid, 0, "647", "No puedes usar este comando en un evento.");
	if (user[playerid][jTelefono] == 0){_Mensaje(playerid, 0, "9", "No tienes un número de teléfono asignado a tu cuenta. Compra uno en una tienda de electrónica."); return 1;}
	if(!_Telefono(playerid)){_Mensaje(playerid, 0, "9","No tienes un teléfono en ninguna mano."); return 1;}
	if (EnLlamada[playerid] != 0){_Mensaje(playerid, 0, "9", "Ya estás en una llamada."); return 1;}
	if(PersonaEnLlamada[playerid] > -1) { //llamada normal
        _Mensaje(playerid, 2, "0", "Has contestado a la llamada.");
		_Mensaje(PersonaEnLlamada[playerid], 2, "0", "Han respondido al teléfono, se te cobrara 1$ de saldo por esta llamada.");
		EnLlamada[playerid] = 2;
		EnLlamada[PersonaEnLlamada[playerid]] = 3;
		KillTimer(ToqueLlamadaTimer[playerid]);
		return 1;
	}
	_Mensaje(playerid, 0, "9", "Parece no haber llamadas entrantes.");
	return 1;
}

CMD:colgar(playerid, params[]) {
    if (GetPVarInt(playerid, "Llamada_LSED") == 1) return _Mensaje(playerid, 0, "647", "No puedes usar este comando en este momento.");
	if (GetPVarInt(playerid, "EnEvento") == 1) return _Mensaje(playerid, 0, "647", "No puedes usar este comando en un evento.");
	ColgarTelefono(playerid);
    return 1;
}

CMD:darskin(playerid, params[]) return cmd_darropa(playerid, params);
CMD:darropa(playerid, params[]) {
    if (user[playerid][jAdmin] < 1) return _Mensaje(playerid, 0, "256", "Tú no tienes acceso a el comando /darropa.");
    new playerid2, skin;
    if (!sscanf(params, "di", playerid2, skin)) {
        if (IsPlayerConnected(playerid2)) {
            if (skin > 311 || skin < 0) return _Mensaje(playerid, 0, "257", "Skin ID incorrecto (0-311).");
            new string[128];
            Skin_(playerid2, skin);
            format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s cambió el skin de %s, (GTA Skin ID: %d.)", NombreRJugador(playerid), NombreRJugador(playerid2), skin);
            MensajeAdmin(string);
        } else _Mensaje(playerid, 0, "75", "Jugador no conectado.");
    } else _Mensaje(playerid, 3, "0", "/darskin [id jugador] [ropa id]");
    return 1;
}

public OnPlayerStreamIn(playerid, forplayerid)
{
	if (MostrarNombre[playerid] == 0)
	{
		if(user[forplayerid][j_Mascara] == 1) ShowPlayerNameTagForPlayer(playerid, forplayerid, false);
		else ShowPlayerNameTagForPlayer(playerid, forplayerid, true);
	}
	else
	{
		if(user[forplayerid][j_Mascara] == 0) ShowPlayerNameTagForPlayer(playerid, forplayerid, false);
		else ShowPlayerNameTagForPlayer(playerid, forplayerid, false);
	}
	return 1;
}

CMD:nombres(playerid)
{
	if (MostrarNombre[playerid] == 0)
	{
		_Mensaje(playerid, 4, "F8D48C", "Nombres de jugadores desactivados.");
		foreach(Player, i) ShowPlayerNameTagForPlayer(playerid, i, false);
		MostrarNombre[playerid] = 1;
	}
	else
	{
		_Mensaje(playerid, 4, "F8D48C", "Nombres de jugadores activados.");
		MostrarNombre[playerid] = 0;
		foreach(Player, i)
			if(user[i][j_Mascara] == 0) ShowPlayerNameTagForPlayer(playerid, i, true);
	}
	return 1;
}

CMD:mascara(playerid, params[]) {
    if (user[playerid][jMascara] == 0) return _Mensaje(playerid, 0, "457", "No tienes máscara.");
    if (user[playerid][j_Mascara] == 0) {
        foreach(Player, i) ShowPlayerNameTagForPlayer(i, playerid, false);
        user[playerid][j_Mascara] = 1;
        AccionesRol(playerid, 0, "se coloca una máscara.");
        ApplyAnimation(playerid, "goggles", "goggles_put_on", 4.1, 0, 1, 1, 0, 0, 1);
    } else {
        AccionesRol(playerid, 0, "se retira una máscara.");
        foreach(Player, i) ShowPlayerNameTagForPlayer(i, playerid, true);
        user[playerid][j_Mascara] = 0;
        ApplyAnimation(playerid, "goggles", "goggles_put_on", 4.1, 0, 1, 1, 0, 0, 1);
    }
    return 1;
}

CMD:apagarstaff(playerid, params[]) {
    if (user[playerid][jAdmin] > 0) {
        if (!B_Admin[playerid]) {
            B_Admin[playerid] = 1;
            _Mensaje(playerid, 2, "0", "Canal de administración desactivado");
        } else {
            B_Admin[playerid] = 0;
            _Mensaje(playerid, 2, "0", "Canal de administración activado");
        }
    } else _Mensaje(playerid, 0, "459", "Tú no tienes acceso a el comando /apagarstaff.");
    return 1;
}

CMD:verprivadosusers(playerid, params[]) {
	new string[256];
    if (user[playerid][jAdmin] < 1) return _Mensaje(playerid, 0, "460", "Tú no tienes acceso a el comando /verprivadosusers.");
    if (!VerPrivados[playerid]) {
        VerPrivados[playerid] = 0;
        format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s se encuentra visualizando los mensajes privados entre los usuarios.", NombreRJugador(playerid));
        MensajeAdmin(string);
    } else if (VerPrivados[playerid]) {
        VerPrivados[playerid] = 1;
        format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s dejo visualizar los mensajes privados entre los usuarios", NombreRJugador(playerid));
        MensajeAdmin(string);
    }
    return 1;
}

CMD:bloquearmps(playerid, params[]) {
    if (!B_Privados[playerid]) {
        B_Privados[playerid] = 1;
        _Mensaje(playerid, 2, "0", "Bloqueaste tus mensajes privados.");
    } else if (B_Privados[playerid]) {
        B_Privados[playerid] = 0;
        _Mensaje(playerid, 2, "0", "Habilitaste tus mensajes privados.");
    }
    return 1;
}

CMD:diadepaga(playerid, params[]) {
    if (user[playerid][jAdmin] < 5) return _Mensaje(playerid, 0, "461", "Tú no tienes acceso a el comando /Diadepaga.");
    for(new i = 0; i < MAX_PLAYERS; i++) {
		if (user[i][State] == 3) {
  			FalsoPD = 1;
			PagoDiario(i);
		}
    }
    return 1;
}

CMD:cmblockhaceadmin(playerid, params[]) {
    if (IsPlayerAdmin(playerid)) {
        if (!sscanf(params, "di", params[0], params[1])) {
            if (IsPlayerConnected(params[0])) {
                new string[128];
                user[params[0]][jAdmin] = params[1];
                format(string, sizeof(string), "* Super Admin %s lo ha asignado administrador nivel %d", NombreRJugador(playerid), params[1]);
                _Mensaje(playerid, 4, "33CCFF", string);
            } else _Mensaje(playerid, 0, "75", "Jugador no conectado.");
        } else _Mensaje(playerid, 3, "0", "/cmblockhaceadmin [id jugador] [nivel]");
    } else _Mensaje(playerid, 0, "462", "Tú no tienes acceso a el comando /Adminrcon.");
    return 1;
}

CMD:servicios(playerid, params[]) {
	new string[190];
	if (user[playerid][jEncarcelado] > 0) return _Mensaje(playerid, 0, "213", "No puedes usar este comando mientras estás en prisión.");
	if (user[playerid][jTiempoServicio] > 0) return _Mensaje(playerid, 0, "524", "Necesitas esperar 30 segundos para usar este comando.");
	if (!sscanf(params, "s[32]", params[0])) {
		if (strcmp(params[0], "policia", true) == 0) {
			if(!_Telefono(playerid)){_Mensaje(playerid, 0, "9","No tienes un teléfono en ninguna mano."); return 1;}
			LlamarTelefono(playerid, 911);
		} else if (strcmp(params[0], "medico", true) == 0) {
			if(Fac5_ < 1) return _Mensaje(playerid, 0, "726", "En este momento no se encuentran médicos disponibles, intenta más tarde.");
			format(string, sizeof(string), "** %s necesita un médico - usa '/irmedico' para ir al llamado.", NombreJugador(playerid));
			_MensajeRfac(5, 0x01FCFFC8, string);
			_Mensaje(playerid, 4, "FAE800", "Has solicitado un médico.");
			_MedicCall = playerid;
			user[playerid][jTiempoServicio] = 30;
			return 1;
		} else if (strcmp(params[0], "bombero", true) == 0) {
			if(Fac5_ < 1) return _Mensaje(playerid, 0, "681", "En este momento no se encuentran bomberos en servicio, intenta más tarde.");
			format(string, sizeof(string), "** %s necesita un bombero - usa '/irbombero' para ir al llamado.", NombreJugador(playerid));
			MensajeFaccion(5, 0x01FCFFC8, string);
			_Mensaje(playerid, 4, "FAE800", "Has solicitado un bombero.");
			_BombCall = playerid;
			user[playerid][jTiempoServicio] = 30;
			return 1;
		}
	} else _Mensaje(playerid, 3, "0", "/servicios [tipo] - Tipos: policia, medico, bombero");
	return 1;
}

CMD:duty(playerid) return cmd_servicio(playerid);
CMD:enservicio(playerid) return cmd_servicio(playerid);
CMD:servicio(playerid)
{
	new string[128];
	if (Es_Faccion(playerid, 1)) { //- LSPD - SASD - SADOC
		if (EnServicioPD[playerid] == 1) {
			EnServicioPD[playerid] = 0;
			_Mensaje(playerid, 2, "0", "Ahora fuera de servicio.");
			return 1;
		} else {
			EnServicioPD[playerid] = 1;
			_Mensaje(playerid, 2, "0", "Ahora estas en servicio.");
			return 1;
		}
	} else if (Es_Faccion(playerid, 2)) { //- Mecánicos
		if (EnServicio[playerid] == 0) {
			EnServicio[playerid] = 1;
			format(string, sizeof(string), "[Anuncio] El mecánico %s se encuentra en servicio. Móvil: %d", NombreJugador(playerid), user[playerid][jTelefono]);
			_MensajeSAN(0x00D900FF, string);
			_Mensaje(playerid, 2, "0", "Ahora estás en servicio, recibirás llamadas de la gente que te necesite.");
			++Fac2_;
			return 1;
		} else {
			Fac2_ -= 1;
			EnServicio[playerid] = 0;
			_Mensaje(playerid, 2, "0", "Ahora estás fuera servicio, ya no recibirás llamadas.");
			return 1;
		}
	} else if (Es_Faccion(playerid, 3, 4)) { //- SAN | Gobierno
		if (EnServicio[playerid] == 0) {
			EnServicio[playerid] = 1;
			_Mensaje(playerid, 2, "0", "Ahora estas en servicio");
			return 1;
		} else {
			EnServicio[playerid] = 0;
			_Mensaje(playerid, 2, "0", "Ahora estas en servicio");
			return 1;
		}
	} else if (Es_Faccion(playerid, 5)) { //- LSED
		if (EnServicio[playerid] == 1) {
			_Mensaje(playerid, 2, "0", "Ahora estás fuera servicio, ya no recibirás llamadas.");
			EnServicio[playerid] = 0;
			Fac5_ -= 1;
			return 1;
		} else {
			_Mensaje(playerid, 2, "0", "Ahora estás en servicio, recibirás llamadas de la gente que te necesite.");
			EnServicio[playerid] = 1;
			++Fac5_;
			return 1;
		}
	}
	return _Mensaje(playerid, 0, "0", "No eres de una facción legal.");
}

CMD:entrevista(playerid, params[])
{
	if (Es_Faccion(playerid, 3)) {
		if (_2Entrevista[playerid] != INVALID_PLAYER_ID) {
			_Mensaje(playerid, 2, "0", "Entrevista terminada.");
			_Mensaje(_2Entrevista[playerid], 2, "0", "Entrevista terminada.");
			_2Entrevista[_2Entrevista[playerid]] = INVALID_PLAYER_ID;
			_2Entrevista[playerid] = INVALID_PLAYER_ID;
			return 1;
		}
		new string[128], playerid2;
		if (sscanf(params, "d", playerid2)) return _Mensaje(playerid, 3, "0", "/entrevista [id jugador]");
		if (IsPlayerConnected(playerid2)) {
			if (CercaDelWeon(5.0, playerid, playerid2)) {
				if (playerid2 == playerid) {
					_Mensaje(playerid, 0, "417", "No puedes hacer una entrevista a ti mismo!");
					return 1;
				}
				format(string, sizeof(string), "* Ofreciste a %s una entrevista.", NombreJugador(playerid2));
				_Mensaje(playerid, 4, "33CCFF", string);
				format(string, sizeof(string), "* %s te ha ofrecido una entrevista, escribe '/aceptar' para aceptar.", NombreJugador(playerid));
				_Mensaje(playerid2, 4, "33CCFF", string);
				_Entrevista[playerid2] = playerid;
			} else return _Mensaje(playerid, 0, "133", "El jugador no se encuentra cerca de tí.");
		} else return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
	} else _Mensaje(playerid, 0, "200", "No formas parte de SAN.");
	return 1;
}

CMD:desconectar(playerid, params[])
{
	if (Es_Faccion(playerid, 3)) {
		if ( _sanCall != -1 ) {
			ColgarTelefono(_sanCall);
			_sanCall = -1;
		} else _Mensaje(playerid, 0, "911", "No hay nadie en la línea de CNN");
	} else _Mensaje(playerid, 0, "200", "No formas parte de SAN.");
	return 1;
}

CMD:conectar(playerid, params[])
{
	if (Es_Faccion(playerid, 3)) {
		new newcar = GetPlayerVehicleID(playerid);
		if (EstaEnAutoSAN(newcar) || _enPos(playerid, 7.0, 1115.0129, 1248.0106, 10.8203) || _enPos(playerid, 7.0, 657.1969, -1347.9969, 4002.7947)) {
			if ( _sanCall == -1 ) {
			    new numero, nume2ro = true;
				if (!sscanf(params, "d", numero)) {
					if (!isnumeric(params)) return _Mensaje(playerid, 0, "43", "Sólo números porfavor, vuelve a intentarlo.");
					for (new i = 0; i < MAX_PLAYERS; i++) {
						if (IsPlayerConnected(i) && user[i][State] == 3 && user[i][jTelefono] == numero) {
							if (EnLlamada[i] == 305) {
								nume2ro = false;
								_MensajeSAN(0x00DC3AFF, "[SAN] Conexión telefónica establecida.");
								_sanCall = i;
								_Mensaje(_sanCall, 4, "00DC3A", "> {ffffff}Te encuentras en línea con SA Network.");
							} else return _Mensaje(playerid, 0, "43", "El número que desea conectar no se encuentra en esta línea.");
						}
					}
					if (nume2ro) {
						_Mensaje(playerid, 0, "43", "El número que desea conectar posiblemente no exista.");
					}
				} else _Mensaje(playerid, 3, "0", "/conectar [número de teléfono]");
			} else _Mensaje(playerid, 3, "0", "La linea de SA Network está ocupada.");
        } else return _Mensaje(playerid, 0, "419", "No eres en una camioneta de noticias o helicóptero o en el estudio.");
	} else _Mensaje(playerid, 0, "200", "No formas parte de SAN.");
	return 1;
}

CMD:directo(playerid, params[]) {
	if (Es_Faccion(playerid, 3)) {
		new string[128];
		if (isnull(params)) return _Mensaje(playerid, 3, "0", "/directo [texto]");
		new newcar = GetPlayerVehicleID(playerid);
		if (EstaEnAutoSAN(newcar) || _enPos(playerid, 7.0, 1115.0129, 1248.0106, 10.8203) || _enPos(playerid, 7.0, 657.1969, -1347.9969, 4002.7947)) {
			if (user[playerid][jRango] < 1) {
				_Mensaje(playerid, 0, "418", "Usted debe ser al menos rango 1.");
			} else {
				format(string, sizeof(string), "[SAN] %s: %s", NombreJugador(playerid), params);
				_MensajeSAN(0x00DC76FF, string);
			}
		} else return _Mensaje(playerid, 0, "419", "No eres en una camioneta de noticias o helicóptero o en el estudio.");
	} else _Mensaje(playerid, 0, "200", "No formas parte de SAN.");
	return 1;
}

CMD:prisiongarage(playerid)
{
	if (Es_Faccion(playerid, 3))
	{
		if (_enPos(playerid, 30, 781.77209500, -1330.31884800, 12.68660500))
		{
			MoveDynamicObject(portonSAN, 773.89648400, -1330.31884800, 12.68660500, 5.0);
			SetTimer("CerrarPortonSAN", 10000, 0);
			return 1;
		}
		if (_enPos(playerid, 30, 774.11425781, -1384.98632812, 12.92022705))
		{
			MoveDynamicObject(portonSAN1, 765.11425781, -1384.98632812, 12.92022705, 5.0);
			SetTimer("CerrarPortonSAN1", 10000, 0);
			return 1;
		} else _Mensaje(playerid, 0, "307", "No hay señal.");
	}
	else if (Es_Faccion(playerid, 1))
	{
		if (_enPos(playerid, 30, 135.50967, 1953.72900, 22.24931))
		{
			MoveDynamicObject(portonpf, 135.5097, 1953.7290, 14.7306, 5.0);
			SetTimer("CerrarPortonPF", 10000, 0);
			return 1;
		} else _Mensaje(playerid, 0, "307", "No hay señal.");
	} else _Mensaje(playerid, 0, "308", "Usted no tiene un mando a distancia.");
	return 1;
}
CMD:puertadeposito(playerid)
{
	if (_enPos(playerid, 10, -497.41959, -562.72961, 27.28690))
	{
		MoveDynamicObject(portondeposito, -497.4196, -562.7296, 21.7239, 4.0);
		SetTimer("depositogate", 7000, 0);
	}
	return 1;
}

//Cierre de Portones.
funcion depositogate() { MoveDynamicObject(portondeposito, -497.41959, -562.72961, 27.28690, 4.0); return 1; }
funcion CerrarPortonPF() { MoveDynamicObject(portonpf, 135.50967, 1953.72900, 22.24931, 5.0); return 1; }
funcion CerrarPortonSAN() { MoveDynamicObject(portonSAN, 781.77209500, -1330.31884800, 12.68660500, 5.0); return 1; }
funcion CerrarPortonSAN1() { MoveDynamicObject(portonSAN1, 774.11425781, -1384.98632812, 12.92022705, 5.0); return 1; }

CMD:uniformes(playerid) return cmd_equipo(playerid);
CMD:equipo(playerid)
{
	if (Es_Faccion(playerid, 1))
	{
		if (SolicitaRefuerzos[playerid] == 1) return _Mensaje(playerid, 0, "75", "No puedes cambiarte mientras solicitas refuerzos. Escribe '/NoRef'.");
		if (_enPos(playerid, 5, 219.6168, 149.6197, 1003.0089) ||
			_enPos(playerid, 5, 258.1540, 77.5021, 1003.6276) ||
			_enPos(playerid, 5, -429.4801, 688.3015, 3853.0627))
		{
			Dialog(playerid, D_EQUIPOLSPD1, DIALOG_STYLE_LIST, "{D6E1EB}Casillero policía", "Servicio\nArmería\nUniformes\nAccesorios\nSelección de skin", "Equipar", "Cancelar");
		} else _Mensaje(playerid, 0, "375", "No estás en los casilleros policía.");
	}
	else if (Es_Faccion(playerid, 3))
	{
		if (EnServicio[playerid] == 0) return _Mensaje(playerid, 0, "158", "No estas 'EnServicio', [Escribe] /servicio.");
		if (_enPos(playerid, 5, 1121.7467, 1248.0630, 10.8971))
		{
			new SAN[] = "{ffffff}Cámara\nBotiquin HP\nUniformes\nVestuario normal";
			Dialog(playerid, D_EQUIPOSAN, DIALOG_STYLE_LIST, "{D6E1EB}Casillero", SAN, "Equipar", "Cancelar");
		} else _Mensaje(playerid, 0, "375", "No estás en los casilleros de SAN.");
	}
	else if (Es_Faccion(playerid, 4))
	{
		if (EnServicio[playerid] == 0) return _Mensaje(playerid, 0, "158", "No estas 'EnServicio', [Escribe] /servicio.");
		if (_enPos(playerid, 5, 351.6515, 213.3615, 1008.4004))
		{
			new gob[] = "{ffffff}Botiquin HP\nUniformes\nChaleco\nVestuario normal";
			Dialog(playerid, D_EQUIPOALC, DIALOG_STYLE_LIST, "{D6E1EB}Casillero", gob, "Equipar", "Cancelar");
		} else _Mensaje(playerid, 0, "375", "No estás en los casilleros del gobierno.");
	}
	else if (Es_Faccion(playerid, 5))
	{
		if (EnServicio[playerid] == 0) return _Mensaje(playerid, 0, "158", "No estas 'EnServicio', [Escribe] /servicio.");
		if (_enPos(playerid, 5, -2046.9657,-215.7112,35.4445))
		{
			if (EnServicio[playerid] == 0) return _Mensaje(playerid, 0, "158", "No estas 'EnServicio', [Escribe] /servicio.");
			new eq[] = "{ffffff}Extintor\nUniformes\nVida\nVestuario normal\nBotiquin";
			Dialog(playerid, D_EQUIPOLSED, DIALOG_STYLE_LIST, "{D6E1EB}Casillero", eq, "Equipar", "Cancelar");
		} else _Mensaje(playerid, 0, "375", "No estás en los casilleros de LSED.");
	} else _Mensaje(playerid, 0, "375", "No formas parte de una facción legal.");
	return 1;
}

CMD:sir(playerid, params[]) return cmd_sirena(playerid, params);
CMD:sirena(playerid, params[]) {
	if (Es_Faccion(playerid, 1, 5)) {
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2) {
			new vehicleid = GetPlayerVehicleID(playerid);
			if(SinSonido[vehicleid] == 0) {
				SirenaCoche[0][vehicleid] = CreateObject(19292,0.0,0.0,0.0,0.0,0.0,0.0);//Azul
				SirenaCoche[1][vehicleid] = CreateObject(19290,0.0,0.0,0.0,0.0,0.0,0.0);//Rojo
				SirenaCoche[2][vehicleid] = CreateObject(19290,0.0,0.0,0.0,0.0,0.0,0.0);//Rojo Nº2
				SirenaCoche[3][vehicleid] = CreateObject(19292,0.0,0.0,0.0,0.0,0.0,0.0); //Azul nº2
				SirenaCoche[4][vehicleid] = CreateObject(18646,0.0,0.0,0.0,0.0,0.0,0.0); //Baliza Detective
				SirenaCoche[5][vehicleid] = CreateObject(19419,0.0,0.0,0.0,0.0,0.0,0.0); //Baliza Grande prendida
				SirenaCoche[6][vehicleid] = CreateObject(19797,0.0,0.0,0.0,0.0,0.0,0.0); //Estrobos pequeños 1
				SirenaCoche[7][vehicleid] = CreateObject(19797,0.0,0.0,0.0,0.0,0.0,0.0); //Estrobos pequeños 2
				SirenaCoche[8][vehicleid] = CreateObject(19620,0.0,0.0,0.0,0.0,0.0,0.0); //Nueva baliza
				if(GetVehicleModel(vehicleid) == 420) AttachObjectToVehicle(SirenaCoche[4][vehicleid],vehicleid,-0.524999,-0.075000,0.879999,0.000000,0.000000,0.000000); //Taxi
				else if(GetVehicleModel(vehicleid) == 411) { //Infernus
					AttachObjectToVehicle(SirenaCoche[6][vehicleid],vehicleid,0.000000,0.455000,0.524999,0.000000,0.000000,-179.279907);
					AttachObjectToVehicle(SirenaCoche[7][vehicleid],vehicleid,0.000000,-0.824999,0.554999,0.000000,0.000000,0.000000);
				} else if(GetVehicleModel(vehicleid) == 412) AttachObjectToVehicle(SirenaCoche[4][vehicleid],vehicleid,0.524999,0.599999,0.275000,0.000000,-2.700000,0.000000); //Voodo
				else if(GetVehicleModel(vehicleid) == 542) AttachObjectToVehicle(SirenaCoche[4][vehicleid],vehicleid,0.675000,0.600000,0.400000,0.000000,0.000000,0.000000); //Clover
				else if(GetVehicleModel(vehicleid) == 579) { //Huntley
					AttachObjectToVehicle(SirenaCoche[6][vehicleid],vehicleid,0.494999,2.400000,0.104999,0.000000,0.000000,-178.199890);
					AttachObjectToVehicle(SirenaCoche[7][vehicleid],vehicleid,-0.500000,2.400000,0.094999,0.000000,0.000000,-180.899887);
				} else if(GetVehicleModel(vehicleid) == 522) { //NRG
					AttachObjectToVehicle(SirenaCoche[6][vehicleid],vehicleid,-0.240000,0.525000,0.300000,-2.700001,5.399999,-87.659988);
					AttachObjectToVehicle(SirenaCoche[7][vehicleid],vehicleid,0.250000,0.524999,0.300000,0.000000,-4.500000,90.179977);
				} else if(GetVehicleModel(vehicleid) == 426) { //Premier
					AttachObjectToVehicle(SirenaCoche[6][vehicleid],vehicleid,0.020000,0.339999,0.674999,0.000000,0.000000,-178.919876);
					AttachObjectToVehicle(SirenaCoche[7][vehicleid],vehicleid,0.000000,-1.394999,0.625000,0.000000,0.000000,0.000000);
				} else if(GetVehicleModel(vehicleid) == 560) { //Sultan
					AttachObjectToVehicle(SirenaCoche[6][vehicleid],vehicleid,0.000000,0.569999,0.639999,-6.480000,0.000000,-182.879882);
					AttachObjectToVehicle(SirenaCoche[7][vehicleid],vehicleid,0.000000,-0.974999,0.675000,0.000000,0.000000,0.000000);
				} else if(GetVehicleModel(vehicleid) == 402) AttachObjectToVehicle(SirenaCoche[5][vehicleid],vehicleid, 0.000000,-0.524999,0.749999,0.000000,0.000000,0.000000); //Buffalo
				else if(GetVehicleModel(vehicleid) == 541) AttachObjectToVehicle(SirenaCoche[6][vehicleid],vehicleid,0.000000,0.375000,0.489999,0.000000,0.000000,-183.599884); //Bullet
				else if(GetVehicleModel(vehicleid) == 415) { //Cheetah
					AttachObjectToVehicle(SirenaCoche[6][vehicleid],vehicleid,-0.000000,0.150000,0.449999,-18.900001,-0.000000,-175.499893);
					AttachObjectToVehicle(SirenaCoche[7][vehicleid],vehicleid,0.000000,-0.899999,0.449999,0.0,0.0,0.0);
				} else if(GetVehicleModel(vehicleid) == 562) AttachObjectToVehicle(SirenaCoche[4][vehicleid],vehicleid,0.45, 0.62, 0.38,0.0,0.0,0.0); //Elegy
				else if(GetVehicleModel(vehicleid) == 559) AttachObjectToVehicle(SirenaCoche[4][vehicleid],vehicleid,0.45, 0.47, 0.36,0.0,0.0,0.0); //Jester
				else if(GetVehicleModel(vehicleid) == 421) AttachObjectToVehicle(SirenaCoche[4][vehicleid],vehicleid,0.40, 0.90, 0.25,0.0,0.0,0.0); //Washington
				else if(GetVehicleModel(vehicleid) == 468) AttachObjectToVehicle(SirenaCoche[4][vehicleid],vehicleid,0,-0.80,0.4,0.0,0.0,0.0); //Sanchez
				else if(GetVehicleModel(vehicleid) == 567) AttachObjectToVehicle(SirenaCoche[4][vehicleid],vehicleid,0,1.1,0.3,0.0,0.0,0.0); //Savanna
				else if(GetVehicleModel(vehicleid) == 566) AttachObjectToVehicle(SirenaCoche[4][vehicleid],vehicleid,-0.60,0,0.88,0.0,0.0,0.0); //Tahoma
				else if(GetVehicleModel(vehicleid) == 521) { //FCR900
					AttachObjectToVehicle(SirenaCoche[6][vehicleid],vehicleid,0.184999,0.349999,0.300000,-5.399999,-5.400001,-248.759872);
					AttachObjectToVehicle(SirenaCoche[7][vehicleid],vehicleid,-0.185000,0.349999,0.329999,-5.399999,-5.400001,-470.160827);
				} else if(GetVehicleModel(vehicleid) == 490) AttachObjectToVehicle(SirenaCoche[4][vehicleid],vehicleid,0.0,1.20,0.60,0.0,0.0,0.0); //FbiRanch
				else if(GetVehicleModel(vehicleid) == 482) AttachObjectToVehicle(SirenaCoche[4][vehicleid],vehicleid,-0.5,0.75,1,0.0,0.0,0.0); //Burrito
				else if(GetVehicleModel(vehicleid) == 523) { //HPV 1000
					AttachObjectToVehicle(SirenaCoche[0][vehicleid],vehicleid,0.1,0.8,0.4,0.0,0.0,0.0);
					AttachObjectToVehicle(SirenaCoche[1][vehicleid],vehicleid,-0.2,0.8,0.4,0.0,0.0,0.0);
				} else if(GetVehicleModel(vehicleid) == 427) { //Enforcer
					AttachObjectToVehicle(SirenaCoche[1][vehicleid],vehicleid,-0.4,1.10,1.5,0.0,0.0,0.0);
					AttachObjectToVehicle(SirenaCoche[2][vehicleid],vehicleid,0.4,1.10,1.5,0.0,0.0,0.0);
				} else if(GetVehicleModel(vehicleid) == 596) { //Patrulla LSPD
					AttachObjectToVehicle(SirenaCoche[0][vehicleid],vehicleid,0.5,-0.3,1.0,0.0,0.0,0.0);
					AttachObjectToVehicle(SirenaCoche[1][vehicleid],vehicleid,-0.5,-0.3,1.0,0.0,0.0,0.0);
				} else if(GetVehicleModel(vehicleid) == 597) { //Patrulla SFPD
					AttachObjectToVehicle(SirenaCoche[0][vehicleid],vehicleid,0.5,-0.3,1.0,0.0,0.0,0.0);
					AttachObjectToVehicle(SirenaCoche[1][vehicleid],vehicleid,-0.5,-0.3,1.0,0.0,0.0,0.0);
				} else if(GetVehicleModel(vehicleid) == 598) { //Patrulla LVPD
					AttachObjectToVehicle(SirenaCoche[0][vehicleid],vehicleid,0.5,-0.3,1.0,0.0,0.0,0.0);
					AttachObjectToVehicle(SirenaCoche[1][vehicleid],vehicleid,-0.5,-0.3,1.0,0.0,0.0,0.0);
				} else if(GetVehicleModel(vehicleid) == 599) { //Ranger
					AttachObjectToVehicle(SirenaCoche[0][vehicleid],vehicleid,0.5,-0.0,1.2,0.0,0.0,0.0);
					AttachObjectToVehicle(SirenaCoche[1][vehicleid],vehicleid,-0.5,-0.0,1.2,0.0,0.0,0.0);
				} else if(GetVehicleModel(vehicleid) == 525) { // Grua
					AttachObjectToVehicle(SirenaCoche[1][vehicleid],vehicleid,-0.5,-0.5,1.5,0.0,0.0,0.0);
					AttachObjectToVehicle(SirenaCoche[2][vehicleid],vehicleid,0.5,-0.5,1.5,0.0,0.0,0.0);
				}
				AccionesRol(playerid, 0, "coloca una sirena policial en el vehículo.");
				SinSonido[vehicleid] = 1;
				return 1;
			} else if(SinSonido[vehicleid] == 1) {
				DestroyObject(SirenaCoche[0][vehicleid]);
				DestroyObject(SirenaCoche[1][vehicleid]);
				DestroyObject(SirenaCoche[2][vehicleid]);
				DestroyObject(SirenaCoche[3][vehicleid]);
				DestroyObject(SirenaCoche[4][vehicleid]);
				DestroyObject(SirenaCoche[5][vehicleid]);
				DestroyObject(SirenaCoche[6][vehicleid]);
				DestroyObject(SirenaCoche[7][vehicleid]);
				DestroyObject(SirenaCoche[8][vehicleid]);
				SinSonido[vehicleid] = 0;
				AccionesRol(playerid, 0, "quita una sirena policial del vehículo.");
				return 1;
			}
		}
	} else _Mensaje(playerid, 0, "381", "No eres LSPD/SADOC/LSED.");
	return 1;
}

CMD:guantera(playerid, params[]) {
    if (!IsPlayerInAnyVehicle(playerid)) { return _Mensaje(playerid, 0, "130", "No estás en ningún vehículo."); }
    new vehiculo = GetPlayerVehicleID(playerid);
    if (LSPD_Veh(vehiculo) || SASD_Veh(vehiculo) || SAN_Vehicle(vehiculo) || GOB_Vehicle(vehiculo) || LSED_Vehicle(vehiculo)) { return _Mensaje(playerid, 0, "357", "No puedes abrir guanteras de facciones."); }
    if (EnMotos_Bicis(vehiculo)) return _Mensaje(playerid, 0, "411", "Este tipo de vehículo no contiene guantera (bikes).");
    for (new v = 0; v < MAX_VEHICULOS; v++) {
    	if(InfoVehiculo[v][vID] == vehiculo) {
			if (InfoVehiculo[v][vEnDeposito] == 1) return _Mensaje(playerid, 0, "148", "Este vehículo se encuentra embargado, paga la multa en LSPD o en el ayuntamiento.");
			if (!TieneLlavesVeh(playerid, InfoVehiculo[v][vID])) { _Mensaje(playerid, 0, "126", "No tienes las llaves de este vehículo."); return 1;}
			if (!InfoVehiculo[v][v_Guantera]) {
				InfoVehiculo[v][v_Guantera] = 1;
				_Mensaje(playerid, 5, "0", "La guantera del vehículo ha sido abierta.");
 			} else {
 				InfoVehiculo[v][v_Guantera] = 0;
        		_Mensaje(playerid, 5, "0", "La guantera del vehículo ha sido cerrada.");
  			}
		}
	}
    return 1;
}

CMD:verguantera(playerid, params[]) {
    if (!IsPlayerInAnyVehicle(playerid)) { return _Mensaje(playerid, 0, "130", "No estás en ningún vehículo."); }
    new vehiculo = GetPlayerVehicleID(playerid);
    if (LSPD_Veh(vehiculo) || SASD_Veh(vehiculo) || SAN_Vehicle(vehiculo) || GOB_Vehicle(vehiculo) || LSED_Vehicle(vehiculo)) { return _Mensaje(playerid, 0, "357", "No puedes abrir guanteras de facciones."); }
    if (EnMotos_Bicis(vehiculo)) return _Mensaje(playerid, 0, "411", "Este tipo de vehículo no contiene guantera (bikes).");
    for (new v = 0; v < MAX_VEHICULOS; v++) {
    	if(InfoVehiculo[v][vID] == vehiculo) {
			if (InfoVehiculo[v][v_Guantera] == 0) return _Mensaje(playerid, 0, "148", "Este vehículo posee la guantera cerrada.");
			ver_Guantera(playerid, v);
			VehGuanteraPlayer[playerid] = v;
		}
	}
    return 1;
}

CMD:sacarsangre(playerid, params[]) {
    new playerid2, string[128];
    if (!sscanf(params, "d", playerid2)) {
        if (EnServicio[playerid] == 0) return _Mensaje(playerid, 0, "166", "No estas en servicio.");
        if (IsPlayerConnected(playerid2)) {
            if (Es_Faccion(playerid, 5)) {
                if (CercaDelWeon(5.0, playerid, playerid2)) {
                    new Float: HP = user[playerid2][jSangre];
                    if (HP < 100) return _Mensaje(playerid, 0, "705", "El paciente debe estar con el máximo de vida.");
                    Sangre_(playerid2, HP - 30);
                    SetPlayerDrunkLevel(playerid2, 3000);
                    SangreLSED += 100;
                    new MsgCheckMe[MAX_TEXT_CHAT];
                    format(MsgCheckMe, sizeof(MsgCheckMe), "realiza una extracción de sangre a %s.", NombreJugador(playerid2));
                    AccionesRol(playerid, 0, MsgCheckMe);
                    format(string, sizeof(string), "Hay %d ml de sangre disponible.", SangreLSED);
                    _Mensaje(playerid, 2, "0", string);
                    ActualizarEst();
                } else _Mensaje(playerid, 0, "133", "El jugador no se encuentra cerca de tí.");
            } else _Mensaje(playerid, 0, "704", "No eres Medico.");
        } else _Mensaje(playerid, 0, "75", "Jugador no conectado.");
    } else _Mensaje(playerid, 3, "0", "/sacarsangre [id jugador]");
    return 1;
}
//----Curar usuario como administrador nivel 3------//
//----- hasta aqui
CMD:curar(playerid, params[]) {
    new string[256], playerid2, MsgCheckMe[MAX_TEXT_CHAT];
    if(!CheckTimer(120, user[playerid][jTiempoCurar])) {
        if (Es_Faccion(playerid, 5)) {
            if (sscanf(params, "d", playerid2)) return _Mensaje(playerid, 3, "0", "/curar [id jugador]");
            if (IsPlayerConnectedEx(playerid2)) {
                if (Es_Faccion(playerid, 5) == Es_Faccion(playerid2, 5)) return _Mensaje(playerid, 0, "643", "No puedes curar a los mismos de tu facción.");
                if (playerid == playerid2) return _Mensaje(playerid, 0, "722", "No puedes usar este comando contigo mismo.");
                if (CercaDelWeon(5.0, playerid, playerid2)) {
                   	new Float: health = user[playerid2][jSangre];
                    if (health >= 85) Sangre_(playerid2, 100);
                    else Sangre_(playerid2, health + 60.0);
                    SangreLSED -= 60;
                    format(MsgCheckMe, sizeof(MsgCheckMe), "da a %s 60ml de sangre.", NombreJugador(playerid2)); AccionesRol(playerid, 0, MsgCheckMe);
                    user[playerid][jTiempoCurar] = gettime();
                } else return _Mensaje(playerid, 0, "133", "El jugador no se encuentra cerca de tí.");
            }
        }
    } else {
        format(string, 144, "Faltan %d segundos para que puedas usar este comando.", CheckTimer(120, user[playerid][jTiempoCurar]));
        _Mensaje(playerid, 0, "536", string);
    }
    return 1;
}

CMD:banco(playerid, params[]) {
	new coordsstring2[300];
    if (!EstaEnBanco(playerid)) return _Mensaje(playerid, 0, "247", "No estás en el banco para registrar tu tarjeta.");
    format(coordsstring2, sizeof(coordsstring2), "{D6E1EB}Banco ({00c200}%d{D6E1EB})", user[playerid][jBanco]);
    Dialog(playerid, D_BANCO, DIALOG_STYLE_LIST, coordsstring2, "Abrir cuenta\nTarjeta débito\nRetirar dinero\nDepositar dinero\nTransferir dinero", "Seleccionar", "Cancelar");
    return 1;
}

CMD:repararvehtodos(playerid, params[]) {
	new string[256];
    if (IsPlayerConnected(playerid)) {
        if (user[playerid][jAdmin] < 4) {
            _Mensaje(playerid, 0, "244", "Tú no tienes acceso a el comando /repararvehtodos.");
            return 1;
        }
        for (new v = 0; v < MAX_VEHICLES; v++) {
            RepairVehicle(v);
            SetVehicleHealth(v, 1000.0);
        }
        format(string, sizeof(string), "[AdmInfo]{FFFFFF} %s utilizó /repararvehtodos, reparó todos los vehículos del servidor.", NombreRJugador(playerid));
        MensajeAdmin(string);
        _Mensaje(playerid, 2, "0", "Todos los vehiculos reparados.");
    }
    return 1;
}

CMD:traervehiculo(playerid, params[]) {
	new string[256];
    if (user[playerid][jAdmin] < 1) return _Mensaje(playerid, 0, "239", "Tú no tienes acceso a el comando /traervehiculo.");
    new Float: plocx,Float: plocy,Float: plocz,vehicleid;
    if (!sscanf(params, "i", vehicleid)) {
        if (vehicleid > 1000 || vehicleid < 1) { return _Mensaje(playerid, 0, "372", "Máximo de vehículos 1000."); }
        GetPlayerPos(playerid, plocx, plocy, plocz);
        SetVehicleVirtualWorld(vehicleid, GetPlayerVirtualWorld(playerid));
        LinkVehicleToInterior(vehicleid, GetPlayerInterior(playerid));
        format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s utilizó '/traervehiculo', (Vehículo ID: %d).", NombreRJugador(playerid), vehicleid);
        MensajeAdmin(string);
        return SetVehiclePos(vehicleid, plocx, plocy + 4, plocz);
    } else _Mensaje(playerid, 3, "0", "/traervehiculo [vehiculoid]");
    return 1;
}

CMD:irvehiculo(playerid, params[]) {
	new string[256];
    if (user[playerid][jAdmin] < 1) return _Mensaje(playerid, 0, "240", "Tú no tienes acceso a el comando /Ircar.");
    new Float: cwx2,Float: cwy2,Float: cwz2,vehicleid;
    if (!sscanf(params, "i", vehicleid)) {
        if (vehicleid > 1000 || vehicleid < 1) { return _Mensaje(playerid, 0, "372", "Máximo de vehículos 1000."); }
        GetVehiclePos(vehicleid, cwx2, cwy2, cwz2);
        format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s utilizó '/irvehiculo', (Vehículo ID: %d).", NombreRJugador(playerid), vehicleid);
        MensajeAdmin(string);
        return SetPlayerPos(playerid, cwx2, cwy2, cwz2);
    } else _Mensaje(playerid, 3, "0", "/irvehiculo [vehiculoid]");
    return 1;
}

CMD:editarcolorveh(playerid, params[]) {
	if (user[playerid][jAdmin] < 3) return _Mensaje(playerid, 4, "b0b0b0", "No eres administrador.");
	new playerid2, color;
	if (sscanf(params, "ii", playerid2, color)) { return _Mensaje(playerid, 3, "0", "/editarcolorveh [id jugador] [paint 0/3]."); }
	if (!CercaDelWeon(4.0, playerid, playerid2)) return _Mensaje(playerid, 4, "b00000", "Ese jugador está muy lejos.");
	if (!IsPlayerInAnyVehicle(playerid2)) { return _Mensaje(playerid, 0, "130", "Ese jugador no está en ningún vehículo."); }
	if (m_operacion[playerid2][3] != -1) return _Mensaje(playerid, 0, "130", "Ese jugador ya está en otra operación.");
	if (!(0 <= color <= 3)) { return _Mensaje(playerid, 0, "361", "Pintura debe ser del ID 0 al 3."); }
	return 1;
}

CMD:repararvehadmin(playerid, params[]) {
	new string[256];
    if (user[playerid][jAdmin] < 3) return _Mensaje(playerid, 0, "241", "Tú no tienes acceso a el comando /repararvehadmin");
    if (!IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "130", "No estás en ningún vehículo.");
    SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
    RepairVehicle(GetPlayerVehicleID(playerid));
    format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s utilizó '/repararvehadmin', (Vehículo ID: %d).", NombreRJugador(playerid), GetPlayerVehicleID(playerid));
    MensajeAdmin(string);
    return _Mensaje(playerid, 2, "0", "Reparaste el vehículo en el que te encuentras (reparo: carroceria/motor)");
}

CMD:adminreparo(playerid, params[]) {
	new string[256];
    if (user[playerid][jAdmin] < 2) return _Mensaje(playerid, 0, "242", "Tú no tienes acceso a el comando /adminreparo.");
    new vehicleid;
    if (!sscanf(params, "i", vehicleid)) {
        if (vehicleid > 1000 || vehicleid < 1) { return _Mensaje(playerid, 0, "372", "Máximo de vehículos 1000."); }
        SetVehicleHealth(vehicleid, 1000.0);
        _Mensaje(playerid, 2, "0", "Reparaste el vehículo en el que te encuentras (reparo: carroceria/motor)");
        RepairVehicle(vehicleid);
        format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s utilizó '/adminreparo', (Vehículo ID: %d).", NombreRJugador(playerid), vehicleid);
        MensajeAdmin(string);
    } else _Mensaje(playerid, 3, "0", "/adminreparo [vehiculoid]");
    return 1;
}

CMD:ir(playerid, params[]) {
    if (user[playerid][jAdmin] >= 1) {
        if (!sscanf(params, "d", params[0])) {
            if (IsPlayerConnected(params[0])) {
                new Float: p_x,Float: p_y,Float: p_z;
                GetPlayerPos(params[0], p_x, p_y, p_z);
                new interior = GetPlayerInterior(params[0]);
                new vw = GetPlayerVirtualWorld(params[0]);
                SetPosEx(playerid, p_x, p_y+2, p_z, 0, interior, vw);
                return _Mensaje(playerid, 2, "0", "Teleportado.");
            } else _Mensaje(playerid, 0, "75", "Jugador no conectado.");
        } else _Mensaje(playerid, 3, "0", "/ir [id jugador]");
        return 1;
    } else _Mensaje(playerid, 0, "236", "Tú no tienes acceso a el comando /Ir.");
    return 1;
}

CMD:traer(playerid, params[]) {
    new playerid2;
    if (user[playerid][jAdmin] < 1) return _Mensaje(playerid, 0, "237", "Tú no tienes acceso a el comando /Traer.");
    if (!sscanf(params, "d", playerid2)) {
        if (IsPlayerConnected(playerid2)) {
            if (user[playerid2][jAdmin] >= 10) return _Mensaje(playerid, 0, "238", "No tienes autorización a usar este comando con este jugador.");
            new Float: p_x,Float: p_y,Float: p_z;
            GetPlayerPos(playerid, p_x, p_y, p_z);
            new interior = GetPlayerInterior(playerid);
            new vw = GetPlayerVirtualWorld(playerid);
            SetPosEx(playerid2, p_x, p_y+2, p_z, 0, interior, vw);
            return _Mensaje(playerid, 2, "0", "Teleportado.");
        } else _Mensaje(playerid, 0, "75", "Jugador no conectado.");
    } else _Mensaje(playerid, 3, "0", "/traer [id jugador]");
    return 1;
}

CMD:apagarmovil(playerid, params[]) {
    if (!B_Telefono[playerid]) {
        B_Telefono[playerid] = 1;
        _Mensaje(playerid, 2, "0", "Teléfono apagado.");
    } else {
        B_Telefono[playerid] = 0;
        _Mensaje(playerid, 2, "0", "Teléfono encendido.");
    }
    return 1;
}

CMD:frecuencia(playerid, params[]) {
    new string[128], frequency;
	if (user[playerid][jNivel] == 1) return _Mensaje(playerid, 0, "87", "Debes ser mínimo nivel 2, para utilizar el radio portable.");
    if(user[playerid][jm_Derecha] != 82 && user[playerid][jm_Izquierda] != 82){ _Mensaje(playerid, 0, "9", "No tienes una radio ninguna mano."); return 1;}
	if (sscanf(params, "d", frequency)) {
        _Mensaje(playerid, 3, "0", "/frecuencia [frecuencia]");
        _Mensaje(playerid, 2, "0", "Ajuste la frecuencia de su radio - -1 Si no quieres oir nada.");
        return 1;
    }
    if (frequency > 30000 || frequency < -30000) { return _Mensaje(playerid, 0, "233", "Frecuencia no debe ser menor a -30000 y mayor 30000."); }
	user[playerid][jFrecuencia] = frequency;
 	format(string, sizeof(string), "Ajustaste la frecuencia de tu radio portable a %d khz.", frequency);
  	_Mensaje(playerid, 2, "0", string);
    return 1;
}

CMD:pr(playerid, params[])
{
	if (user[playerid][jNivel] == 1) return _Mensaje(playerid, 0, "87", "Debes ser mínimo nivel 2, para utilizar el radio portable.");
    if (user[playerid][jm_Derecha] != 82 && user[playerid][jm_Izquierda] != 82){ _Mensaje(playerid, 0, "9", "No tienes una radio ninguna mano."); return 1;}
    if (GetPVarInt(playerid, "EnCrack") == 1) return _Mensaje(playerid, 0, "12", "No puedes usar este comando mientras estás herido.");
    if (user[playerid][jFrecuencia] == -1) return _Mensaje(playerid, 0, "12", "Ajusta la /frecuencia, la tienes en -1.");
    if (user[playerid][jEncarcelado] > 0) return _Mensaje(playerid, 0, "213", "No puedes usar este comando mientras estás en prisión.");
    if (user[playerid][jFrecuencia] >= 1 || user[playerid][jFrecuencia] <= -1){
    	if(isnull(params)) return _Mensaje(playerid, 3, "0", "/pr [texto radio]");
     	EnviarTextoRadio(playerid, params);
      	AccionesRol(playerid, 1, "tomó su radio portable y dice algo.");
    } else _Mensaje(playerid, 2, "0", "Primero ajusta la frecuencia. [Escribe]{00C200} '/frecuencia'");
    return 1;
}

CMD:apagarradio(playerid)
{
    if(user[playerid][jm_Derecha] != 82 && user[playerid][jm_Izquierda] != 82){ _Mensaje(playerid, 0, "9", "No tienes una radio ninguna mano."); return 1;}
	if (B_Radio[playerid] == 0) {
 		new string[128];
   		B_Radio[playerid] = 1;
     	format(string, sizeof(string), "Has prendido tu radio portátil, y está sincronizada a %d khz.", user[playerid][jFrecuencia]);
      	_Mensaje(playerid, 2, "0", string);
   	} else {
		B_Radio[playerid] = 0;
  		_Mensaje(playerid, 2, "0", "Has apagado su radio portátil.");
    }
    return 1;
}

CMD:togfac(playerid, params[]) {
    if (!B_Faccion[playerid]) {
        B_Faccion[playerid] = 1;
        _Mensaje(playerid, 2, "0", "Mensajes de Facción desactivados.");
    } else {
        B_Faccion[playerid] = 0;
        _Mensaje(playerid, 2, "0", "Mensajes de Facción activados.");
    }
    return 1;
}

CMD:togfam(playerid, params[]) {
    if (!B_Familia[playerid]) {
        B_Familia[playerid] = 1;
        _Mensaje(playerid, 2, "0", "Mensajes de Familia desactivados.");
    } else {
        B_Familia[playerid] = 0;
        _Mensaje(playerid, 2, "0", "Mensajes de Familia activados.");
    }
    return 1;
}

CMD:togsan(playerid, params[]) {
    if (!B_SAN[playerid]) {
        B_SAN[playerid] = 1;
        _Mensaje(playerid, 2, "0", "Mensajes de SA Network desactivados.");
    } else {
        B_SAN[playerid] = 0;
        _Mensaje(playerid, 2, "0", "Mensajes de SA Network activados.");
    }
    return 1;
}

CMD:togooc(playerid, params[]) {
    if (!B_OOC[playerid]) {
        B_OOC[playerid] = 1;
        _Mensaje(playerid, 2, "0", "Mensajes OOC desactivados.");
    } else {
        B_OOC[playerid] = 0;
        _Mensaje(playerid, 2, "0", "Mensajes OOC activados.");
    }
    return 1;
}

CMD:quitarfamiliac(playerid, params[]) {
    if (!sscanf(params, "d", params[0])) {
        if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
        if (user[playerid][jAdmin] >= 10) {
            new string[128];
            new fid = user[params[0]][jMiembroFam];
            InfoFamilia[fid][fMiembros]--;
            ActualizarFamilia(fid);
            user[params[0]][jLiderFam] = 0;
            user[params[0]][jMiembroFam] = 0;
            user[params[0]][jRangoFam] = 1;
            format(string, 128, "[AvisoAdmin]: {FFFFFF}Super Admin %s a limpiado las variables de familia a %s", NombreRJugador(playerid), NombreRJugador(params[0]));
            MensajeAdmin(string);
        } else _Mensaje(playerid, 0, "728", "Tú no tienes acceso a el comando /quitarfamiliac.");
    } else _Mensaje(playerid, 3, "0", "/quitarfamiliac [id jugador]");
    return 1;
}

CMD:quitarfamilia(playerid, params[]) {
    if (!sscanf(params, "d", params[0])) {
        if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
        if (user[playerid][jAdmin] >= 10) {
            new string[128];
            user[params[0]][jLiderFam] = 0;
            user[params[0]][jMiembroFam] = 0;
            user[params[0]][jRangoFam] = 1;
            format(string, 128, "[AvisoAdmin]: {FFFFFF}Super Admin %s a limpiado las variables de familia a %s", NombreRJugador(playerid), NombreRJugador(params[0]));
            MensajeAdmin(string);
        } else _Mensaje(playerid, 0, "728", "Tú no tienes acceso a el comando /quitarfamilia.");
    } else _Mensaje(playerid, 3, "0", "/quitarfamilia [id jugador]");
    return 1;
}

CMD:fbloquear(playerid, params[]) {
    new string[256];
	new ID_PFam = user[playerid][jLiderFam];
	if (!ID_PFam) return _Mensaje(playerid, 0, "367", "No eres lider de ninguna familia.");
	if (InfoFamilia[ID_PFam][fChat] == 1) {
	    InfoFamilia[ID_PFam][fChat] = 0;
	    format(string, sizeof(string), "Líder %s desbloqueo el chat /fam.", NombreRJugador(playerid));
    	MensajeFamilia(ID_PFam, C_LIGHTBLUE, string);
	} else {
	    InfoFamilia[ID_PFam][fChat] = 1;
	    format(string, sizeof(string), "Líder %s bloqueo el chat /fam.", NombreRJugador(playerid));
    	MensajeFamilia(ID_PFam, C_LIGHTBLUE, string);
	}
    return 1;
}

CMD:darliderfam(playerid, params[]) return cmd_darfam(playerid, params);
CMD:darfam(playerid, params[]) {
    if (user[playerid][jAdmin] >= 5 || user[playerid][jEncargado][2] == 1) {
        if (!sscanf(params, "di", params[0], params[1])) {
            if (params[1] < 0 || params[1] > MAX_FAMILIAS) return _Mensaje(playerid, 0, "511", "ID familia incorrecta.");
            if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");

            new string[128];
            user[params[0]][jLiderFam] = params[1];
            user[params[0]][jMiembroFam] = params[1];
            user[params[0]][jRangoFam] = 5;
            format(string, sizeof(string), "* %s te asignó el líder de la Familia %s.", NombreRJugador(playerid), InfoFamilia[params[1]][fNombre]);
            _Mensaje(params[0], 4, "33CCFF", string);
            format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Head Admin %s asigno líder de la familia %s a %s.", NombreRJugador(playerid), InfoFamilia[params[1]][fNombre], NombreRJugador(params[0]));
            MensajeAdmin(string);
        } else _Mensaje(playerid, 3, "0", "/darfam [id jugador] [familia]");
    } else _Mensaje(playerid, 0, "514", "Tú no tienes acceso a el comando /Darfam.");
    return 1;
}

CMD:darmiembrofam(playerid, params[]) {
    if (user[playerid][jEncargado][2] == 1) {
        if (!sscanf(params, "di", params[0], params[1])) {
            if (params[1] < 0 || params[1] > MAX_FAMILIAS) return _Mensaje(playerid, 0, "511", "ID familia incorrecta.");
            if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
            new string[128];
            user[params[0]][jRangoFam] = 1;
            user[params[0]][jMiembroFam] = params[1];
            format(string, sizeof(string), "* %s te ha añadido como miembror de la Familia %s.", NombreRJugador(playerid), InfoFamilia[params[1]][fNombre]);
            _Mensaje(params[0], 4, "33CCFF", string);
            format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Head Admin %s asigno miembro de la familia %s a %s.", NombreRJugador(playerid), InfoFamilia[params[1]][fNombre], NombreRJugador(params[0]));
            MensajeAdmin(string);
        } else _Mensaje(playerid, 3, "0", "/darmiembrofam [id jugador] [familia]");
    } else _Mensaje(playerid, 0, "514", "Tú no tienes acceso a el comando /Darmiembrofam.");
    return 1;
}

//Comandos de Familias.
CMD:fllaves(playerid, params[]) {
    new member = user[playerid][jMiembroFam];
    new leader = user[playerid][jLiderFam];
    if (member > 0 || leader > 0) {
        new vstring[1024];
        for (new i = 0; i < MAX_VEHFAMILIAS; i++) {
            if (InfoVehFam[member][i][vID] != INVALID_VEHICLE_ID) {
                format(vstring, sizeof(vstring), "#%d | ID Vehículo: %d | Modelo: %s", i, InfoVehFam[member][i][vID], nombre_vehiculo[InfoVehFam[member][i][vModelo] - 400]);
                _Mensaje(playerid, 2, "0", vstring);
            } else {
                format(vstring, sizeof(vstring), "#%d | Ranura vacía.", i);
                _Mensaje(playerid, 2, "0", vstring);
            }
        }
    } else _Mensaje(playerid, 0, "687", "No perteneces a ninguna familia.");
    return 1;
}

SurfingCheck(vehicleid) {
    foreach(Player, p) {
        if(GetPlayerSurfingVehicleID(p) == vehicleid) {
            new Float: x, Float: y, Float: z;
            GetPlayerPos(p, x, y, z);
            SetPVarFloat(p, "tempPosX", x);
            SetPVarFloat(p, "tempPosY", x);
            SetPVarFloat(p, "tempPosZ", x);
            SetTimerEx("SurfingFix", 2000, 0, "i", p);
        }
    }
}

funcion SurfingFix(playerid) {
    SetPlayerPos(playerid, GetPVarFloat(playerid, "tmpPosX"), GetPVarFloat(playerid, "tmpPosY"), GetPVarFloat(playerid, "tmpPosZ"));
    DeletePVar(playerid, "tmpPosX");
    DeletePVar(playerid, "tmpPosY");
    DeletePVar(playerid, "tmpPosZ");
    return 1;
}

CMD:festacionar(playerid, params[]) {
    new member = user[playerid][jMiembroFam];
    new leader = user[playerid][jLiderFam];
    new f = user[playerid][jMiembroFam];
    if (member > 0 || leader > 0) {
        for (new d = 0; d < MAX_VEHFAMILIAS; d++) {
            if (IsPlayerInVehicle(playerid, InfoVehFam[f][d][vID])) {
                if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return _Mensaje(playerid, 0, "126", "Debes ser el conductor");
                new Float: x, Float: y, Float: z, Float: angle, Float: health, int, vw;
                GetVehicleHealth(InfoVehFam[f][d][vID], health);
                if (health < 800) return _Mensaje(playerid, 0, "126", "El vehiculo está muy dañado para poder ser estacionado.");
                GetVehiclePos(InfoVehFam[f][d][vID], x, y, z);
                GetVehicleZAngle(InfoVehFam[f][d][vID], angle);
                vw = GetPlayerVirtualWorld(playerid);
                int = GetPlayerInterior(playerid);
                SurfingCheck(GetPlayerVehicleID(playerid));
                UpdateGangVehicleParkPosition(f, d, x, y, z, angle, health, vw, int);
                InfoVehFam[f][d][vPosicionX] = x;
                InfoVehFam[f][d][vPosicionY] = y;
                InfoVehFam[f][d][vPosicionZ] = z;
                InfoVehFam[f][d][vPosicionR] = angle;
                new MsgCheckMe[MAX_TEXT_CHAT];
                format(MsgCheckMe, sizeof(MsgCheckMe), "ha estacionado el vehículo de su familia.");
                AccionesRol(playerid, 0, MsgCheckMe);
                ActualizarFamilia(f);
                return 1;
            }
        }
    } else _Mensaje(playerid, 0, "687", "No perteneces a ninguna familia.");
    return 1;
}

CMD:crearvehfam(playerid, params[]) {

    new string[128], family, modelid, color1, color2;
    if (sscanf(params, "dddd", family, modelid, color1, color2)) return _Mensaje(playerid, 3, "0", "/crearautofam [id familia] [modelo id] [color 1] [color 2]");
   	if (user[playerid][jAdmin] >= 5) { _Mensaje(playerid, 0, "471", "Tú no tienes acceso a el comando /crearautofam."); return 1; }
    if (family < 1 || family > MAX_FAMILIAS) { _Mensaje(playerid, 0, "471", "Familias: 1 - 10"); return 1; }
    if (color1 < 0 || color1 > 126) { _Mensaje(playerid, 0, "471", "COLOR: 0 a 126!"); return 1; }
    if (color2 < 0 || color2 > 126) { _Mensaje(playerid, 0, "471", "COLOR: 0 a 126!"); return 1; }
    if (modelid < 400 || modelid > 611) { _Mensaje(playerid, 0, "471", "Vehiculos: 400 al 611 !"); return 1; }
    new gangvehicleid = GetGangFreeVehicleId(family);
    if (gangvehicleid == -1) return _Mensaje(playerid, 0, "471", "Esa familia no puede tener más coches.");
    new Float: X, Float: Y, Float: Z, Float: Angle;
    GetPlayerPos(playerid, X, Y, Z);
    GetPlayerFacingAngle(playerid, Angle);
    new car = CrearFamVeh(family, gangvehicleid, modelid, X, Y, Z, Angle, color1, color2);
    if (car == INVALID_VEHICLE_ID) {
        _Mensaje(playerid, 0, "471", "Algo salió mal y el coche no se creó.");
    } else {
        format(string, sizeof(string), "Vehiculo creado - (ID vehículo %d).", car);
        _Mensaje(playerid, 2, "0", string);
        ActualizarFamilia(family);
    }
    return 1;
}

CMD:borrarvehfam(playerid, params[]) {
    new family, vehicleid;
    if (sscanf(params, "dd", family, vehicleid)) return _Mensaje(playerid, 3, "0", "/borrarautofam [id familia] [id auto]");
    if (user[playerid][jAdmin] < 5) {
        _Mensaje(playerid, 0, "471", "Tú no tienes acceso a el comando /borrarvehfam.");
        return 1;
    }
    if (family < 1 || family > MAX_FAMILIAS) {
        _Mensaje(playerid, 0, "126", "Familias: 1 - 10.");
        return 1;
    }
    new gangvehicleid = VehiculoDeFamilia(family, vehicleid);
    if (gangvehicleid == -1) return _Mensaje(playerid, 0, "126", "Esa familia no posee ese vehiculo");
    DestroyGangVehicle(family, gangvehicleid);
    ActualizarFamilia(family);
    return 1;
}

CMD:organizaciones(playerid, params[]) return cmd_familias(playerid, params);
CMD:familias(playerid, params[])
{
	new coordsstring[300], DialogStatus[3000], ftipo[30], number = 0;
	strcat(DialogStatus, "Líder\tMiembros\tTipo\tNombre\n", sizeof(DialogStatus));
	for (new i = 1; i < sizeof(InfoFamilia); i++) {
			switch(InfoFamilia[i][fTipo]){
			case 0: ftipo = "Ninguno";
			case 1: ftipo = "Pandilla";
			case 2: ftipo = "Mafia";
			case 3: ftipo = "Legal";
			case 4: ftipo = "Motoqueros";
			case 5: ftipo = "Triada";
			case 6: ftipo = "Criminal";
			case 7: ftipo = "Ilegal";
			case 8: ftipo = "Network";
		}
			number++;
			if(InfoFamilia[i][fMiembros])
			{
				format(coordsstring, sizeof(coordsstring), "{ffffff}%s\t%d\t%s\t%s\n", InfoFamilia[i][fLider], InfoFamilia[i][fMiembros], ftipo, InfoFamilia[i][fNombre]);
				strcat(DialogStatus, coordsstring);
			}
			Dialog(playerid, D_INVALIDO, DIALOG_STYLE_TABLIST_HEADERS, "{D6E1EB}Facciones", DialogStatus, "Cerrar", "");
	}
	return 1;
}

CMD:cajafuerte(playerid)
{
	new tDialogo[300];
    if (!IsPlayerConnected(playerid)) return _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
    if (!user[playerid][jLiderFam] && !user[playerid][jMiembroFam]) return _Mensaje(playerid, 0, "137", "No tienes ninguna familia.");
    if (user[playerid][jRangoFam] < 3) return _Mensaje(playerid, 0, "607", "No tienes rango(3,4,5) suficiente para retirar cosas de la caja fuerte.");
    new fid = user[playerid][jMiembroFam];
    if (!_enPos(playerid, 3, InfoFamilia[fid][fCajaFuerteX], InfoFamilia[fid][fCajaFuerteY], InfoFamilia[fid][fCajaFuerteZ])) return _Mensaje(playerid, 0, "671", "Tu no estas cerca de la caja fuerte.");
    format(tDialogo, sizeof(tDialogo), "{FFFFFF}Familia: {00C200}(%s){FFFFFF}\nDinero: {00C200}($%d)\n{FFFFFF}Armario", InfoFamilia[fid][fNombre], InfoFamilia[fid][fDinero]);
    Dialog(playerid, D_FOpciones, DIALOG_STYLE_LIST, "{D6E1EB}Tu familia:", tDialogo, "Seleccionar", "Salir");
    return 1;
}

CMD:editarfam(playerid, params[]) {
    new string[256], option[128], ID_PFam = user[playerid][jLiderFam];
    if (!IsPlayerConnected(playerid)) return _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
    if (!ID_PFam) return _Mensaje(playerid, 0, "621", "No eres lider de ninguna familia.");
    if (sscanf(params, "s[128]", option)) {
        _Mensaje(playerid, 3, "0", "/editarfam [opcion]");
        _Mensaje(playerid, 1, "nombre - rangonombre - cajafuerte.", "Opciones:");
        return 1;
    }
    if (!strcmp(option, "nombre", true, 4)) {
        if (sscanf(params, "s[128]s[128]", option, params)) return _Mensaje(playerid, 3, "0", "/editarfam nombre [nombre]");
        format(InfoFamilia[ID_PFam][fNombre], 32, "%s", params);
        format(string, sizeof(string), "Ha configurado el nombre de su familia a {33AA33}%s", params);
        _Mensaje(playerid, 2, "0", string);
        ActualizarFamilia(ID_PFam);
    } else if (!strcmp(option, "rangonombre", true, 8)) {
        new rango;
        if (sscanf(params, "s[128]is[128]", option, rango, params)) return _Mensaje(playerid, 3, "0", "/editarfam rangonombre [rango] [nombre]");
        if (rango < 0 || rango > 5) return _Mensaje(playerid, 0, "614", "Rangos de la familia están entre 1 y 5.");
        switch (rango) {
            case 1: format(InfoFamilia[ID_PFam][fRango1], 32, "%s", params);
            case 2: format(InfoFamilia[ID_PFam][fRango2], 32, "%s", params);
            case 3: format(InfoFamilia[ID_PFam][fRango3], 32, "%s", params);
            case 4: format(InfoFamilia[ID_PFam][fRango4], 32, "%s", params);
            case 5: format(InfoFamilia[ID_PFam][fRango5], 32, "%s", params);
        }
        format(string, sizeof(string), "Ha establecido su rango familia %d nombrar a {33AA33}%s", rango, params);
        _Mensaje(playerid, 2, "0", string);
        ActualizarFamilia(ID_PFam);
    } else if (!strcmp(option, "cajafuerte", true, 4)) {
        new confirm[15];
        if (InfoFamilia[ID_PFam][fCajaFuerteX] != 0 && InfoFamilia[ID_PFam][fCajaFuerteY] != 0 && InfoFamilia[ID_PFam][fCajaFuerteZ] != 0) {
            // SSCANF Check
            if (sscanf(params, "s[128]s[128]", option, confirm)) {
                _Mensaje(playerid, 3, "0", "/editarfam cajafuerte [confirmar]");
                _Mensaje(playerid, 2, "0", "Cambio de ubicación de la caja fuerte de su familia va a costar $100.");
                return 1;
            }
            // Confirm Check
            if (strcmp(confirm, "confirmar", true, 15)) {
                _Mensaje(playerid, 3, "0", "/editarfam cajafuerte [confirmar]");
                _Mensaje(playerid, 2, "0", "Cambio de ubicación de la caja fuerte de su familia va a costar $100.");
                return 1;
            }
            // Money Check
            if (ComprobarDineroJ(playerid) < 100) return _Mensaje(playerid, 0, "615", "Usted no tiene esa cantidad de dinero en su bolsillo. ($500).");
            DarDineroGC(playerid, -100);
        }
        new cfworld = GetPlayerVirtualWorld(playerid);
        GetPlayerPos(playerid, InfoFamilia[ID_PFam][fCajaFuerteX], InfoFamilia[ID_PFam][fCajaFuerteY], InfoFamilia[ID_PFam][fCajaFuerteZ]);
        InfoFamilia[ID_PFam][fCajaFuerteWorld] = cfworld;
        DestroyDynamicPickup(InfoFamilia[ID_PFam][fPickup]);
        InfoFamilia[ID_PFam][fPickup] = CreateDynamicPickup(1239, 1, InfoFamilia[ID_PFam][fCajaFuerteX], InfoFamilia[ID_PFam][fCajaFuerteY], InfoFamilia[ID_PFam][fCajaFuerteZ], cfworld);
        _Mensaje(playerid, 2, "0", "Ha configurado lugar seguro de su familia.");
        ActualizarFamilia(ID_PFam);
    } else _Mensaje(playerid, 0, "612", "Opcion invalida.");
    return 1;
}

CMD:fdespedir(playerid, params[]) {
    new ID_PFam = user[playerid][jLiderFam], string[128];
    if (!ID_PFam) return _Mensaje(playerid, 0, "621", "No eres lider de ninguna familia.");
    if (sscanf(params, "u", params[0])) return _Mensaje(playerid, 3, "0", "/fdespedir [id jugador]");
    if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "619", "Jugador desconectado.");
    if (user[params[0]][jLiderFam]) return _Mensaje(playerid, 0, "621", "No se puede despedir el líder de la familia.");
    if (!user[params[0]][jMiembroFam]) return _Mensaje(playerid, 0, "619", "El jugador no está en su familia.");
    if (user[params[0]][jMiembroFam] != ID_PFam) return _Mensaje(playerid, 0, "619", "El jugador no está en su familia.");
    format(string, sizeof(string), "Líder %s expulsó a %s de la familia.", NombreRJugador(playerid), NombreRJugador(params[0]));
    MensajeFamilia(ID_PFam, C_LIGHTBLUE, string);
    InfoFamilia[ID_PFam][fMiembros]--;
    user[params[0]][jMiembroFam] = 0;
    user[params[0]][jRangoFam] = 1;
    ActualizarFamilia(ID_PFam);
    return 1;
}

CMD:fdarrango(playerid, params[]) {
    new ID_PFam = user[playerid][jLiderFam], player, Val, string[128];
    if (!ID_PFam) return _Mensaje(playerid, 0, "621", "No eres lider de ninguna familia.");
    if (sscanf(params, "ui", player, Val)) return _Mensaje(playerid, 3, "0", "/darrango [id jugador] [número rango]");
    if (!IsPlayerConnected(player)) return _Mensaje(playerid, 0, "621", "Id de jugador no esta conectada.");
    if (Val < 1) return _Mensaje(playerid, 0, "621", "Número de rango debe ser positivo.");
    if (user[player][jLiderFam]) return _Mensaje(playerid, 0, "621", "No le puedes cambiar el rango a un lider.");
    if (Val > 5) return _Mensaje(playerid, 0, "621", "Las familias tienen máximo 5 rangos.");
    if (user[player][jMiembroFam] != ID_PFam) return _Mensaje(playerid, 0, "621", "Ese jugador no pertenece a tu familia.");
    user[player][jRangoFam] = Val;
    format(string, sizeof(string), "Líder %s asignó rango %d al miembro %s.", NombreRJugador(playerid), Val, NombreRJugador(player));
    MensajeFamilia(ID_PFam, C_LIGHTBLUE, string);
    ActualizarFamilia(ID_PFam);
    return 1;
}

CMD:salirfamilia(playerid, params[]) {
    new string[128];
    if (!IsPlayerConnected(playerid)) return _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
    if (!user[playerid][jLiderFam] && !user[playerid][jMiembroFam]) return _Mensaje(playerid, 0, "137", "No tienes ninguna familia.");
    new fid = user[playerid][jMiembroFam];
    format(string, sizeof(string), "* Saliste de la familia, {33AA33}%s.", InfoFamilia[fid][fNombre]);
    _Mensaje(playerid, 4, "33CCFF", string);
    InfoFamilia[fid][fMiembros]--;
    ActualizarFamilia(fid);
    user[playerid][jLiderFam] = 0;
    user[playerid][jMiembroFam] = 0;
    user[playerid][jRangoFam] = 1;
    return 1;
}

CMD:famseditar(playerid, params[]) {
    new option[64], fid;
    if (!IsPlayerConnected(playerid)) return _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
    if (user[playerid][jAdmin] >= 5 || user[playerid][jEncargado][2] == 1) {
        if (sscanf(params, "is[64]s[64]", fid, option, params)) {
            _Mensaje(playerid, 3, "0", "/famseditar [ranura] [opcion] [cantida]");
            _Mensaje(playerid, 1, "nombre - lider", "Opciones:");
            return 1;
        }
        if (fid < 1 || fid > MAX_FAMILIAS) return _Mensaje(playerid, 0, "626", "Las familias tienen entre 1 a 10.");
        if (strcmp(option, "nombre", true) == 0) {
            format(InfoFamilia[fid][fNombre], 64, "%s", params);
            ActualizarFamilia(fid);
        } else if (strcmp(option, "lider", true) == 0) {
            format(InfoFamilia[fid][fLider], 64, "%s", params);
            ActualizarFamilia(fid);
        } else _Mensaje(playerid, 0, "606", "Opcion Invalida.");
    } else _Mensaje(playerid, 0, "668", "Tú no tienes acceso a el comando /familiaeditar.");
    return 1;
}

CMD:editartipofam(playerid, params[]) {
    if (!IsPlayerConnected(playerid)) return _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
    if (user[playerid][jAdmin] >= 5) {
        if (sscanf(params, "ddd", params[0], params[1], params[2])) return _Mensaje(playerid, 3, "0", "/editartipofam [ranura] [opcion (1 miembros - 2 tipo '1 pandillero - 2 mafia')] ");
        if (params[0] < 1 || params[0] > MAX_FAMILIAS) return _Mensaje(playerid, 0, "626", "Las familias tienen entre 1 y 10.");
        if (InfoFamilia[params[0]][fMiembros] == 0) return _Mensaje(playerid, 0, "267", "Esa ranura de familia está vacía.");
        if(params[1] == 0) return _Mensaje(playerid, 0, "267", "0 no es una opción.");
        if(params[1] == 1){
            InfoFamilia[params[0]][fMiembros] = params[2];
            new str[256];
            format(str, sizeof(str), "[AvisoAdmin]: {FFFFFF}Head Admin %s modifico los miembros a %d de la familia %s (ID %d).", NombreRJugador(playerid), InfoFamilia[params[0]][fMiembros], InfoFamilia[params[0]][fNombre], params[0]);
            MensajeAdmin(str);
            ActualizarFamilia(params[0]);
            return 1;
		}
		if(params[1] == 2){
		    if(params[2] == 0) return _Mensaje(playerid, 0, "267", "0 no es un tipo de familia/organización.");
            if(params[2] == 1){
                InfoFamilia[params[0]][fTipo] = 1;
                new str[256];
                format(str, sizeof(str), "[AvisoAdmin]: {FFFFFF}Game Admin %s modifico el tipo de familia %s (ID Familia: %d), a pandilleros.", NombreRJugador(playerid), InfoFamilia[params[0]][fNombre], params[0]);
                MensajeAdmin(str);
                ActualizarFamilia(params[0]);
			} else if(params[2] == 2){
                InfoFamilia[params[0]][fTipo] = 2;
                new str[256];
                format(str, sizeof(str), "[AvisoAdmin]: {FFFFFF}Game Admin %s modifico el tipo de familia %s (ID Familia: %d), a mafia.", NombreRJugador(playerid), InfoFamilia[params[0]][fNombre], params[0]); //tipo para el /fabricar
                MensajeAdmin(str);
                ActualizarFamilia(params[0]);
			} else if(params[2] == 3){
                InfoFamilia[params[0]][fTipo] = 3;
                new str[256];
                format(str, sizeof(str), "[AvisoAdmin]: {FFFFFF}Game Admin %s modifico el tipo de familia %s (ID Familia: %d), a legal.", NombreRJugador(playerid), InfoFamilia[params[0]][fNombre], params[0]);
                MensajeAdmin(str);
                ActualizarFamilia(params[0]);
			} else if(params[2] == 4){
                InfoFamilia[params[0]][fTipo] = 4;
                new str[256];
                format(str, sizeof(str), "[AvisoAdmin]: {FFFFFF}Game Admin %s modifico el tipo de familia %s (ID Familia: %d), a motoqueros.", NombreRJugador(playerid), InfoFamilia[params[0]][fNombre], params[0]);
                MensajeAdmin(str);
                ActualizarFamilia(params[0]);
			} else if(params[2] == 5){
                InfoFamilia[params[0]][fTipo] = 5;
                new str[256];
                format(str, sizeof(str), "[AvisoAdmin]: {FFFFFF}Game Admin %s modifico el tipo de familia %s (ID Familia: %d), a triada.", NombreRJugador(playerid), InfoFamilia[params[0]][fNombre], params[0]);
                MensajeAdmin(str);
                ActualizarFamilia(params[0]);
			} else if(params[2] == 6){
                InfoFamilia[params[0]][fTipo] = 6;
                new str[256];
                format(str, sizeof(str), "[AvisoAdmin]: {FFFFFF}Game Admin %s modifico el tipo de familia %s (ID Familia: %d), a criminal.", NombreRJugador(playerid), InfoFamilia[params[0]][fNombre], params[0]);
                MensajeAdmin(str);
                ActualizarFamilia(params[0]);
			} else if(params[2] == 7){
                InfoFamilia[params[0]][fTipo] = 7;
                new str[256];
                format(str, sizeof(str), "[AvisoAdmin]: {FFFFFF}Game Admin %s modifico el tipo de familia %s (ID Familia: %d), a ilegal.", NombreRJugador(playerid), InfoFamilia[params[0]][fNombre], params[0]);
                MensajeAdmin(str);
                ActualizarFamilia(params[0]);
			} else if(params[2] == 8){
                InfoFamilia[params[0]][fTipo] = 8;
                new str[256];
                format(str, sizeof(str), "[AvisoAdmin]: {FFFFFF}Game Admin %s modifico el tipo de familia %s (ID Familia: %d), a network.", NombreRJugador(playerid), InfoFamilia[params[0]][fNombre], params[0]);
                MensajeAdmin(str);
                ActualizarFamilia(params[0]);
			}
            return 1;
		}
    } else _Mensaje(playerid, 0, "514", "Tú no tienes acceso a el comando /feditar2.");
    return 1;
}

CMD:crearfam(playerid, params[]) return cmd_crearfamilia(playerid, params);
CMD:crearfamilia(playerid, params[]) {
    if (!IsPlayerConnected(playerid)) return _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
    if (user[playerid][jAdmin] >= 5 || user[playerid][jEncargado][2] == 1) {
        if (sscanf(params, "ddds[32]", params[0], params[1], params[2], params[3])) return _Mensaje(playerid, 3, "0", "/crearfamilia [id lider] [ranura] [tipo] [nombre familia]");
        if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
        if (params[1] < 1 || params[1] > MAX_FAMILIAS) return _Mensaje(playerid, 0, "626", "Las familias tienen entre 1 y 10.");
        if (InfoFamilia[params[1]][fMiembros] > 0) return _Mensaje(playerid, 0, "267", "Esta ranura de familia está siendo utilizada.");
        alm(InfoFamilia[params[1]][fNombre], params[3]);
        user[params[0]][jLiderFam] = params[1];
        user[params[0]][jMiembroFam] = params[1];
        user[params[0]][jRangoFam] = 5;
        InfoFamilia[params[1]][fMiembros]++;
        InfoFamilia[params[1]][fTipo] = params[2];
        format(InfoFamilia[params[1]][fLider], MAX_PLAYER_NAME, "%s", NombreRJugador(params[0]));
        new str[256];
        format(str, sizeof(str), "[AvisoAdmin]: {FFFFFF}Head Admin %s creó la familia %s (ID Familia: %d), y su lider será %s", NombreRJugador(playerid), InfoFamilia[params[1]][fNombre], params[1], NombreRJugador(params[0]));
        MensajeAdmin(str);
        ActualizarFamilia(params[1]);
    } else _Mensaje(playerid, 0, "514", "Tú no tienes acceso a el comando /crearfamilia.");
    return 1;
}

CMD:borrarfamilia(playerid, params[]) return cmd_borrarfam(playerid, params);
CMD:borrarfam(playerid, params[]) {
    new fid, string[256];
    if (!IsPlayerConnected(playerid)) return _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
    if (user[playerid][jAdmin] >= 10) {
        if (sscanf(params, "i", fid)) return _Mensaje(playerid, 3, "0", "/borrarfam [slot]");
        if (fid < 1 || fid > MAX_FAMILIAS) return _Mensaje(playerid, 0, "626", "Las familias tienen entre 1 y 10.");
        foreach(Player, i) {
            if (IsPlayerConnected(i)) {
                if (user[i][jMiembroFam] == fid) {
                    user[i][jLiderFam] = 0;
                    user[i][jMiembroFam] = 0;
                    user[i][jRangoFam] = 1;
                }
            }
        }
        format(string, 128, "[AvisoAdmin]: {FFFFFF}Super Admin %s elimino la familia %s[%d] (eliminar base de datos).", NombreRJugador(playerid), InfoFamilia[fid][fNombre], fid);
        MensajeAdmin(string);
        format(InfoFamilia[fid][fNombre], 32, "Ninguno");
        format(InfoFamilia[fid][fLider], MAX_PLAYER_NAME, "Ninguno");
        InfoFamilia[fid][fMiembros] = 0;
        InfoFamilia[fid][fTipo] = 0;
        InfoFamilia[fid][fCajaFuerteX] = 0;
        InfoFamilia[fid][fCajaFuerteY] = 0;
        InfoFamilia[fid][fCajaFuerteZ] = 0;
        InfoFamilia[fid][fDinero] = 0;
        format(InfoFamilia[fid][fRango1], 32, "");
        format(InfoFamilia[fid][fRango2], 32, "");
        format(InfoFamilia[fid][fRango3], 32, "");
        format(InfoFamilia[fid][fRango4], 32, "");
        format(InfoFamilia[fid][fRango5], 32, "");
        InfoFamilia[fid][fCajaFuerteWorld] = 0;
        DestroyDynamicPickup(InfoFamilia[fid][fPickup]);
        ActualizarFamilia(fid);
    } else _Mensaje(playerid, 0, "514", "Tú no tienes acceso a el comando /borrarfam.");
    return 1;
}

CMD:fac(playerid, params[])
{
	if (!IsPlayerConnected(playerid)) return _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
	if (!isnull(params))
	{
		new string[256];
		if (user[playerid][jLider] > 0 || user[playerid][jMiembro] > 0)
		{
			new member = user[playerid][jMiembro];
			if (member == 1)
			{ // LSPD
			    if (user[playerid][jDivision] == 1)
			    {
					if (user[playerid][jRango] == 12) format(string, sizeof(string), "[OOC | PD] Commander %s: {FFFFFF} %s", NombreRJugador(playerid), params);
					else if (user[playerid][jRango] == 11) format(string, sizeof(string), "[OOC | PD] Captain %s: {FFFFFF}%s", NombreRJugador(playerid), params);
					else if (user[playerid][jRango] == 10) format(string, sizeof(string), "[OOC | PD] Lieutenant III %s: {FFFFFF} %s", NombreRJugador(playerid), params);
					else if (user[playerid][jRango] == 9) format(string, sizeof(string), "[OOC | PD] Lieutenant II %s: {FFFFFF} %s", NombreRJugador(playerid), params);
					else if (user[playerid][jRango] == 8) format(string, sizeof(string), "[OOC | PD] Lieutenant I %s: {FFFFFF}%s", NombreRJugador(playerid), params);
					else if (user[playerid][jRango] == 7) format(string, sizeof(string), "[OOC | PD] Sergeant III %s: {FFFFFF}%s", NombreRJugador(playerid), params);
					else if (user[playerid][jRango] == 6) format(string, sizeof(string), "[OOC | PD] Sergeant II %s: {FFFFFF}%s", NombreRJugador(playerid), params);
					else if (user[playerid][jRango] == 5) format(string, sizeof(string), "[OOC | PD] Sergeant I %s: {FFFFFF}%s", NombreRJugador(playerid), params);
					else if (user[playerid][jRango] == 4) format(string, sizeof(string), "[OOC | PD] Oficial III %s: {FFFFFF}%s", NombreRJugador(playerid), params);
					else if (user[playerid][jRango] == 3) format(string, sizeof(string), "[OOC | PD] Oficial II %s: {FFFFFF}%s", NombreRJugador(playerid), params);
					else if (user[playerid][jRango] == 2) format(string, sizeof(string), "[OOC | PD] Oficial I %s: {FFFFFF}%s", NombreRJugador(playerid), params);
					else if (user[playerid][jRango] == 1) format(string, sizeof(string), "[OOC | PD] Probatory Officer %s: {FFFFFF}%s", NombreRJugador(playerid), params);
					else format(string, sizeof(string),"[OOC | PD] Probatory Officer] %s: {FFFFFF}%s", NombreRJugador(playerid), params);
					MensajeFaccion(1, 0x006EE5B8, string, 1);
				}
				else if (user[playerid][jDivision] == 2)
				{
					if (user[playerid][jRango] == 11) format(string, sizeof(string), "[OOC | SD] Sheriff %s: {FFFFFF} %s", NombreRJugador(playerid), params);
					else if (user[playerid][jRango] == 10) format(string, sizeof(string), "[OOC | SD] Deputy Sheriff] %s: {FFFFFF}%s", NombreRJugador(playerid), params);
					else if (user[playerid][jRango] == 9) format(string, sizeof(string), "[OOC | SD] Captain %s: {FFFFFF} %s", NombreRJugador(playerid), params);
					else if (user[playerid][jRango] == 8) format(string, sizeof(string), "[OOC | SD] Lieutenant %s: {FFFFFF} %s", NombreRJugador(playerid), params);
					else if (user[playerid][jRango] == 7) format(string, sizeof(string), "[OOC | SD] Sergeant III %s: {FFFFFF}%s", NombreRJugador(playerid), params);
					else if (user[playerid][jRango] == 6) format(string, sizeof(string), "[OOC | SD] Sergeant II %s: {FFFFFF}%s", NombreRJugador(playerid), params);
					else if (user[playerid][jRango] == 5) format(string, sizeof(string), "[OOC | SD] Sergeant I %s: {FFFFFF}%s", NombreRJugador(playerid), params);
					else if (user[playerid][jRango] == 4) format(string, sizeof(string), "[OOC | SD] Deputy S. III %s: {FFFFFF}%s", NombreRJugador(playerid), params);
					else if (user[playerid][jRango] == 3) format(string, sizeof(string), "[OOC | SD] Deputy S. II %s: {FFFFFF}%s", NombreRJugador(playerid), params);
					else if (user[playerid][jRango] == 2) format(string, sizeof(string), "[OOC | SD] Deputy S. I %s: {FFFFFF}%s", NombreRJugador(playerid), params);
					else if (user[playerid][jRango] == 1) format(string, sizeof(string), "[OOC | SD] Probatoy S  %s: {FFFFFF}%s", NombreRJugador(playerid), params);
					else format(string, sizeof(string), "[OOC | SD] %s: {FFFFFF}%s", NombreRJugador(playerid), params);
					MensajeFaccion(1,0x006EE5B8, string, 2);
				}
				else if (user[playerid][jDivision] == 3)
				{
					if (user[playerid][jRango] == 2) format(string, sizeof(string), "[OOC | SADOC] Sergeant %s: {FFFFFF}%s", NombreRJugador(playerid), params);
					else if (user[playerid][jRango] == 1) format(string, sizeof(string), "[OOC | SADOC] Officer Prision %s: {FFFFFF}%s", NombreRJugador(playerid), params);
					else format(string, sizeof(string), "[OOC | SADOC] Officer Prision %s: {FFFFFF}%s", NombreRJugador(playerid), params);
					MensajeFaccion(1, 0x1400FFAA, string, 3);
				}
			}
			else if (member == 2)
			{ // Mecánicos
				if (user[playerid][jRango] == 5) format(string, sizeof(string), "[Facción] Jefe %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				else if (user[playerid][jRango] == 4) format(string, sizeof(string), "[Facción] Supervisor %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				else if (user[playerid][jRango] == 3) format(string, sizeof(string), "[Facción] Profesional %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				else if (user[playerid][jRango] == 2) format(string, sizeof(string), "[Facción] Aprendiz %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				else if (user[playerid][jRango] == 1) format(string, sizeof(string), "[Facción] Ayudante %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				else format(string, sizeof(string), "[Facción] - %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				MensajeFaccion(user[playerid][jMiembro], 0x006EE5B8, string);
			}
			else if (member == 3)
			{ // SAN
				if (user[playerid][jRango] == 7) format(string, sizeof(string), "[Facción] Director ejecutivo %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				else if (user[playerid][jRango] == 6) format(string, sizeof(string), "[Facción] Sub director %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				else if (user[playerid][jRango] == 5) format(string, sizeof(string), "[Facción] Gerente %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				else if (user[playerid][jRango] == 4) format(string, sizeof(string), "[Facción] Periodista %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				else if (user[playerid][jRango] == 3) format(string, sizeof(string), "[Facción] Redactor %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				else if (user[playerid][jRango] == 2) format(string, sizeof(string), "[Facción] Fotógrafo %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				else if (user[playerid][jRango] == 1) format(string, sizeof(string), "[Facción] Becario %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				else format(string, sizeof(string), "[Facción] - %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				MensajeFaccion(user[playerid][jMiembro], 0x006EE5B8, string);
			}
			else if (member == 4)
			{ // Gobierno
				if (user[playerid][jRango] == 7)  format(string, sizeof(string), "[OOC | GOB] Presidente %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				else if (user[playerid][jRango] == 6) format(string, sizeof(string), "[OOC | GOB] Vicepresidente  %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				else if (user[playerid][jRango] == 5) format(string, sizeof(string), "[OOC | GOB] Juez %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				else if (user[playerid][jRango] == 4) format(string, sizeof(string), "[OOC | GOB] Senador %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				else if (user[playerid][jRango] == 3) format(string, sizeof(string), "[OOC | GOB] Fiscal %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				else if (user[playerid][jRango] == 2) format(string, sizeof(string), "[OOC | GOB] ATF Agent %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				else if (user[playerid][jRango] == 1) format(string, sizeof(string), "[OOC | GOB] Oficinista %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				else format(string, sizeof(string), "[CHAT|OOC|Oficinista] %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				MensajeFaccion(user[playerid][jMiembro], 0x006EE5B8, string);
			}
			else if (member == 5)
			{ // LSED
				if (user[playerid][jRango] == 12) format(string, sizeof(string), "[OOC | ED] Jefe de emergencias %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				else if (user[playerid][jRango] == 11) format(string, sizeof(string), "[OOC | ED] Jefe Adjunto %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				else if (user[playerid][jRango] == 10) format(string, sizeof(string), "[OOC | ED] Teniente %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				else if (user[playerid][jRango] == 9) format(string, sizeof(string), "[OOC | ED] Sargento %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				else if (user[playerid][jRango] == 8) format(string, sizeof(string), "[OOC | ED] Oficial III %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				else if (user[playerid][jRango] == 7) format(string, sizeof(string), "[OOC | ED] Oficial II %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				else if (user[playerid][jRango] == 6) format(string, sizeof(string), "[OOC | ED] Bombero %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				else if (user[playerid][jRango] == 5) format(string, sizeof(string), "[OOC | ED] B.Prácticas %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				else if (user[playerid][jRango] == 4) format(string, sizeof(string), "[OOC | ED] Médico %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				else if (user[playerid][jRango] == 3) format(string, sizeof(string), "[OOC | ED] Paramédico %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				else if (user[playerid][jRango] == 2) format(string, sizeof(string), "[OOC | ED] Enfermero %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				else if (user[playerid][jRango] == 1) format(string, sizeof(string), "[OOC | ED] B. Auxiliar %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				else format(string, sizeof(string), "[OOC | ED] B. Auxiliar %s: {FFFFFF}%s", NombreRJugador(playerid), params);
				MensajeFaccion(user[playerid][jMiembro], 0x006EE5B8, string);
			}
		} else _Mensaje(playerid, 0, "218", "No estás en una facción.");
	} else _Mensaje(playerid, 3, "0", "/fac [texto]");
	return 1;
}

CMD:swsp(playerid, params[]) {
	if(!_Telefono(playerid)){_Mensaje(playerid, 0, "9","No tienes un teléfono en ninguna mano."); return 1;}
	if (!user[playerid][jLiderFam] && !user[playerid][jMiembroFam]) return _Mensaje(playerid, 0, "137", "No tienes ninguna familia.");
    if (!B_WSP[playerid]) {
        B_WSP[playerid] = 1;
        _Mensaje(playerid, 2, "0", "Has silenciado el grupo de WSP.");
    } else {
        B_WSP[playerid] = 0;
        _Mensaje(playerid, 2, "0", "Has activado el grupo de WSP.");
    }
    return 1;
}

CMD:wsp(playerid, params[]) {
    if (!IsPlayerConnected(playerid)) return _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
	if(!_Telefono(playerid)){_Mensaje(playerid, 0, "9","No tienes un teléfono en ninguna mano."); return 1;}
	if (!user[playerid][jLiderFam] && !user[playerid][jMiembroFam]) return _Mensaje(playerid, 0, "137", "No tienes ninguna familia.");
    if (sscanf(params, "s[124]", params[0])) return _Mensaje(playerid, 3, "0", "/wsp [texto]");
    new str[124 + MAX_PLAYER_NAME + (8 * 3)];
    Loop(i, MAX_FAMILIAS, 1) {
        format(str, sizeof(str), "{00AA00}[WSP] %s:{ffffff} %s", NombreJugador(playerid), params[0]);
        _FamWSP(user[playerid][jMiembroFam], 0xffffffff, str);
        new Float: cx, Float: cy, Float: cz;
		GetPlayerPos(playerid, cx, cy, cz);
		PlayerPlaySound(playerid, 1053, cx, cy, cz);
  		TextoPantalla(playerid, "~g~WSP", 2000, 1);
        return 1;
    }
    return 1;
}

CMD:fam(playerid, params[]) {
    if (!IsPlayerConnected(playerid)) return _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
    if (!user[playerid][jLiderFam] && !user[playerid][jMiembroFam]) return _Mensaje(playerid, 0, "137", "No tienes ninguna familia.");
    if (sscanf(params, "s[124]", params[0])) return _Mensaje(playerid, 3, "0", "/fam [texto]");
    new str[124 + MAX_PLAYER_NAME + (8 * 3)];
    Loop(i, MAX_FAMILIAS, 1) {
        if (user[playerid][jLiderFam] == i) {
            format(str, sizeof(str), "[OOC | FAMILIA] (Líder) %s: {FFFFFF}%s", NombreRJugador(playerid), params[0]);
            MensajeFamilia(i, 0x6BBFA0FF, str);
            return 1;
        } else if (user[playerid][jMiembroFam] == i) {
            if (InfoFamilia[i][fChat] == 1) return _Mensaje(playerid, 0, "137", "El /fam se encuentra bloqueado algún líder.");
            switch (user[playerid][jRangoFam]) {
                case 1: format(str, sizeof(str), "[OOC | FAMILIA] %s %s: {FFFFFF}%s", InfoFamilia[i][fRango1], NombreRJugador(playerid), params[0]);
                case 2: format(str, sizeof(str), "[OOC | FAMILIA] %s %s: {FFFFFF}%s", InfoFamilia[i][fRango2], NombreRJugador(playerid), params[0]);
                case 3: format(str, sizeof(str), "[OOC | FAMILIA] %s %s: {FFFFFF}%s", InfoFamilia[i][fRango3], NombreRJugador(playerid), params[0]);
                case 4: format(str, sizeof(str), "[OOC | FAMILIA] %s %s: {FFFFFF}%s", InfoFamilia[i][fRango4], NombreRJugador(playerid), params[0]);
                case 5: format(str, sizeof(str), "[OOC | FAMILIA] %s %s: {FFFFFF}%s", InfoFamilia[i][fRango5], NombreRJugador(playerid), params[0]);
            }
            MensajeFamilia(i, 0x006EE5B8, str);
            return 1;
        }
    }
    return 1;
}

CMD:d(playerid, params[])
{
	new string[256], rango[64];
	if (isnull(params)) return _Mensaje(playerid, 3, "0", "/d [radio chat]");
	switch (user[playerid][jMiembro])
	{
		case 1:
		{
		    if(user[playerid][jDivision] == 1)
		    {
				switch (user[playerid][jRango])
				{
					case 1: rango = "Probatory Officer";
					case 2: rango = "Officer I";
					case 3: rango = "Officer II";
					case 4: rango = "Officer III";
					case 5: rango = "Officer III+";
					case 6: rango = "Sergeant I";
					case 7: rango = "Sergeant II";
					case 8: rango = "Sergeant III";
					case 9: rango = "Lieutenant II";
					case 10: rango = "Lieutenant III";
					case 11: rango = "Captain";
					case 12: rango = "Commander";
					default: rango = "Probatory Officer";
				}
				format(string, sizeof(string), "*[CH|911, LSPD, S:24 , %s | %s]: %s *", rango, NombreJugador(playerid), params);
			}
			else if(user[playerid][jDivision] == 2)
			{
				switch (user[playerid][jRango])
				{
					case 1: rango = "Deputy I";
					case 2: rango = "Deputy II";
					case 3: rango = "Deputy III";
					case 4: rango = "Dect I";
					case 5: rango = "Dect II";
					case 6: rango = "Sargento I";
					case 7: rango = "Sargento II";
					case 8: rango = "Teniente";
					case 9: rango = "Capitán";
					case 10: rango = "Dept. Sheriff";
					case 11: rango = "Sheriff";
					default: rango = "Cadete";
				}
				format(string, sizeof(string), "*[CH|912, SASD, S:24, %s | %s]: %s *", rango, NombreJugador(playerid), params);
			}
			else if(user[playerid][jDivision] == 3)
			{
				switch (user[playerid][jRango])
				{
					case 1: rango = "Correctionals";
					case 2: rango = "Correctionals Sgt";
					default: rango = "Correctionals.";
				}
				format(string, sizeof(string), "*[CH|912, S:24, %s | %s]: %s *", rango, NombreJugador(playerid), params);
			}
		}
		case 5:
		{
			switch (user[playerid][jRango])
			{
				case 1: rango = "Prácticas";
				case 2: rango = "Enfm";
				case 3: rango = "Paramedic";
				case 4: rango = "Medic";
				case 5: rango = "B. Prácticas";
				case 6: rango = "Oficial I";
				case 7: rango = "Oficial II";
				case 8: rango = "Oficial III";
				case 9: rango = "Sargento";
				case 10: rango = "Teniente";
				case 11: rango = "Chief Adj.";
				case 12: rango = "Chief de emergencias";
				default: rango = "Prácticas";
			}
			format(string, sizeof(string), "*[CH|112, S:24, %s | %s]: %s *", rango, NombreJugador(playerid), params);
		}
		default: return _Mensaje(playerid, 0, "230", "No perteneces a una facción del gobierno.");
    }
	_MensajeRfac(1, 0xFF8282AA, string, 1, 2, 3);
	_MensajeRfac(4, 0xFF8282AA, string);
	_MensajeRfac(5, 0xFF8282AA, string);
	return 1;
}
CMD:r(playerid, params[])
{
	new string[256], rango[64];
	if (isnull(params)) return _Mensaje(playerid, 3, "0", "/r [radio chat]");
	switch (user[playerid][jMiembro])
	{
		case 1:
		{
		    if(user[playerid][jDivision] == 1)
		    {
				switch (user[playerid][jRango])
				{
					case 1: rango = "Probatory Officer";
					case 2: rango = "Officer I";
					case 3: rango = "Officer II";
					case 4: rango = "Officer III";
					case 5: rango = "Officer III+";
					case 6: rango = "Sergeant I";
					case 7: rango = "Sergeant II";
					case 8: rango = "Sergeant III";
					case 9: rango = "Lieutenant II";
					case 10: rango = "Lieutenant III";
					case 11: rango = "Captain";
					case 12: rango = "Commander";
					default: rango = "Probatory Officer";
				}
				format(string, sizeof(string), "*[CH|911, S: 1 %s | %s]: %s  **", rango, NombreJugador(playerid), params);
				_MensajeRfac(1, 0xF7CA93FF, string, 1);
			}
			else if(user[playerid][jDivision] == 2)
			{
				switch (user[playerid][jRango])
				{
					case 1: rango = "Deputy. I";
					case 2: rango = "Deputy. II";
					case 3: rango = "Deputy. III";
					case 4: rango = "Detec. I";
					case 5: rango = "Detec. II";
					case 6: rango = "Sargento I";
					case 7: rango = "Sargento II";
					case 8: rango = "Teniente";
					case 9: rango = "Capitán";
					case 10: rango = "Dept. Sheriff";
					case 11: rango = "Sheriff";
					default: rango = "Prácticas";
				}
				format(string, sizeof(string), "*[CH|912, S: 27 %s | %s]: %s  **", rango, NombreJugador(playerid), params);
				_MensajeRfac(1, 0xF7CA93FF, string, 2);
			}
			else if(user[playerid][jDivision] == 3)
			{
				switch (user[playerid][jRango])
				{
					case 1: rango = "*[ST|590, CH: 3 %s | %s]: %s  **";
					case 2: rango = "*[ST|590, CH: 3 %s | %s]: %s  **";
					default: rango = "*[ST|590, CH: 3 %s | %s]: %s  **";
				}
				format(string, sizeof(string), "*[ST|590, CH: 3 %s | %s]: %s  **", rango, NombreJugador(playerid), params);
				_MensajeRfac(1, 0xF7CA93FF, string, 3);
			}
		}
		case 5:
		{
			switch (user[playerid][jRango])
			{
				case 1: rango = "Prácticas";
				case 2: rango = "Paramédico";
				case 3: rango = "Médico";
				case 4: rango = "Paramédico";
				case 5: rango = "B. Prácticas";
				case 6: rango = "Bombero";
				case 7: rango = "Oficial II";
				case 8: rango = "Oficial III";
				case 9: rango = "Sargento";
				case 10: rango = "Teniente";
				case 11: rango = "Jefe Adjunto";
				case 12: rango = "Jefe de emergencias";
				default: rango = "B. Auxiliar";
			}
			format(string, sizeof(string), "[CH|112, S: 32 %s | %s]: %s  **", rango, NombreJugador(playerid), params);
			_MensajeRfac(5, 0xF7CA93FF, string);
		}
		default: return _Mensaje(playerid, 0, "230", "No te encuentras en una facción legal.");
	}
	return 1;
}

CMD:pagar(playerid, params[]) {
    if (user[playerid][j_Horas] < 2) return _Mensaje(playerid, 0, "9", "No puedes pagar debido a tu restricción de dos horas de juego.");
    new string[128];
    if(!CheckTimer(5, PagarTiempo[playerid])) {
        if (!sscanf(params, "di", params[0], params[1])) {
            if (params[1] > ComprobarDineroJ(playerid)) return _Mensaje(playerid, 0, "187", "No posees esa cantidad.");
            if (params[1] < 1 || params[1] > 10000) return _Mensaje(playerid, 0, "188", "Máximo: $10.000.");
            if (IsPlayerConnected(params[0])) {
                if (EnServicioADM[params[0]] == 1) return _Mensaje(playerid, 0, "187", "No puedes hacer esto con un staff en servicio.");
            	if (CercaDelWeon(5.0, playerid, params[0])) {
                    Compra(playerid, params[1]);
                    Ganancia(params[0], params[1]);
                    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                    PlayerPlaySound(params[0], 1052, 0.0, 0.0, 0.0);
                    new MsgCheckMe[MAX_TEXT_CHAT];
                    format(MsgCheckMe, sizeof(MsgCheckMe), "le ha dado algo de dinero a %s.", NombreJugador(params[0]));
                    AccionesRol(playerid, 0, MsgCheckMe);
                    format(string, sizeof(string), "Has recibido '$%d' de el jugador %s.", params[1], NombreJugador(playerid));
                    _Mensaje(params[0], 4, "b0b0b0", string);
                    if(!strcmp(user[playerid][jIP], user[params[0]][jIP], false) && user[playerid][jMulticuenta] == 0 && user[params[0]][jMulticuenta] == 0)
					{
						new ipc[32], stringlog[180]; GetPlayerIp(playerid, ipc, 32);
						format(stringlog, sizeof(stringlog), "[Atención]: {FFFFFF}El jugador %s le da ($%d) al jugador %s, posibles multicuentas [IP: %s] (traspaso de dinero)", NombreRJugador(playerid), params[1], NombreRJugador(params[0]), ipc);
						MensajeAdmin(stringlog);
						format(stringlog, sizeof(stringlog), "Registros: El jugador %s le da '$%d' al jugador %s. [IP: %s] (traspaso de dinero)", NombreRJugador(playerid), params[1], NombreRJugador(params[0]), ipc);
						Log("Registros/multicuentas.log", stringlog);
					} else {
                    	format(string, sizeof(string), "Registros: Jugador %s le da '$%d' a %s. (transferencias de dinero entre usuarios)", NombreRJugador(playerid), params[1], NombreRJugador(params[0]));
                    	Log("Registros/Pagos.log", string);
    				}
    				PagarTiempo[playerid] = gettime();
                } else _Mensaje(playerid, 0, "133", "El jugador no se encuentra cerca de tí.");
            } else _Mensaje(playerid, 0, "75", "Jugador no conectado.");
        } else _Mensaje(playerid, 3, "0", "/pagar [jugador] [cantidad]");
    } else {
        format(string, 144, "Faltan %d segundos para que puedas usar este comando.", CheckTimer(5, PagarTiempo[playerid]));
        _Mensaje(playerid, 0, "536", string);
    }
    return 1;
}

CMD:quitar(playerid, params[]) {
    if (!Es_Faccion(playerid, 1)) return _Mensaje(playerid, 0, "165", "No formas parte de la Ley.");
    new item[32], string[128];
    if (!sscanf(params, "s[32]u", item, params[1])) {
        if (!IsPlayerConnected(params[1])) return _Mensaje(playerid, 0, "165", "Ese jugador no esta conectado.");
        if (!CercaDelWeon(5.0, playerid, params[1])) return _Mensaje(playerid, 0, "165", "Ese jugador esta muy lejos de ti.");
        if (strcmp(item, "lcoche", true) == 0) {
            user[params[1]][jLicencias][1] = 0;
            format(string, sizeof(string), "Oficial %s quita la licencia de conducción a %s.", NombreJugador(playerid), NombreJugador(params[1]));
            ProxDetector(30.0, playerid, string, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF);
        } else if (strcmp(item, "lpiloto", true) == 0) {
            user[params[1]][jLicencias][4] = 0;
            format(string, sizeof(string), "Oficial %s quita la licencia de vuelo a %s.", NombreJugador(playerid), NombreJugador(params[1]));
            ProxDetector(30.0, playerid, string, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF);
        } else if (strcmp(item, "larma", true) == 0) {
            user[params[1]][jLicencias][0] = 0;
            format(string, sizeof(string), "Oficial %s quita la licencia de armas a %s.", NombreJugador(playerid), NombreJugador(params[1]));
            ProxDetector(30.0, playerid, string, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF);
        } else if (strcmp(item, "lnavegacion", true) == 0) {
            user[params[1]][jLicencias][5] = 0;
            format(string, sizeof(string), "Oficial %s quita la licencia de navegación a %s.", NombreJugador(playerid), NombreJugador(params[1]));
            ProxDetector(30.0, playerid, string, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF);
        } else if (strcmp(item, "lcamionero", true) == 0) {
            user[params[1]][jLicencias][2] = 0;
            format(string, sizeof(string), "Oficial %s quita la licencia de transporte de mercancías a %s.", NombreJugador(playerid), NombreJugador(params[1]));
            ProxDetector(30.0, playerid, string, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF, 0xC57BBBFF);
        } else _Mensaje(playerid, 0, "121", "Item incorrecto.");
    } else {
        _Mensaje(playerid, 3, "0", "/quitar [item] [id jugador]");
        _Mensaje(playerid, 2, "0", "Items: lcoche, lpiloto, larma, lnavegacion, lcamionero");
    }
    return 1;
}

CMD:desbug(playerid, params[]) {
    if (user[playerid][jEncarcelado] > 0) return _Mensaje(playerid, 0, "213", "No puedes usar este comando mientras estás en prisión.");
    if (IsPlayerConnected(playerid)) {
        SetPlayerInterior(playerid, 0);
        SetPlayerVirtualWorld(playerid, 0);
        user[playerid][jInterior] = 0;
        user[playerid][jVirtualWorld] = 0;
        _Mensaje(playerid, 1, "Esperamos que su problema haya sido solucionado.", "[CMBlock-Admin]:");
    } else _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
    return 1;
}

CMD:reiniciarregalo(playerid, params[]) {
    new string[128], playerid2;
    if (sscanf(params, "d", playerid2)) return _Mensaje(playerid, 3, "0", "/reiniciarregalo [id jugador]");
    if (user[playerid][jAdmin] >= 5) {
        if (IsPlayerConnected(playerid2)) {
            format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Head Admin %s reseteó el tiempo de regalo a %s", NombreRJugador(playerid), NombreRJugador(playerid2));
            MensajeAdmin(string);
            user[playerid2][jTiempos][5] = 0;
        } else _Mensaje(playerid, 0, "75", "Jugador no conectado.");
    }
    return 1;
}

forward RecogerAccesorio(playerid);
public RecogerAccesorio(playerid) {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { _Mensaje(playerid, 0, "9", "No puedes usar este comando en esta situación."); return 1; }
    new ObjetoRecogido, string[256];
    for(new i = 0; i < sizeof(InfoCaido); i++) {
        if(_enPos(playerid, 2.0, InfoCaido[i][AccX], InfoCaido[i][AccY], InfoCaido[i][AccZ])) {
            if(GetPlayerVirtualWorld(playerid) == InfoCaido[i][AccVWorld] && GetPlayerInterior(playerid) == InfoCaido[i][AccInterior]) {
                if(InfoCaido[i][AccID] == 0) break;
                DestroyDynamicObject(AccCaido[i]);
                for (new ida = 0; ida < 4; ida++) {
                    if (InfoAccesorio[playerid][ida][aModelo] == 0) {
                        InfoAccesorio[playerid][ida][aModelo] = InfoCaido[i][AccID];
                        InfoAccesorio[playerid][ida][aParte] = InfoCaido[i][aParte];
                        InfoAccesorio[playerid][ida][aPosicionX] = InfoCaido[i][aPosicionX];
                        InfoAccesorio[playerid][ida][aPosicionY] = InfoCaido[i][aPosicionY];
                        InfoAccesorio[playerid][ida][aPosicionZ] = InfoCaido[i][aPosicionZ];
                        InfoAccesorio[playerid][ida][aRotacionX] = InfoCaido[i][aRotacionX];
                        InfoAccesorio[playerid][ida][aRotacionY] = InfoCaido[i][aRotacionY];
                        InfoAccesorio[playerid][ida][aRotacionZ] = InfoCaido[i][aRotacionZ];
                        InfoAccesorio[playerid][ida][aEscalaX] = InfoCaido[i][aEscalaZ];
                        InfoAccesorio[playerid][ida][aEscalaY] = InfoCaido[i][aEscalaY];
                        InfoAccesorio[playerid][ida][aEscalaZ] = InfoCaido[i][aEscalaX];
                        new NombreAcc[32];
                        for(new ir; ir < sizeof(Accesorios); ir++) {
                            if(Accesorios[ir][ModeloAccesorio] == InfoAccesorio[playerid][ida][aModelo]) {
                                format(NombreAcc, sizeof(NombreAcc), "%s", Accesorios[ir][NombreAccesorio]);
                            }
                        }
                        new MsgCheckMe[MAX_TEXT_CHAT];
                        format(MsgCheckMe, sizeof(MsgCheckMe), "recoge del suelo el accesorio '%s'.", NombreAcc);
                        AccionesRol(playerid, 0, MsgCheckMe);
                        format(string, sizeof(string), "Has recogido el accesorio {00C200}%s{ffffff}, revisa /accesorios.", NombreAcc);
                        _Mensaje(playerid, 2, "0", string);
                        InfoCaido[i][AccX] = 0.0;
                        InfoCaido[i][AccY] = 0.0;
                        InfoCaido[i][AccZ] = 0.0;
                        InfoCaido[i][AccID] = 0;
                        InfoCaido[i][aParte] = 0;
                        InfoCaido[i][aPosicionX] = 0;
                        InfoCaido[i][aPosicionY] = 0;
                        InfoCaido[i][aPosicionZ] = 0;
                        InfoCaido[i][aRotacionX] = 0;
                        InfoCaido[i][aRotacionY] = 0;
                        InfoCaido[i][aRotacionZ] = 0;
                        InfoCaido[i][aEscalaZ] = 0;
                        InfoCaido[i][aEscalaY] = 0;
                        InfoCaido[i][aEscalaX] = 0;
                        ObjetoRecogido = 1;
                        return 1;
                    }
                }
                break;
            }
        }
    }
    if(ObjetoRecogido == 0) return _Mensaje(playerid, 0, "9", "No tienes un accesorio cercano a ti.");
    return 1;
}

CMD:recogertoy(playerid, params[]) return cmd_recogeracc(playerid, params);
CMD:recogerobj(playerid, params[]) return cmd_recogeracc(playerid, params);
CMD:recogeracc(playerid, params[]) { //Recoger accesorio del suelo
    RecogerAccesorio(playerid);
    return 1;
}

CMD:toys(playerid, params[]) return cmd_accesorios(playerid, params);
CMD:objetos(playerid, params[]) return cmd_accesorios(playerid, params);
CMD:accesorios(playerid, params[]) {
    new TextAcc[512];
    for(new ida; ida < MAX_ACCESORIOS; ida++) {
    new NombreAcc[128];
    format(NombreAcc, sizeof(NombreAcc), "{00a2ff}Sin accesorios");
    for(new i; i < sizeof(Accesorios); i++) {
        if(Accesorios[i][ModeloAccesorio] == InfoAccesorio[playerid][ida][aModelo]) {
            format(NombreAcc, sizeof(NombreAcc), "{00c200}(%s)", Accesorios[i][NombreAccesorio]);
        }
    }
    format(TextAcc, sizeof(TextAcc), "%s{ffffff}Ranura %d - %s\n",TextAcc, ida, NombreAcc);
    }
    Dialog(playerid, D_ACCESORIOS, DIALOG_STYLE_LIST, "Menú: Selecciona un accesorio", TextAcc, "Seleccionar", "Cancelar");
    return 1;
}

CMD:ponerobjetos(playerid, params[]) return cmd_ptoys(playerid, params);
CMD:poneraccesorios(playerid, params[]) return cmd_ptoys(playerid, params);
CMD:ptoys(playerid, params[]) {
    _Mensaje(playerid, 2, "0", "Te pusiste todos los accesorios.");
    for (new x; x < MAX_ACCESORIOS; x++) {
        if (InfoAccesorio[playerid][x][aModelo] != 0) ColocarObject(playerid, x, InfoAccesorio[playerid][x][aModelo], InfoAccesorio[playerid][x][aParte], InfoAccesorio[playerid][x][aPosicionX], InfoAccesorio[playerid][x][aPosicionY], InfoAccesorio[playerid][x][aPosicionZ], InfoAccesorio[playerid][x][aRotacionX], InfoAccesorio[playerid][x][aRotacionY], InfoAccesorio[playerid][x][aRotacionZ],
        InfoAccesorio[playerid][x][aEscalaX], InfoAccesorio[playerid][x][aEscalaY], InfoAccesorio[playerid][x][aEscalaZ]);
        InfoAccesorio[playerid][x][aColocado] = 1;
    }
    return 1;
}

CMD:quitarobjetos(playerid, params[]) return cmd_qtoys(playerid, params);
CMD:quitaraccesorios(playerid, params[]) return cmd_qtoys(playerid, params);
CMD:qtoys(playerid, params[]) {
    _Mensaje(playerid, 2, "0", "Te quitaste todos los accesorios.");
    for (new x; x < MAX_ACCESORIOS; x++) {
        RemovePlayerAttachedObject(playerid, x);
        InfoAccesorio[playerid][x][aColocado] = 0;
    }
    return 1;
}

CMD:poneracc(playerid, params[]) return cmd_toy(playerid, params);
CMD:obj(playerid, params[]) return cmd_toy(playerid, params);
CMD:ponerobj(playerid, params[]) return cmd_toy(playerid, params);
CMD:ponertoy(playerid, params[]) return cmd_toy(playerid, params);
CMD:toy(playerid, params[]) {
    new toyslot;
    if (sscanf(params, "d", toyslot)) return _Mensaje(playerid, 3, "0", "/toy [slot (0-4)]");
    if (toyslot < 0 || toyslot > MAX_ACCESORIOS) return _Mensaje(playerid, 0, "290", "Los Slots de los toys son del número 0 al 4.");
    switch (toyslot) {
        case 0, 1, 2, 3, 4: {
                if (IsPlayerAttachedObjectSlotUsed(playerid, toyslot)) {
                    _Mensaje(playerid, 2, "0", "Te quitaste el accesorio correctamente.");
                    RemovePlayerAttachedObject(playerid, toyslot);
                    InfoAccesorio[playerid][toyslot][aColocado] = 0;
                    return 1;
                } else {
                    if (InfoAccesorio[playerid][toyslot][aModelo] == 0) return _Mensaje(playerid, 0, "291", "No tienes ningún toy en ese slot.");
                    ColocarObject(playerid, toyslot, InfoAccesorio[playerid][toyslot][aModelo], InfoAccesorio[playerid][toyslot][aParte], InfoAccesorio[playerid][toyslot][aPosicionX], InfoAccesorio[playerid][toyslot][aPosicionY], InfoAccesorio[playerid][toyslot][aPosicionZ], InfoAccesorio[playerid][toyslot][aRotacionX], InfoAccesorio[playerid][toyslot][aRotacionY], InfoAccesorio[playerid][toyslot][aRotacionZ], InfoAccesorio[playerid][toyslot][aEscalaX],
                    InfoAccesorio[playerid][toyslot][aEscalaY], InfoAccesorio[playerid][toyslot][aEscalaZ]);
                    _Mensaje(playerid, 2, "0", "Te colocaste el accesorio correctamente.");
                    InfoAccesorio[playerid][toyslot][aColocado] = 1;
                }
            }
    }
    return 1;
}

CMD:prendas(playerid, params[]) return cmd_toysvip(playerid, params);
CMD:toysvip(playerid, params[]) {
	if (_enPos(playerid, 3.0, -2304.5933,170.7388,35.3407))
	{
        if (user[playerid][jPremium] >= 2) {
            Dialog(playerid, D_COMPRARTOYVIP, DIALOG_STYLE_MSGBOX, "{D6E1EB}Tienda de Accesorios", "Bienvenido al dispensador de accesorios VIP! Aquí puedes comprar accesorios para ti.\nPrimero, tienes que elegir que menú verás", "Ok", "Salir");
        } else _Mensaje(playerid, 0, "139", "Necesitas ser minimo premium avanzado para usar /Prendas.");
    } else _Mensaje(playerid, 0, "205", "No estás en los casilleros premium.");
	return 1;
}

CMD:regalo(playerid, params[]) {
    new string[128];
    if (CajadeRegalo != 0) {
        new Float: Position[3];
        GetDynamicObjectPos(CajadeRegalo, Position[0], Position[1], Position[2]);
        if (_enPos(playerid, 5.0, Position[0], Position[1], Position[2])) {
            if (user[playerid][jTiempos][11] != 0) {
                format(string, sizeof(string), "Necesitas esperar %i minuto(s) para abrir de nuevo el regalo.", user[playerid][jTiempos][11]);
                return _Mensaje(playerid, 2, "0", string);
            }
            AccionesRol(playerid, 0, "mira en el interior del regalo.");
            user[playerid][jTiempos][11] = 600;
            DarDineroGC(playerid, 20000);
            user[playerid][jExperiencia] += 2;
            user[playerid][j_Horas] += 2;
            _Mensaje(playerid, 2, "0", "Felicidades recibiste:");
            _Mensaje(playerid, 2, "0", "20.000$, +dos(2) puntos de experiencia.");
            return 1;
        }
    }
    return 1;
}

CMD:casillero(playerid)
{
	if (!IsPlayerInRangeOfPoint(playerid, 4.0, -2301.9307,174.2739,35.3407)) return _Mensaje(playerid, 0, "205", "No estás en los casilleros del salón premium.");
	switch (user[playerid][jPremium])
	{
		case 1: Dialog(playerid, D_VIPCASILLERO, DIALOG_STYLE_LIST, "GS:RP.ES: {D6E1EB}Casillero Premium", "Cambiar skin\nRestaurar vida", "Seleccionar", "Cancelar");
		case 2: Dialog(playerid, D_VIPCASILLERO, DIALOG_STYLE_LIST, "GS:RP.ES: {D6E1EB}Casillero Premium", "Cambiar skin\nRestaurar vida\nRestaurar chaleco ($100)\nCambiar trabajo\nRegalo", "Seleccionar", "Cancelar");
		case 3: Dialog(playerid, D_VIPCASILLERO, DIALOG_STYLE_LIST, "GS:RP.ES: {D6E1EB}Casillero Premium", "Cambiar skin\nRestaurar vida\nRestaurar chaleco ($100)\nCambiar trabajo\nRegalo", "Seleccionar", "Cancelar");
		default: _Mensaje(playerid, 0, "207", "No eres usuario premium.");
	}
	return 1;
}


CMD:darpremium(playerid, params[]) {
    if (user[playerid][jAdmin] >= 10) {
        new string[128], playerid2, level, dia,mes;
        if (sscanf(params, "dddd", playerid2, level, dia,mes)) {
            _Mensaje(playerid, 3, "0", "/darpremium [id jugador] [tipo vip] [día fin] [mes fin]");
            _Mensaje(playerid, 1, "1) V-Basico | 2) V-Avanzado | 3) V-Ultra", "Tipos:");
            return 1;
        }
        if (IsPlayerConnected(playerid2)) {
            if (level < 0 || level > 3) return _Mensaje(playerid, 0, "75", "Solo existen 3 tipos de premium.");
            user[playerid2][jPremium] = level;
            user[playerid2][jM_premium] = mes;
            user[playerid2][jD_premium] = dia;
            if (level == 0) {
                format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Super Head Admin %s quito sistema premium a %s.", NombreRJugador(playerid), NombreRJugador(playerid2));
                MensajeAdmin(string);
                format(string, sizeof(string), "'%s', te ha retirado tu sistema premium.", NombreRJugador(playerid));
                _Mensaje(playerid2, 2, "0", string);
                user[playerid2][jD_premium] = -1;
                user[playerid2][jM_premium] = -1;
                format(string, sizeof(string), "Registros: Super Head Admin %s quito premium a %s. (comandos admin sistema premium)", NombreRJugador(playerid), NombreRJugador(playerid2));
                Log("Registros/Darvip.log", string);
                return 1;
            } else if (level == 1) {
                format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Super Head Admin %s ha establecido a %s, (Premium Básico) (%d).", NombreRJugador(playerid), NombreRJugador(playerid2), level);
                MensajeAdmin(string);
                format(string, sizeof(string), "Super Head Admin '%s', te ha otorgado Premium Básico (%d).", NombreRJugador(playerid), level);
                _Mensaje(playerid, 2, "0", string);
                format(string, sizeof(string), "Registros:  Super Head Admin %s quito premium a %s. (comandos admin sistema premium)", NombreRJugador(playerid), NombreRJugador(playerid2));
                Log("Registros/Darvip.log", string);
                return 1;
            } else if (level == 2) {
                format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Super Head Admin %s ha establecido a %s, (Premium Avanzado) (%d).", NombreRJugador(playerid), NombreRJugador(playerid2), level);
                MensajeAdmin(string);
                format(string, sizeof(string), "Super Head Admin '%s', te ha otorgado Premium Avanzado (%d).", NombreRJugador(playerid), level);
                _Mensaje(playerid, 2, "0", string);
                format(string, sizeof(string), "Registros: Game Admin %s dio VIP Avanzado a %s.", NombreRJugador(playerid), NombreRJugador(playerid2));
                Log("Registros/Darvip.log", string);
                return 1;
            } else if (level == 3) {
                format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Super Head Admin %s ha establecido a %s, (Premium Ultra Gold) (%d).", NombreRJugador(playerid), NombreRJugador(playerid2), level);
                MensajeAdmin(string);
                format(string, sizeof(string), "Super Head Admin '%s', te ha otorgado Premium Ultra (%d).", NombreRJugador(playerid), level);
                _Mensaje(playerid, 2, "0", string);
                format(string, sizeof(string), "Registros: Super Head Admin %s quito premium a %s. (comandos admin sistema premium)", NombreRJugador(playerid), NombreRJugador(playerid2));
                Log("Registros/Darvip.log", string);
                return 1;
            }
        } else _Mensaje(playerid, 0, "75", "Jugador no conectado.");
    } else _Mensaje(playerid, 0, "210", "Tú no tienes acceso a el comando /darpremium.");
    return 1;
}

CMD:togvip(playerid)
{
	if (user[playerid][jPremium] > 0 || user[playerid][jAdmin] >= 1)
	{
		switch (B_VIP[playerid])
		{
			case 0:
			{
				B_VIP[playerid] = 1;
				_Mensaje(playerid, 4, "ffffff", "Chat Premium habilitado, [Escribe]{00C200} /chatvip [texto].");
			}
            case 1:
			{
				B_VIP[playerid] = 0;
				_Mensaje(playerid, 4, "ffffff", "Chat Premium deshabilitado.");
			}
		}
	}
	return 1;
}

/*CMD:chatvip(playerid, params[])
{
	if (user[playerid][jPremium] > 0 || user[playerid][jAdmin] >= 1) {
        new string[128];
        if (isnull(params)) return _Mensaje(playerid, 3, "0", "/chatvip [texto]");
        if (B_VIP[playerid] == 0) return _Mensaje(playerid, 0, "211", "Tienes el canal deshabilitado, /togvip para re-habilitarlo.");
        switch (user[playerid][jAdmin]) {
            case 1,2,3,4,5,10: format(string, sizeof(string), "[OOC|Premium|staff|%d|%s:{ffffff} %s", user[playerid][jAdmin], NombreRJugador(playerid), params);
        }
        switch (user[playerid][jPremium]) {
            case 1: format(string, sizeof(string), "[OOC|Premium|basico|%s:{ffffff} %s", NombreRJugador(playerid), params);
            case 2: format(string, sizeof(string), "[OOC|Premium|avanzado|%s:{ffffff} %s", NombreRJugador(playerid), params);
            case 3: format(string, sizeof(string), "[OOC|Premium|ultra gold|%s:{ffffff} %s", NombreRJugador(playerid), params);
        }
        if (user[playerid][jPremium] >= 1 || user[playerid][jAdmin] >= 1) { MensajeVIP(C_VIP, string); }
        format(string, sizeof(string), "%s: %s", NombreRJugador(playerid), params);
        Log("Registros/ChatVip.log", string);
    }
    return 1;
}
 */
 
CMD:regaloatodos(playerid)
{
	if (user[playerid][jAdmin] >= 10)
	{
		if (Regalo)
		{
			new string[128];
			format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Courier (%s) envió regalos a todo el servidor.", NombreRJugador(playerid));
			_MensajeOOC(C_GCRP, string);
			Regalo = 0;
			foreach(Player, i) { RegaloTodos(i); }
		} else return _Mensaje(playerid, 0, "212", "Este comando ya fue usado, puedes usarlo en el próximo pago diario.");
	}
	return 1;
}

CMD:liberar(playerid, params[]) {
    new string[256], jugador2;
	if (user[playerid][jAdmin] < 1) return _Mensaje(playerid, 0, "202", "Tú no tienes acceso a el comando /Liberar.");
	if (sscanf(params, "u", jugador2)) return _Mensaje(playerid, 3, "0", "/liberar [id jugador]");
    if (!IsPlayerConnected(jugador2)) return _Mensaje(playerid, 0, "367", "Jugador desconectado.");
	if (user[jugador2][jTiempoCarcel] == 0) return _Mensaje(playerid, 0, "158", "Ese jugador no está en prisión.");
	format(string, sizeof(string), "Registros: %s liberó de prisión a %s.", NombreRJugador(playerid), NombreRJugador(jugador2));
	Log("Registros/LiberarJail.log", string);
	format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s liberó de prisión al jugador %s.", NombreRJugador(playerid), NombreRJugador(jugador2));
	_MensajeOOC(0xE00000FF, string);
	user[jugador2][jTiempoCarcel] = 1;
    if(user[jugador2][jEncarcelado] == 1) user[jugador2][jSanciones] -= 1;
	_Mensaje(jugador2, 4, "33CCFF", "Un miembro de la administración bajo tu condena a 60 segundos.");
    return 1;
}

CMD:jailtipo(playerid, params[]) {
    new string[256], time, tipo, playerid2, reason[100];
    if (user[playerid][jAdmin] < 2) return _Mensaje(playerid, 0, "202", "Tú no tienes acceso a el comando /jailtipo.");
    if (!sscanf(params, "ddds[100]", playerid2, tipo, time, reason)) {
        if (IsPlayerConnected(playerid2)) {
            user[playerid2][jEncarcelado] = tipo;
            B_Telefono[playerid2] = 1;
            user[playerid2][jTiempoCarcel] = time;
            if (tipo == 1) {
                format(string, sizeof(string), "Administración: El jugador %s fue llevado a la prisión (tipo: OOC), Razón:[%s]", NombreRJugador(playerid2), reason);
                _MensajeOOC(0xFF6347FF, string);
                format(string, sizeof(string), "Sancionador: Game Admin(%s) | Tiempo: [%d] minuto(s) - (Jugador: %s)", NombreRJugador(playerid), time, NombreRJugador(playerid2));
                MensajeAdmin3(string);
                alm(user[playerid2][jSancionador], NombreRJugador(playerid));
                new rand = random(sizeof(_OOCp));
                SetPlayerPos(playerid2, _OOCp[rand][0], _OOCp[rand][1], _OOCp[rand][2]);
                SetPlayerFacingAngle(playerid2, _OOCp[rand][3]);
                TogglePlayerControllable(playerid2, 0); SetPVarInt(playerid2, "Congelado", 1);
                SetPlayerVirtualWorld(playerid2, playerid2); user[playerid2][jVirtualWorld] = playerid2;
				SetPlayerInterior(playerid2, 0); user[playerid2][jInterior] = 0;
				Esposado[playerid2] = 0; RemovePlayerAttachedObject(playerid2, 9);
                PlayerTextDrawShow(playerid2, TextTrabajo[playerid]);
            } else if (tipo == 2) {
                format(string, sizeof(string), "Administración: El jugador %s fue llevado a la prision comisaría (tipo: IC), Razón:[%s]", NombreRJugador(playerid2), reason);
                _MensajeOOC(0xFF6347FF, string);
                format(string, sizeof(string), "Sancionador: Game Admin(%s) | - Tiempo: %d minuto(s) - Jugador: %s", NombreRJugador(playerid), time, NombreRJugador(playerid2));
                MensajeAdmin3(string);
                new rand = random(sizeof(_COMISARIAp));
                SetPlayerPos(playerid2, _COMISARIAp[rand][0], _COMISARIAp[rand][1], _COMISARIAp[rand][2]);
                CargarObjetos(playerid2);
                SetPlayerInterior(playerid2, 5); user[playerid2][jInterior] = 5;
                Esposado[playerid2] = 0; RemovePlayerAttachedObject(playerid2, 9);
                for(new x = 0; x < 10; x++) {
              		if(InfoObjeto[user[playerid2][jBolsillo][x]][IDArma] > 0) { user[playerid2][jBolsillo][x] = 0, user[playerid2][jBolsilloCant][x] = 0; }
                	if(user[playerid2][jBolsillo][x] <= 49 && user[playerid2][jBolsillo][x] >= 41) { user[playerid2][jBolsillo][x] = 0, user[playerid2][jBolsilloCant][x] = 0; }
                	if(user[playerid2][jBolsillo][x] <= 79 && user[playerid2][jBolsillo][x] >= 74) { user[playerid2][jBolsillo][x] = 0, user[playerid2][jBolsilloCant][x] = 0; }
            	}
            } else if (tipo == 3) {
                format(string, sizeof(string), "Administración: El jugador %s fue llevado a la prision federal (tipo: IC), Razón:[%s]", NombreRJugador(playerid2), reason);
                _MensajeOOC(0xFF6347FF, string);
                format(string, sizeof(string), "Sancionador: Game Admin(%s) | - Tiempo: %d minuto(s) - Jugador: %s", NombreRJugador(playerid), time, NombreRJugador(playerid2));
                MensajeAdmin3(string);
                new rand = random(sizeof(_PFp));
                SetPlayerPos(playerid2, _PFp[rand][0], _PFp[rand][1], _PFp[rand][2]);
                CargarObjetos(playerid2);
                SetPlayerInterior(playerid2, 0); user[playerid2][jInterior] = 0;
                Esposado[playerid2] = 0; RemovePlayerAttachedObject(playerid2, 9);
                for(new x = 0; x < 10; x++) {
              		if(InfoObjeto[user[playerid2][jBolsillo][x]][IDArma] > 0) { user[playerid2][jBolsillo][x] = 0, user[playerid2][jBolsilloCant][x] = 0; }
                	if(user[playerid2][jBolsillo][x] <= 49 && user[playerid2][jBolsillo][x] >= 41) { user[playerid2][jBolsillo][x] = 0, user[playerid2][jBolsilloCant][x] = 0; }
                	if(user[playerid2][jBolsillo][x] <= 79 && user[playerid2][jBolsillo][x] >= 74) { user[playerid2][jBolsillo][x] = 0, user[playerid2][jBolsilloCant][x] = 0; }
            	}
            }
            StopAudioStreamForPlayer(playerid2);
            return 1;
        } else _Mensaje(playerid, 0, "75", "Jugador no conectado.");
    } else _Mensaje(playerid, 3, "0", "/jailtipo [id jugador] [tipo, 1. OOC - 2. IC - 3. PF] [minutos] [razón] | Recuerda anotar en el foro la sanción al usuario.");
    return 1;
}

CMD:sancionar(playerid, params[]) return cmd_jail(playerid, params);
CMD:jail(playerid, params[]) {
	new string[256], time, playerid2, reason[100];
	if (user[playerid][jAdmin] < 1) return _Mensaje(playerid, 0, "202", "Tú no tienes acceso a el comando /jail.");
	if (!sscanf(params, "dds[100]", playerid2, time, reason)) {
		if (IsPlayerConnected(playerid2)) {
			if (time < 1 || time > 200) { _Mensaje(playerid, 0, "174", "Tiempo: 1 a 200 minutos."); return 1; }
			user[playerid2][jSanciones] += 1;
			user[playerid2][jEncarcelado] = 1;
			PlayerTextDrawShow(playerid2, TextTrabajo[playerid]);
			B_Telefono[playerid2] = 1;
			user[playerid2][jTiempoCarcel] = time;
			new rand = random(sizeof(_OOCp));
			SetPlayerPos(playerid2, _OOCp[rand][0], _OOCp[rand][1], _OOCp[rand][2]);
			SetPlayerFacingAngle(playerid2, _OOCp[rand][3]);
			SetPlayerVirtualWorld(playerid2, playerid2); user[playerid2][jVirtualWorld] = playerid2;
			SetPlayerInterior(playerid2, 0); user[playerid2][jInterior] = 0;
			TogglePlayerControllable(playerid2, 0);
			SetPVarInt(playerid2, "Congelado", 1);
			format(string, sizeof(string), "Administración: El jugador %s fue sancionado, Razón:[%s]", NombreRJugador(playerid2), reason);
			_MensajeOOC(0xFF6347FF, string);
			format(string, sizeof(string), "Sancionador: Game Admin(%s) | %s - Tiempo: %d minuto(s) - Jugador: %s", NombreRJugador(playerid), time, NombreRJugador(playerid2));
			MensajeAdmin3(string);
			StopAudioStreamForPlayer(playerid2);
			alm(user[playerid2][jSancionador], NombreRJugador(playerid));
			return 1;
		} else _Mensaje(playerid, 0, "75", "Jugador no conectado.");
	} else _Mensaje(playerid, 3, "0", "/jail [id jugador] [minutos] [razón]");
	return 1;
}

CMD:sancionarcuenta(playerid, params[]) return cmd_jailcuenta(playerid, params);
CMD:jailcuenta(playerid, params[]) {
    if (user[playerid][jAdmin] >= 1) {
        new string[128], name[MAX_PLAYER_NAME], minutes;
        new pID;
	    if (sscanf(params, "ud", pID, minutes)) return _Mensaje(playerid, 3, "0", "/jailcuenta [Nombre_Apellido] [Minutos]");
	    if (IsPlayerConnected(pID)) return _Mensaje(playerid, 0, "75", "Jugador está conectado.");
        if (sscanf(params, "s[24]d", name, minutes)) return _Mensaje(playerid, 3, "0", "/jailcuenta [Nombre_Apellido] [Minutos]");
        if (INI_Exist(name)) {
            if (minutes < 1 || minutes > 200) { _Mensaje(playerid, 0, "174", "Tiempo: 1 a 200 minutos."); return 1; }
         	new data[60];
            format(data, sizeof data, DATOS_CUENTAS, name);
            new INI: File = INI_Open(data);
            INI_WriteInt(File, "Encarcelado", 1);
            INI_WriteInt(File, "TiempoCarcel", minutes);
            INI_WriteFloat(File, "Posicion_X", 326.1084);
            INI_WriteFloat(File, "Posicion_Y", 307.3250);
            INI_WriteFloat(File, "Posicion_Z", 999.2202);
            INI_WriteInt(File, "Interior", 5);
            INI_WriteInt(File, "VirtualWorld", 10);
            INI_WriteString(File, "Sancionador", NombreRJugador(playerid));
            INI_Close(File);
            format(string, sizeof(string), "Registros: El jugador %s fue sancionado por el Game Admin %s. [CMD OFFLINE]", name, NombreRJugador(playerid));
            Log("Registros/JailCuenta.log", string);
            format(string, 128, "[AvisoAdmin]: {FFFFFF}El jugador %s fue sancionado por el Game Admin %s. [CMD OFFLINE]", name, NombreRJugador(playerid));
            MensajeAdmin(string);
        } else _Mensaje(playerid, 0, "179", "Esa cuenta no existe.");
    }
    return 1;
}

CMD:fmiembros(playerid, params[]) {
    new member = user[playerid][jMiembroFam], leader = user[playerid][jLiderFam], teamnumber;
    if (user[playerid][jLiderFam] != 0) teamnumber = user[playerid][jLiderFam];
    else if (user[playerid][jMiembroFam] != 0) teamnumber = user[playerid][jMiembroFam];
    if (member > 0 || leader > 0) {
        _Mensaje(playerid, 4, "33CCFF", "Miembros de familia conectados:");
        foreach(Player, i) {
            new string[128];
            if (IsPlayerConnectedEx(i)) {
                if (user[i][jLiderFam] == teamnumber) format(string, sizeof(string), "[Nombre: %s] - [Rango: Líder]", NombreRJugador(i));
                else if (user[i][jMiembroFam] == teamnumber) format(string, sizeof(string), "[Nombre: %s] - [Rango: %d]", NombreRJugador(i), user[i][jRangoFam]);
                if (strlen(string) > 0) _Mensaje(playerid, 4, "FFFFFF", string);
            }
        }
    } else _Mensaje(playerid, 0, "687", "No perteneces a ninguna familia.");
    return 1;
}

CMD:detener(playerid, params[]) {
    if (Es_Faccion(playerid, 1, 5)) {
        if (IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "165", "No puedes hacer esto en un vehiculo.");
        new playerid2, seat,carid = QuienManejo[playerid];
        if (sscanf(params, "dd", playerid2, seat)) return _Mensaje(playerid, 3, "0", "/detener [playerid] [Asiento 1-3]");
        if (IsPlayerConnected(playerid2)) {
            if (seat < 1 || seat > 3) return _Mensaje(playerid, 0, "165", "Asientos: 1 al 3.");
            if (Es_Faccion(playerid2, 1, 5)) return _Mensaje(playerid, 0, "165", "No puedes detener a esta persona (Es Del Cuepo de la Ley).");
            if (IsPlayerInAnyVehicle(playerid2)) return _Mensaje(playerid, 0, "165", "Esa persona está en un vehiculo.");
            if (CercaDelWeon(8.0, playerid, playerid2)) {
                if (playerid2 == playerid) return _Mensaje(playerid, 0, "165", "No puedes hacer esto contigo mismo!");
                if (IsSeatAvailable(carid, seat)) {
                    new Float: pos[6];
                    GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
                    GetPlayerPos(playerid2, pos[3], pos[4], pos[5]);
                    GetVehiclePos(carid, pos[0], pos[1], pos[2]);
                    if (floatcmp(floatabs(floatsub(pos[0], pos[3])), 10.0) != -1 && floatcmp(floatabs(floatsub(pos[1], pos[4])), 10.0) != -1 && floatcmp(floatabs(floatsub(pos[2], pos[5])), 10.0) != -1) return false;
                    new MsgCheckMe[MAX_TEXT_CHAT];
                    format(MsgCheckMe, sizeof(MsgCheckMe), "sube forzosamente a %s al vehiculo.", NombreJugador(playerid2));
                    AccionesRol(playerid, 0, MsgCheckMe);
                    GameTextForPlayer(playerid2, "~r~Detenido", 2500, 3);
                    ClearAnimations(playerid2);
                    TogglePlayerControllable(playerid2, false);
                    PutPlayerInVehicle(playerid2, carid, seat);
                } else return _Mensaje(playerid, 0, "165", "Ese asiento no está disponible!");
            } else return _Mensaje(playerid, 0, "165", "Usted no está lo suficientemente cerca del jugador o de su coche!");
        } else return _Mensaje(playerid, 0, "165", "Jugador especificado inválido.");
    } else _Mensaje(playerid, 0, "165", "No formas parte de la Ley.");
    return 1;
}

CMD:reportar(playerid, params[]) return cmd_re(playerid, params);
CMD:re(playerid, params[]) {
    new string[256];
    if(!CheckTimer(60, TiempoReporte[playerid])) {
        if (StaffEnLinea() == 0) return _Mensaje(playerid, 0, "197", "No hay miembro del staff online en este momento, intenta más tarde.");
        if (ReporteB[playerid] == 1) return _Mensaje(playerid, 0, "472", "El /re ha sido bloqueado para ti por mal uso.");
        if(sscanf(params, "ds[128]", params[0], params[1])) return _Mensaje(playerid, 3, "0", "/reportar [id jugador] [razón]");
        if(IsPlayerConnected(params[0])) {
            format(string, sizeof(string), "Reporte de:{FFFFFF} %s[ID:%d] a %s[ID:%d], {00C200}Razón:{FFFFFF} %s", NombreRJugador(playerid), playerid, NombreRJugador(params[0]), params[0], params[1]);
            MensajeAdmin3(string);
            format(ReporteT[playerid], 256, "%s a %s[ID:%d]", params[1], NombreRJugador(params[0]), params[0]);
            _Mensaje(playerid, 2, "0", "Tu reporte fue enviado con exito a los miembro del staff y sera procesado.");
            TiempoReporte[playerid] = gettime();
            ReporteA[playerid] = 1;
        } else _Mensaje(playerid, 0, "75", "Jugador no conectado.");
    } else {
        format(string, 144, "Faltan %d segundos para que puedas enviar otro reporte.", CheckTimer(60, TiempoReporte[playerid]));
        _Mensaje(playerid, 0, "536", string);
    }
    return 1;
}

CMD:areporte(playerid, params[]) return cmd_ar(playerid, params);
CMD:ar(playerid, params[]) {
    if (user[playerid][jAdmin] < 1) return _Mensaje(playerid, 0, "195", "Tú no tienes acceso a el comando /atender.");
    if (sscanf(params, "d", params[0])) return _Mensaje(playerid, 3, "0", "/ar [id jugador]");
    if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
    if (params[0] > 200 || params[0] < 0) {
        _Mensaje(playerid, 0, "372", "Maximo de reportes es de 200.");
        return 1;
    }
    if (ReporteA[params[0]] == 1) {
        new string[128];
        format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s ha aceptado el reporte de [ID:%d] %s.", NombreRJugador(playerid), params[0], NombreRJugador(params[0]));
        MensajeAdmin(string);
        format(string, sizeof(string), "Game Admin %s [ID:%d]: {FFFFFF} ha aceptado tu reporte por favor espere atención.", NombreRJugador(playerid), playerid);
        _Mensaje(params[0], 2, "0", string);
        ReporteA[params[0]] = 0;
        ReporteT[params[0]] = "Nada";
    } else _Mensaje(playerid, 0, "194", "El jugador no ha enviado ningún reporte.");
    return 1;
}

CMD:rreporte(playerid, params[]) return cmd_rr(playerid, params);
CMD:rr(playerid, params[]) {
    if (user[playerid][jAdmin] < 1) return _Mensaje(playerid, 0, "193", "Tú no tienes acceso a el comando /Rr.");
    if (sscanf(params, "d", params[0])) return _Mensaje(playerid, 3, "0", "/rr [id jugador]");
    if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
    if (params[0] > 200 || params[0] < 0) {
        _Mensaje(playerid, 0, "372", "Maximo de reportes es de 200.");
        return 1;
    }
    if (ReporteA[params[0]] == 1) {
        new string[128];
        format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s ha rechazado el reporte de [ID:%d] %s.", NombreRJugador(playerid), params[0], NombreRJugador(params[0]));
        MensajeAdmin(string);
        format(string, sizeof(string), "Game Admin {FF0000}%s [ID:%d] {FFFFFF}ha rechazado su reporte.", NombreRJugador(playerid), playerid);
        _Mensaje(params[0], 2, "0", string);
        ReporteA[params[0]] = 0;
        ReporteT[params[0]] = "Nada";
    } else _Mensaje(playerid, 0, "194", "El jugador no ha enviado ningún reporte.");
    return 1;
}

CMD:reportes(playerid, params[]) {
    new string[128];
    if (user[playerid][jAdmin] >= 1) {
        _Mensaje(playerid, 4, "33CCFF", "Reportes activos:");
        for (new i = 0; i < MAX_PLAYERS; i++) {
            if (IsPlayerConnected(i) && ReporteA[i] == 1) {
                format(string, sizeof(string), "%s [ID:%i]: %s", NombreRJugador(i), i, ReporteT[i]);
                if (strlen(string) > 0) SendSplitMessage(playerid, 0xFF0000FF, string);
            }
        }
    } else return _Mensaje(playerid, 0, "482", "Tú no tienes acceso a el comando /reportes.");
    return 1;
}

CMD:borrarreportes(playerid, params[]) {
    new string[128];
    if (user[playerid][jAdmin] >= 4) {
        for (new i = 0; i < MAX_PLAYERS; i++) {
            if (IsPlayerConnected(i) && ReporteA[i] == 1) {
                ReporteA[i] = 0;
                ReporteT[i] = "Nada";
            }
        }
        format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s [ID:%i] a borrado todos los reportes activos.", NombreRJugador(playerid), playerid);
        MensajeAdmin(string);
    } else return _Mensaje(playerid, 0, "483", "Tú no tienes acceso a el comando /borrarreportes.");
    return 1;
}

CMD:bloquearreportes(playerid, params[]) {
    if (user[playerid][jAdmin] >= 3) {
        new string[128], playerid2;
        if (sscanf(params, "d", playerid2)) return _Mensaje(playerid, 3, "0", "/bloquearreportes [id jugador]");
        if (ReporteB[playerid2] == 0) {
            format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s [ID:%i] bloqueo el canal de reportes a %s (ID: %i).", NombreRJugador(playerid), playerid, NombreRJugador(playerid2), playerid2);
            MensajeAdmin(string);
            format(string, sizeof(string), "* Game Admin %s te ha bloqueado el canal de reportes por mal uso.", NombreRJugador(playerid));
            _Mensaje(playerid2, 4, "33CCFF", string);
            ReporteA[playerid2] = 0;
            ReporteT[playerid2] = "Nada";
            ReporteB[playerid2] = 1;
            return 1;
        } else {
            format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s [ID:%i] desbloqueo el canal de reportes a %s (ID: %i).", NombreRJugador(playerid), playerid, NombreRJugador(playerid2), playerid2);
            MensajeAdmin(string);
            format(string, sizeof(string), "* Game Admin %s te ha desbloqueado el canal de reportes. Utilizelo bien esta vez.", NombreRJugador(playerid));
            _Mensaje(playerid2, 4, "33CCFF", string);
            ReporteA[playerid2] = 0;
            ReporteT[playerid2] = "Nada";
            ReporteB[playerid2] = 0;
        }
    } else return _Mensaje(playerid, 0, "480", "Tú no tienes acceso a el comando /bloquearreportes.");
    return 1;
}

CMD:desbanip(playerid, params[]) return cmd_unbanip(playerid, params);
CMD:desbanearip(playerid, params[]) return cmd_unbanip(playerid, params);
CMD:unbanip(playerid, params[]) {
    if (user[playerid][jAdmin] >= 3 || user[playerid][jEncargado][3] == 1) {
        if (isnull(params)) return _Mensaje(playerid, 3, "0", "/unbanip [ip]");
        if (IsValidIP(params)) return _Mensaje(playerid, 0, "178", "Esa IP no es válida.");
        new string[128];
        RemoveBan(params);
        format(string, 128, "[AvisoAdmin]: {FFFFFF}Game Admin %s desbaneó la (IP %s) (desbloqueo de sistema).", NombreRJugador(playerid), params);
        MensajeAdmin(string);
        format(string, sizeof(string), "Registros: Game Admin %s desbaneó la (IP %s). (desbloqueo de IP)", NombreRJugador(playerid), params);
        Log("Registros/DesbanIP.log", string);
    }
    return 1;
}

CMD:desban(playerid, params[]) return cmd_unban(playerid, params);
CMD:desbanear(playerid, params[]) return cmd_unban(playerid, params);
CMD:unban(playerid, params[]) {
    if (user[playerid][jAdmin] >= 3 || user[playerid][jEncargado][3] == 1) {
        if (isnull(params)) return _Mensaje(playerid, 3, "0", "/unban [Nombre_Apellido]");
        if (INI_Exist(params)) {
            new data[60], string[128];
            format(data, sizeof data, DATOS_CUENTAS, params);
            new INI: File = INI_Open(data);
            INI_WriteInt(File, "Encargado_1", 0);
            INI_WriteInt(File, "Encargado_2", 0);
            INI_WriteInt(File, "Encargado_3", 0);
            INI_WriteInt(File, "Encargado_4", 0);
            INI_WriteInt(File, "Admin", 0);
            INI_WriteInt(File, "Baneado", 0);
            INI_Close(File);
            format(string, 128, "[AvisoAdmin]: {FFFFFF}El jugador %s fue desbaneado por el Game Admin %s.", params, NombreRJugador(playerid));
            MensajeAdmin(string);
            format(string, sizeof(string), "Registros: El jugador %s fue desbaneado por el Game Admin %s. (desbloqueo de jugador)", params, NombreRJugador(playerid));
            Log("Registros/Desban.log", string);
        } else _Mensaje(playerid, 0, "179", "Esa cuenta no existe.");
    } else _Mensaje(playerid, 0, "180", "Tú no tienes acceso a el comando /unban.");
    return 1;
}

CMD:bancuenta(playerid, params[]) return cmd_obanear(playerid, params);
CMD:banearcuenta(playerid, params[]) return cmd_obanear(playerid, params);
CMD:obanear(playerid, params[])
{
	if (user[playerid][jAdmin] >= 3 || user[playerid][jEncargado][3] == 1)
	{
		new string[256], playername[MAX_PLAYER_NAME], reason[64];
		if (sscanf(params, "s[32]s[128]", playername, reason)) return _Mensaje(playerid, 3, "0", "/obanear [Nombre_Apellido] [razón]");
		if (INI_Exist(playername))
		{
			new thetime[92], Year, Month, Day, horas, mins, segs;
			getdate(Year, Month, Day);
			gettime(horas, mins, segs);

			format(thetime, sizeof(thetime), "%s %d de %s de %d [%d:%d]", GetWeekDay(), Day, GetMonth(Month), Year, horas, mins);

			new data[60];
			format(data, sizeof data, DATOS_CUENTAS, playername);
			new INI: File = INI_Open(data);

			INI_WriteInt(File, "Admin", 0);
			INI_WriteInt(File, "Baneado", 20);
			INI_WriteString(File, "Ban_c", NombreRJugador(playerid));
			INI_WriteString(File, "Ban_r", reason);
			INI_WriteString(File, "Ban_m", thetime);

			INI_Close(File);

			format(string, sizeof(string), "Registros: El jugador %s ha sido bloqueado por el Game Admin %s. Razón: %s.", playername, NombreRJugador(playerid), reason);
			Log("Registros/Bloqueados.log", string);

			format(string, 128, "Administración: Jugador %s ha sido bloqueado por Game Admin %s, Razón:[%s] (OFFLINE)", playername, NombreRJugador(playerid), reason);
			_MensajeOOC(0xFF6347FF, string);

		} else _Mensaje(playerid, 0, "179", "Esa cuenta no existe.");
	}
	return 1;
}
CMD:ban(playerid, params[]) return cmd_banear(playerid, params);
CMD:bloquear(playerid, params[]) return cmd_banear(playerid, params);
CMD:banear(playerid, params[])
{
	if (user[playerid][jAdmin] >= 3 || user[playerid][jEncargado][3] == 1) {
		new string[256], playerid2, reason[128];
		if (sscanf(params, "ds[128]", playerid2, reason)) return _Mensaje(playerid, 3, "0", "/banear [id jugador] [razón] | Recuerda anotar en el foro la sanción al usuario.");
		if (!IsPlayerConnected(playerid2)) return _Mensaje(playerid, 0, "0", "Jugador no conectado.");
		if (user[playerid2][jAdmin] > user[playerid][jAdmin]) {

			format(string, sizeof(string), "{FF6347}Administración: Jugador %s ha sido auto-baneado. Razón: [Intentar banear un staff]", NombreRJugador(playerid));
			MensajeAdmin(string);
			user[playerid][jBaneado] = 20;
			Kick(playerid);
			return 1;

		} else {

			format(string, sizeof(string), "Registros: El jugador %s ha sido bloqueado por Game Admin %s. Razón: %s", NombreRJugador(playerid2), NombreRJugador(playerid), reason);
			Log("Registros/Bloqueados.log", string);

			format(string, sizeof(string), "Administración: Jugador %s ha sido bloqueado por Game Admin %s, Razón:[%s]", NombreRJugador(playerid2), NombreRJugador(playerid), reason);
			_MensajeOOC(0xFF6347FF, string);

			user[playerid2][jBaneado] = 20;

			new thetime[92], Year, Month, Day, horas, mins, segs;
			getdate(Year, Month, Day);
			gettime(horas, mins, segs);

			format(thetime, sizeof(thetime), "%s %d de %s de %d [%d:%d]", GetWeekDay(), Day, GetMonth(Month), Year, horas, mins);

			alm(user[playerid2][jBmomento], thetime);
			alm(user[playerid2][jBculpable], NombreRJugador(playerid));
			alm(user[playerid2][jBrazon], reason);

			format(thetime, sizeof(thetime), "%s", reason);
			_Expulsar(playerid2, 0, thetime);
		}
	}
	return 1;
}
CMD:banearip(playerid, params[]) return cmd_banip(playerid, params);
CMD:banip(playerid, params[])
{
	if (user[playerid][jAdmin] >= 3 || user[playerid][jEncargado][3] == 1) {
		new string[256], playerid2, reason[128];
		if (sscanf(params, "ds[128]", playerid2, reason)) return _Mensaje(playerid, 3, "0", "/banearip [id jugador] [razón] | Recuerda anotar en el foro la sanción al usuario.");
		if (!IsPlayerConnected(playerid2)) return _Mensaje(playerid, 0, "0", "Jugador no conectado.");
		if (user[playerid2][jAdmin] > user[playerid][jAdmin]) {

			format(string, sizeof(string), "{FF6347}Administración: El jugador %s ha sido auto-baneado. Razón: [Intentar banear un staff]", NombreRJugador(playerid));
			MensajeAdmin(string);
			user[playerid][jBaneado] = 20;
			Kick(playerid);
			return 1;

		} else {
			user[playerid2][jBaneado] = 20;

			format(string, sizeof(string), "Administración: El jugador %s ha sido baneado por %s, Razón:[%s]", NombreRJugador(playerid2), NombreRJugador(playerid), reason);
			_MensajeOOC(0xFF6347FF, string);

			format(string, sizeof(string), "Registros: El jugador %s ha sido baneado por %s. Razón: %s", NombreRJugador(playerid2), NombreRJugador(playerid), reason);
			Log("Registros/Baneados.log", string);

			new ip[32];
			GetPlayerIp(playerid2, ip, sizeof(ip));
			AddBan(ip);

			new thetime[92], Year, Month, Day, horas, mins, segs;
			getdate(Year, Month, Day);
			gettime(horas, mins, segs);

			format(thetime, sizeof(thetime), "%s %d de %s de %d [%d:%d]", GetWeekDay(), Day, GetMonth(Month), Year, horas, mins);

			alm(user[playerid2][jBmomento], thetime);
			alm(user[playerid2][jBculpable], NombreRJugador(playerid));
			alm(user[playerid2][jBrazon], reason);

			format(thetime, sizeof(thetime), "%s", reason);
			_Expulsar(playerid2, 0, thetime);
		}
	}
	return 1;
}
CMD:verip(playerid, params[]) {
	if (user[playerid][jAdmin] >= 3 || user[playerid][jEncargado][3] == 1) {
		new string[128], ip[32];
		if(sscanf(params, "i", params[0])) return _Mensaje(playerid, 3, "0", "/verip [id jugador]");
		GetPlayerIp(params[0], ip, 32);
		format(string, sizeof(string), "  IP de %s es: %s", NombreRJugador(params[0]), ip);
		_Mensaje(playerid, 4, "b0b0b0", string);
	}
	return 1;
}
CMD:bloquearip(playerid, params[]) {
	if (user[playerid][jAdmin] >= 3 || user[playerid][jEncargado][3] == 1) {
		new string[256], ip[50], reason[128];
		if (sscanf(params, "s[50]s[128]", ip, reason)) return _Mensaje(playerid, 3, "0", "/bloquearip [ip] [razón]");
		format(string, sizeof(string), "Registros: IP de Jugador %s fue bloqueada por %s. Razón: %s", ip, NombreRJugador(playerid), reason);
		Log("Registros/BloquearIP.log", string);
		format(string, sizeof(string), "Administración: (IP) de jugador %s fue bloqueada por Game Admin %s, Razón:[%s]", ip, NombreRJugador(playerid), reason);
		_MensajeOOC(0xFF6347FF, string);
		AddBan(ip);
	}
	return 1;
}
CMD:kick(playerid, params[]) {
	new string[256], playerid2, reason[128];
    if (user[playerid][jAdmin] < 1) return _Mensaje(playerid, 0, "492", "Tú no tienes acceso a el comando /Kick.");
	if (sscanf(params, "ds[128]", playerid2, reason)) return _Mensaje(playerid, 3, "0", "/kick [id jugador] [razón]");
	if (!IsPlayerConnected(playerid2)) return _Mensaje(playerid, 0, "0", "Jugador no conectado.");
	if (user[playerid2][jAdmin] >= user[playerid][jAdmin]) {
		return _Mensaje(playerid2, 4, "b00000", "No puedes expulsar a tu Dios.");
	} else {
		format(string, sizeof(string), "Registros: Jugador %s fue expulsado por Game Admin %s. Razón %s", NombreRJugador(playerid2), NombreRJugador(playerid), reason);
		Log("Registros/Kick.log", string);

		format(string, sizeof(string), "{FF6347}Administración: Jugador %s fue expulsado por Game Admin %s, Razón:[%s]", NombreRJugador(playerid2), NombreRJugador(playerid), reason);
		MensajeAdmin(string);

		format(string, sizeof(string), "%s", reason);
		_Expulsar(playerid2, 0, string);
	}
	return 1;
}

funcion TimerKICK(playerid) Kick(playerid);

CMD:arrestarf(playerid, params[]) {
	new string[128], time, suspect, rand;
	if(!Es_Faccion(playerid, 1)) return _Mensaje(playerid, 0, "378", "No eres LSPD/SADOC.");
	if (!EstaEnPuntosDeArresto(playerid)) return _Mensaje(playerid, 0, "177", "No estás en el lugar de arresto.");
	if (sscanf(params, "dd", suspect, time)) return _Mensaje(playerid, 3, "0", "/arrestarf [id jugador] [minutos]");
	if (!IsPlayerConnected(suspect)) return _Mensaje(playerid, 0, "110", "El id del jugador no está conectado.");
	if (!CercaDelWeon(5.0, playerid, suspect)) return _Mensaje(playerid, 0, "133", "El jugador no se encuentra cerca de tí.");
	if (time < 1 || time > 900) { _Mensaje(playerid, 0, "174", "Tiempo: 1 a 900 minutos."); return 1; }

	if (user[suspect][jEstrellas] < 3) { _Mensaje(playerid, 0, "174", "El sospechoso debe tener un nivel de búsqueda de al menos tres estrellas."); return 1; }
	if (_enPos(playerid, 4.0, 260.3547, 1990.4944, 17.6406)) {
		GameTextForPlayer(suspect, "Fuiste arrestado", 5000, 5);
		SetPlayerFacingAngle(suspect, 0);
		user[suspect][jTiempoCarcel] = time;
		DeletePVar(suspect, "Congelado");
		rand = random(sizeof(_PFp));
		SetPlayerPos(suspect, _PFp[rand][0], _PFp[rand][1], _PFp[rand][2]);
		CargarObjetos(suspect);
		SetPlayerInterior(suspect, 0); user[suspect][jInterior] = 0;
		user[suspect][jEncarcelado] = 3; B_Telefono[suspect] = 1;
		user[suspect][jArrestos] += 1; user[suspect][jEstrellas] = 0;
		SetPlayerWantedLevel(suspect, 0);
		Esposado[suspect] = 0; RemovePlayerAttachedObject(suspect, 9);
		ClearAnimations(suspect, 1);
		for(new x = 0; x < 10; x++) {
			if(InfoObjeto[user[suspect][jBolsillo][x]][IDArma] > 0) { user[suspect][jBolsillo][x] = 0, user[suspect][jBolsilloCant][x] = 0; }
		}
		SetPlayerSpecialAction(suspect, SPECIAL_ACTION_NONE);
		format(string, sizeof(string), "[SAN] %s ha sido encarcelado en la prisión federal de San Andreas por %d semanas.",NombreRJugador(suspect), time);
		_MensajeSAN(0x00A476FF, string);
	} else _Mensaje(playerid, 0, "110", "No estás cerca del punto de arresto.");
	return 1;
}


CMD:arrestar(playerid, params[]) {
    if (Es_Faccion(playerid, 1)) {
        if (!EstaEnPuntosDeArresto(playerid)) return _Mensaje(playerid, 0, "177", "No estás en el lugar de arresto.");
        new string[128], moneys, time, bail, bailprice, suspect, rand;
        if (sscanf(params, "ddddd", suspect, moneys, time, bail, bailprice)) return _Mensaje(playerid, 3, "0", "/arrestar [id jugador] [multa$] [minutos] [Fianza (0=no 1=si)] [Precio]");
        if (!CercaDelWeon(5.0, playerid, suspect)) return _Mensaje(playerid, 0, "133", "El jugador no se encuentra cerca de tí.");
        if (moneys < 1 || moneys > 50) { _Mensaje(playerid, 0, "174", "Multa: $1 a $50."); return 1; }
        if (time < 1 || time > 60) { _Mensaje(playerid, 0, "174", "Tiempo: 1 a 60 minutos."); return 1; }
        if (bail < 0 || bail > 1) { _Mensaje(playerid, 0, "174", "Fianza: 0 [OFF] o 1 [ON]."); return 1; }
        if (bailprice < 0 || bailprice > 500) { _Mensaje(playerid, 0, "174", "Fianza: $0 a $500."); return 1; }
        if (IsPlayerConnected(suspect)) {
            if (CercaDelWeon(5.0, playerid, suspect)) {
                if (user[suspect][jEstrellas] < 1) { _Mensaje(playerid, 0, "174", "El sospechoso debe tener un nivel de búsqueda de al menos una estrella."); return 1; }
                if (_enPos(playerid, 4.0, 2314.0645,2447.0774,3.2734) || _enPos(playerid, 4.0, 234.1898,72.5130,1005.0391) || _enPos(playerid, 4.0, 200.7210, 168.3594, 1002.9638) || _enPos(playerid, 4.0, -448.4868, 675.1337, 3852.9907)) {
                    DarDineroGC(suspect, -moneys); DineroEstado += moneys;
                    GameTextForPlayer(suspect, "Fuiste arrestado", 5000, 5);
                    user[suspect][jTiempoCarcel] = time;
                    DeletePVar(suspect, "Congelado");
                    rand = random(sizeof(_COMISARIAp));
                    SetPlayerPos(suspect, _COMISARIAp[rand][0], _COMISARIAp[rand][1], _COMISARIAp[rand][2]);
                    CargarObjetos(suspect);
                    SetPlayerInterior(suspect, 5); user[suspect][jInterior] = 5;
                    user[suspect][jEncarcelado] = 2; B_Telefono[suspect] = 1;
                    user[suspect][jArrestos] += 1; user[suspect][jEstrellas] = 0;
                    SetPlayerWantedLevel(suspect, 0);
                    Esposado[suspect] = 0; RemovePlayerAttachedObject(suspect, 9);
                    ClearAnimations(suspect, 1);
                    for(new x = 0; x < 10; x++) {
	              		if(InfoObjeto[user[suspect][jBolsillo][x]][IDArma] > 0) { user[suspect][jBolsillo][x] = 0, user[suspect][jBolsilloCant][x] = 0; }
		            }
                    SetPlayerSpecialAction(suspect, SPECIAL_ACTION_NONE);
        			format(string, sizeof(string), "[SAN] %s ha sido encarcelado en la prisión de lspd por %d semanas.",NombreRJugador(suspect), time);
					_MensajeSAN(0x00A476FF, string);
                }
                if (bail == 1) {
                    PrecioFianza[suspect] = bailprice;
                    format(string, sizeof(string), "Fuiste encarcelado %d minutos - Fianza: $%d", user[suspect][jTiempoCarcel], PrecioFianza[suspect]);
                    _Mensaje(suspect, 4, "33CCFF", string);
                } else {
                    PrecioFianza[suspect] = 0;
                    format(string, sizeof(string), "Fuiste encarcelado %d minutos - Fianza: No disponible", user[suspect][jTiempoCarcel]);
                    _Mensaje(suspect, 4, "33CCFF", string);
                }
            }
        } else return _Mensaje(playerid, 0, "175", "No hay nadie cerca tuyo.");
    } else _Mensaje(playerid, 0, "175", "No eres LSPD/SADOC.");
    return 1;
}

CMD:limpiar(playerid, params[]) {
    if (Es_Faccion(playerid, 1)) {
        if (EnServicioPD[playerid] == 0) return _Mensaje(playerid, 0, "166", "No estas en servicio.");
        if (!sscanf(params, "di", params[0], params[1])) {
            if (IsPlayerConnected(params[0])) {
                new string[128];
                switch (params[1]) {
                    case 0: {
                            user[params[0]][jEstrellas] = 0;
                            SetPlayerWantedLevel(params[0], 0);
                            format(string, sizeof(string), "%s te quito el nivel de búsqueda.", NombreJugador(playerid));
                            _Mensaje(params[0], 5, "0", string);
							format(string, sizeof(string), "*[CH|911|Central, S: 4A %s removió del sistema el nivel de búsqueda de %s.", NombreJugador(playerid), NombreJugador(params[0]));
                			_MensajeRfac(1, C_COLORRADIO, string, 1, 2);
       					}
                    case 1: {
                            strmid(user[params[0]][jDelito1], "Ninguno", 0, strlen("Ninguno"), 32);
                            strmid(user[params[0]][jDelito2], "Ninguno", 0, strlen("Ninguno"), 32);
                            strmid(user[params[0]][jDelito3], "Ninguno", 0, strlen("Ninguno"), 32);
                            strmid(user[params[0]][jDelito4], "Ninguno", 0, strlen("Ninguno"), 32);
                            strmid(user[params[0]][jDelito5], "Ninguno", 0, strlen("Ninguno"), 32);
                            strmid(user[params[0]][jDelito6], "Ninguno", 0, strlen("Ninguno"), 32);
                            strmid(user[params[0]][jDelito7], "Ninguno", 0, strlen("Ninguno"), 32);
                            strmid(user[params[0]][jDelito8], "Ninguno", 0, strlen("Ninguno"), 32);
                            strmid(user[params[0]][jDelito9], "Ninguno", 0, strlen("Ninguno"), 32);
                            strmid(user[params[0]][jDelito10], "Ninguno", 0, strlen("Ninguno"), 32);
                            user[params[0]][jDelito][0] = 0;
                            user[params[0]][jDelito][1] = 0;
                            user[params[0]][jDelito][2] = 0;
                            user[params[0]][jDelito][3] = 0;
                            user[params[0]][jDelito][4] = 0;
                            user[params[0]][jEstrellas] = 0;
                            user[params[0]][jDelito][5] = 0;
                            user[params[0]][jDelito][6] = 0;
                            user[params[0]][jDelito][7] = 0;
                            user[params[0]][jDelito][8] = 0;
                            user[params[0]][jDelito][9] = 0;
                            SetPlayerWantedLevel(params[0], 0);
                            format(string, sizeof(string), "%s te limpio todos los cargos.", NombreJugador(playerid));
                            _Mensaje(params[0], 4, "00c200", string);
							format(string, sizeof(string), "*[CH|911|Central, S: 4A]: Oficial %s removió del sistema todos los cargos de %s.", NombreJugador(playerid), NombreJugador(params[0]));
                			_MensajeRfac(1, C_COLORRADIO, string, 1, 2);
                        }
                    case 2: {
                            strmid(user[params[0]][jDelito1], "Ninguno", 0, strlen("Ninguno"), 32);
                            strmid(user[params[0]][jDelito2], "Ninguno", 0, strlen("Ninguno"), 32);
                            strmid(user[params[0]][jDelito3], "Ninguno", 0, strlen("Ninguno"), 32);
                            strmid(user[params[0]][jDelito4], "Ninguno", 0, strlen("Ninguno"), 32);
                            strmid(user[params[0]][jDelito5], "Ninguno", 0, strlen("Ninguno"), 32);
                            strmid(user[params[0]][jDelito6], "Ninguno", 0, strlen("Ninguno"), 32);
                            strmid(user[params[0]][jDelito7], "Ninguno", 0, strlen("Ninguno"), 32);
                            strmid(user[params[0]][jDelito8], "Ninguno", 0, strlen("Ninguno"), 32);
                            strmid(user[params[0]][jDelito9], "Ninguno", 0, strlen("Ninguno"), 32);
                            strmid(user[params[0]][jDelito10], "Ninguno", 0, strlen("Ninguno"), 32);
                            user[params[0]][jDelito][0] = 0;
                            user[params[0]][jDelito][1] = 0;
                            user[params[0]][jDelito][2] = 0;
                            user[params[0]][jDelito][3] = 0;
                            user[params[0]][jDelito][4] = 0;
                            user[params[0]][jDelito][5] = 0;
                            user[params[0]][jDelito][6] = 0;
                            user[params[0]][jDelito][7] = 0;
                            user[params[0]][jDelito][8] = 0;
                            user[params[0]][jDelito][9] = 0;
                            format(string, sizeof(string), "%s te removió todos los antecedentes.", NombreJugador(playerid));
                            _Mensaje(params[0], 4, "00c200", string);
							format(string, sizeof(string), "*[CH|911|Central, S: 4A] Oficial %s removió del sistema todos los antecedentes %s.", NombreJugador(playerid), NombreJugador(params[0]));
                			_MensajeRfac(1, C_COLORRADIO, string, 1, 2);
                        }
                }
            } else _Mensaje(playerid, 0, "75", "Jugador no conectado.");
        } else {
            LimpiarPantalla(playerid);
            _Mensaje(playerid, 3, "0", "/limpiar [id jugador] [opción]");
        	_Mensaje(playerid, 1, "Nivel de busqueda", "Opción 0");
        	_Mensaje(playerid, 1, "Antecedentes", "Opción 1");
        	_Mensaje(playerid, 1, "Antecedentes y nivel de busqueda", "Opción 2");
        }
    } else _Mensaje(playerid, 0, "165", "No formas parte de la Ley.");
    return 1;
}

CMD:antecedente(playerid, params[]) return cmd_ant(playerid, params);
CMD:hdelectivo(playerid, params[]) return cmd_ant(playerid, params);
CMD:ant(playerid, params[])
{
	new playerid2, reason[32];

	if (!Es_Faccion(playerid, 1)) return _Mensaje(playerid, 0, "165", "No formas parte de la Ley.");
	if (user[playerid][jDivision] != 1 && user[playerid][jDivision] != 2) return _Mensaje(playerid, 0, "229", "No eres de la división policial.");
	if (user[playerid][jRango] < 2) return _Mensaje(playerid, 0, "124", "No puedes utilizar esta opción, eres rango menor a 2.");

	if (sscanf(params, "ds[64]", playerid2, reason)) return _Mensaje(playerid, 3, "0", "/ant [id jugador] [texto]");
	if (strlen(reason) > 32) return _Mensaje(playerid, 0, "170", "El antecedente solo puede tener 32 caracteres.");
	if (!IsPlayerConnected(playerid2)) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");

	if (user[playerid2][jDelito][0] == 0) return Colocar_Delito(playerid, playerid2, 0, "primer", reason);
	else if (user[playerid2][jDelito][1] == 0) return Colocar_Delito(playerid, playerid2, 1, "segundo", reason);
	else if (user[playerid2][jDelito][2] == 0) return Colocar_Delito(playerid, playerid2, 2, "tercer", reason);
	else if (user[playerid2][jDelito][3] == 0) return Colocar_Delito(playerid, playerid2, 3, "cuarto", reason);
	else if (user[playerid2][jDelito][4] == 0) return Colocar_Delito(playerid, playerid2, 4, "quinto", reason);
	else if (user[playerid2][jDelito][5] == 0) return Colocar_Delito(playerid, playerid2, 5, "sexto", reason);
	else if (user[playerid2][jDelito][6] == 0) return Colocar_Delito(playerid, playerid2, 6, "septimo", reason);
	else if (user[playerid2][jDelito][7] == 0) return Colocar_Delito(playerid, playerid2, 7, "octavo", reason);
	else if (user[playerid2][jDelito][8] == 0) return Colocar_Delito(playerid, playerid2, 8, "noveno", reason);
	else if (user[playerid2][jDelito][9] == 0) return Colocar_Delito(playerid, playerid2, 9, "decimo", reason);
	else _Mensaje(playerid, 4, "b0b0b0", "Ese jugador no puede tener más antecedentes.");
	return 1;
}

Colocar_Delito(playerid, playerid2, slot, tipo[], razon[32])
{
	new string[128], tMensaje[129];
	switch (slot)
	{
		case 0: user[playerid2][jDelito1] = razon;
		case 1: user[playerid2][jDelito2] = razon;
		case 2: user[playerid2][jDelito3] = razon;
		case 3: user[playerid2][jDelito4] = razon;
		case 4: user[playerid2][jDelito5] = razon;
		case 5: user[playerid2][jDelito6] = razon;
		case 6: user[playerid2][jDelito7] = razon;
		case 7: user[playerid2][jDelito8] = razon;
		case 8: user[playerid2][jDelito9] = razon;
		case 9: user[playerid2][jDelito10] = razon;
	}
	user[playerid2][jDelito][slot] = 1;
	format(string, sizeof(string), "Has colocado a %s su %s antecedente (%s)", NombreJugador(playerid2), tipo, razon);
	_Mensaje(playerid, 4, "F8D48C", string);
	format(string, sizeof(string), "%s te ha colocado tu %s antecedente (%s)", NombreJugador(playerid), tipo, razon);
	_Mensaje(playerid2, 4, "F8D48C", string);
	format(string, sizeof(string), "*[CH|911|Central, S: 4A] %s ha puesto un antecedente a %s (%s)", NombreJugador(playerid), NombreJugador(playerid2), razon);
	format(tMensaje, sizeof(tMensaje), "Registros: %s ha puesto un antecedente a %s (%s).", NombreRJugador(playerid), NombreRJugador(playerid2), razon);
	Log("Registros/Antecedentes.log", tMensaje);
	_MensajeRfac(1, C_COLORRADIO, string, 1, 2);
	return 1;
}

CMD:su(playerid, params[])
{
	if (!Es_Faccion(playerid, 1)) return _Mensaje(playerid, 0, "165", "No formas parte de la Ley.");
	if (EnServicioPD[playerid] == 0) return _Mensaje(playerid, 0, "166", "No estas en servicio.");
	if (!sscanf(params, "ds[64]", params[0], params[1])) {
		if (IsPlayerConnected(params[0]))
		{
			if (Es_Faccion(params[0], 1)) return _Mensaje(playerid, 0, "173", "No puedes acusar a un policía.");
			if (user[params[0]][jEstrellas] == 6)
			{
				_Mensaje(playerid, 4, "b0b0b0", "Este jugador ha alcanzado el nivel de búsqueda máximo (6).");
				return 1;
			}
			else
			{
				if (user[params[0]][jEstrellas] < 1) { _MensajeRfac(1, C_COLORRADIO, "*[CH|911|Central, S: 4A]: Se ha encontrado un nuevo sospechoso, para más información miren sus ordenadores.", 1, 2); }
				new string[64];
				user[params[0]][jEstrellas]++;
				format(string, sizeof(string), "Has añadido al sistema nivel de búsqueda(%d/6) de %s", user[params[0]][jEstrellas], NombreJugador(params[0]));
				_Mensaje(playerid, 2, "0", string);
				SetPlayerWantedLevel(params[0], user[params[0]][jEstrellas]);
			}
		} else _Mensaje(playerid, 0, "75", "Jugador no conectado.");
	} else _Mensaje(playerid, 3, "0", "/su [id jugador] [crimen]");
	return 1;
}
CMD:mp(playerid, params[]) return cmd_w(playerid, params);
CMD:w(playerid, params[])
{
	new string[256], string2[256], mensaje[200];
	if (PrivadosB[playerid] == 1) return _Mensaje(playerid, 0, "472", "Tienes bloqueado el permiso de mandar /mp.");
	if (!sscanf(params, "ds[200]", params[0], mensaje)) {
		if (!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) { _Mensaje(playerid, 0, "75", "ID inválida."); return 1; }
		if(playerid == params[0]) return _Mensaje(playerid, 0, "75", "No te puedes enviar mensajes privados a tí mismo.");
		if (user[playerid][jAdmin] == 0) {
			if (user[params[0]][jAdmin] == 0) {
				if (B_Privados[params[0]] == 1) return _Mensaje(playerid, 0, "163", "Ese jugador tiene bloqueado los mensajes privados.");
				format(string, sizeof(string), "[OOC] Mens. Privado recibido [%s (ID: %d)]: (( %s ))", NombreJugador(playerid), playerid, mensaje);
				SendSplitMessage(params[0], 0xfdfe8bff, string);
				format(string, sizeof(string), "[OOC] Mens. Privado enviado [%s (ID: %d)]: (( %s ))", NombreJugador(params[0]), params[0], mensaje);
				SendSplitMessage(playerid, 0xfce80cff, string);
				format(string2, sizeof(string2), "[MP/Admin]: Mens. Privado de (%s) enviado a (%s): %s", NombreRJugador(playerid), NombreRJugador(params[0]), mensaje);
				MensajeMPS(0xFC7500FF, string2);
				return 1;
			} else {
				if (B_Privados[params[0]] == 1) return _Mensaje(playerid, 0, "163", "Ese jugador tiene bloqueado los mensajes privados.");
				format(string, sizeof(string), "[OOC] Mens. Privado recibido [%s (ID: %d)]: (( %s ))", NombreRJugador(playerid), playerid, mensaje);
				SendSplitMessage(params[0], 0xfdfe8bff, string);
				format(string, sizeof(string), "[OOC] Mens. Privado enviado [%s (ID: %d)]: (( %s ))", NombreRJugador(params[0]), params[0], mensaje);
				SendSplitMessage(playerid, 0xfce80cff, string);
				return 1;
			}
		} else {
			format(string, sizeof(string), "[OOC] Mens. Privado recibido [%s (ID: %d)]: (( %s ))", NombreRJugador(playerid), playerid, mensaje);
			SendSplitMessage(params[0], 0xfdfe8bff, string);
			format(string, sizeof(string), "[OOC] Mens. Privado enviado [%s (ID: %d)]: (( %s ))", NombreRJugador(params[0]), params[0], mensaje);
			SendSplitMessage(playerid, 0xfce80cff, string);
			return 1;
		}
	} else _Mensaje(playerid, 3, "0", "/mp [id jugador] [texto]");
	return 1;
}
CMD:guardarservidor(playerid)
{
	if (user[playerid][jAdmin] < 11) return _Mensaje(playerid, 0, "162", "El comando que intentas utilizar no está disponible para tí :)");
	GuardarCuentas();
	ActualizarEst();
	GuardarIncendios();
	ActualizarGasolineras();
	ActualizarVVeh();
	ActualizarUVeh();
	for (new f = 0; f < MAX_PLANTAS; f++)
	{
		if(InfoMaria[f][sSlot])
		{
			ActualizarMaria(f);
		}
	}
	_MensajeOOC(0xb0b0b0ff, "  Todos los datos del servidor han sido guardados.");
	return 1;
}
CMD:aguardar(playerid, params[]) {
	if (user[playerid][jAdmin] < 11) return _Mensaje(playerid, 0, "162", "Tú no tienes acceso a el comando /aguardar.");
	if (!sscanf(params, "s[32]", params[0]))
	{
		if (strcmp(params[0], "casa", true) == 0)
		{
			for (new idc = 0; idc < MAX_CASAS; idc++)
			{
				InfoCasa[idc][cEstado] = 0;
				ActualizarCasa(idc);
			}
			_MensajeOOC(0xb0b0b0ff, "  Sistema de casas guardado con éxito.");
			return 1;
		}
		else if (strcmp(params[0], "negocio", true) == 0)
		{
			for (new nid = 0; nid < MAX_NEGOCIOS; nid++)
			{
				for (new m = 0; m < MAX_MUEBLES_N; m++)
				{
					i_Negocio[nid][nSeguro] = 1;
					i_Negocio[nid][nProductos] = 5000;
					save_Negocio(nid, true, m);
				}
			}
			_MensajeOOC(0xb0b0b0ff, "  Sistema de negocios guardado con éxito.");
			return 1;
		}
		else if (strcmp(params[0], "garaje", true) == 0)
		{
		 	for (new gid = 0; gid < MAX_GARAJES; gid++)
			{
				ActualizarGarage(gid);
			}
			_MensajeOOC(0xb0b0b0ff, "  Sistema de garajes guardado con éxito.");
			return 1;
		}
		else if (strcmp(params[0], "familia", true) == 0)
		{
			for (new i = 0; i < sizeof(InfoFamilia); i++)
			{
				ActualizarFamilia(i);
			}
			_MensajeOOC(0xb0b0b0ff, "  Facciones guardadas con éxito.");
			return 1;
		}
	} else _Mensaje(playerid, 3, "0", "/aguardar [sistema] - (casa - negocio - garaje - familia)");
	return 1;
}


CMD:congelar(playerid, params[]) {
    if (EnServicioADM[playerid] == 0) return _Mensaje(playerid, 0, "158", "Sistema responsable. [Escribe] /adminservicio");
    if (user[playerid][jAdmin] >= 1) {
        new string[128], playerid2;
        if (sscanf(params, "d", playerid2)) return _Mensaje(playerid, 3, "0", "/congelar [id jugador]");
        if (IsPlayerConnected(playerid2)) {
            if (user[playerid2][jAdmin] > user[playerid][jAdmin]) return _Mensaje(playerid, 0, "159", "Muy gracioso :)");
            TogglePlayerControllable(playerid2, 0);
            SetPVarInt(playerid2, "Congelado", 1);
            format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}El jugador (%s) fue congelado, Game Admin (%s).", NombreRJugador(playerid2), NombreRJugador(playerid));
            MensajeAdmin(string);
        }
    } else _Mensaje(playerid, 0, "160", "Tú no tienes acceso a el comando /congelar.");
    return 1;
}

CMD:descongelar(playerid, params[]) {
    if (EnServicioADM[playerid] == 0) return _Mensaje(playerid, 0, "158", "Sistema responsable. [Escribe] /adminservicio");
    if (user[playerid][jAdmin] >= 1) {
        new string[128], playerid2;
        if (sscanf(params, "d", playerid2)) return _Mensaje(playerid, 3, "0", "/descongelar [id jugador]");
        if (IsPlayerConnected(playerid2)) {
            DeletePVar(playerid2, "Congelado");
            TogglePlayerControllable(playerid2, 1);
            ClearAnimations(playerid2);
            SetCameraBehindPlayer(playerid2);
            format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}El jugador (%s) fue descongelado, Game Admin (%s).", NombreRJugador(playerid2), NombreRJugador(playerid));
            MensajeAdmin(string);
        } else _Mensaje(playerid, 0, "75", "Jugador no conectado.");
    } else _Mensaje(playerid, 0, "161", "Tú no tienes acceso a el comando /descongelar.");
    return 1;
}
CMD:a(playerid, params[]) {
	new string[256];
    if (user[playerid][jAdmin] >= 1) {
        if (!isnull(params)) {
            format(string, sizeof(string), "[OOC|CHAT| [Admin Rank: %d]  %s:  %s", user[playerid][jAdmin], NombreRJugador(playerid), params);
            MensajeAdmins(0xBD005476, string);
            format(string, sizeof(string), "[OOC|CHAT| [Admin Rank: %d]  %s:  %s", user[playerid][jAdmin], NombreRJugador(playerid), params);
            Log("Registros/ChatAdmin.log", string);
        } else _Mensaje(playerid, 3, "0", "/a [chatadmintexto]");
    }
    return 1;
}

CMD:presos(playerid)
{
	if (Es_Faccion(playerid, 1))
	{
	    new carcel[32];

		new szNoobs[128];
		foreach(Player, i) if (user[i][jEncarcelado] == 2 || user[i][jEncarcelado] == 3)
		{
			if (user[i][jEncarcelado] == 2) carcel = "{9B9BFF}Comisaría{b0b0b0}";
			else if (user[i][jEncarcelado] == 3) carcel = "{00c200}Federal{b0b0b0}";
			format(szNoobs, sizeof(szNoobs), "[%d] - Nombre y apellido: %s - Semanas: %d - Prisión: %s", i, NombreRJugador(i), user[i][jTiempoCarcel], carcel);
			_Mensaje(playerid, 4, "b0b0b0", szNoobs);
		}
	}
	return 1;
}
CMD:enprision(playerid) return cmd_enjail(playerid);
CMD:enjail(playerid)
{
	if (user[playerid][jAdmin] < 1) return _Mensaje(playerid, 0, "492", "Tú no tienes acceso a el comando /Nuevos.");
	new carcel[32];

	new szNoobs[128];
	foreach(Player, i) if (user[i][jEncarcelado])
	{
		if (user[i][jEncarcelado] == 1) carcel = "{b00000}OOC{b0b0b0}";
		else if (user[i][jEncarcelado] == 2) carcel = "{9B9BFF}Comisaría{b0b0b0}";
		else if (user[i][jEncarcelado] == 3) carcel = "{00c200}Federal{b0b0b0}";

		if(user[i][jEncarcelado] == 1) format(szNoobs, sizeof(szNoobs), "[%d] %s - Minutos: %d - Prisión: %s - Sancionador: {FF0000}%s", i, NombreRJugador(i), user[i][jTiempoCarcel], carcel, user[i][jSancionador]);
		else format(szNoobs, sizeof(szNoobs), "[%d] %s - Minutos: %d - Prisión: %s", i, NombreRJugador(i), user[i][jTiempoCarcel], carcel);
		_Mensaje(playerid, 4, "b0b0b0", szNoobs);
	}
	return 1;
}
CMD:nuevos(playerid)
{
	if (user[playerid][jAdmin] < 1) return _Mensaje(playerid, 0, "492", "Tú no tienes acceso a el comando /nuevos.");

	_Mensaje(playerid, 4, "b0b0b0", "  Jugadores menores a 2 horas:");
	new szNoobs[128];
	foreach(Player, i) if (user[i][j_Horas] < 2)
	{
		format(szNoobs, sizeof(szNoobs), "[%d] %s - Horas de juego: {00A2ff}%d{ffffff}.", i, NombreRJugador(i), user[i][j_Horas]);
		_Mensaje(playerid, 4, "ffffff", szNoobs);
	}
	return 1;
}

CMD:getid(playerid, params[]) return cmd_id(playerid, params);
CMD:id(playerid, params[]) {
    if (sscanf(params, "u", params[0])) return _Mensaje(playerid, 3, "0", "/id [Nombre Jugador]");
    if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
    new string[128];
    format(string, sizeof(string), " [%d] %s - Nivel: %d", params[0], NombreRJugador(params[0]), user[params[0]][jNivel]);
    SendClientMessage(playerid, 0x969696FF, string);
    return 1;
}

CMD:ts(playerid, params[]) return cmd_ts3(playerid, params);
CMD:ts3(playerid, params[]) {
    _Mensaje(playerid, 4, "ffffff", "");
    _Mensaje(playerid, 2, "0", "TS3: Fuera de servicio");
    return 1;
}

CMD:web(playerid, params[]) return cmd_foro(playerid, params);
CMD:foro(playerid, params[]) {
    _Mensaje(playerid, 4, "ffffff", "");
    _Mensaje(playerid, 2, "0", "Web: www.gs-rp.es");
    _Mensaje(playerid, 2, "0", "Foro: www.samp.gs-rp.es");
    return 1;
}

CMD:premium(playerid, params[]) {
	Dialog(playerid, D_PREMIUMS, DIALOG_STYLE_LIST, "{D6E1EB}Información (premium):", "{ffffff}Premium básico (1)\nPremium avanzado (2)\nPremium ultra (3)", "Seleccionar", "Cancelar");
    return 1;
}

CMD:acciones(playerid, params[]) {
    new danimaccion[3000];
    strcat(danimaccion,"{FFFFFF}/danzar - /bebido - /movil - /cmovil - /bomba - /apuntar - /dormir\n");
    strcat(danimaccion,"/adios - /saludo - /trato - /crack - /fumando - /gro - /hablando - /taichi\n");
    strcat(danimaccion,"/caer - /reir - /tumbarse - /vomitar - /comiendo - /herido - /medico - /oralsex\n");
    strcat(danimaccion,"/muerto - /brazos - /pandillero - /taxi - /trafico - /golpeado - /besar - /boxear\n");
    strcat(danimaccion,"/espada /policia  /tortazo - /rodar - /cacheado - /bate - /gritando - /facepalm\n");
    strcat(danimaccion,"/animar - /esposado - /lanzar - /basket - /cansado - /saltovital - /pelea - /depie\n");
    strcat(danimaccion,"/rascarse - /apoyarse - /correr - /strip - /bailar - /asientosexi - /spray - /fokear\n");
    strcat(danimaccion,"/rifle - /mecanico - /carga - /consola - /barandilla - /llorar - /cruzarbrazos\n");
    strcat(danimaccion,"/discutir /camara  /bofetada - /billar - /beso - /dedo - /mear - /asco - /no - /si\n");
    strcat(danimaccion,"/cansarme - /asiento - /pararme - /irsecortao - /comerciar - /echarme - /cubrirme\n");
    strcat(danimaccion,"/coche - /agonizar - /levantarme - /mmm - /paja /oficinaanim /dildosex - /oralsexcar\n");
    Dialog(playerid,D_AYUDA, DIALOG_STYLE_MSGBOX, "{FFFFFF}Ayuda: {00C200}[Acciones]", danimaccion, "Volver","Cerrar");
    return 1;
}

CMD:anuncios(playerid) {
    new string[128];
    if (user[playerid][jAdmin] >= 4) {
        if (Anuncios == 0) {
            Anuncios = 1;
            format(string, sizeof(string), "[Administración] {FFFFFF}Game Admin %s ha habilitado el sistema de anuncios.", NombreRJugador(playerid));
            _MensajeOOC(0xE00000FF, string);
        } else {
            Anuncios = 0;
            format(string, sizeof(string), "[Administración] {FFFFFF}Game Admin %s ha deshabilitado el sistema de anuncios.", NombreRJugador(playerid));
            _MensajeOOC(0xE00000FF, string);
        }
    }
    return 1;
}

CMD:dejarfondos(playerid, params[]) {
    new string[128];
    if (user[playerid][jAdmin] >= 5) {
        if (ActFondos == 0) {
            ActFondos = 1;
            format(string, sizeof(string), "[AdmInfo] {FFFFFF}Head Game Admin %s ha habilitado el sistema de sacar fondos(Gobierno).", NombreRJugador(playerid));
            MensajeAdmin(string);
        } else {
            ActFondos = 0;
            format(string, sizeof(string), "[AdmInfo] {FFFFFF}Head Game Admin %s ha deshabilitado el sistema sacar fondos(Gobierno).", NombreRJugador(playerid));
            MensajeAdmin(string);
        }
    }
    return 1;
}

CMD:activartest(playerid, params[]) {
    new string[128];
    if (user[playerid][jAdmin] >= 10) {
        if (ActTest == 0) {
            ActTest = 1;
            format(string, sizeof(string), "[AdmInfo]: {FFFFFF}Super CMBlock (%s) ha habilitado el test de rol.", NombreRJugador(playerid));
            MensajeAdmin(string);
        } else {
            ActTest = 0;
            format(string, sizeof(string), "[AdmInfo]: {FFFFFF}Super CMBlock (%s) ha deshabilitado el test de rol.", NombreRJugador(playerid));
            MensajeAdmin(string);
        }
    }
    return 1;
}

CMD:registro(playerid, params[]) {
    new string[128];
    if (user[playerid][jAdmin] >= 10) {
        if (ActRegistro == 0) {
            ActRegistro = 1;
            format(string, sizeof(string), "[AdmInfo]: {FFFFFF}Super Game Admin %s ha habilitado el sistema de registro.", NombreRJugador(playerid));
            _MensajeOOC(C_GCRP, string);
        } else {
            ActRegistro = 0;
            format(string, sizeof(string), "[AdmInfo]: {FFFFFF}Super Game Admin %s ha deshabilitado el sistema de registro.", NombreRJugador(playerid));
            _MensajeOOC(C_GCRP, string);
        }
    }
    return 1;
}

CMD:robobanco(playerid, params[]) {
    new string[128];
    if (user[playerid][jAdmin] >= 5) {
        if (RobarBanco == 0) {
            RobarBanco = 1;
            format(string, sizeof(string), "[AdmInfo]: {FFFFFF}Game Admin %s ha habilitado el sistema de robo al banco.", NombreRJugador(playerid));
            _MensajeOOC(C_GCRP, string);
        } else {
            RobarBanco = 0;
            format(string, sizeof(string), "[AdmInfo]: {FFFFFF}Game Admin %s ha deshabilitado el sistema de robo al banco.", NombreRJugador(playerid));
            _MensajeOOC(C_GCRP, string);
        }
    }
    return 1;
}

CMD:ircordenada(playerid, params[]) {
    new Float: x,Float: y,Float: z,string[100];
    if (user[playerid][jAdmin] < 4) return _Mensaje(playerid, 0, "131", "Tú no tienes acceso a el comando /ircordenada.");
    if (sscanf(params, "fff", x, y, z)) return _Mensaje(playerid, 3, "0", "/ircordenada {ffff00}<X> {0000ff}<Y> {ff0000}<Z>");
    SetPlayerPos(playerid, x, y, z);
    format(string, sizeof(string), "Teleportado a {ffff00}%f, {0000ff}%f, {ff0000}%f", x, y, z);
    _Mensaje(playerid, 2, "0", string);
    return 1;
}

CMD:saludar(playerid, params[])
{
	if (sscanf(params, "d", params[0])) return _Mensaje(playerid, 3, "0", "/saludar [id jugador]");
	if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
	if (playerid != params[0])
	{
		if (CercaDelWeon(2.0, playerid, params[0]))
		{
			new string[128];
			Saludo_ID[params[0]] = playerid;
			format(string, sizeof string, "%s te a enviado una peticion de saludo. (/aceptar)", NombreJugador(playerid));
			_Mensaje(params[0], 4, "33CCFF", string);

		} else _Mensaje(playerid, 0, "133", "El jugador no se encuentra cerca de tí.");
	} else _Mensaje(playerid, 0, "132", "No puedes saludarte a ti mismo.");
	return 1;
}


CMD:eject(playerid, params[]) return cmd_expulsarveh(playerid, params);
CMD:expulsarveh(playerid, params[]) {
    if (IsPlayerInAnyVehicle(playerid)) {
        new porno = GetPlayerState(playerid), playerid2;
        if (porno != PLAYER_STATE_DRIVER) return _Mensaje(playerid, 0, "126", "No eres el conductor.");
        if (!sscanf(params, "d", playerid2)) {
            if (IsPlayerConnected(playerid2)) {
                if (playerid2 == playerid) return _Mensaje(playerid, 0, "127", "No te puedes echar ati mismo.");
                if (IsPlayerInAnyVehicle(playerid2)) {
                    if (GetPlayerVehicleID(playerid) == GetPlayerVehicleID(playerid2)) {
                        AccionesRol(playerid2, 0, "fue expulsado del vehiculo.");
                        RemovePlayerFromVehicle(playerid2);
                        DeletePVar(playerid2, "Congelado");
                        TogglePlayerControllable(playerid2, 1);
                    } else _Mensaje(playerid, 0, "128", "El jugador no está en tu vehículo.");
                } else _Mensaje(playerid, 0, "129", "El jugador no está en un vehículo.");
            } else _Mensaje(playerid, 0, "75", "Jugador no conectado.");
        } else _Mensaje(playerid, 3, "0", "/expulsarveh [id jugador]");
    } else _Mensaje(playerid, 0, "130", "No estás en ningún vehículo.");
    return 1;
}

CMD:borrarauto(playerid, params[])
{
	if (user[playerid][jAdmin] >= 10) {
		if (IsPlayerInAnyVehicle(playerid)) {
			new string[128];
			new carid = GetPlayerVehicleID(playerid);
			DestroyVehicle(carid);
			format(string, sizeof(string), "* Vehiculo [%d] destruido.", carid);
			_Mensaje(playerid, 4, "FF0000", string);
		}
	}
	return 1;
}
CMD:limpiarant(playerid, params[])
{
	new playerid2, string[256];
	if (user[playerid][jAdmin] < 3) return _Mensaje(playerid, 0, "458", "Tú no tienes acceso a el comando /Limpiarant.");
	if (!sscanf(params, "d", playerid2)) {
		if (!IsPlayerConnected(playerid2)) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
		strmid(user[playerid2][jDelito1], "Ninguno", 0, strlen("Ninguno"), 32);
		strmid(user[playerid2][jDelito2], "Ninguno", 0, strlen("Ninguno"), 32);
		strmid(user[playerid2][jDelito3], "Ninguno", 0, strlen("Ninguno"), 32);
		strmid(user[playerid2][jDelito4], "Ninguno", 0, strlen("Ninguno"), 32);
		strmid(user[playerid2][jDelito5], "Ninguno", 0, strlen("Ninguno"), 32);
		strmid(user[playerid2][jDelito6], "Ninguno", 0, strlen("Ninguno"), 32);
		strmid(user[playerid2][jDelito7], "Ninguno", 0, strlen("Ninguno"), 32);
		strmid(user[playerid2][jDelito8], "Ninguno", 0, strlen("Ninguno"), 32);
		strmid(user[playerid2][jDelito9], "Ninguno", 0, strlen("Ninguno"), 32);
		strmid(user[playerid2][jDelito10], "Ninguno", 0, strlen("Ninguno"), 32);
		user[playerid2][jDelito][0] = 0;
		user[playerid2][jDelito][1] = 0;
		user[playerid2][jDelito][2] = 0;
		user[playerid2][jDelito][3] = 0;
		user[playerid2][jDelito][4] = 0;
		user[playerid2][jDelito][5] = 0;
		user[playerid2][jDelito][6] = 0;
		user[playerid2][jDelito][7] = 0;
		user[playerid2][jDelito][8] = 0;
		user[playerid2][jDelito][9] = 0;
		user[playerid2][jEstrellas] = 0;
		format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s utilizó '/limpiarant', Jugador ID: %s[%d].", NombreRJugador(playerid), NombreRJugador(playerid2), playerid2);
		MensajeAdmin(string);
	} else _Mensaje(playerid, 3, "0", "/limpiartodo [id jugador]");
	return 1;
}
CMD:limpiartodo(playerid, params[])
{
	new playerid2, string[256];
	if (user[playerid][jAdmin] < 2) return _Mensaje(playerid, 0, "458", "Tú no tienes acceso a el comando /Limpiartodo.");
	if (!sscanf(params, "d", playerid2)) {
		if (!IsPlayerConnected(playerid2)) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
		QuitarBolsillos(playerid2);
		QuitarEspalda(playerid2);
		QuitarCinturon(playerid2);
		QuitarManos(playerid2);
		format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s utilizó '/limpiartodo', Jugador ID: %s[%d].", NombreRJugador(playerid), NombreRJugador(playerid2), playerid2);
		MensajeAdmin(string);
	} else _Mensaje(playerid, 3, "0", "/limpiartodo [id jugador]");
	return 1;
}
CMD:limpiarbolsillos(playerid, params[])
{
	new playerid2, string[256];
	if (user[playerid][jAdmin] < 2) return _Mensaje(playerid, 0, "458", "Tú no tienes acceso a el comando /Limpiarbolsillos.");
	if (!sscanf(params, "d", playerid2)) {
		if (!IsPlayerConnected(playerid2)) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
		QuitarBolsillos(playerid2);
		format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s utilizó '/limpiarbolsillos', Jugador ID: %s[%d].", NombreRJugador(playerid), NombreRJugador(playerid2), playerid2);
		MensajeAdmin(string);
	} else _Mensaje(playerid, 3, "0", "[AvisoAdmin]: /limpiarbolsillos [id jugador]");
	return 1;
}
CMD:limpiarmanos(playerid, params[])
{
	new playerid2, string[256];
	if (user[playerid][jAdmin] < 2) return _Mensaje(playerid, 0, "458", "Tú no tienes acceso a el comando /limpiarmanos.");
	if (!sscanf(params, "d", playerid2)) {
		if (!IsPlayerConnected(playerid2)) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
		QuitarManos(playerid2);
		format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s utilizó '/limpiarmanos', Jugador ID: %s[%d].", NombreRJugador(playerid), NombreRJugador(playerid2), playerid2);
		MensajeAdmin(string);
	} else _Mensaje(playerid, 3, "0", "/limpiarmanos [id jugador]");
	return 1;
}

CMD:limpiarcinturon(playerid, params[])
{
	new playerid2, string[256];
	if (user[playerid][jAdmin] < 2) return _Mensaje(playerid, 0, "458", "Tú no tienes acceso a el comando /limpiarcinturon.");
	if (!sscanf(params, "d", playerid2)) {
		if (!IsPlayerConnected(playerid2)) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
		QuitarCinturon(playerid2);
		format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s utilizó '/limpiarcinturon', Jugador ID: %s[%d].", NombreRJugador(playerid), NombreRJugador(playerid2), playerid2);
		MensajeAdmin(string);
	} else _Mensaje(playerid, 3, "0", "/limpiarcinturon [id jugador]");
	return 1;
}
CMD:condinero(playerid)
{
	if (user[playerid][jAdmin] < 1) return _Mensaje(playerid, 0, "458", "Tú no tienes acceso a el comando /ConDinero.");
	_Mensaje(playerid, 4, "FFFFFF", " Usuarios con dinero mayor a {00A60E}$8500");
	for (new i = 0; i < MAX_PLAYERS; i++) {
		if (IsPlayerConnected(i)) {
			new string[128], cash = ComprobarDineroJ(i) + user[i][jBanco];
			if (cash > 8500) {
				format(string, sizeof(string), " (%d) - %s | Horas: ({FF0000}%d{b0b0b0}) | Dinero: {00A60E}$%d", i, NombreRJugador(i), user[i][j_Horas], cash);
				_Mensaje(playerid, 4, "b0b0b0", string);
			}
		}
	}
	return 1;
}
CMD:limpiarespalda(playerid, params[])
{
	new playerid2, string[256];
	if (user[playerid][jAdmin] < 2) return _Mensaje(playerid, 0, "458", "Tú no tienes acceso a el comando /Limpiarespalda.");
	if (!sscanf(params, "d", playerid2)) {
		if (!IsPlayerConnected(playerid2)) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
		QuitarEspalda(playerid2);
		format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s utilizó '/limpiarespalda', Jugador ID: %s[%d].", NombreRJugador(playerid), NombreRJugador(playerid2), playerid2);
		MensajeAdmin(string);
	} else _Mensaje(playerid, 3, "0", "/limpiarespalda [id jugador]");
	return 1;
}

CMD:darstat(playerid, params[]) {
	if (user[playerid][jAdmin] < 10) return _Mensaje(playerid, 0, "458", "No tienes permisos suficientes o no eres Super Head Admin.");
	if (sscanf(params, "uii", params[0], params[1], params[2])) {
		_Mensaje(playerid, 3, "0", "/darstat [id jugador] [código] [cantidad]");
		_Mensaje(playerid, 2, "0", "1.Nivel - 2.Experiencia - 3.Teléfono - 4.Horas On.");
		_Mensaje(playerid, 2, "0", "5. Trabajo1 - 6. Trabajo2 - 7. Trabajo3 - 8. FD VIP.");
		_Mensaje(playerid, 2, "0", "9. FMes VIP - 10. Jail IC - 11. Jail OOC - 12.Fuerza.");
		return _Mensaje(playerid, 2, "0", "13. Materiales - 14. Troncos . 16 Hab Delincuente");
	}
	new string[128];

	if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");

	switch (params[1]) {
		case 1: {
			user[params[0]][jNivel] = params[2];
			SetPlayerScore(params[0], user[params[0]][jNivel]);
			format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Super Head Admin %s ha establecido el nivel a [%d] de %s", NombreRJugador(playerid), params[2], NombreRJugador(params[0]));
			MensajeAdmin(string);
		}
		case 2: {
			user[params[0]][jExperiencia] = params[2];
			format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Super Head Admin %s ha establecido la experiencia a [%d] de %s", NombreRJugador(playerid), params[2], NombreRJugador(params[0]));
			MensajeAdmin(string);
		}
		case 3: {
			user[params[0]][jTelefono] = params[2];
			format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Super Head Admin %s ha establecido el número telf. a [%d] de %s", NombreRJugador(playerid), params[2], NombreRJugador(params[0]));
			MensajeAdmin(string);
		}
		case 4: {
			user[params[0]][j_Horas] = user[params[0]][j_Horas] + params[2];
			format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Super Head Admin %s le ha dado [%d] de horas conectado a %s", NombreRJugador(playerid), params[2], NombreRJugador(params[0]));
			MensajeAdmin(string);
		}
		case 5: {
			user[params[0]][jTrabajo1] = params[2];
			format(string, sizeof(string), "[AvisoAdmin]:{FFFFFF}Super Head Admin %s ha establecido el trabajo 1 a [%d] de %s", NombreRJugador(playerid), params[2], NombreRJugador(params[0]));
			MensajeAdmin(string);
		}
		case 6: {
			user[params[0]][jTrabajo2] = params[2];
			format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Super Head Admin %s ha establecido el trabajo 2 a [%d] de %s", NombreRJugador(playerid), params[2], NombreRJugador(params[0]));
			MensajeAdmin(string);
		}
		case 7: {
			user[params[0]][jTrabajo3] = params[2];
			format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Super Head Admin %s ha establecido el trabajo 3 a [%d] de %s", NombreRJugador(playerid), params[2], NombreRJugador(params[0]));
			MensajeAdmin(string);
		}
		case 8: {
			user[params[0]][jD_premium] = params[2];
			format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Super Head Admin %s ha establecido el fin de día vip a [%d] de %s", NombreRJugador(playerid), params[2], NombreRJugador(params[0]));
			MensajeAdmin(string);
		}
		case 9: {
			user[params[0]][jM_premium] = params[2];
			format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Super Head Admin %s ha establecido el fin de mes PREMIUM a [%d] de %s", NombreRJugador(playerid), params[2], NombreRJugador(params[0]));
			MensajeAdmin(string);
		}
		case 10: {
			user[params[0]][jArrestos] = params[2];
			format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Super Head Admin %s ha establecido los arrestos a [%d] de %s", NombreRJugador(playerid), params[2], NombreRJugador(params[0]));
			MensajeAdmin(string);
		}
		case 11: {
			user[params[0]][jSanciones] = params[2];
			format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Super Head Admin %s ha establecido los jail's a [%d] de %s", NombreRJugador(playerid), params[2], NombreRJugador(params[0]));
			MensajeAdmin(string);
		}
		case 12: {
			user[params[0]][jFuerza] = params[2];
			format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Super Head Admin %s ha establecido la fuerza a [%d] de %s", NombreRJugador(playerid), params[2], NombreRJugador(params[0]));
			MensajeAdmin(string);
		}
		case 13: {
			user[params[0]][jMateriales] = params[2];
			format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Super Head Admin %s ha dado [%d] de materiales a %s", NombreRJugador(playerid), params[2], NombreRJugador(params[0]));
			MensajeAdmin(string);
		}
		case 14: {
			user[params[0]][jTroncos] += params[2];
			format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Super Head Admin %s ha dado [%d] de troncos a %s", NombreRJugador(playerid), params[2], NombreRJugador(params[0]));
			MensajeAdmin(string);
		}
		case 15: {
			user[params[0]][jTickets] += params[2];
			format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Super Head Admin %s ha dado [%d] de tickets a %s", NombreRJugador(playerid), params[2], NombreRJugador(params[0]));
			MensajeAdmin(string);
		}
		case 16: {
			user[params[0]][jHabilidad][3] += params[2];
			format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Super Head Admin %s ha dado [%d] de habilidad delincuente a %s", NombreRJugador(playerid), params[2], NombreRJugador(params[0]));
			MensajeAdmin(string);
		}
		default: _Mensaje(playerid, 0, "1", "Código inválido.");
	}
    return 1;
}

CMD:esposar(playerid, params[]) {
    if (!Es_Faccion(playerid, 1)) return _Mensaje(playerid, 0, "165", "No formas parte de la Ley.");
    if (EnServicioPD[playerid] == 0) return _Mensaje(playerid, 0, "166", "No estas en servicio.");
    if (!sscanf(params, "d", params[0])) {
        if (IsPlayerConnected(params[0])) {
            if (CercaDelWeon(2.0, playerid, params[0])) {
                if (user[params[0]][jm_Derecha] == 131) return _Mensaje(playerid, 4, "b00000", "No puedes realizar este comando si el sujeto lleva una caja registradora.");

                if (Esposado[params[0]] == 0) {
                    if (user[playerid][jm_Derecha] != 73) { _Mensaje(playerid, 0, "9", "Necesitas tener las esposas en el mano derecha, sacalas con /inv."); return 1; }
                    new MsgCheckMe[MAX_TEXT_CHAT];
                    format(MsgCheckMe, sizeof(MsgCheckMe), "esposa al sospechoso %s.", NombreJugador(params[0]));
                    AccionesRol(playerid, 0, MsgCheckMe);
                    TextoPantalla(params[0], "~r~ESPOSADO", 2500, 3);
                    Esposado[params[0]] = 1;
                    SetPlayerSpecialAction(params[0], 24);
                    user[playerid][jm_DerechaCant] = 0;
                    return 1;
                } else {
                    if (user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0) { _Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1; }
                    if (user[playerid][jm_Derecha] == 0) {
                        PonerObjeto(playerid, 1, 73);
                        user[playerid][jm_Derecha] = 73, user[playerid][jm_DerechaCant] = 1;
                    } else if (user[playerid][jm_Izquierda] == 0) {
                        PonerObjeto(playerid, 2, 73);
                        user[playerid][jm_Izquierda] = 73, user[playerid][jm_IzquierdaCant] = 1;
                    }
                    new MsgCheckMe[MAX_TEXT_CHAT];
                    format(MsgCheckMe, sizeof(MsgCheckMe), "desesposa a %s.", NombreJugador(params[0]));
                    AccionesRol(playerid, 0, MsgCheckMe);
                    TextoPantalla(params[0], "~g~LIBRE", 2500, 3);
                    Esposado[params[0]] = 0;
                    SetPlayerSpecialAction(params[0], SPECIAL_ACTION_NONE);
                    return 1;
                }
            } else _Mensaje(playerid, 0, "133", "El jugador no se encuentra cerca de tí.");
        } else _Mensaje(playerid, 0, "75", "Jugador no conectado.");
    } else _Mensaje(playerid, 3, "0", "/esposar [id jugador]");
    return 1;
}

CMD:mercado(playerid)
{
	if (_enPos(playerid, 5, 2119.1084, -2001.5844, 8.0257))
	{
		Dialog(playerid, D_Mnegro, DIALOG_STYLE_TABLIST_HEADERS, "{D6E1EB}Mercado negro", "Producto\tCosto\n\
		Puño Americano\t$35\n\
		Máscara\t$500\n\
		Ganzúas\t$250\n\
		Cuerda y venda\t$60\n\
		DNI falso\t$2,000\n\
		Vender teléfono", "Seleccionar", "Cancelar");
	} else _Mensaje(playerid, 0, "248", "No estás en el mercado negro.");
	return 1;
}
CMD:puente(playerid)
{
	new string[256], encendio = random(4), vehicleid = GetPlayerVehicleID(playerid);
	if (user[playerid][jGanzuas] == 0) return _Mensaje(playerid, 0, "249", "No tienes ganzúas.");
	if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return _Mensaje(playerid, 0, "126", "No eres el conductor.");
	if (!IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "126", "No estás en un vehículo.");
	if (GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510) return _Mensaje(playerid, 0, "126", "No puedes usar este comando si estás en este tipo de vehiculos.");
	if(!CheckTimer(10, IntentarD[playerid])) {
		user[playerid][jGanzuas]--;
        IntentarD[playerid] = gettime();
		switch (encendio)
		{
			case 0: GameTextForPlayer(playerid, "~p~ganzuas inservibles...", 2500, 3);
			case 1: {

				new location[MAX_ZONE_NAME], Float: x, Float: y, Float: z;
				GetPlayerPos(playerid, x, y, z);
				Get2DZone(location, MAX_ZONE_NAME, x, y, z);

				GameTextForPlayer(playerid, "~p~haciendo puente...", 2500, 3);
				AccionesRol(playerid, 0, "Utiliza unas ganzúas y cruza los cables para encender el coche. Rápido podría verte alguien y llamar a la policía.");
				SetTimerEx("EncenderVehiculo", 2500, 0, "dd", vehicleid, playerid);
				format(string, sizeof(string), "*[CH|911|Central, S: 4A]: A todas las unidades se informa en código 4 en (%s), robo de un vehículo (%s).", location, NombreVehiculo(vehicleid));
				_MensajeRfac(1, C_COLORPOLICIA, string, 1, 2);

			}
			case 2: GameTextForPlayer(playerid, "~p~ganzuas rotas...", 2500, 3);
	    }
    } else {
        format(string, 144, "Faltan %d segundos para que puedas usar este comando.", CheckTimer(10, IntentarD[playerid]));
        _Mensaje(playerid, 0, "536", string);
    }
    return 1;
}

CMD:atar(playerid, params[]) {
    new playerid2;
    if (user[playerid][jNivel] < 2) return _Mensaje(playerid, 0, "251", "Necesitas ser nivel 2 para arriba.");
    if (VendasYSoga[playerid] == 0) return _Mensaje(playerid, 0, "250", "No tienes una cuerda.");
    if (!sscanf(params, "d", playerid2)) {
        if (IsPlayerConnected(playerid2)) {
            if (CercaDelWeon(4.0, playerid, playerid2)) {
                if (Atado[playerid2] == 0) {
                    Atado[playerid2] = 1;
                    new MsgCheckMe[MAX_TEXT_CHAT];
                    format(MsgCheckMe, sizeof(MsgCheckMe), "agarra una cuerda y ata a %s.", NombreJugador(playerid2));
                    AccionesRol(playerid, 0, MsgCheckMe);
                } else {
                    Atado[playerid2] = 0;
                    new MsgCheckMe[MAX_TEXT_CHAT];
                    format(MsgCheckMe, sizeof(MsgCheckMe), "agarra una cuerda y desata a %s.", NombreJugador(playerid2));
                    AccionesRol(playerid, 0, MsgCheckMe);
                    TogglePlayerControllable(playerid2, 1);
                }
            } else _Mensaje(playerid, 0, "133", "El jugador no se encuentra cerca de tí.");
        } else _Mensaje(playerid, 0, "75", "Jugador no conectado.");
    } else _Mensaje(playerid, 3, "0", "/atar [id jugador]");
    return 1;
}

CMD:vendar(playerid, params[]) {
    new playerid2;
    if (user[playerid][jNivel] < 2) return _Mensaje(playerid, 0, "251", "Necesitas ser mayor o igual a nivel 2.");
    if (VendasYSoga[playerid] == 0) return _Mensaje(playerid, 0, "252", "No tienes una venda.");
    if (!sscanf(params, "d", playerid2)) {
        if (IsPlayerConnected(playerid2)) {
            if (CercaDelWeon(4.0, playerid, playerid2)) {
                if (Vendado[playerid2] == 0) {
                    Vendado[playerid2] = 1;
                    new MsgCheckMe[MAX_TEXT_CHAT];
                    format(MsgCheckMe, sizeof(MsgCheckMe), "venda los ojos de %s.", NombreJugador(playerid2));
                    AccionesRol(playerid, 0, MsgCheckMe);
                    SetPlayerCameraPos(playerid2, 0.0, 0.0, 1000);
                    SetPlayerCameraLookAt(playerid2, 0.0, 0.0, 5000);
                } else {
                    Vendado[playerid2] = 0;
                    new MsgCheckMe[MAX_TEXT_CHAT];
                    format(MsgCheckMe, sizeof(MsgCheckMe), "desvenda los ojos de %s.", NombreJugador(playerid2));
                    AccionesRol(playerid, 0, MsgCheckMe);
                    SetCameraBehindPlayer(playerid2);
                }
            } else return _Mensaje(playerid, 0, "133", "El jugador no se encuentra cerca de tí.");
        } else return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
    } else return _Mensaje(playerid, 3, "0", "/vendar [id jugador]");
    return 1;
}

CMD:entrenar(playerid)
{
	new string[128], DetectarPressBanca, banca;
	if (user[playerid][jFuerza]	> 998) return _Mensaje(playerid, 4, "b0b0b0", "Ya posees el máximo de fuerza, ya vete farmero.");
	if (HaciendoPressBanca[playerid] == 1) return _Mensaje(playerid, 4, "b0b0b0", "Ya estás haciendo algún tipo de ejercicio.");
	if (user[playerid][jTiempos][2] > 0) {
		format(string, sizeof(string), "Estás cansado de entrenar. Debes esperar %d minutos.", user[playerid][jTiempos][2]);
		_Mensaje(playerid, 2, "0", string);
		return 1;
	}
	for (new x; x < sizeof(PressBancaPlayerPos); x++)
	{
		if (_enPos(playerid, 2.0, PressBancaPlayerPos[x][0], PressBancaPlayerPos[x][1], PressBancaPlayerPos[x][2]))
		{
			DetectarPressBanca = 1;
			banca = x;
			if (UsandoGym[banca] == 1) return _Mensaje(playerid, 0, "126", "Están usando la maquina, espera a que terminen.");
			DestroyObject(PressBancaBarraObjeto[x]);
			break;
		}
	}
	if (DetectarPressBanca == 0) return _Mensaje(playerid, 0, "126", "No estás al lado de una máquina para hacer ese ejercicio.");
	new MsgCheckMe[MAX_TEXT_CHAT];
	format(MsgCheckMe, sizeof(MsgCheckMe), "se tumba en la máquina de press banca y comienza a levantar una barra de %dKg.", user[playerid][jFuerza] / 100 * 25);
	AccionesRol(playerid, 0, MsgCheckMe);
	HaciendoPressBanca[playerid] = 1;
	TogglePlayerControllable(playerid, 0);
	SetPlayerPos(playerid, PressBancaPlayerPos[banca][0], PressBancaPlayerPos[banca][1], PressBancaPlayerPos[banca][2]);
	SetPlayerFacingAngle(playerid, PressBancaPlayerPos[banca][3]);
	ApplyAnimation(playerid, "benchpress", "gym_bp_geton", 1, 0, 0, 0, 1, 0, 1);
	_Mensaje(playerid, 2, "0", "Pulsa 'clic' tantas veces como puedas en 1 minuto o escribe '/Dentrenar' para dejar de hacer ejercicio.");
	ColocarObject(playerid, 9, 2913, 6);
	UsandoGym[banca] = 1;
	SetTimerEx("FinEntrenar", 60000, false, "ii", playerid,banca+1);
	return 1;
}
CMD:dentrenar(playerid)
{
	if (HaciendoPressBanca[playerid] == 0) return _Mensaje(playerid, 0, "126", "No estás haciendo ningún tipo de ejercicio.");
	new banca;
	for (new x; x < sizeof(PressBancaPlayerPos); x++)
	{
		if (_enPos(playerid, 2.0, PressBancaPlayerPos[x][0], PressBancaPlayerPos[x][1], PressBancaPlayerPos[x][2]))
		{
			banca = x;
			break;
		}
	}
	FinEntrenar(playerid,banca+1);
	return 1;
}

CMD:documentofalso(playerid, params[]) return cmd_dnifalso(playerid, params);
CMD:dnifalso(playerid, params[]) {
	new string[300], playerid2, sex[18], otext[36];
	if (sscanf(params, "d", playerid2)) return _Mensaje(playerid, 3, "0", "/dnifalso [id jugador]");
	if (!IsPlayerConnected(playerid2)) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
	if (user[playerid][jf_Dni] == 0) return _Mensaje(playerid, 0, "516", "No posees un documento falso.");
	if (CercaDelWeon(4.0, playerid, playerid2)) {
		if (user[playerid][jSexo] == 1) sex = "Hombre";
		else if (user[playerid][jSexo] == 2) sex = "Mujer";
		if (user[playerid][jCiudad] == 1) otext = "Los Santos";
		else if (user[playerid][jCiudad] == 2) otext = "Las Venturas";
		else if (user[playerid][jCiudad] == 3) otext = "San Fierro";
		SendClientMessage(playerid2, 0xb0b0b0ff, "|_______DOCUMENTOS_______|");
		format(string, sizeof(string), "Nombre completo: %s - Sexo: %s - Edad: %d", user[playerid][jf_Nombre], sex, user[playerid][jf_Edad]);
		SendClientMessage(playerid2, 0xffffffff, string);
		format(string, sizeof(string), "Nacionalidad: %s - Documento: %d - Estado: Soltero", otext, user[playerid][jf_Dni]);
		SendClientMessage(playerid2, 0xffffffff, string);
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		PlayerPlaySound(playerid2, 1052, 0.0, 0.0, 0.0);
		format(string, sizeof(string), "muestra sus documentos a %s.", NombreJugador(playerid2));
		AccionesRol(playerid, 0, string);
	} else _Mensaje(playerid, 0, "133", "El jugador no se encuentra cerca de tí.");
	return 1;
}

CMD:documento(playerid, params[]) return cmd_dni(playerid, params);
CMD:dni(playerid, params[]) {
	new string[300], playerid2, sex[18], otext[36];
	if (user[playerid][jDocumento] == 0) return _Mensaje(playerid, 0, "1", "No posees un documento, saca uno en el ayuntamiento.");
	if (sscanf(params, "d", playerid2)) return _Mensaje(playerid, 3, "0", "/documento [id jugador]");
	if (!IsPlayerConnected(playerid2)) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
	if (EnServicioADM[playerid2] == 1) return _Mensaje(playerid, 0, "187", "No puedes hacer esto con un staff en servicio.");
	if (CercaDelWeon(4.0, playerid, playerid2)) {
		if (user[playerid][jSexo] == 1) sex = "Hombre";
		else if (user[playerid][jSexo] == 2) sex = "Mujer";
		if (user[playerid][jCiudad] == 1) otext = "Los Santos";
		else if (user[playerid][jCiudad] == 2) otext = "Las Venturas";
		else if (user[playerid][jCiudad] == 3) otext = "San Fierro";
		SendClientMessage(playerid2, 0xb0b0b0ff, "|_______DOCUMENTOS_______|");
		format(string, sizeof(string), "Nombre completo: %s - Sexo: %s - Edad: %d", NombreRJugador(playerid), sex, user[playerid][jEdad]);
		SendClientMessage(playerid2, 0xffffffff, string);
		format(string, sizeof(string), "Nacionalidad: %s - Documento: %d - Estado: Soltero", otext, user[playerid][jDocumento]);
		SendClientMessage(playerid2, 0xffffffff, string);
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		PlayerPlaySound(playerid2, 1052, 0.0, 0.0, 0.0);
		format(string, sizeof(string), "muestra sus documentos a %s.", NombreJugador(playerid2));
		AccionesRol(playerid, 0, string);
	} else _Mensaje(playerid, 0, "133", "El jugador no se encuentra cerca de tí.");
	return 1;
}

CMD:quitardnifalso(playerid, params[])
{
	if (user[playerid][jAdmin] < 3) return _Mensaje(playerid, 0, "181", "Tú no tienes acceso a el comando /Quitardni.");
	if (sscanf(params, "d", params[0])) return _Mensaje(playerid, 3, "0", "/quitardni [id jugador]");
	if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
	if (user[params[0]][jf_Dni] != 0)
	{
		new string[128];
		user[params[0]][jf_Dni] = 0;
		user[params[0]][jf_Edad] = 0;
		strmid(user[params[0]][jf_Nombre], "Ninguno", 0, strlen("Ninguno"), 12);
		format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s utilizó '/quitardnifalso', Jugador ID: %s[%d].", NombreRJugador(playerid), NombreRJugador(params[0]), params[0]);
		MensajeAdmin(string);
	} else _Mensaje(playerid, 0, "182", "Esa persona no tiene un DNI Falso.");
	return 1;
}

CMD:licencias(playerid, params[]) {
	new car[18], fly[18], boat[18], gun[18], cam[18], string[300], playerid2;
	if (sscanf(params, "d", playerid2)) return _Mensaje(playerid, 3, "0", "/licencias [id jugador]");
	if (!IsPlayerConnected(playerid2)) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
	if (EnServicioADM[playerid2] == 1) return _Mensaje(playerid, 0, "187", "No puedes hacer esto con un staff en servicio.");
	if (CercaDelWeon(4.0, playerid, playerid2)) {
		if (user[playerid][jLicencias][0] == 1) gun = "Si";
		else gun = "No";
		if (user[playerid][jLicencias][1] == 1) car = "Si";
		else car = "No";
		if (user[playerid][jLicencias][2] == 1) cam = "Si";
		else cam = "No";
		if (user[playerid][jLicencias][4] == 1) fly = "Si";
		else fly = "No";
		if (user[playerid][jLicencias][5] == 1) boat = "Si";
		else boat = "No";
		format(string, sizeof(string), "|_______LICENCIAS: %s_______|", NombreRJugador(playerid));
		SendClientMessage(playerid2, 0xb0b0b0ff, string);
		format(string, sizeof(string), "Conducir: %s - Vuelo: %s", car, fly);
		SendClientMessage(playerid2, 0xffffffff, string);
		format(string, sizeof(string), "Armas: %s - Camionero: %s - Bote: %s", gun, cam, boat);
		SendClientMessage(playerid2, 0xffffffff, string);
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		PlayerPlaySound(playerid2, 1052, 0.0, 0.0, 0.0);
		format(string, sizeof(string), "le muestra sus licencias a %s.", NombreJugador(playerid2));
		AccionesRol(playerid, 0, string);
	} else _Mensaje(playerid, 0, "133", "El jugador no se encuentra cerca de tí.");
	return 1;
}

CMD:dar(playerid, params[]) {
    new string[128], playerid2, choice[32], amount;
    if (sscanf(params, "ds[32]d", playerid2, choice, amount)) {
        _Mensaje(playerid, 3, "0", "/dar [id jugador] [item] [cantidad]");
        _Mensaje(playerid, 1, "Marihuana, Cocaina, Crack, Heroina, LSD", "Items:");
        return 1;
    }
    if (IsPlayerConnected(playerid2)) {
        if (playerid2 != INVALID_PLAYER_ID) {
            if (amount < 1) { _Mensaje(playerid, 0, "0", "No tienes la cantidad que pusiste."); return 1; }
            if (!CercaDelWeon(5.0, playerid, playerid2)) { _Mensaje(playerid, 0, "0", "El jugador no está cerca tuyo."); return 1; }
            if (playerid2 == playerid) return _Mensaje(playerid, 0, "0", "No puedes usar este comando contigo mismo!");

			if (strcmp(choice, "marihuana", true) == 0)
			{
                if (user[playerid][jm_Derecha] != 74) { _Mensaje(playerid, 0, "9", "Necesitas tener la bolsita de crack en la mano derecha sacalo con /bol."); return 1; }
                if (user[playerid][jm_DerechaCant] >= amount) {
                    for (new x = 0; x < 10; x++) {
                        if (user[playerid2][jBolsillo][x] == 0) {
                            user[playerid][jm_DerechaCant] -= amount;
                            user[playerid2][jBolsillo][x] = 74;
                            user[playerid2][jBolsilloCant][x] = amount;
                            format(string, sizeof(string), "Recibiste %d contenido de marihuana, revisa /bol.", amount);
                            _Mensaje(playerid2, 2, "0", string);
                            new MsgCheckMe[MAX_TEXT_CHAT];
                            format(MsgCheckMe, sizeof(MsgCheckMe), "le da algo a %s.", NombreJugador(playerid2));
                            AccionesRol(playerid, 0, MsgCheckMe);
                            return 1;
                        }
                    }
                    return 1;
                } else return _Mensaje(playerid, 0, "0", "No tienes tanta cantidad de marihuana.");
            }
			else if (strcmp(choice, "cocaina", true) == 0)
			{
                if (user[playerid][jm_Derecha] != 75) { _Mensaje(playerid, 0, "9", "Necesitas tener la bolsita de cocaina en la mano derecha sacalo con /bol."); return 1; }
                if (user[playerid][jm_DerechaCant] >= amount) {
                    for (new x = 0; x < 10; x++) {
                        if (user[playerid2][jBolsillo][x] == 0) {
                            user[playerid][jm_DerechaCant] -= amount;
                            user[playerid2][jBolsillo][x] = 75;
                            user[playerid2][jBolsilloCant][x] = amount;
                            format(string, sizeof(string), "Recibiste %d contenido de cocaina, revisa /bol.", amount);
                            _Mensaje(playerid2, 2, "0", string);
                            new MsgCheckMe[MAX_TEXT_CHAT];
                            format(MsgCheckMe, sizeof(MsgCheckMe), "le da algo a %s.", NombreJugador(playerid2));
                            AccionesRol(playerid, 0, MsgCheckMe);
                            return 1;
                        }
                    }
                    return 1;
                } else return _Mensaje(playerid, 0, "0", "No tienes tanta cantidad de crack.");
            }
			else if (strcmp(choice, "crack", true) == 0)
			{
                if (user[playerid][jm_Derecha] != 76) { _Mensaje(playerid, 0, "9", "Necesitas tener la bolsita de crack en la mano derecha sacalo con /bol."); return 1; }
                if (user[playerid][jm_DerechaCant] >= amount) {
                    for (new x = 0; x < 10; x++) {
                        if (user[playerid2][jBolsillo][x] == 0) {
                            user[playerid][jm_DerechaCant] -= amount;
                            user[playerid2][jBolsillo][x] = 76;
                            user[playerid2][jBolsilloCant][x] = amount;
                            format(string, sizeof(string), "Recibiste %d contenido de crack, revisa /bol.", amount);
                            _Mensaje(playerid2, 2, "0", string);
                            new MsgCheckMe[MAX_TEXT_CHAT];
                            format(MsgCheckMe, sizeof(MsgCheckMe), "le da algo a %s.", NombreJugador(playerid2));
                            AccionesRol(playerid, 0, MsgCheckMe);
                            return 1;
                        }
                    }
                    return 1;
                } else return _Mensaje(playerid, 0, "0", "No tienes tanta cantidad de crack.");
            }
			else if (strcmp(choice, "heroina", true) == 0)
			{
                if (user[playerid][jm_Derecha] != 77) { _Mensaje(playerid, 0, "9", "Necesitas tener la bolsita de heroina en la mano derecha sacalo con /bol."); return 1; }
                if (user[playerid][jm_DerechaCant] >= amount) {
                    for (new x = 0; x < 10; x++) {
                        if (user[playerid2][jBolsillo][x] == 0) {
                            user[playerid][jm_DerechaCant] -= amount;
                            user[playerid2][jBolsillo][x] = 77;
                            user[playerid2][jBolsilloCant][x] = amount;
                            format(string, sizeof(string), "Recibiste %d contenido de heroina, revisa /bol.", amount);
                            _Mensaje(playerid2, 2, "0", string);
                            new MsgCheckMe[MAX_TEXT_CHAT];
                            format(MsgCheckMe, sizeof(MsgCheckMe), "le da algo a %s.", NombreJugador(playerid2));
                            AccionesRol(playerid, 0, MsgCheckMe);
                            return 1;
                        }
                    }
                    return 1;
                } else return _Mensaje(playerid, 0, "0", "No tienes tanta cantidad de crack.");
            }
			else if (strcmp(choice, "lsd", true) == 0)
			{
                if (user[playerid][jm_Derecha] != 78) { _Mensaje(playerid, 0, "9", "Necesitas tener la trip de lsd en la mano derecha sacalo con /bol."); return 1; }
                if (user[playerid][jm_DerechaCant] >= amount) {
                    for (new x = 0; x < 10; x++) {
                        if (user[playerid2][jBolsillo][x] == 0) {
                            user[playerid][jm_DerechaCant] -= amount;
                            user[playerid2][jBolsillo][x] = 78;
                            user[playerid2][jBolsilloCant][x] = amount;
                            format(string, sizeof(string), "Recibiste %d trip de lsd, revisa /bol.", amount);
                            _Mensaje(playerid2, 2, "0", string);
                            new MsgCheckMe[MAX_TEXT_CHAT];
                            format(MsgCheckMe, sizeof(MsgCheckMe), "le da algo a %s.", NombreJugador(playerid2));
                            AccionesRol(playerid, 0, MsgCheckMe);
                            return 1;
                        }
                    }
                    return 1;
                } else return _Mensaje(playerid, 0, "0", "No tienes tanta cantidad de crack.");
            }
        }
    }
    return 1;
}

CMD:purple(playerid)
{
	if(user[playerid][jm_Derecha] != 93 && user[playerid][jm_Izquierda] != 93){ _Mensaje(playerid, 0, "9", "No tienes un sprunk en ninguna mano."); return 1;}
	if(user[playerid][jm_Derecha] != 125 && user[playerid][jm_Izquierda] != 125){ _Mensaje(playerid, 0, "9", "Necesitas una botella de codeine."); return 1;}
	GameTextForPlayer(playerid, "~p~Sirviendo...", 5000, 3);
	SetTimerEx("_Purple", 4000, false, "i", playerid);
	return 1;
}
funcion _Purple(playerid)
{
	if(user[playerid][jm_Derecha] != 93 && user[playerid][jm_Izquierda] != 93){ _Mensaje(playerid, 0, "9", "No tienes un sprunk en ninguna mano."); return 1;}
	if(user[playerid][jm_Derecha] != 125 && user[playerid][jm_Izquierda] != 125){ _Mensaje(playerid, 0, "9", "Necesitas una botella de codeine."); return 1;}
	if(user[playerid][jm_Derecha] == 125){user[playerid][jm_DerechaCant] --;}
	else if(user[playerid][jm_Izquierda] == 125){user[playerid][jm_IzquierdaCant] --;}
	ApplyAnimation(playerid,"BAR","Barserve_give",4.1,0,0,0,0,0,1);
	if(user[playerid][jm_Derecha] == 93){
		RemovePlayerAttachedObject(playerid, 6);
		user[playerid][jm_Derecha] = 124;
		user[playerid][jm_DerechaCant] = 5;
        PonerObjeto(playerid, 1, 124);

	} else if(user[playerid][jm_Izquierda] == 93){
		RemovePlayerAttachedObject(playerid, 7);
		user[playerid][jm_Izquierda] = 124;
		user[playerid][jm_IzquierdaCant] = 5;
        PonerObjeto(playerid, 2, 124);
	}
	_Mensaje(playerid, 4, "ADC3E7", "Has mezclado las botellas correctamente, usa /beber.");
	return 1;
}

CMD:consumir(playerid, params[])
{
	if (GetPVarInt(playerid, "Llamada_LSED") == 1) return _Mensaje(playerid, 0, "647", "No puedes usar este comando en este momento.");
	if (GetPVarInt(playerid, "EnEvento") == 1) return _Mensaje(playerid, 0, "647", "No puedes usar este comando en un evento.");
	new mundo = GetPlayerVirtualWorld(playerid), int = GetPlayerInterior(playerid);
	if (!sscanf(params, "s[32]", params[0]))
	{

		if (strcmp(params[0], "crack", true) == 0)
		{
			if (Consumiendo[playerid] != 0) return _Mensaje(playerid, 4, "b00000", " Consumiste algo hace poco, espera un tiempo.");
			if(user[playerid][jm_Derecha] != 76 && user[playerid][jm_Izquierda] != 76){ _Mensaje(playerid, 0, "9", "No tienes una bolsita de crack en ninguna mano."); return 1;}

			//- Quita unidad de droga
			if(user[playerid][jm_Derecha] == 76){user[playerid][jm_DerechaCant] --;}
			else if(user[playerid][jm_Izquierda] == 76){user[playerid][jm_IzquierdaCant] --;}

			//- Detecta el nivel de drogadicción.
			if(user[playerid][jAdiccion][0] > 4 && user[playerid][jAdiccion][0] < 10) _Mensaje(playerid, 2, "0", "Estás desarrollando una adicción al crack.");
			if(user[playerid][jAdiccion][0] == 10) _Mensaje(playerid, 2, "0", "Te has convertido en un adicto del crack."), user[playerid][jAdiccion][0] = 17;
			user[playerid][jAdiccion][0]++;

			//- Efecto - mensajes
			TextDrawShowForPlayer(playerid, EfectoCrack);
			Consumiendo[playerid] = 1;
			AccionesRol(playerid, 0, "se metio a la boca algo de la bolsita que lleva en mano.");
			_Mensaje(playerid, 4, "84C000", "Te sientes eufórico.");

			//- Animación
			TogglePlayerControllable(playerid, 0);
			ApplyAnimation(playerid,"CRACK","crckidle1",4.1,1,1,1,1,1, 1);
			PasarDroga(playerid, 1, 12);
			PlayerPlaySound(playerid,1150, 0.0, 0.0, 0.0);
        }
		if (strcmp(params[0], "marihuana", true) == 0)
		{
			if(user[playerid][jm_Derecha] != 74 && user[playerid][jm_Izquierda] != 74){ _Mensaje(playerid, 0, "9", "No tienes una bolsita de marihuana en ninguna mano."); return 1;}
			if(user[playerid][jm_Derecha] != 87 && user[playerid][jm_Izquierda] != 87){ _Mensaje(playerid, 0, "9", "Necesitas un encendedor con gas para encender porro."); return 1;}
			if((user[playerid][jm_Derecha] == 87 && user[playerid][jm_DerechaCant] <= 0) || (user[playerid][jm_Izquierda] == 87 && user[playerid][jm_IzquierdaCant] <= 0)){ _Mensaje(playerid, 0, "9", "Necesitas un encendedor con gas para encender porro."); return 1;}
			for (new x = 0; x < 10; x++)
			{
				if (user[playerid][jBolsillo][x] == 0)
				{
					if(user[playerid][jm_Derecha] == 87){user[playerid][jm_DerechaCant] --;}
					else if(user[playerid][jm_Izquierda] == 87){user[playerid][jm_IzquierdaCant] --;}
					if(user[playerid][jm_Derecha] == 74)
					{
						user[playerid][jm_DerechaCant] --;
						user[playerid][jBolsillo][x] = 74;
						user[playerid][jBolsilloCant][x] = user[playerid][jm_DerechaCant];
						user[playerid][jm_Derecha] = 132;
						user[playerid][jm_DerechaCant] = 5;
						PonerObjeto(playerid, 1, 132);
					}
					else if(user[playerid][jm_Izquierda] == 74)
					{
						user[playerid][jm_IzquierdaCant] --;
						user[playerid][jBolsillo][x] = 74;
						user[playerid][jBolsilloCant][x] = user[playerid][jm_IzquierdaCant];
						user[playerid][jm_Izquierda] = 132;
						user[playerid][jm_IzquierdaCant] = 5;
						PonerObjeto(playerid, 2, 132);
					}
					AccionesRol(playerid, 0, "armó un porro de marihuana y lo encendió.");
					PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
					_Mensaje(playerid, 4, "b0b0b0", "Hiciste un porro, usa /cfumar para consumirlo.");
					return 1;
				}
			}
			_Mensaje(playerid, 0, "9", "No tienes donde guardar la marihuana, saca algo del /inv.");
		}
		if (strcmp(params[0], "cocaina", true) == 0)
		{
			if (Consumiendo[playerid] != 0) return _Mensaje(playerid, 4, "b00000", " Consumiste algo hace poco, espera un tiempo.");
			if(user[playerid][jm_Derecha] != 75 && user[playerid][jm_Izquierda] != 75){ _Mensaje(playerid, 0, "9", "No tienes una bolsita de cocaína en ninguna mano."); return 1;}

			//- Quita unidad de droga
			if(user[playerid][jm_Derecha] == 75){user[playerid][jm_DerechaCant] --;}
			else if(user[playerid][jm_Izquierda] == 75){user[playerid][jm_IzquierdaCant] --;}

			//- Efecto - mensajes
			if(user[playerid][jAdiccion][2] > 4 && user[playerid][jAdiccion][2] < 10) _Mensaje(playerid, 2, "0", "Estás desarrollando una adicción a la cocaina.");
			if(user[playerid][jAdiccion][2] == 10) _Mensaje(playerid, 2, "0", "Te has convertido en un adicto de la cocaina."), user[playerid][jAdiccion][2] = 17;
			user[playerid][jAdiccion][2]++;
			if(mundo != 0 || int != 0) TextDrawShowForPlayer(playerid, EfectoCocaina);
			AccionesRol(playerid, 0, "esnifa una raya de cocaina.");
			_Mensaje(playerid, 4, "84C000", "Te sientes eufórico y motivado, pero un tanto nervioso.");
			Consumiendo[playerid] = 3;
			PasarDroga(playerid, 3, 180);
		}
		if (strcmp(params[0], "heroina", true) == 0)
		{
			if (Consumiendo[playerid] != 0) return _Mensaje(playerid, 4, "b00000", " Consumiste algo hace poco, espera un tiempo.");
			if(user[playerid][jm_Derecha] != 77 && user[playerid][jm_Izquierda] != 77){ _Mensaje(playerid, 0, "9", "No tienes una bolsita de heroína en ninguna mano."); return 1;}
			if(user[playerid][jm_Derecha] != 87 && user[playerid][jm_Izquierda] != 87){ _Mensaje(playerid, 0, "9", "Necesitas un encendedor con gas para fundir la heroína."); return 1;}
			if((user[playerid][jm_Derecha] == 87 && user[playerid][jm_DerechaCant] <= 0) || (user[playerid][jm_Izquierda] == 87 && user[playerid][jm_IzquierdaCant] <= 0)){ _Mensaje(playerid, 0, "9", "Necesitas un encendedor con gas para fundir la heroína."); return 1;}

			//- Quita unidad de droga
			if(user[playerid][jm_Derecha] == 77){user[playerid][jm_DerechaCant] --;}
			else if(user[playerid][jm_Izquierda] == 77){user[playerid][jm_IzquierdaCant] --;}

			//- Quita unidad de encendedor
			if(user[playerid][jm_Derecha] == 87){user[playerid][jm_DerechaCant] --;}
			else if(user[playerid][jm_Izquierda] == 87){user[playerid][jm_IzquierdaCant] --;}

			//- Efecto - mensajes
			if(user[playerid][jAdiccion][3] > 4 && user[playerid][jAdiccion][3] < 10) _Mensaje(playerid, 2, "0", "Estás desarrollando una adicción a la heroina.");
			if(user[playerid][jAdiccion][3] == 10) _Mensaje(playerid, 2, "0", "Te has convertido en un adicto de la heroina."), user[playerid][jAdiccion][3] = 17;
			user[playerid][jAdiccion][3]++;
			TextDrawShowForPlayer(playerid, EfectoHeroina);
			AccionesRol(playerid, 0, "se inyecta heroína.");
			_Mensaje(playerid, 4, "84C000", "Una gran sensación de placer te invade y te hace olvidar tus problemas.");
			Consumiendo[playerid] = 4;
			PasarDroga(playerid, 4, 360);
			TogglePlayerControllable(playerid, 0);
			ApplyAnimation(playerid,"CRACK","crckidle1",4.1,1,1,1,1,1, 1);
			PlayerPlaySound(playerid,1150, 0.0, 0.0, 0.0);
		}
		if (strcmp(params[0], "lsd", true) == 0)
		{
			if (Consumiendo[playerid] != 0) return _Mensaje(playerid, 4, "b00000", " Consumiste algo hace poco, espera un tiempo.");
			if(user[playerid][jm_Derecha] != 78 && user[playerid][jm_Izquierda] != 78){_Mensaje(playerid, 0, "730", "No tienes un tripi de LSD en ninguna mano."); return 1;}

			//Quita unidad de droga
			if(user[playerid][jm_Derecha] == 78){user[playerid][jm_DerechaCant] --;}
			else if(user[playerid][jm_Izquierda] == 78){user[playerid][jm_IzquierdaCant] --;}

			//- Efecto - mensajes
			if(user[playerid][jAdiccion][4] > 4 && user[playerid][jAdiccion][4] < 10) _Mensaje(playerid, 2, "0", "Estás desarrollando una adicción al LSD.");
			if(user[playerid][jAdiccion][4] == 10) _Mensaje(playerid, 2, "0", "Te has convertido en un adicto del LSD."), user[playerid][jAdiccion][4] = 17;
			user[playerid][jAdiccion][4]++;
			SetPlayerDrunkLevel(playerid, 4000);
			SetPlayerWeather(playerid, 23+random(18));
			AccionesRol(playerid, 0, "se coloca un tripi de LSD en la lengua.");
			_Mensaje(playerid, 4, "84C000", "Empiezas a tener alucinaciones y ves cosas extrañas por todas partes.");
			Consumiendo[playerid] = 5;
			PasarDroga(playerid, 5, 420);
			PlayerPlaySound(playerid,1150, 0.0, 0.0, 0.0);
		}
	} else _Mensaje(playerid, 3, "0", "/consumir [droga] - Drogas: Marihuana, Cocaina, Crack, Heroina, LSD");
	return 1;
}

stock PasarDroga(playerid, tipo, segundos = 0)
{
	new Float: Health = user[playerid][jSangre];
	if (tipo == 1) //crack
	{
		TextoPantalla(playerid, "~w~Consumiste ~r~Crack", 2500, 1);
		if(Health < 100) Sangre_(playerid, Health + 10);
	}
	else if (tipo == 2) //marihuana
	{
		new Float: Armor;
		GetPlayerArmour(playerid, Armor);
		TextoPantalla(playerid, "~w~Consumiste ~g~Marihuana..", 2500, 1);
		if(Armor < 100) Chaleco_(playerid, Armor + 2);
	}
	else if (tipo == 3) //cocaína
	{
		TextoPantalla(playerid, "~w~Consumiste ~y~Cocaina..", 2500, 1);
	}
	else if (tipo == 4) //heroina
	{
		TextoPantalla(playerid, "~w~Consumiste ~p~Heroina..", 2500, 1);
		Sangre_(playerid, Health + 20);
	}
	else if (tipo == 5) //lsd
	{
		TextoPantalla(playerid, "~w~Consumiste ~p~LSD..", segundos * 1000, 1);
	}
	SetTimerEx("Pasado", segundos * 1000, false, "i", playerid);
	return 1;
}

funcion Pasado(playerid)
{
	new tipo = Consumiendo[playerid];

	if(tipo == 1) TextDrawHideForPlayer(playerid, EfectoCrack);
	else if(tipo == 2) TextDrawHideForPlayer(playerid, EfectoPorro);
	else if(tipo == 3) TextDrawHideForPlayer(playerid, EfectoCocaina);
	else if(tipo == 4) TextDrawHideForPlayer(playerid, EfectoHeroina);

	SetPlayerWeather(playerid, clima);
	Consumiendo[playerid] = 0;
	ClearAnimations(playerid);
	TogglePlayerControllable(playerid, true);
	_Mensaje(playerid, 2, "0", "El efecto de la droga disminuye.");
	return 1;
}

CMD:parqueo(playerid)
{
	JugadorCercaPeaje(playerid, 1, 1);
	return 1;
}
CMD:peaje(playerid)
{
	JugadorCercaPeaje(playerid, 0, 2);
	return 1;
}
CMD:combustible(playerid)
{
	if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return _Mensaje(playerid, 0, "126", "No eres el conductor.");
	for (new gsid = 0; gsid < sizeof(InfoGas); gsid++)
	{
		if (_enPos(playerid, 5.0, InfoGas[gsid][gsPosicionX], InfoGas[gsid][gsPosicionY], InfoGas[gsid][gsPosicionZ]))
		{
			new vehicleid = GetPlayerVehicleID(playerid);
			new engine, lights, alarm, doors, bonnet, boot, objective;
			GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
			if (engine == VEHICLE_PARAMS_ON) return _Mensaje(playerid, 4, "b0b0b0", " Debes tener el motor apagado.");
			if (GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510) return _Mensaje(playerid, 4, "b0b0b0", " Este vehículo no necesita gasolina.");
			if (GasolinaInicialVeh[vehicleid] >= 200) return _Mensaje(playerid, 4, "b0b0b0", " El tanque de gasolina del vehículo está lleno.");
			if (VehiculoGasolina[playerid] == 1) return _Mensaje(playerid, 4, "b0b0b0", " Ya te encuentras llenando el tanque de gasolina.");
			GameTextForPlayer(playerid, "~w~Llenando ~r~tanque...", 15000, 3);
			VehiculoGasolina[playerid] = 1;
			SetTimerEx("_gasolinta", 14000, 0, "dd", playerid, gsid);
			return 1;
		}
	}
	_Mensaje(playerid, 4, "b0b0b0", " No estás en una gasolinera.");
	return 1;
}
funcion _gasolinta(playerid, gsid)
{
	i_Negocio[InfoGas[gsid][gsNegocio]][nDinero] += 75;
	DarDineroGC(playerid, -75);
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
	VehiculoGasolina[playerid] = 0;
	GasolinaInicialVeh[GetPlayerVehicleID(playerid)] += 200;
	_Mensaje(playerid, 4, "00a2ff", " El tanque de gasolina fue llenado con éxito.");
	if (GasolinaInicialVeh[GetPlayerVehicleID(playerid)] >= 200) GasolinaInicialVeh[GetPlayerVehicleID(playerid)] = 200;
	return 1;
}
CMD:creargasolinera(playerid, params[])
{
    if (!IsPlayerConnected(playerid)) return _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
    if (user[playerid][jAdmin] < 10) return _Mensaje(playerid, 0, "259", "Tú no tienes acceso a el comando /creargasolinera.");
    new gsid, id;
    if (!sscanf(params, "dd", gsid, id)) {
        if (gsid < 0 || gsid > MAX_GASOLINERAS) return _Mensaje(playerid, 0, "260", "ID de Gasolinera inválida.");
        if (InfoGas[gsid][gsPosicionX] > 0) return _Mensaje(playerid, 0, "261", "Esta ID está siendo utilizada.");
        GetPlayerPos(playerid, InfoGas[gsid][gsPosicionX], InfoGas[gsid][gsPosicionY], InfoGas[gsid][gsPosicionZ]);
        InfoGas[gsid][gsNegocio] = id;
        ActualizarGasolineras();
        _Mensaje(playerid, 4, "b0b0b0", " Creado con éxito.");
    } else return _Mensaje(playerid, 3, "0", "/creargasolinera [id libre] [id negocio]");
    return 1;
}
CMD:borrargasolinera(playerid, params[]) {
    new id;
    if (!IsPlayerConnected(playerid)) return _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
    if (user[playerid][jAdmin] < 10) return _Mensaje(playerid, 0, "262", "Tú no tienes acceso a el comando /borrargasolinera.");
    if (sscanf(params, "i", id)) return _Mensaje(playerid, 3, "0", "/borrargasolinera [gasid]");
    InfoGas[id][gsPosicionX] = 0;
    InfoGas[id][gsPosicionY] = 0;
    InfoGas[id][gsPosicionZ] = 0;
    InfoGas[id][gsNegocio] = -1;
    _Mensaje(playerid, 4, "b0b0b0", " Borraste el indicado con éxito.");
    ActualizarGasolineras();
    return 1;
}



CMD:emisora(playerid) return cmd_estereo(playerid);
CMD:emisoras(playerid) return cmd_estereo(playerid);
CMD:estereo(playerid)
{
    if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return _Mensaje(playerid, 0, "126", "Suba al vehículo al asiento de conductor y luego use /emisoras.");
    {
        new StationsDialog[2500];
        strcat(StationsDialog, "Número\tNombre\tGénero\n", sizeof(StationsDialog));
        strcat(StationsDialog, "{F50000}||\t{F50000}Detener música\t{F50000}||\n", sizeof(StationsDialog));
        strcat(StationsDialog, "{00C200}1\t{FFFFFF}54 House\t{00A2FF}Electro\n", sizeof(StationsDialog));
        strcat(StationsDialog, "{00C200}2\t{FFFFFF}Top Latino\t{00A2FF}Variado\n", sizeof(StationsDialog));
        strcat(StationsDialog, "{00C200}3\t{FFFFFF}Dubbase.FM\t{00A2FF}Dubstep\n", sizeof(StationsDialog));
        strcat(StationsDialog, "{00C200}4\t{FFFFFF}Reggae Hits\t{00A2FF}Reggaeton\n", sizeof(StationsDialog));
        strcat(StationsDialog, "{00C200}5\t{FFFFFF}MBradio.FM\t{00A2FF}Reggaeton\n", sizeof(StationsDialog));
        strcat(StationsDialog, "{00C200}6\t{FFFFFF}113 FM TEagle\t{00A2FF}Classic rock\n", sizeof(StationsDialog));
        strcat(StationsDialog, "{00C200}7\t{FFFFFF}181 FM\t{00A2FF}Classic rock\n", sizeof(StationsDialog));
        strcat(StationsDialog, "{00C200}8\t{FFFFFF}Soft Rock Cafe\t{00A2FF}Heavy Metal\n", sizeof(StationsDialog));
        strcat(StationsDialog, "{00C200}9\t{FFFFFF}HardRadio.com\t{00A2FF}Rock\n", sizeof(StationsDialog));
        strcat(StationsDialog, "{00C200}10\t{FFFFFF}Aural Moon\t{00A2FF}Punk\n", sizeof(StationsDialog));
        strcat(StationsDialog, "{00C200}11\t{FFFFFF}Idobi Radio\t{00A2FF}Electronic\n", sizeof(StationsDialog));
        strcat(StationsDialog, "{00C200}12\t{FFFFFF}www.Hot108.com\t{00A2FF}Hip Hop\n", sizeof(StationsDialog));
        strcat(StationsDialog, "{00C200}13\t{FFFFFF}Sensacion Peru\t{00A2FF}Pop\n", sizeof(StationsDialog));
        strcat(StationsDialog, "{00C200}14\t{FFFFFF}BluePoint\t{00A2FF}Metal\n", sizeof(StationsDialog));
        strcat(StationsDialog, "{00C200}15\t{FFFFFF}PaganMetalRadio\t{00A2FF}Extreme Metal\n", sizeof(StationsDialog));
        strcat(StationsDialog, "{00C200}16\t{FFFFFF}Dirty Beats Radio 24/7\t{00A2FF}Extreme Metal\n", sizeof(StationsDialog));
        strcat(StationsDialog, "{00C200}17\t{FFFFFF}The Trip\t{00A2FF}Music Usa\n", sizeof(StationsDialog));
		strcat(StationsDialog, "{00C200}18\t{FFFFFF}Latina FM (Arg)\t{00A2FF}Variado\n", sizeof(StationsDialog));
		strcat(StationsDialog, "{00C200}19\t{FFFFFF}Amor latino\t{00A2FF}Variado\n", sizeof(StationsDialog));
		strcat(StationsDialog, "{00C200}20\t{FFFFFF}Hotmixradio\t{00A2FF}Hip Hop\n", sizeof(StationsDialog));
		strcat(StationsDialog, "{00C200}21\t{FFFFFF}Naxi Café Radio\t{00A2FF}Variado\n", sizeof(StationsDialog));
		strcat(StationsDialog, "{00C200}22\t{FFFFFF}Radio Hunter\t{00A2FF}Electrónica\n", sizeof(StationsDialog));
		strcat(StationsDialog, "{00C200}23\t{FFFFFF}181.0 - BCEver\t{00A2FF}Rock Clásico", sizeof(StationsDialog));
        Dialog(playerid, D_ESTEREO, DIALOG_STYLE_TABLIST_HEADERS, "{00C200}Estéreo", StationsDialog, "Seleccionar", "Cancelar");
    }
    return 1;
}

CMD:lugares(playerid)
{
	if (GetPVarInt(playerid, "EnCheckPoint") > 0) return _Mensaje(playerid, 0, "148","Tienes un checkpoint pendiente, escribe /eliminarcp.");
	if (Granjero[playerid] == 1) return _Mensaje(playerid, 0, "75", "Te encuentras cosechando, termina antes.");
	Dialog(playerid, D_LUGARES_4, DIALOG_STYLE_LIST, "{D6E1EB}Lugares", "Locales\nTrabajos\nDeposito de embargos\nAyuntamiento - Licencias\nBanco LS", "Seleccionar", "Cancelar");
	return 1;
}

CMD:equiposonido(playerid, params[]) {
    if(user[playerid][jEncarcelado] != 0) return _Mensaje(playerid, 0, "213", "No puedes usar esto mientras estás en prisión.");
    new string[300];
    if (IsPlayerConnected(playerid)) {
        new Float: BBCoord[4];
        GetPlayerPos(playerid, BBCoord[0], BBCoord[1], BBCoord[2]);
        GetPlayerFacingAngle(playerid, BBCoord[3]);
        SetPVarFloat(playerid, "BBX", BBCoord[0]);
        SetPVarFloat(playerid, "BBY", BBCoord[1]);
        SetPVarFloat(playerid, "BBZ", BBCoord[2]);
        BBCoord[0] += (2 * floatsin(-BBCoord[3], degrees));
        BBCoord[1] += (2 * floatcos(-BBCoord[3], degrees));
        BBCoord[2] -= 1.0;
        if (user[playerid][jBoombox] == 0) return _Mensaje(playerid, 0, "507", "No tienes un equipo sonido, puedes comprarla en cualquier Tienda Electronica.");
        if (GetPVarInt(playerid, "PlacedBB")) return _Mensaje(playerid, 2, "0", "Usa /encender para cambiar la emisora del equipo de sonido y /requiposonido para recoger el equipo de sonido del suelo y guardarla.");
        foreach(Player, i) {
            if (GetPVarType(i, "PlacedBB")) {
                if (_enPos(playerid, 30.0, GetPVarFloat(i, "BBX"), GetPVarFloat(i, "BBY"), GetPVarFloat(i, "BBZ"))) {
                    _Mensaje(playerid, 0, "508", "No puedes colocar tu equipo sonido aquí, ya hay una colocada cerca de donde estás.");
                    return 1;
                }
            }
        }
        SetPVarInt(playerid, "PlacedBB", CreateDynamicObject(2103, BBCoord[0], BBCoord[1], BBCoord[2], 0.0, 0.0, 0.0, .worldid = GetPlayerVirtualWorld(playerid), .interiorid = GetPlayerInterior(playerid)));
        format(string, sizeof(string), "{D6E1EB}%d | %s", playerid, NombreRJugador(playerid));
        SetPVarInt(playerid, "BBLabel", _: CreateDynamic3DTextLabel(string, -1, BBCoord[0], BBCoord[1], BBCoord[2] + 0.6, 5, .worldid = GetPlayerVirtualWorld(playerid), .interiorid = GetPlayerInterior(playerid)));
        SetPVarInt(playerid, "BBArea", CreateDynamicSphere(BBCoord[0], BBCoord[1], BBCoord[2], 30.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid)));
        SetPVarInt(playerid, "BBInt", GetPlayerInterior(playerid));
        SetPVarInt(playerid, "BBVW", GetPlayerVirtualWorld(playerid));
        ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0, 1);
    }
    return 1;
}

CMD:encender(playerid, params[]) {
	if (GetPVarType(playerid, "PlacedBB")) {
 		if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) return _Mensaje(playerid, 0, "184", "Usted debe estar agachado.");
   		if (_enPos(playerid, 3.0, GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"))) {
     		Dialog(playerid, D_BOOMBOX, DIALOG_STYLE_LIST, "{D6E1EB}Equipo de sonido", "{F50000}Detener música{FFFFFF}\nRadios\nURL - Internet", "Seleccionar", "Cancelar");
       	} else return _Mensaje(playerid, 0, "509", "No estás cerca de tu Equipo Sonido.");
	} else _Mensaje(playerid, 0, "510", "No has colocado ningun equipo sonido.");
    return 1;
}

CMD:requiposonido(playerid, params[]) {
    if (!GetPVarInt(playerid, "PlacedBB")) { return _Mensaje(playerid, 0, "510", "No has colocado ningun Equipo Sonido."); }
    if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) return _Mensaje(playerid, 0, "184", "Usted debe estar agachado.");
    if (_enPos(playerid, 3.0, GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"))) {
    	foreach(Player, i) {
        	if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) {
            	StopStream(i);
        	}
    	}
    	DeletePVar(playerid, "BBArea");
    	DestroyDynamicObject(GetPVarInt(playerid, "PlacedBB"));
    	DestroyDynamic3DTextLabel(Text3D: GetPVarInt(playerid, "BBLabel"));
    	DeletePVar(playerid, "PlacedBB");
    	DeletePVar(playerid, "BBLabel");
    	DeletePVar(playerid, "BBX");
    	DeletePVar(playerid, "BBY");
    	DeletePVar(playerid, "BBZ");
    	DeletePVar(playerid, "BBInt");
    	DeletePVar(playerid, "BBVW");
    	DeletePVar(playerid, "BBStation");
    	_Mensaje(playerid, 2, "0", "Has cogido tu equipo sonido del suelo.");
    }
    return 1;
}

CMD:repararveh(playerid, params[]) {
	if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return _Mensaje(playerid, 0, "126", "No eres el conductor.");
	new idcar = GetPlayerVehicleID(playerid);
	if (ObjetosRep[playerid] == 1) {
		GameTextForPlayer(playerid,"~w~reparando ~r~vehiculo...",20000,3);
		ObjetosRep[playerid] = 0;
		SetTimerEx("_Fix", 20000, false, "dd", playerid, idcar);
		TogglePlayerControllable(playerid, false);
		_rVeh[playerid] = 1;
	} else _Mensaje(playerid, 0, "126", "No tienes piezas de recambio, compra unos en la gasolinera.");
	return 1;
}

funcion _Fix(playerid, idcar) {
	TogglePlayerControllable(playerid, true);
	new panels, doors, lights, tires;
	GetVehicleDamageStatus(idcar, panels, doors, lights, tires);
	RepairVehicle(idcar);
	UpdateVehicleDamageStatus(idcar, panels, doors, lights, tires);
	SetVehicleHealth(idcar, 650.0);
	SetVehicleHealth(idcar, 650.0);
    SetTimerEx("dar_F", 2000, false, "d", playerid);
	return 1;
}

stock dar_F(playerid) _rVeh[playerid] = 0;

CMD:llenarveh(playerid)
{
	if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return _Mensaje(playerid, 0, "126", "No eres el conductor.");
	new idcar = GetPlayerVehicleID(playerid);
	if(user[playerid][jm_Derecha] != 89 && user[playerid][jm_Izquierda] != 89){ _Mensaje(playerid, 0, "9", "No tienes un bidón de gasolina en ninguna mano."); return 1;}
	AccionesRol(playerid, 0, "abrió el tanque de gasolina, llevando el bidón para llenar el mismo de gasolina.");
	if(EstaEnAvion(idcar) || EstaEnBote(idcar)) GasolinaInicialVeh[idcar] = 300;
	else GasolinaInicialVeh[idcar] = 100;
	if(user[playerid][jm_Derecha] == 89){user[playerid][jm_Derecha] = 0;}
	else if(user[playerid][jm_Izquierda] == 89){user[playerid][jm_Izquierda] = 0;}
	return 1;
}

CMD:togmanuelas(playerid, params[]) return cmd_togmanos(playerid, params);
CMD:togmanoplas(playerid, params[]) return cmd_togmanos(playerid, params);
CMD:togmanos(playerid, params[]) {
    if (!B_Manos[playerid]) {
        B_Manos[playerid] = 1;
        _Mensaje(playerid, 2, "0", "Animación al hablar desactivado.");
    } else {
        B_Manos[playerid] = 0;
        _Mensaje(playerid, 2, "0", "Animación al hablar activado.");
    }
    return 1;
}

CMD:modopecho(playerid, params[]) {
    if (Es_Faccion(playerid, 1) || user[playerid][jAdmin] >= 3) {
        if (!B_Pecho[playerid]) {
            B_Pecho[playerid] = 1;
            _Mensaje(playerid, 2, "0", "Activaste el modo /espalda como pecho.");
        } else {
            B_Pecho[playerid] = 0;
            _Mensaje(playerid, 2, "0", "Desactivaste el modo /espalda como pecho.");
        }
    } else _Mensaje(playerid, 0, "165", "No eres policía.");
    return 1;
}

CMD:togmusica(playerid) return cmd_togmusic(playerid);
CMD:togmusic(playerid)
{
    if (!B_Musica[playerid]) {
        B_Musica[playerid] = 1;
        StopAudioStreamForPlayer(playerid);
        _Mensaje(playerid, 2, "0", "Audio's desactivados.");
    } else {
        B_Musica[playerid] = 0;
        StopAudioStreamForPlayer(playerid);
        _Mensaje(playerid, 2, "0", "Audio's activados.");
    }
    return 1;
}

CMD:seguro(playerid, params[]) {
    new Float: x, Float: y, Float: z;
	for (new v = 0; v < MAX_VEHICULOS; v++) {
        if (InfoVehiculo[v][vID] != INVALID_PLAYER_VEHICLE_ID) GetVehiclePos(InfoVehiculo[v][vID], x, y, z);
        if (_enPos(playerid, 3.0, x, y, z)) {
            if (!TieneLlavesVeh(playerid, InfoVehiculo[v][vID])) { _Mensaje(playerid, 0, "126", "No tienes las llaves de este vehículo."); return 1;}
			if (InfoVehiculo[v][vSeguro] > 0 && InfoVehiculo[v][vUSeguro] == 0) {
                TextoPantalla(playerid, "~w~~h~~h~Vehiculo ~r~Cerrado", 5000, 1);
                PlayerPlaySoundEx(1145, x, y, z);
                InfoVehiculo[v][vUSeguro] = 1;
        		VehSeguro[InfoVehiculo[v][vID]] = 1;
       			vehicle_lock_doors(InfoVehiculo[v][vID]);
                AccionesRol(playerid, 0, "toma las llaves del vehículo y coloca el seguro.");
				ActualizarVehiculo(v);
                return 1;
            } else if (InfoVehiculo[v][vSeguro] > 0 && InfoVehiculo[v][vUSeguro] == 1) {
                TextoPantalla(playerid, "~w~~h~~h~Vehiculo ~g~Abierto", 5000, 1);
                PlayerPlaySoundEx(1145, x, y, z);
                InfoVehiculo[v][vUSeguro] = 0;
        		VehSeguro[InfoVehiculo[v][vID]] = 0;
        		vehicle_unlock_doors(InfoVehiculo[v][vID]);
                AccionesRol(playerid, 0, "toma las llaves del vehículo y quita el seguro.");
				ActualizarVehiculo(v);
                return 1;

            }
            _Mensaje(playerid, 0, "411", "Usted no tiene un sistema de bloqueo instalado en el vehículo.");
            return 1;
        }
    }
    _Mensaje(playerid, 0, "399", "No estás cerca de un vehiculo.");
    return 1;
}

CMD:aparcar(playerid) return cmd_estacionar(playerid);
CMD:estacionar(playerid)
{
	for (new d = 0; d < MAX_VEHICULOS; d++)
	{
		if (IsPlayerInVehicle(playerid, InfoVehiculo[d][vID]))
		{
			if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return _Mensaje(playerid, 0, "126", "No eres el conductor.");
			if (!TieneLlavesVeh(playerid, InfoVehiculo[d][vID])) { _Mensaje(playerid, 0, "126", "No tienes las llaves de este vehículo."); return 1;}
			new Float: x,Float: y,Float: z,Float: angle,Float: health;
			GetVehicleHealth(InfoVehiculo[d][vID], health);
			GetVehicleDamageStatus(InfoVehiculo[d][vID], InfoVehiculo[d][vDanioSuperficie], InfoVehiculo[d][vDanioPuertas], InfoVehiculo[d][vDanioLuces], InfoVehiculo[d][vDanioRuedas]);
			InfoVehiculo[d][vVida] = health;
			GetVehiclePos(InfoVehiculo[d][vID], x, y, z);
			GetVehicleZAngle(InfoVehiculo[d][vID], angle);
			SurfingCheck(GetPlayerVehicleID(playerid));
			CargarCoche(playerid, d, x, y, z, angle, health);
			PutPlayerInVehicle(playerid, InfoVehiculo[d][vID], 0);
			CargarVehMods(d, InfoVehiculo[d][vID]);
			SetVehicleHealth(InfoVehiculo[d][vID], health);
			AccionesRol(playerid, 0, "ha estacionado su vehìculo.");
			_vVelocidad[playerid] = 0.0;
			UpdateVehicleDamageStatus(InfoVehiculo[d][vID], InfoVehiculo[d][vDanioSuperficie], InfoVehiculo[d][vDanioPuertas], InfoVehiculo[d][vDanioLuces], InfoVehiculo[d][vDanioRuedas]);
			ActualizarVehiculo(d);
			return 1;
		}
	}
	new vehicleid = GetPlayerVehicleID(playerid);
	for (new e_id = 0; e_id < MAX_EMPRESAS; e_id++)
	{
		new d = veh_Empresa(e_id, vehicleid);
		if (d != -1)
		{
			if (user[playerid][jEmpresaKey] == e_id)
			{
				if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return _Mensaje(playerid, 0, "126", "No eres el conductor.");
				new Float: x,Float: y,Float: z,Float: angle,Float: health;
				GetVehicleHealth(InfoVehEmp[e_id][d][vID], health);
				GetVehicleDamageStatus(InfoVehEmp[e_id][d][vID], InfoVehEmp[e_id][d][vDanioSuperficie], InfoVehEmp[e_id][d][vDanioPuertas], InfoVehEmp[e_id][d][vDanioLuces], InfoVehEmp[e_id][d][vDanioRuedas]);
				InfoVehEmp[e_id][d][vVida] = health;
				GetVehiclePos(InfoVehEmp[e_id][d][vID], x, y, z);
				GetVehicleZAngle(InfoVehEmp[e_id][d][vID], angle);
				SurfingCheck(GetPlayerVehicleID(playerid));
				CargarVehEmp(playerid, d, x, y, z, angle, health, e_id);
				PutPlayerInVehicle(playerid, InfoVehEmp[e_id][d][vID], 0);
				SetVehicleHealth(InfoVehEmp[e_id][d][vID], health);
				AccionesRol(playerid, 0, "ha estacionado el vehículo de la empresa.");
				_vVelocidad[playerid] = 0.0;
				UpdateVehicleDamageStatus(InfoVehEmp[e_id][d][vID], InfoVehEmp[e_id][d][vDanioSuperficie], InfoVehEmp[e_id][d][vDanioPuertas], InfoVehEmp[e_id][d][vDanioLuces], InfoVehEmp[e_id][d][vDanioRuedas]);
				save_Empresa(e_id, false, d);
				return 1;
			}
			else return _Mensaje(playerid, 4, "b0b0b0", "Este vehículo no es de tu empresa.");
		}
	}
	_Mensaje(playerid, 4, "b0b0b0", "No estás dentro de un vehículo comprado o de empresa.");
	return 1;
}

funcion CargarVehEmp(playerid, vid, Float: newx, Float: newy, Float: newz, Float: newangle, Float: health, e_id)
{
    if(InfoVehEmp[e_id][vid][vID] != INVALID_PLAYER_VEHICLE_ID)
	{
        new Float: oldx,Float: oldy,Float: oldz,oldfuel;
        oldx = InfoVehEmp[e_id][vid][vPosicionX];
        oldy = InfoVehEmp[e_id][vid][vPosicionY];
        oldz = InfoVehEmp[e_id][vid][vPosicionZ];
        if(oldx == newx && oldy == newy && oldz == newz) return 0;
        InfoVehEmp[e_id][vid][vPosicionX] = newx;
        InfoVehEmp[e_id][vid][vPosicionY] = newy;
        InfoVehEmp[e_id][vid][vPosicionZ] = newz;
        InfoVehEmp[e_id][vid][vPosicionR] = newangle;
		InfoVehEmp[e_id][vid][vVirtualWorld] = GetPlayerVirtualWorld(playerid);
		InfoVehEmp[e_id][vid][vInterior] = GetPlayerInterior(playerid);
        oldfuel = GasolinaInicialVeh[InfoVehEmp[e_id][vid][vID]];
        DestroyVehicle(InfoVehEmp[e_id][vid][vID]);
        new Coche = CreateVehicle(InfoVehEmp[e_id][vid][vModelo], InfoVehEmp[e_id][vid][vPosicionX], InfoVehEmp[e_id][vid][vPosicionY], InfoVehEmp[e_id][vid][vPosicionZ],
        InfoVehEmp[e_id][vid][vPosicionR], InfoVehEmp[e_id][vid][vColor_1], InfoVehEmp[e_id][vid][vColor_2], -1);
        SetVehicleVirtualWorld(Coche, InfoVehEmp[e_id][vid][vVirtualWorld]);
        LinkVehicleToInterior(Coche, InfoVehEmp[e_id][vid][vInterior]);
        InfoVehEmp[e_id][vid][vID] = Coche;
        GasolinaInicialVeh[Coche] = oldfuel;
        SetVehicleHealth(Coche, health);
        InfoVehEmp[e_id][vid][vGasolina] = oldfuel;
        SetVehicleMatricula(Coche);
        return 1;
    }
    return 0;
}

funcion CargarCoche(playerid, vid, Float: newx, Float: newy, Float: newz, Float: newangle, Float: health) {
    new playername[MAX_PLAYER_NAME];
    GetPlayerName(playerid, playername, sizeof(playername));
    if(InfoVehiculo[vid][vID] != INVALID_PLAYER_VEHICLE_ID) {
        new Float: oldx,Float: oldy,Float: oldz,oldfuel;
        oldx = InfoVehiculo[vid][vPosicionX];
        oldy = InfoVehiculo[vid][vPosicionY];
        oldz = InfoVehiculo[vid][vPosicionZ];
        if(oldx == newx && oldy == newy && oldz == newz) return 0;
        InfoVehiculo[vid][vPosicionX] = newx;
        InfoVehiculo[vid][vPosicionY] = newy;
        InfoVehiculo[vid][vPosicionZ] = newz;
        InfoVehiculo[vid][vPosicionR] = newangle;
		InfoVehiculo[vid][vVirtualWorld] = GetPlayerVirtualWorld(playerid);
		InfoVehiculo[vid][vInterior] = GetPlayerInterior(playerid);
        oldfuel = GasolinaInicialVeh[InfoVehiculo[vid][vID]];
        ActualizarMods(InfoVehiculo[vid][vID]);
        DestroyVehicle(InfoVehiculo[vid][vID]);
        new Coche = CreateVehicle(InfoVehiculo[vid][vModelo], InfoVehiculo[vid][vPosicionX], InfoVehiculo[vid][vPosicionY], InfoVehiculo[vid][vPosicionZ],
        InfoVehiculo[vid][vPosicionR], InfoVehiculo[vid][vColor_1], InfoVehiculo[vid][vColor_2], -1);
        SetVehicleVirtualWorld(Coche, InfoVehiculo[vid][vVirtualWorld]);
        LinkVehicleToInterior(Coche, InfoVehiculo[vid][vInterior]);
        InfoVehiculo[vid][vID] = Coche;
        GasolinaInicialVeh[Coche] = oldfuel;
        SetVehicleHealth(Coche, health);
        InfoVehiculo[vid][vGasolina] = oldfuel;
        ColocarMods(Coche, vid);
        DarMatricula(Coche, InfoVehiculo[vid][vLlave]);
        return 1;
    }
    return 0;
}

CMD:vendercoche(playerid, params[]) return cmd_vendermicoche(playerid, params);
CMD:vendermicoche(playerid, params[])
{
	new string[128], playerid2, price;
	for (new vid = 0; vid < MAX_VEHICULOS; vid++)
	{
		if (IsPlayerInVehicle(playerid, InfoVehiculo[vid][vID]))
		{
			if (strcmp(NombreRJugador(playerid), InfoVehiculo[vid][vDueno], true) == 0)
			{
				new Float: health, vehiculo = InfoVehiculo[vid][vID];
				GetVehicleHealth(vehiculo, health);
				if (sscanf(params, "dd", playerid2, price)) return _Mensaje(playerid, 3, "0", "vendermicoche [id jugador] [precio]");
				if (price < 1) return _Mensaje(playerid, 0, "384", "Precio debe ser mayor a 0.");
				if (playerid == playerid2) return _Mensaje(playerid, 0, "385", "No puedes venderte el auto a ti mismo.");
				if (!IsPlayerConnected(playerid2)) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
				if (CercaDelWeon(8.0, playerid, playerid2))
				{
					_Vehdueno[playerid2] = playerid;
					_VehID[playerid2] = vid;
					_Vehprecio[playerid2] = price;
					format(string, sizeof(string), "* Ofreciste a %s para comprar este %s por $%d.", NombreJugador(playerid2), NombreVehiculo(vehiculo), price);
					_Mensaje(playerid, 4, "33CCFF", string);
					format(string, sizeof(string), "* %s te ha ofrecido su %s por $%d, (/aceptar).", NombreJugador(playerid), NombreVehiculo(vehiculo), price);
					_Mensaje(playerid2, 4, "33CCFF", string);
					return 1;
				} else return _Mensaje(playerid, 0, "133", "El jugador no se encuentra cerca de tí.");
			} else return _Mensaje(playerid, 0, "580", "No tienes este vehículo a tu nombre.");
		}
	}
	_Mensaje(playerid, 0, "386", "Tu necesitas estar dentro de un vehiculo que te pertenece.");
	return 1;
}

CMD:borrarvehiculo(playerid, params[])
{
	new id;
	if (sscanf(params, "i", id)) return _Mensaje(playerid, 3, "0", "/borrarvehiculo [id llave]");
	if (id == 0) return _Mensaje(playerid, 0, "458", "Ranura 0 no existe.");
	if (id < 1 || id > 6) { _Mensaje(playerid, 0, "0", "La ranura debe estar entre 1 y 6."); return 1; }
	if (user[playerid][jLlaveCoche][id-1] == 0) { _Mensaje(playerid, 0, "0", "No tienes ningún vehículo en esa ranura."); return 1; }
	if (GetPVarInt(playerid, "Borrarconfirmacion") == 0)
	{
		SetPVarInt(playerid, "Borrarconfirmacion", 1);
		_Mensaje(playerid, 2, "0", "Si estás de acuerdo que no tendrás rembolso y quieres continuar su eliminación re-escriba /borrarvehiculo [id ranura]");
	}
	else
	{
		DeletePVar(playerid, "Borrarconfirmacion");
		VehiculoBorrar(user[playerid][jLlaveCoche][id-1]-1000);
		_Mensaje(playerid, 2, "0", "Su vehículo ha sido borrado.");
		user[playerid][jLlaveCoche][id-1] = 0;
		GuardarCuenta(playerid);
		return 1;
	}
	return 1;
}

CMD:vermaletero(playerid)
{
	if (IsPlayerInAnyVehicle(playerid)) { _Mensaje(playerid, 0, "389", "No puedes hacer esto mientras estar en el interior del vehículo!"); return 1; }
	new pvid = -1, Float: x, Float: y, Float: z;
	for (new d = 0; d < MAX_VEHICULOS; d++)
	{
		if (InfoVehiculo[d][vID] != INVALID_PLAYER_VEHICLE_ID) GetVehiclePos(InfoVehiculo[d][vID], x, y, z);
		if (_enPos(playerid, 4.0, x, y, z))
		{
			pvid = d;
			break;
		}
	}
	if (pvid == -1) return _Mensaje(playerid, 0, "391", "No estás cerca de un vehículo que sea tuyo.");
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(InfoVehiculo[pvid][vID], engine, lights, alarm, doors, bonnet, boot, objective);
	if (boot == VEHICLE_PARAMS_OFF || boot == VEHICLE_PARAMS_UNSET) return _Mensaje(playerid, 2, "0", "Necesitas tener el maletero abierto! Usa: {FFFF00}/maletero{FFFFFF}.");
	if (EstaEnBicis(InfoVehiculo[pvid][vID])) return _Mensaje(playerid, 0, "397", "Este vehículo no tiene maletero.");
	if (EnMotos_Bicis(InfoVehiculo[pvid][vID])) InfoVehiculo[pvid][vMaxMaletero] = 2+user[playerid][jPremium];
	else if (EstaEnAvion(InfoVehiculo[pvid][vID])) InfoVehiculo[pvid][vMaxMaletero] = 12+user[playerid][jPremium];
	else if (EstaEnBote(InfoVehiculo[pvid][vID])) InfoVehiculo[pvid][vMaxMaletero] = 7+user[playerid][jPremium];
	else if (Veh_MaleteroGrande(InfoVehiculo[pvid][vID])) InfoVehiculo[pvid][vMaxMaletero] = 15;
	else InfoVehiculo[pvid][vMaxMaletero] = 9+user[playerid][jPremium];
	ver_Maletero(playerid, pvid);
	VehMaleteroPlayer[playerid] = pvid;
	if(InfoObjeto[user[playerid][jm_Derecha]][IDArma] > 0)
	{
		ResetPlayerWeapons(playerid);
		_GiveWeapon(playerid, InfoObjeto[user[playerid][jm_Derecha]][IDArma], user[playerid][jm_DerechaCant]);
	}
	return 1;
}

CMD:payday(playerid)
{
	new string[128];
	format(string, sizeof(string), "Faltan exactamente %d minutos para recibir el pago diario.", 60-user[playerid][jPayday]);
	return _Mensaje(playerid, 4, "FFEA5F", string);
}

CMD:guardarcuenta(playerid)
{
	new string[256];
	if(!CheckTimer(180, user[playerid][jTiempoGuardado]))
	{
		if (JugadorEnSeccion {playerid})
		{
			user[playerid][jInterior] = GetPlayerInterior(playerid);
			user[playerid][jVirtualWorld] = GetPlayerVirtualWorld(playerid);
			GetPlayerPos(playerid, user[playerid][jPosicion_X], user[playerid][jPosicion_Y], user[playerid][jPosicion_Z]);
			GetPlayerFacingAngle(playerid, user[playerid][jPosicion_R]);
			GuardarCuenta(playerid);
			user[playerid][jTiempoGuardado] = gettime();
			_Mensaje(playerid, 4, "33CCFF", " Has guardado correctamente tu cuenta, puedes volver a guardarla en 3 minutos.");
		}
	} else {
		format(string, 144, "Faltan %d segundos para que puedas usar este comando.", CheckTimer(180, user[playerid][jTiempoGuardado]));
		_Mensaje(playerid, 0, "536", string);
	}
	return 1;
}

CMD:help(playerid) return cmd_ayuda(playerid);
CMD:ayuda(playerid)
{
	Dialog(playerid, D_AYUDA2, DIALOG_STYLE_LIST, "Ayuda: {FFFF00}Comandos general", "{FFFFFF}Principal\nBolsillos\nChats\nCasa\nVehículos\nFaccion\nEmpresa\nNegocio\nAccesorios\nTrabajo\nPremium\nAcciones", "Seleccionar", "Cancelar");
	return 1;
}


CMD:darcheque(playerid, params[]) {
    new money, player, text[128];
    if (user[playerid][j_Horas] < 2) return _Mensaje(playerid, 0, "12", "Tienes que tener mínimo 2 Horas de juego para dar dinero.");
    if (sscanf(params, "ud", player, money)) return _Mensaje(playerid, 3, "0", "/darcheque [id jugador] [cantidad]");
    if (money > user[playerid][jBanco] || money < 1) return _Mensaje(playerid, 0, "12", "No tienes suficientes fondos en el banco para hacer este cheque.");
    if (player == playerid) return _Mensaje(playerid, 0, "12", "No puedes darte un cheque tu mismo.");
    if (CercaDelWeon(4.0, playerid, player)) {
        user[playerid][jBanco] -= money;
        user[player][jCheques] += money;
        format(text, sizeof(text), "* Hiciste un cheque de $%d para %s, se resto a tu cuenta bancaria.", money, NombreJugador(player));
        _Mensaje(playerid, 4, "33CCFF", text);
        format(text, sizeof(text), "* %s te hizó un cheque de $%d y lo cobrarás en tu próximo pago diario.", NombreJugador(playerid), money);
        _Mensaje(player, 4, "33CCFF", text);
        format(text, sizeof(text), "%s hizó un cheque de $%d a %s.", NombreRJugador(playerid), money, NombreRJugador(player));
        Log("Registros/Cheques.log", text);
    } else _Mensaje(playerid, 0, "12", "No estás cerca de ese jugador.");
    return 1;
}

CMD:cuenta(playerid) return cmd_stats(playerid);
CMD:stats(playerid)
{
	Dialog(playerid, D_CUENTA, DIALOG_STYLE_LIST, "Estadísticas: {FFFF00}Jugador", "{ffffff}General\nCasas\nNegocios\nVehiculos\nLlaves prestadas\nConfigurar cuenta", "Seleccionar", "Cancelar");
	return 1;
}

CMD:gps(playerid)
{
	if(!_Telefono(playerid)){_Mensaje(playerid, 0, "9","¡Saca el teléfono del bolsillo!"); return 1;}
	if (GetPVarInt(playerid, "EnCheckPoint") > 0) return _Mensaje(playerid, 0, "148","Tienes un checkpoint pendiente, escribe /eliminarcp.");
	if (Granjero[playerid] == 1) return _Mensaje(playerid, 0, "75", "Te encuentras cosechando, termina antes.");
	Dialog(playerid, D_GPS, DIALOG_STYLE_LIST, "Navegador móvil: {FFFF00}Google Maps", "{FFFFFF}Mis vehiculos\nNegocios\nTrabajos\nCentrales\nConcesionarios\nPuerto\nCasino", "Seleccionar", "Cancelar");
	return 1;
}

CMD:stereo(playerid, params[]) {
    new Float: x,Float: y,Float: z;
    for (new d = 0; d < MAX_VEHICULOS; d++) {
        if (InfoVehiculo[d][vID] != INVALID_PLAYER_VEHICLE_ID) GetVehiclePos(InfoVehiculo[d][vID], x, y, z);
        if (_enPos(playerid, 5.0, x, y, z)) {
            if (InfoVehiculo[d][vStereo] > 0) {
                if (GetVehicleModel(InfoVehiculo[d][vID]) == 481 || GetVehicleModel(InfoVehiculo[d][vID]) == 509) return _Mensaje(playerid, 0, "396", "Ese vehiculo no tiene maletero.");
                new engine, lights, alarm, doors, bonnet, boot, objective;
                GetVehicleParamsEx(InfoVehiculo[d][vID], engine, lights, alarm, doors, bonnet, boot, objective);
                if (boot == VEHICLE_PARAMS_OFF || boot == VEHICLE_PARAMS_UNSET) return _Mensaje(playerid, 2, "0", "Necesitas tener el maletero abierto! [Escriba] {00C200}/maletero{FFFFFF}.");
                if (engine == VEHICLE_PARAMS_ON) return _Mensaje(playerid, 2, "0", "¡Apaga el motor!");
                foreach(Player, i) {
                    if (GetPVarType(i, "AreaVehPos")) {
                        if (_enPos(playerid, 65.0, GetPVarFloat(i, "AreaVehPosX"), GetPVarFloat(i, "AreaVehPosY"), GetPVarFloat(i, "AreaVehPosZ"))) {
                            _Mensaje(playerid, 3, "0", "Escribe: '/estacion'.");
                            return 1;
                        }
                    }
                }
                SetPVarInt(playerid, "AreaVehPos", 1);
                SetPVarFloat(playerid, "AreaVehPosX", x);
                SetPVarFloat(playerid, "AreaVehPosY", y);
                SetPVarFloat(playerid, "AreaVehPosZ", z);
                SetPVarInt(playerid, "AreaVehMus", CreateDynamicSphere(GetPVarFloat(playerid, "AreaVehPosX"), GetPVarFloat(playerid, "AreaVehPosY"), GetPVarFloat(playerid, "AreaVehPosZ"), 45.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid)));
                SetPVarInt(playerid, "AreaVehPosInt", GetPlayerInterior(playerid));
                SetPVarInt(playerid, "AreaVehPosVW", GetPlayerVirtualWorld(playerid));
                SetPVarInt(playerid, "AreaVehID", InfoVehiculo[d][vID]);
                AccionesRol(playerid, 0, "ha encendido el equipo de sonido que se encuentra en el maletero del vehículo.");
                return 1;
            }
            _Mensaje(playerid, 0, "408", "¡Compra un equipo de estereo! (ayuda: ve a una tienda de electrónica)");
            return 1;
        }
    }
    _Mensaje(playerid, 0, "399", "No estás cerca de un vehiculo tuyo.");
    return 1;
}

CMD:estacion(playerid, params[]) {
    if (GetPVarType(playerid, "AreaVehPos")) {
        if (_enPos(playerid, 3.0, GetPVarFloat(playerid, "AreaVehPosX"), GetPVarFloat(playerid, "AreaVehPosY"), GetPVarFloat(playerid, "AreaVehPosZ"))) {
            Dialog(playerid, D_MusiCar, DIALOG_STYLE_LIST, "{D6E1EB}Stereo - Selecciona:", "{F50000}Detener música{FFFFFF}\nRadios\nInsertar URL", "Seleccionar", "Cancelar");
        } else return _Mensaje(playerid, 0, "399", "No estás cerca de un vehiculo tuyo.");
    } else _Mensaje(playerid, 0, "409", "No has encendido el stereo o hay otro stereo encendido cercano.");
    return 1;
}

CMD:apagarstereo(playerid, params[]) {
    new Float: xc,Float: yc,Float: zc;
    for (new d = 0; d < MAX_VEHICULOS; d++) {
        if (InfoVehiculo[d][vID] != INVALID_PLAYER_VEHICLE_ID) GetVehiclePos(InfoVehiculo[d][vID], xc, yc, zc);
        if (_enPos(playerid, 3.0, xc, yc, zc)) {
            if (InfoVehiculo[d][vStereo] > 0) {
                if (GetPVarType(playerid, "AreaVehPos")) {
                    DeletePVar(playerid, "AreaVehPos");
                    DeletePVar(playerid, "AreaVehAud");
                    DeletePVar(playerid, "AreaVehPosLabel");
                    DeletePVar(playerid, "AreaVehPosX");
                    DeletePVar(playerid, "AreaVehPosY");
                    DeletePVar(playerid, "AreaVehPosZ");
                    DeletePVar(playerid, "AreaVehPosInt");
                    DeletePVar(playerid, "AreaVehPosVW");
                    DeletePVar(playerid, "AreaVehID");
                    if (GetPVarType(playerid, "AreaVehMus")) {
                        foreach(Player, i) {
                            if (IsPlayerInDynamicArea(i, GetPVarInt(playerid, "AreaVehMus"))) {
                                PararMVeh(i);
                            }
                        }
                        DeletePVar(playerid, "AreaVehMus");
                    }
                    _Mensaje(playerid, 2, "0", "Apagaste tu stereo!");
                } else {
                    foreach(Player, i) {
                        if (GetPVarType(i, "AreaVehPos")) {
                            if (GetPVarInt(i, "AreaVehPosVW") == GetPlayerVirtualWorld(playerid) && GetPVarInt(i, "AreaVehPosInt") == GetPlayerInterior(playerid) && _enPos(playerid, 5.0, GetPVarFloat(i, "AreaVehPosX"), GetPVarFloat(i, "AreaVehPosY"), GetPVarFloat(i, "AreaVehPosZ"))) {
                                DeletePVar(i, "AreaVehPos");
                                DeletePVar(i, "AreaVehAud");
                                DeletePVar(i, "AreaVehPosX");
                                DeletePVar(i, "AreaVehPosY");
                                DeletePVar(i, "AreaVehPosZ");
                                DeletePVar(i, "AreaVehPosInt");
                                DeletePVar(i, "AreaVehPosVW");
                                DeletePVar(i, "AreaVehID");
                                if (GetPVarType(i, "AreaVehMus")) {
                                    for (new x = 0; x < MAX_PLAYERS; x++) {
                                        if (IsPlayerInDynamicArea(x, GetPVarInt(x, "AreaVehMus"))) {
                                            PararMVeh(x);
                                        }
                                    }
                                    DeletePVar(i, "AreaVehMus");
                                }
                                return 1;
                            }
                        }
                    }
                    _Mensaje(playerid, 0, "409", "¡No has encendido tu estereo! (puede ser que otro cerca interfiera)");
                }
                return 1;
            }
            _Mensaje(playerid, 0, "408", "¡No tienes un estereo instalado en el vehículo! (ayuda: acude a una tienda de electrónica)");
            return 1;
        }
    }
    _Mensaje(playerid, 0, "399", "No estás cerca de un vehiculo tuyo.");
    return 1;
}

CMD:quitartunning(playerid)
{
	new modList[512], string[128], count = 0;
	for (new v = 0; v < MAX_VEHICULOS; v++)
	{
		if (IsPlayerInVehicle(playerid, InfoVehiculo[v][vID]))
		{
			if (!TieneLlavesVeh(playerid, InfoVehiculo[v][vID])) { _Mensaje(playerid, 0, "126", "No tienes las llaves de este vehículo."); return 1;}
			new vehiculo = InfoVehiculo[v][vID];
			for (new f = 0; f < MAX_MODVEHICULOS; f++)
			{
				if (GetVehicleComponentInSlot(vehiculo, f) != 0)
				{
					if (f != 9 && f != 7 && f != 8)
					{
						format(modList, sizeof(modList), "%s\n%s - %s", modList, PartesVehiculo(f), PartesNombres(GetVehicleComponentInSlot(vehiculo, f)));
					} else format(modList, sizeof(modList), "%s\n%s", modList, PartesVehiculo(f));
					format(string, sizeof(string), "partList%d", count);
					SetPVarInt(playerid, string, GetVehicleComponentInSlot(vehiculo, f));
					count++;
				}
			}
			if (count == 0) return _Mensaje(playerid, 0, "402", "Este vehiculo no tiene ninguna modificación.");
			format(modList, sizeof(modList), "%s\nTodo", modList);
			format(string, sizeof(string), "partList%d", count);
			SetPVarInt(playerid, string, 999);
			count++;
			SetPVarInt(playerid, "modCount", count);
			Dialog(playerid, D_QUITARTUNNING, DIALOG_STYLE_LIST, "{D6E1EB}Partes", modList, "Seleccionar", "Cancelar");
			return 1;
		}
	}
	return 1;
}
//REFUERZOS LSPD - SASD .----
CMD:refuerzos(playerid) return cmd_bk(playerid);
CMD:ref(playerid) return cmd_bk(playerid);
CMD:bk(playerid)
{
	if (SolicitaRefuerzos[playerid] == 1 || BotonPanico[playerid]) return _Mensaje(playerid, 0, "229", "¡Ya estás solicitando refuerzos! (borralo e introduce el cmd de nuevo)");
	if (Es_Faccion(playerid, 1))
	{
		if (user[playerid][jDivision] == 0 || user[playerid][jDivision] == 3) return _Mensaje(playerid, 0, "229", "No eres de la división PD o SD.");

		new Float: px, Float: py, Float: pz, string[128];
		GetPlayerPos(playerid, px, py, pz);
		SolicitaRefuerzos[playerid] = 1;
		format(string, sizeof(string), "*[CH|911|Central, S: 4A]: Se avisan a las unidades operativas que el oficial (%s) requiere apoyo en su posición.", NombreJugador(playerid));
		_MensajeRfac(1, C_COLORRADIO, string, 1, 2);
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsPlayerConnected(i))
			{
				if (Es_Faccion(i, 1) && EnServicioPD[i] == 1)
				{
					if (user[i][jDivision] == 1 || user[i][jDivision] == 2) {
						SetPVarInt(i, "EnCheckPoint", 5);
						if (user[playerid][jDivision] == 1)SetPlayerMarkerForPlayer(i, playerid, 0x1229FAFF);
						if (user[playerid][jDivision] == 2)SetPlayerMarkerForPlayer(i, playerid, 0x00C200FF);
					}
				}
			}
		}
		_Mensaje(playerid, 3, "0", "/noref, para cancelar los refuerzos.");
		NoRefAuto[playerid] = SetTimerEx("NoRefAutoF", 600000, false, "i", playerid);
	} else _Mensaje(playerid, 0, "165", "No formas parte de la Ley.");
	return 1;
}
// --- Facciones LS-ED ve incendios, asignada ID fac 5---
CMD:verincendios(playerid)
{
	if (!Es_Faccion(playerid, 5)) return _Mensaje(playerid, 0, "519", "No formas parte de LSED.");
	LIncendios(playerid);
	return 1;
}
// ---- CREAR INCENDIOS A PARTIR DE COMANDO ADMIN -- GAME ADMIN RANK 3 ---
CMD:crearincendio(playerid, params[]){
    if (!IsPlayerConnected(playerid)) return _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
    if (user[playerid][jAdmin] < 3) return _Mensaje(playerid, 0, "138", "Tú no tienes acceso a el comando /Crearincendio.");
    if (sscanf(params, "ii", params[0], params[1])) return _Mensaje(playerid, 3, "0", "/crearincendio [CASA: 0, NEGOCIO: 1], ID[CASA/NEGOCIO]");
	new nextFire = FuegoSiguiente(), stringFormat[144];
	if(nextFire == -1) return _Mensaje(playerid, 0, "138", "Se ha alcanzado el número máximo de incendios.");
	if(params[0] == 0)
    {
        if(!InfoCasa[params[1]][cTipo]) return _Mensaje(playerid, 0, "138", "ID Invalida.");
        format(stringFormat, sizeof(stringFormat), "Has creado un incendio con ID[%i] en la casa ID[%i]", nextFire, params[1]);
        _Mensaje(playerid, 2, "0", stringFormat);
    	format(stringFormat, sizeof(stringFormat), "[AvisoAdmin]: {FFFFFF}Game Admin %s utilizó '/crearincendio'.", NombreRJugador(playerid));
    	MensajeAdmin(stringFormat);
    	CrearIncendioP(params[1], params[0]);
    	return 1;
	}
	if(params[0] == 1)
	{
	    if(!i_Negocio[params[1]][nTipo]) return _Mensaje(playerid, 0, "138", "ID Invalida.");
        format(stringFormat, sizeof(stringFormat), "Has creado un incendio con ID[%i] en el negocio ID[%i]", nextFire, params[1]);
        _Mensaje(playerid, 2, "0", stringFormat);
    	format(stringFormat, sizeof(stringFormat), "[AvisoAdmin]: {FFFFFF}Game Admin %s utilizó /crearincendio.", NombreRJugador(playerid));
    	MensajeAdmin(stringFormat);
    	CrearIncendioP(params[1], params[0]);
    	return 1;
	}
	_Mensaje(playerid, 3, "0", "/crearincendio [CASA: 0, NEGOCIO: 1], ID[CASA/NEGOCIO]");
	return 1;
}

CMD:incendios(playerid)
{
	new string[128];
	if (user[playerid][jAdmin] >= 3)
	{
		ListaIncendios(playerid);
		format(string, sizeof(string), "[AvisoAdmin]:{FFFFFF} Game Admin %s utilizó /incendios.", NombreRJugador(playerid));
		MensajeAdmin(string);
	} else _Mensaje(playerid, 0, "139", "Tú no tienes acceso a el comando /incendios.");
	return 1;
}
CMD:guardar(playerid) // Guardar objeto en bolsillos.
{
	if(user[playerid][jm_Derecha] == 0) G_Bol(playerid, 2);
	else G_Bol(playerid, 1);
	return 1;
}
CMD:gct(playerid) return cmd_guardarct(playerid); // Guardar objeto en cinturón táctico.
CMD:guardarct(playerid)
{
	if (!Es_Faccion(playerid, 1)) return _Mensaje(playerid, 0, "9", "No tienes un cinturón táctico");
	G_Cinturon(playerid, 1);
	return 1;
}
CMD:sct(playerid, params[]) return cmd_sacarct(playerid, params);
CMD:sacarct(playerid, params[])
{
	new id;
	if (user[playerid][jEncarcelado] == 1) return _Mensaje(playerid, 0, "213", "No puedes usar este comando mientras estás en prisión.");
	if (sscanf(params, "i", id)) { _Mensaje(playerid, 3, "0", "/sacarct [Espacio]"); return 1; }
	if (!Es_Faccion(playerid, 1)) return _Mensaje(playerid, 0, "9", "No tienes un cinturón táctico");
	if (id < 1 || id > 6) { _Mensaje(playerid, 0, "9", "El número del espacios debe estar entre 1 y 6."); return 1; }
	S_Cinturon(playerid, id - 1);
	return 1;
}
CMD:sacar(playerid, params[])
{
	new id;
	if (sscanf(params, "i", id)) { _Mensaje(playerid, 3, "0", "/sacar [Espacio]"); return 1; }
	if (id < 1 || id > 10) { _Mensaje(playerid, 0, "9", "El número del bolsillo debe estar entre 1 y 10."); return 1; }
	S_Bol(playerid, id - 1);
	return 1;
}
CMD:mano(playerid) return cmd_cmano(playerid); // Intercambiar objetos de las manos.
CMD:cmano(playerid)
{
	C_Mano(playerid);
	return 1;
}
CMD:crearobjeto(playerid, params[])
{
	new idobj, cantidad, string[128];
	if (user[playerid][jAdmin] < 4) return _Mensaje(playerid, 0, "9", "Usted no está autorizado para utilizar éste comando administrativo.");
	if (sscanf(params, "ii", idobj, cantidad)) { _Mensaje(playerid, 3, "0", "/crearobjeto [ID Objeto] [Cantidad]"); return 1; }
	if (idobj <= 0) return _Mensaje(playerid, 0, "9", "La ID del objeto no puede ser nula o negativa.");
    if (cantidad <= 0) return _Mensaje(playerid, 0, "9", "La cantidad no puede ser nula o negativa.");
	if (idobj < 0 || idobj >= 225) return _Mensaje(playerid, 0, "453", "ID de objeto erroneo.");
	if (user[playerid][jm_Derecha] > 0 && user[playerid][jm_Izquierda] > 0) return _Mensaje(playerid, 0, "9", "Debes tener una mano vacía.");
	if (user[playerid][jm_Derecha] == 0)
	{
		user[playerid][jm_Derecha] = idobj;
		user[playerid][jm_DerechaCant] = cantidad;
		PonerObjeto(playerid, 1, idobj);
		if (InfoObjeto[idobj][IDArma] > 0) { _GiveWeapon(playerid, InfoObjeto[idobj][IDArma], cantidad); }
	}
	else if (user[playerid][jm_Derecha] != 0)
	{
		user[playerid][jm_Izquierda] = idobj;
		user[playerid][jm_IzquierdaCant] = cantidad;
		PonerObjeto(playerid, 2, idobj);
	}

	format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s ha creado un objeto [Nombre: %s] [Cantidad: %d].",NombreRJugador(playerid), InfoObjeto[idobj][NombreObjeto], cantidad);
	MensajeAdmin(string);
	format(string, sizeof(string), "Registros: Usuario %s ha creado un objeto [Nombre: %s] [Cantidad: %d]", NombreRJugador(playerid), InfoObjeto[idobj][NombreObjeto], cantidad);
	Log("Registros/CrearObjeto.log", string);
	return 1;
}
CMD:tirar(playerid) // si tira el objeto cae al suelo y otro usuario lo puede coger courier 02/03/2021 --
{
	new string[128];
	update_Manos(playerid);
	if (user[playerid][jEncarcelado] == 1) return _Mensaje(playerid, 0, "213", "No puedes usar este comando mientras estás en prisión.");
	if (GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return _Mensaje(playerid, 0, "9", "No puedes usar este comando en esta situación.");
	if (user[playerid][jm_Derecha] == 0) return _Mensaje(playerid, 0, "9", "No tienes nada en tu mano derecha.");
	new ManoDer = user[playerid][jm_Derecha], ManoDerCant = user[playerid][jm_DerechaCant];

	format(string, sizeof(string), "Tiraste un(a) %s.", InfoObjeto[ManoDer][NombreObjeto]);
	_Mensaje(playerid, 4, "A7CE00", string);
	ResetPlayerWeapons(playerid);
	user[playerid][jm_Derecha] = 0;
	user[playerid][jm_DerechaCant] = 0;
	RemovePlayerAttachedObject(playerid, 6);
	new Float: X, Float: Y, Float: Z;
	GetPlayerPos(playerid, X, Y, Z);
	new World = GetPlayerVirtualWorld(playerid);
	new Interior = GetPlayerInterior(playerid);
	if(ManoDer == 131) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
	TirarObjeto(ManoDer, ManoDerCant, X, Y - 0.3, Z, World, Interior);
	Streamer_Update(playerid);
	return 1;
}
CMD:recogerobjeto(playerid) return cmd_recoger(playerid); // todo usuario que vea el objeto en el suelo puede recogerlo
CMD:recoger(playerid)
{
    if (user[playerid][jEncarcelado] == 1) return _Mensaje(playerid, 0, "213", "No puedes usar este comando mientras estás en prisión.");
    _Recoger(playerid);
    return 1;
}
CMD:pecho(playerid)
{
	if (B_Pecho[playerid] == 0) return _Mensaje(playerid, 0, "213", "Debes activar el modo pecho con /modopecho."); // intercambia la posición en vez de espalda en el pecho
	return cmd_espalda(playerid);                                                                                 // usa mismo comando /espalda o /qespalda
}
CMD:espalda(playerid)
{
	new string[128], manod = user[playerid][jm_Derecha], manoi = user[playerid][jm_Izquierda];
	if (user[playerid][jEncarcelado] == 1) return _Mensaje(playerid, 0, "213", "No puedes usar este comando mientras estás en prisión.");
	if (user[playerid][jEspalda] > 0) { _Mensaje(playerid, 0, "9", "Ya tienes un objeto colgado, debes usar /qespalda para quitarlo."); return 1; }
	if (manod == 0 && manoi == 0) { _Mensaje(playerid, 0, "9", "No tienes nada en ninguna mano."); return 1; }
	if (manod > 0)
	{
		if (InfoObjeto[manod][Guardable] == 1 || InfoObjeto[manod][Guardable] == 2) return _Mensaje(playerid, 0, "213", "Objeto no tiene función para /espalda.");
		update_Manos(playerid);
		format(string, sizeof(string), "Cuelgas en tu espalda un(a) %s.", InfoObjeto[manod][NombreObjeto]);
		_Mensaje(playerid, 4, "A7CE00", string);
		user[playerid][jEspalda] = manod, user[playerid][jEspaldaCant] = user[playerid][jm_DerechaCant];
		user[playerid][jm_Derecha] = 0, user[playerid][jm_DerechaCant] = 0;
		PonerObjeto(playerid, 3, manod);
		RemovePlayerWeapon(playerid, InfoObjeto[manod][IDArma]);
		RemovePlayerAttachedObject(playerid, 6);
	}
	else if (manoi > 0)
	{
		if (InfoObjeto[manoi][Guardable] == 1 || InfoObjeto[manoi][Guardable] == 2) return _Mensaje(playerid, 0, "213", "Objeto no tiene función para /espalda.");
		update_Manos(playerid);
		format(string, sizeof(string), "Cuelgas en tu espalda un(a) %s.", InfoObjeto[manoi][NombreObjeto]);
		_Mensaje(playerid, 4, "A7CE00", string);
		user[playerid][jEspalda] = manoi, user[playerid][jEspaldaCant] = user[playerid][jm_IzquierdaCant];
		user[playerid][jm_Izquierda] = 0, user[playerid][jm_IzquierdaCant] = 0;
		PonerObjeto(playerid, 3, manoi);
		RemovePlayerAttachedObject(playerid, 7);
	}
	return 1;
}
CMD:qpecho(playerid)
{
	if (B_Pecho[playerid] == 0) return _Mensaje(playerid, 0, "213", "Debes activar el modo pecho con /modopecho.");
	return cmd_qespalda(playerid);
}
CMD:qespalda(playerid)
{
	new string[128];
	if (user[playerid][jEncarcelado] == 1) return _Mensaje(playerid, 0, "213", "No puedes usar este comando mientras estás en prisión.");
	if (user[playerid][jEspalda] == 0) { _Mensaje(playerid, 0, "9", "No tienes nada colgado en tu espalda."); return 1; }
	if (user[playerid][jm_Derecha] > 0 && user[playerid][jm_Izquierda] > 0) { _Mensaje(playerid, 0, "9", "Tus manos están ocupadas."); return 1; }
	new Espalda = user[playerid][jEspalda];
	if (user[playerid][jm_Derecha] == 131) return _Mensaje(playerid, 4, "b00000", "Posees una caja registradora en manos, no puesde hacer esto.");

	if (user[playerid][jm_Derecha] == 0)
	{
		format(string, sizeof(string), "Descuelgas un(a) %s de tu espalda.", InfoObjeto[Espalda][NombreObjeto]);
		_Mensaje(playerid, 4, "A7CE00", string);
		_GiveWeapon(playerid, InfoObjeto[Espalda][IDArma], user[playerid][jEspaldaCant]);
		user[playerid][jm_Derecha] = user[playerid][jEspalda];
		user[playerid][jm_DerechaCant] = user[playerid][jEspaldaCant];
		PonerObjeto(playerid, 1, Espalda);
	}
	else if (user[playerid][jm_Izquierda] == 0)
	{
		format(string, sizeof(string), "Descuelgas un(a) %s de tu espalda.", InfoObjeto[Espalda][NombreObjeto]);
		_Mensaje(playerid, 4, "A7CE00", string);
		user[playerid][jm_Izquierda] = user[playerid][jEspalda];
		user[playerid][jm_IzquierdaCant] = user[playerid][jEspaldaCant];
		PonerObjeto(playerid, 2, Espalda);
	}
	user[playerid][jEspalda] = 0, user[playerid][jEspaldaCant] = 0;
	RemovePlayerAttachedObject(playerid, 8);
	return 1;
}
CMD:bolsillo(playerid) return cmd_bol(playerid);
CMD:inv(playerid) return cmd_bol(playerid);
CMD:inventario(playerid) return cmd_bol(playerid);
CMD:bolsillos(playerid) return cmd_bol(playerid);
CMD:bol(playerid)
{
	_Inventario(playerid);
	return 1;
}
CMD:ct(playerid) return cmd_cinturon(playerid);
CMD:cinturon(playerid)
{
	if (!Es_Faccion(playerid, 1)) return _Mensaje(playerid, 0, "9", "No tienes un cinturón táctico");
	ver_Cinturon(playerid, playerid);
	return 1;
}
CMD:tomararma(playerid, params[])
{
	new playerid2, string[256];
	if (user[playerid][jEncarcelado] == 1) return _Mensaje(playerid, 0, "213", "No puedes usar este comando mientras estás en prisión.");
	if (GetPVarInt(playerid, "EnCrack") == 1) return _Mensaje(playerid, 0, "12", "No puedes usar este comando mientras estás herido.");
	if (user[playerid][j_Horas] < 2) { _Mensaje(playerid, 0, "9", "Tienes menos de 2 horas de juego."); return 1; }
	if (sscanf(params, "u", playerid2)) return _Mensaje(playerid, 3, "0", "/tomararma [id jugador]");
	if (!IsPlayerConnectedEx(playerid2)) return _Mensaje(playerid, 0, "9", "Ese jugador no está conectado correctamente.");
	if (!CercaDelWeon(4.0, playerid, playerid2)) return _Mensaje(playerid, 0, "9", "La persona que seleccionaste no está cerca tuyo.");
	if (GetPVarInt(playerid2, "EnCrack") == 0) return _Mensaje(playerid, 0, "724", "Ese jugador no esta herido.");
	if (user[playerid2][jMiembro] == 1) return _Mensaje(playerid, 0, "9", "No puedes usar este comando en policías.");
	if (user[playerid2][jm_Derecha] != 0)
	{
		if (user[playerid][jm_Izquierda] > 0 && user[playerid][jm_Derecha] > 0) { _Mensaje(playerid, 0, "9", "Tienes ambas manos ocupadas."); return 1; }

		new ManoDer = user[playerid2][jm_Derecha], ManoDerCant = user[playerid2][jm_DerechaCant];
		if (ManoDer == 137) return _Mensaje(playerid, 4, "b00000", "No puedes tomar una caja registradora.");
		if (user[playerid][jm_Derecha] == 0)
		{
			if (InfoObjeto[ManoDer][IDArma] > 0) { _GiveWeapon(playerid, InfoObjeto[ManoDer][IDArma], ManoDerCant); }
			user[playerid][jm_Derecha] = ManoDer, user[playerid][jm_DerechaCant] = ManoDerCant, PonerObjeto(playerid, 1, ManoDer), update_Manos(playerid);
		}
		else if (user[playerid][jm_Izquierda] == 0)
		{
			user[playerid][jm_Izquierda] = ManoDer, user[playerid][jm_IzquierdaCant] = ManoDerCant, PonerObjeto(playerid, 2, ManoDer), update_Manos(playerid);
		}
		user[playerid2][jm_Derecha] = 0, user[playerid2][jm_DerechaCant] = 0, update_Manos(playerid2);
		ResetPlayerWeapons(playerid2);

		new MsgCheckMe[MAX_TEXT_CHAT];
		format(MsgCheckMe, sizeof(MsgCheckMe), "tomó el objeto de la mano derecha de %s.", NombreJugador(playerid2));
		AccionesRol(playerid, 0, MsgCheckMe);
		format(string, sizeof(string), "Cogiste un(a) %s.", InfoObjeto[ManoDer][NombreObjeto]);
		_Mensaje(playerid, 4, "A7CE00", string);
		format(string, sizeof(string), "Tomaron tu %s.", InfoObjeto[ManoDer][NombreObjeto]);
		_Mensaje(playerid2, 4, "b0b0b0", string);

		format(string, sizeof(string), "Registros: %s tomo un/a (%s) de %s.", NombreRJugador(playerid), InfoObjeto[ManoDer][NombreObjeto], NombreRJugador(playerid2));
		Log("Registros/TomarArma.log", string);
		return 1;
	}
	else if (user[playerid2][jm_Izquierda] != 0)
	{
		if (user[playerid][jm_Izquierda] > 0 && user[playerid][jm_Derecha] > 0) { _Mensaje(playerid, 0, "9", "Tienes ambas manos ocupadas."); return 1; }

		new ManoIzq = user[playerid2][jm_Izquierda], ManoIzqCant = user[playerid2][jm_IzquierdaCant];
		if (ManoIzq == 131) return _Mensaje(playerid, 4, "b00000", "No puedes tomar una caja registradora.");
		if (user[playerid][jm_Derecha] == 0)
		{
			user[playerid][jm_Derecha] = ManoIzq, user[playerid][jm_DerechaCant] = ManoIzqCant, PonerObjeto(playerid, 1, ManoIzq), update_Manos(playerid);
		}
		else if (user[playerid][jm_Izquierda] == 0)
		{
			user[playerid][jm_Izquierda] = ManoIzq, user[playerid][jm_IzquierdaCant] = ManoIzqCant, PonerObjeto(playerid, 2, ManoIzq), update_Manos(playerid);
		}
		user[playerid2][jm_Izquierda] = 0, user[playerid2][jm_IzquierdaCant] = 0, update_Manos(playerid2);
		ResetPlayerWeapons(playerid2);

		new MsgCheckMe[MAX_TEXT_CHAT];
		format(MsgCheckMe, sizeof(MsgCheckMe), "tomó el objeto de la mano izquierda de %s.", NombreJugador(playerid2));
		AccionesRol(playerid, 0, MsgCheckMe);
		format(string, sizeof(string), "Cogiste un(a) %s.", InfoObjeto[ManoIzq][NombreObjeto]);
		_Mensaje(playerid, 4, "A7CE00", string);
		format(string, sizeof(string), "Tomaron tu %s.", InfoObjeto[ManoIzq][NombreObjeto]);
		_Mensaje(playerid2, 4, "b0b0b0", string);

		format(string, sizeof(string), "Registros: %s tomo un/a (%s) de %s.", NombreRJugador(playerid), InfoObjeto[ManoIzq][NombreObjeto], NombreRJugador(playerid2));
		Log("Registros/TomarArma.log", string);
		return 1;
	}
	_Mensaje(playerid, 0, "9", "Ese jugador no tiene nada en sus manos.");
	return 1;
}
CMD:dararmat(playerid, params[]) return cmd_ceder(playerid, params);
CMD:ceder(playerid, params[])
{
	new playerid2, string[256];
	if(!CheckTimer(5, CederTiempo[playerid]))
	{
		if (user[playerid][jEncarcelado] == 1) return _Mensaje(playerid, 0, "213", "No puedes usar este comando mientras estás en prisión.");
		if (sscanf(params, "u", playerid2)) return _Mensaje(playerid, 3, "0", "/ceder [id jugador]");
		if (!IsPlayerConnectedEx(playerid2)) return _Mensaje(playerid, 0, "9", "Ese jugador no está conectado correctamente.");
		if (!CercaDelWeon(8.0, playerid, playerid2)) return _Mensaje(playerid, 0, "9", "La persona que seleccionaste no está cerca tuyo.");
		if (user[playerid][jm_Derecha] <= 0) { _Mensaje(playerid, 0, "9", "No tienes nada en tu mano derecha."); return 1; }
		if (user[playerid2][j_Horas] < 10)
		{
			if(InfoObjeto[user[playerid][jm_Derecha]][IDArma] > 0)
			{
				_Mensaje(playerid, 4, "b0b0b0", "Ese jugador no posee aún diez horas de juego.");
				return 1;
			}
		}
		if (user[playerid2][jm_Izquierda] > 0 && user[playerid2][jm_Derecha] > 0) { _Mensaje(playerid, 0, "9", "Este jugador tiene ambas manos ocupadas."); return 1; }
		new ManoDer = user[playerid][jm_Derecha], ManoDerCant = user[playerid][jm_DerechaCant];
        if (ManoDer == 131) return _Mensaje(playerid, 4, "b00000", "No puedes ceder una caja registradora, tírala.");

		if (user[playerid2][jm_Derecha] == 0)
		{
			if (InfoObjeto[ManoDer][IDArma] > 0) { _GiveWeapon(playerid2, InfoObjeto[ManoDer][IDArma], ManoDerCant); }
			user[playerid2][jm_Derecha] = ManoDer, user[playerid2][jm_DerechaCant] = ManoDerCant, PonerObjeto(playerid2, 1, ManoDer), update_Manos(playerid2);
		}
		else if (user[playerid2][jm_Izquierda] == 0)
		{
			user[playerid2][jm_Izquierda] = ManoDer, user[playerid2][jm_IzquierdaCant] = ManoDerCant, PonerObjeto(playerid2, 2, ManoDer), update_Manos(playerid2);
		}
		user[playerid][jm_Derecha] = 0, user[playerid][jm_DerechaCant] = 0, update_Manos(playerid);
		ResetPlayerWeapons(playerid);
		CederTiempo[playerid] = gettime();
		format(string, sizeof(string), "%s te entrega un(a) %s.", NombreJugador(playerid), InfoObjeto[ManoDer][NombreObjeto]);
		_Mensaje(playerid2, 4, "b0b0b0", string);
		format(string, sizeof(string), "Has dado tu %s a %s.", InfoObjeto[ManoDer][NombreObjeto], NombreJugador(playerid2));
		_Mensaje(playerid, 4, "b0b0b0", string);
		format(string, sizeof(string), "Registros: %s le dio un(a) (%s) a %s.", NombreRJugador(playerid), InfoObjeto[ManoDer][NombreObjeto], NombreRJugador(playerid2));
		Log("Registros/CederArmas.log", string);
	}
	else
	{
		format(string, 144, "Faltan %d segundos para que puedas usar este comando.", CheckTimer(5, CederTiempo[playerid]));
		_Mensaje(playerid, 0, "536", string);
	}
	return 1;
}
CMD:chaleco(playerid)
{
	new Float: armour;
	if (user[playerid][jm_Derecha] == 0 && user[playerid][jm_Izquierda] == 0){_Mensaje(playerid, 0, "9", "No tienes nada en ninguna mano."); return 1;}
	GetPlayerArmour(playerid, armour);
	if (armour > 0) { _Mensaje(playerid, 0, "9", "Ya tienes un chaleco puesto, debes usar /qchaleco para quitarlo."); return 1; }
	if (user[playerid][jm_Derecha] == 72 && user[playerid][jm_DerechaCant] > 0)
	{
		update_Manos(playerid);
		AccionesRol(playerid, 0, "se coloca el blindaje que lleva en su mano derecha.");
		Chaleco_(playerid, user[playerid][jm_DerechaCant]);
		user[playerid][jm_Derecha] = 0;
		RemovePlayerAttachedObject(playerid, 6);
		return 1;
	}
	else if(user[playerid][jm_Izquierda] == 72 && user[playerid][jm_IzquierdaCant] > 0)
	{
		update_Manos(playerid);
		AccionesRol(playerid, 0, "se coloca el blindaje que lleva en su mano izquierda.");
		Chaleco_(playerid, user[playerid][jm_IzquierdaCant]);
		user[playerid][jm_Izquierda] = 0;
		RemovePlayerAttachedObject(playerid, 7);
		return 1;
	}
	else _Mensaje(playerid, 0, "9", "No tienes ningún tipo de blindaje en ninguna mano o no te queda.");
	return 1;
}
CMD:qchaleco(playerid)
{
	if (user[playerid][jm_Derecha] == 131) return _Mensaje(playerid, 4, "b00000", "No puedes realizar este comando con una caja registradora.");
	new chaleco;
	if (GetPVarInt(playerid, "HaciendoEvento") == 1) return _Mensaje(playerid, 0, "148", "No puedes utilizar este comando mientras estas en el evento.");
	if (user[playerid][jChaleco] == 0.0) return _Mensaje(playerid, 0, "9", "No tienes ningun blindaje puesto.");
	if (user[playerid][jm_Derecha] > 0 && user[playerid][jm_Izquierda] > 0) { _Mensaje(playerid, 0, "9", "Tus manos están ocupadas."); return 1; }
	if (user[playerid][jChaleco] <= 1.0){ chaleco = 5;}
	else if(user[playerid][jChaleco] <= 10.0){ chaleco = 10;}
	else if(user[playerid][jChaleco] <= 20.0){ chaleco = 20;}
	else if(user[playerid][jChaleco] <= 30.0){ chaleco = 30;}
	else if(user[playerid][jChaleco] <= 40.0){ chaleco = 40;}
	else if(user[playerid][jChaleco] <= 50.0){ chaleco = 50;}
	else if(user[playerid][jChaleco] <= 60.0){ chaleco = 60;}
	else if(user[playerid][jChaleco] <= 70.0){ chaleco = 70;}
	else if(user[playerid][jChaleco] <= 80.0){ chaleco = 80;}
	else if(user[playerid][jChaleco] <= 90.0){ chaleco = 90;}
	else if(user[playerid][jChaleco] <= 100.0){ chaleco = 100;}
	if (user[playerid][jm_Derecha] == 0)
	{
		_Mensaje(playerid, 4, "A7CE00", "Retiras el chaleco que llevabas puesto.");
		user[playerid][jm_Derecha] = 72;
		user[playerid][jm_DerechaCant] = chaleco;
		PonerObjeto(playerid, 1, 72);
	}
	else if (user[playerid][jm_Izquierda] == 0)
	{
		_Mensaje(playerid, 4, "A7CE00", "Retiras el chaleco que llevabas puesto.");
		user[playerid][jm_Izquierda] = 72;
		user[playerid][jm_IzquierdaCant] = chaleco;
		PonerObjeto(playerid, 2, 72);
	}
	user[playerid][jChaleco] = 0.0;
	return 1;
}

CMD:mascarapd(playerid, params[])
{
	if (!Es_Faccion(playerid, 1)) return _Mensaje(playerid, 0, "378", "No eres de la división PD.");
	if (user[playerid][jDivision] != 1 && user[playerid][jDivision] != 2) return _Mensaje(playerid, 0, "378", "No eres de la división PD.");
	if ((user[playerid][jRango] >= 5 && user[playerid][jRango] <= 7)) {
		new string[128];
		if (isnull(params)) return _Mensaje(playerid, 3, "0", "/mascarapd [Nombre_Apellido]");
		if (GetPVarInt(playerid, "UsandoNombreP") == 0) {
			if (!INI_Exist(params)) {
				format(string, sizeof(string), " Te encuentras en modo detective como %s.", params);
				_Mensaje(playerid, 4, "b0b0b0", string);
				SetPVarInt(playerid, "UsandoNombreP", 1);
				new name[MAX_PLAYER_NAME];
				GetPlayerName(playerid, name, sizeof(name));
				SetPVarString(playerid, "NombreP", name);
				SetPlayerName(playerid, params);
			} else _Mensaje(playerid, 0, "1", "Este nombre ya está registrado.");
		} else {
			new name[MAX_PLAYER_NAME];
			GetPVarString(playerid, "NombreP", name, sizeof(name));
			format(string, sizeof(string), " Te encuentras nuevamente como %s", name);
			_Mensaje(playerid, 4, "b0b0b0", string);
			SetPVarInt(playerid, "UsandoNombreP", 0);
			SetPlayerName(playerid, name);
		}
	} else _Mensaje(playerid, 0, "75", "No puedes usar este comando ya que no eres de la DIC.");
	return 1;
}

CMD:beber(playerid, params[]) {
    new string[128];
    if(user[playerid][jm_Derecha] == 0 && user[playerid][jm_Izquierda] == 0){_Mensaje(playerid, 0, "9", "No tienes nada en ninguna mano."); return 1;}
    if(((user[playerid][jm_Derecha] >= 93 && user[playerid][jm_Derecha] <= 99) || (user[playerid][jm_Derecha] >= 103 && user[playerid][jm_Derecha] <= 105) || user[playerid][jm_Derecha] == 124) && user[playerid][jm_DerechaCant] > 0) {
        if (user[playerid][jAlcohol] > 51) return _Mensaje(playerid, 0, "9", "Has bebido demasiado trata de pasar todo el alcohol que llevas.");
        switch(user[playerid][jm_Derecha]) {
	        case 93: user[playerid][jSed] += 42; //Lata de sprunk
	        case 94: user[playerid][jSed] += 38; //Lata de fanta
	        case 95: user[playerid][jSed] += 80; //Botella de agua
	        case 96: user[playerid][jSed] += 22; //Botella de cerveza
	        case 97: { user[playerid][jSed] += 12; user[playerid][jAlcohol] += 1; } //Copa de vino
	        case 98: { user[playerid][jSed] += 12; user[playerid][jAlcohol] += 2; } //Vaso de whisky
	        case 99: { user[playerid][jSed] += 12; user[playerid][jAlcohol] += 3; } //Vaso de ron
	        case 103: { user[playerid][jSed] += 25; user[playerid][jAlcohol] += 9; } //Botella de ron
	        case 104: { user[playerid][jSed] += 25; user[playerid][jAlcohol] += 7; } //Botella de whisky
	        case 105: { user[playerid][jSed] += 25; user[playerid][jAlcohol] += 5; } //Botella de vino
	        case 124: { user[playerid][jSed] += 15; user[playerid][jAlcohol] += 10; } //purple drank
        }
        ApplyAnimation(playerid, "BAR", "dnk_stndM_loop", 4.0, 0, 1, 1, 0, 4000, 1);
        format(string, sizeof(string), "bebe de su %s.", InfoObjeto[user[playerid][jm_Derecha]][NombreObjeto]);
 	    AccionesRol(playerid, 1, string);
        user[playerid][jm_DerechaCant] --;
        if(user[playerid][jSed] > MAX_SED){user[playerid][jSed] = MAX_SED;}
        ActualizarSed(playerid);
        if(user[playerid][jAlcohol] > 35) {
            AccionesRol(playerid, 1, "vomita el contenido que ha bebido.");
            user[playerid][jAlcohol] -= 5;
            ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0, 1);
            return 1;
        }
	    return 1;
    } else if(((user[playerid][jm_Izquierda] >= 93 && user[playerid][jm_Izquierda] <= 99) || (user[playerid][jm_Izquierda] >= 103 && user[playerid][jm_Izquierda] <= 105) || user[playerid][jm_Izquierda] == 124) && user[playerid][jm_IzquierdaCant] > 0) {
        if (user[playerid][jAlcohol] > 51) return _Mensaje(playerid, 0, "9", "Has bebido demasiado trata de pasar todo el alcohol que llevas.");
        switch(user[playerid][jm_Izquierda]) {
	        case 93: user[playerid][jSed] += 42; //Lata de sprunk
	        case 94: user[playerid][jSed] += 38; //Lata de fanta
	        case 95: user[playerid][jSed] += 80; //Botella de agua
	        case 96: user[playerid][jSed] += 22; //Botella de cerveza
	        case 97: { user[playerid][jSed] += 12; user[playerid][jAlcohol] += 1; } //Copa de vino
	        case 98: { user[playerid][jSed] += 12; user[playerid][jAlcohol] += 2; } //Vaso de whisky
	        case 99: { user[playerid][jSed] += 12; user[playerid][jAlcohol] += 3; } //Vaso de ron
	        case 103: { user[playerid][jSed] += 25; user[playerid][jAlcohol] += 9; } //Botella de ron
	        case 104: { user[playerid][jSed] += 25; user[playerid][jAlcohol] += 7; } //Botella de whisky
	        case 105: { user[playerid][jSed] += 25; user[playerid][jAlcohol] += 5; } //Botella de vino
	        case 124: { user[playerid][jSed] += 15; user[playerid][jAlcohol] += 10; } //purple drank
        }
        ApplyAnimation(playerid, "BAR", "dnk_stndM_loop", 4.0, 0, 1, 1, 0, 4000, 1);
        format(string, sizeof(string), "bebe de su %s.", InfoObjeto[user[playerid][jm_Izquierda]][NombreObjeto]);
 	    AccionesRol(playerid, 1, string);
        user[playerid][jm_IzquierdaCant] --;
        if(user[playerid][jSed] > MAX_SED){user[playerid][jSed] = MAX_SED;}
        ActualizarSed(playerid);
        if(user[playerid][jAlcohol] > 35) {
            AccionesRol(playerid, 1, "vomita el contenido que ha bebido.");
            user[playerid][jAlcohol] -= 5;
            ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0, 1);
            return 1;
        }
	    return 1;
    }
    else{_Mensaje(playerid, 0, "9", "No tienes ningún tipo de bebida en ninguna mano o no te queda.");}
    return 1;
}

CMD:comer(playerid, params[]) {
    new string[128];
    if (user[playerid][jEncarcelado] == 1) return _Mensaje(playerid, 0, "213", "No puedes usar este comando mientras estás en prisión.");
    if(user[playerid][jm_Derecha] == 0 && user[playerid][jm_Izquierda] == 0){_Mensaje(playerid, 0, "9", "No tienes nada en ninguna mano."); return 1;}
    if(((user[playerid][jm_Derecha] >= 90 && user[playerid][jm_Derecha] <= 92) || (user[playerid][jm_Derecha] >= 100 && user[playerid][jm_Derecha] <= 102)) && user[playerid][jm_DerechaCant] > 0) {
        switch(user[playerid][jm_Derecha]) {
	        case 90: user[playerid][jHambre] += 35; //Bolsa de doritos
	        case 91: user[playerid][jHambre] += 35; //Bolsa de patatas
	        case 92: user[playerid][jHambre] += 35; //Bolsa de nachos
	        case 100: user[playerid][jHambre] += 45; //Hamburguesa
	        case 101: user[playerid][jHambre] += 40; //Burrito
	        case 102: user[playerid][jHambre] += 50; //Pizza
        }
        ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.1, 0, 1, 1, 0, 0, 1);
        format(string, sizeof(string), "come de su %s.", InfoObjeto[user[playerid][jm_Derecha]][NombreObjeto]);
 	    AccionesRol(playerid, 1, string);
        user[playerid][jm_DerechaCant] --;
        if(user[playerid][jHambre] > MAX_HAMBRE){user[playerid][jHambre] = MAX_HAMBRE;}
        ActualizarHambre(playerid);
	    return 1;
    } else if(((user[playerid][jm_Izquierda] >= 90 && user[playerid][jm_Izquierda] <= 92) || (user[playerid][jm_Izquierda] >= 100 && user[playerid][jm_Izquierda] <= 102)) && user[playerid][jm_IzquierdaCant] > 0) {
        switch(user[playerid][jm_Izquierda]) {
	        case 90: user[playerid][jHambre] += 35; //Bolsa de doritos
	        case 91: user[playerid][jHambre] += 35; //Bolsa de patatas
	        case 92: user[playerid][jHambre] += 35; //Bolsa de nachos
	        case 100: user[playerid][jHambre] += 45; //Hamburguesa
	        case 101: user[playerid][jHambre] += 40; //Burrito
	        case 102: user[playerid][jHambre] += 50; //Pizza
        }
        ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.1, 0, 1, 1, 0, 0, 1);
        format(string, sizeof(string), "come de su %s.", InfoObjeto[user[playerid][jm_Izquierda]][NombreObjeto]);
 	    AccionesRol(playerid, 1, string);
        user[playerid][jm_IzquierdaCant] --;
        if(user[playerid][jHambre] > MAX_HAMBRE){user[playerid][jHambre] = MAX_HAMBRE;}
        ActualizarHambre(playerid);
	    return 1;
    }
    else if(user[playerid][jm_Derecha] == 126 || user[playerid][jm_Izquierda] == 126)
	{
        if(user[playerid][jm_Izquierda] == 126)user[playerid][jm_IzquierdaCant] --;
        else user[playerid][jm_DerechaCant] --;
	    AccionesRol(playerid, 1, "comenzó a mascar una goma de mascar");
	    user[playerid][jHambre] = MAX_HAMBRE;
	    user[playerid][jSed] = MAX_SED;
	    ActualizarHambre(playerid);
	    return 1;
	}
	_Mensaje(playerid, 0, "9", "No tienes ningún tipo de comida en ninguna mano o no te queda.");
    return 1;
}

CMD:fumar(playerid)
{
	if(user[playerid][jm_Derecha] != 88 && user[playerid][jm_Izquierda] != 88){ _Mensaje(playerid, 0, "9", "Necesitas la caja de cigarros para encender uno."); return 1;}
	if(user[playerid][jm_Derecha] != 87 && user[playerid][jm_Izquierda] != 87){ _Mensaje(playerid, 0, "9", "Necesitas un encendedor con gas para encender un cigarro."); return 1;}
	for (new x = 0; x < 10; x++)
	{
		if (user[playerid][jBolsillo][x] == 0)
		{
			if(user[playerid][jm_Derecha] == 87){user[playerid][jm_DerechaCant] --;}
			else if(user[playerid][jm_Izquierda] == 87){user[playerid][jm_IzquierdaCant] --;}
			if(user[playerid][jm_Derecha] == 88)
			{
				user[playerid][jm_DerechaCant] --;
				user[playerid][jBolsillo][x] = 88;
				user[playerid][jBolsilloCant][x] = user[playerid][jm_DerechaCant];
				user[playerid][jm_Derecha] = 106;
				user[playerid][jm_DerechaCant] = 4;
				PonerObjeto(playerid, 1, 106);
			}
			else if(user[playerid][jm_Izquierda] == 88)
			{
				user[playerid][jm_IzquierdaCant] --;
				user[playerid][jBolsillo][x] = 88;
				user[playerid][jBolsilloCant][x] = user[playerid][jm_IzquierdaCant];
				user[playerid][jm_Izquierda] = 106;
				user[playerid][jm_IzquierdaCant] = 4;
				PonerObjeto(playerid, 2, 106);
			}
			AccionesRol(playerid, 0, "enciende un cigarro y empieza a fumarlo.");
			ApplyAnimation(playerid, "GANGS", "smkcig_prtl_F", 3.0, 0, 0, 0, 0, 0, 1);
			_Mensaje(playerid, 2, "0", "Llevas un sorbo, para seguir fumando escribe /cfumar o tira el cigarro.");
			return 1;
		}
	}
	_Mensaje(playerid, 0, "9", "No tienes donde guardar la caja de cigarros, saca algo del /inv.");
	return 1;
}

CMD:cfumar(playerid)
{
	if(user[playerid][jm_Derecha] != 106 && user[playerid][jm_Izquierda] != 106 && user[playerid][jm_Derecha] != 132 && user[playerid][jm_Izquierda] != 132){ _Mensaje(playerid, 0, "9", "No tienes un cigarro en ninguna mano."); return 1;}
	if(user[playerid][jm_Derecha] == 106)
	{
		user[playerid][jm_DerechaCant] --;
		ApplyAnimation(playerid, "GANGS", "smkcig_prtl_F", 3.0, 0, 0, 0, 0, 0, 1);
		return 1;
	}
	else if(user[playerid][jm_Izquierda] == 106)
	{
		user[playerid][jm_IzquierdaCant] --;
		ApplyAnimation(playerid, "GANGS", "smkcig_prtl_F", 3.0, 0, 0, 0, 0, 0, 1);
		return 1;
	}
	if(user[playerid][jm_Derecha] == 132)
	{
		if (Consumiendo[playerid] != 0) return _Mensaje(playerid, 4, "b00000", " Consumiste algo hace poco, espera un tiempo.");
		user[playerid][jm_DerechaCant] --;
		if(user[playerid][jAdiccion][1] > 4 && user[playerid][jAdiccion][1] < 10) _Mensaje(playerid, 2, "0", "Estás desarrollando una adicción a la marihuana.");
		if(user[playerid][jAdiccion][1] == 10) _Mensaje(playerid, 2, "0", "Te has convertido en un adicto de la marihuana."), user[playerid][jAdiccion][1] = 17;
		user[playerid][jAdiccion][1]++;
		TextDrawShowForPlayer(playerid, EfectoPorro);
		SetPlayerDrunkLevel(playerid, 3000);
		Consumiendo[playerid] = 2;
		PasarDroga(playerid, 2, 10);
		user[playerid][jSed] -= 15; user[playerid][jHambre] -= 15;
		ActualizarSed(playerid); ActualizarHambre(playerid);
		ApplyAnimation(playerid, "GANGS", "smkcig_prtl_F", 3.0, 0, 0, 0, 0, 0, 1);
		return 1;
	}
	else if(user[playerid][jm_Izquierda] == 132)
	{
		if (Consumiendo[playerid] != 0) return _Mensaje(playerid, 4, "b00000", " Consumiste algo hace poco, espera un tiempo.");
		user[playerid][jm_IzquierdaCant] --;
		if(user[playerid][jAdiccion][1] > 4 && user[playerid][jAdiccion][1] < 10) _Mensaje(playerid, 2, "0", "Estás desarrollando una adicción a la marihuana.");
		if(user[playerid][jAdiccion][1] == 10) _Mensaje(playerid, 2, "0", "Te has convertido en un adicto de la marihuana."), user[playerid][jAdiccion][1] = 17;
		user[playerid][jAdiccion][1]++;
		TextDrawShowForPlayer(playerid, EfectoPorro);
		SetPlayerDrunkLevel(playerid, 3000);
		Consumiendo[playerid] = 2;
		PasarDroga(playerid, 2, 10);
		user[playerid][jSed] -= 15; user[playerid][jHambre] -= 15;
		ActualizarSed(playerid); ActualizarHambre(playerid);
		ApplyAnimation(playerid, "GANGS", "smkcig_prtl_F", 3.0, 0, 0, 0, 0, 0, 1);
		return 1;
	}
	return 1;
}

CMD:rec(playerid, params[]) return cmd_cargar(playerid, params);
CMD:recargar(playerid, params[]) return cmd_cargar(playerid, params);
CMD:cargar(playerid, params[]) { // Armas.
    new string[128];
    if(!CheckTimer(3, RecargarTiempo[playerid])) {
        if (user[playerid][jEncarcelado] == 1) return _Mensaje(playerid, 0, "213", "No puedes usar este comando mientras estás en prisión.");
        if (user[playerid][jm_DerechaCant] > 0) { _Mensaje(playerid, 0, "9", "Aún tienes munición en tu arma."); return 1; }
        new ManoDer = user[playerid][jm_Derecha], ManoDerCant = user[playerid][jm_DerechaCant];
        new ManoIzq = user[playerid][jm_Izquierda], ManoIzqCant = user[playerid][jm_IzquierdaCant];
        if (InfoObjeto[ManoDer][IDArma] > 0 && InfoObjeto[ManoDer][Capacidad] > 1 && ManoIzq != 0) { //Tiene un arma en mano derecha y algo en mano izquierda
            update_Manos(playerid);
            new Cargadores;
            new ArmaID = InfoObjeto[ManoDer][IDArma];
            switch (ArmaID) {
                case 22: Cargadores = 41;
                case 23: Cargadores = 41;
                case 24: Cargadores = 42;
                case 25: Cargadores = 49;
                case 26: Cargadores = 49;
                case 27: Cargadores = 49;
                case 28: Cargadores = 43;
                case 29: Cargadores = 44;
                case 30: Cargadores = 46;
                case 31: Cargadores = 47;
                case 32: Cargadores = 45;
                case 33: Cargadores = 48;
                case 34: Cargadores = 48;
            }
            if (ManoIzq != Cargadores) { _Mensaje(playerid, 0, "9", "No puedes recargar este arma con este objeto."); return 1; }
            if (ArmaID != 25 && ArmaID != 26 && ArmaID != 27) { //- Si no es escopeta
                if (ManoIzqCant == 0) return _Mensaje(playerid, 0, "9", "Ese cargador está vacio.");
                format(string, sizeof(string), "Cargas tu arma con %d balas.", ManoIzqCant);
                _Mensaje(playerid, 4, "F8D48C", string);
                ResetPlayerWeapons(playerid);
                _GiveWeapon(playerid, ArmaID, ManoIzqCant);
                user[playerid][jm_DerechaCant] = ManoIzqCant;
                user[playerid][jm_IzquierdaCant] = ManoDerCant;
                user[playerid][jm_Izquierda] = 0;
                user[playerid][jm_IzquierdaCant] = 0;
                RemovePlayerAttachedObject(playerid, 7);
                RecargarTiempo[playerid] = gettime();
                Anti[playerid][BalasW] = 0;
            } else {
                new n;
                switch (ArmaID) {
                    case 25: n = 20;
                    case 26: n = 8;
                    case 27: n = 15;
                }
                if (user[playerid][jm_DerechaCant] >= n) { _Mensaje(playerid, 0, "9", "No necesitas recargar este arma."); return 1; }
                if (ManoIzqCant == 0) return _Mensaje(playerid, 0, "213", "No te queda munición.");
				new Municion = (n - user[playerid][jm_DerechaCant]), olo;
                for (new a = 0; a < Municion; a++)
				{
                    if (user[playerid][jm_IzquierdaCant] == 0) break;
                    user[playerid][jm_IzquierdaCant]--;
                    user[playerid][jm_DerechaCant]++;
                    olo++;
                }
				_GiveWeapon(playerid, ArmaID, olo);
                format(string, sizeof(string), "Cargas tu arma con %d.", olo);
                _Mensaje(playerid, 4, "F8D48C", string);
                RecargarTiempo[playerid] = gettime();
               	Anti[playerid][BalasW] = 0;
            }
        }
    } else {
        format(string, 144, "Faltan %d segundos para que puedas recargar.", CheckTimer(3, RecargarTiempo[playerid]));
        _Mensaje(playerid, 0, "536", string);
    }
    return 1;
}

//- Inicio de animaciones
CMD:besar(playerid, params[]) {
    new anim;
    if (sscanf(params, "d", anim)) return _Mensaje(playerid, 3, "0", "/besar [1-6]");
    if (anim < 1 || anim > 6) return _Mensaje(playerid, 3, "0", "/besar [1-6]");
    switch (anim) {
        case 1: HaciendoAnimacion(playerid, "KISSING", "Grlfrd_Kiss_01", 4.0, 0, 0, 0, 0, 0);
        case 2: HaciendoAnimacion(playerid, "KISSING", "Grlfrd_Kiss_02", 4.0, 0, 0, 0, 0, 0);
        case 3: HaciendoAnimacion(playerid, "KISSING", "Grlfrd_Kiss_03", 4.0, 0, 0, 0, 0, 0);
        case 4: HaciendoAnimacion(playerid, "KISSING", "Playa_Kiss_01", 4.0, 0, 0, 0, 0, 0);
        case 5: HaciendoAnimacion(playerid, "KISSING", "Playa_Kiss_03", 4.0, 0, 0, 0, 0, 0);
        case 6: HaciendoAnimacion(playerid, "BD_FIRE", "Grlfrd_Kiss_03", 4.0, 0, 0, 0, 0, 0);
    }
    return 1;
}

CMD:adios(playerid, params[]) {
    new anim;
    if (sscanf(params, "d", anim)) return _Mensaje(playerid, 3, "0", "/adios [1-8]");
    if (anim < 1 || anim > 8) return _Mensaje(playerid, 3, "0", "/adios [1-8]");
    switch (anim) {
        case 1: HaciendoAnimacion(playerid, "KISSING", "BD_GF_Wave", 4.0, 0, 0, 0, 0, 0);
        case 2: HaciendoAnimacion(playerid, "ON_LOOKERS", "wave_in", 4.0, 0, 0, 0, 1, 0);
        case 3: HaciendoAnimacion(playerid, "ON_LOOKERS", "wave_loop", 4.0, 0, 0, 0, 1, 0);
        case 4: HaciendoAnimacion(playerid, "ON_LOOKERS", "wave_out", 4.0, 0, 0, 0, 0, 0);
        case 5: HaciendoAnimacion(playerid, "BD_FIRE", "BD_GF_Wave", 4.0, 0, 0, 0, 0, 0);
        case 6: HaciendoAnimacion(playerid, "ped", "endchat_01", 4.0, 0, 0, 0, 0, 0);
        case 7: HaciendoAnimacion(playerid, "ped", "endchat_02", 4.0, 0, 0, 0, 0, 0);
        case 8: HaciendoAnimacion(playerid, "ped", "endchat_03", 4.0, 0, 0, 0, 0, 0);
    }
    return 1;
}

CMD:coche(playerid, params[]) {
    if (!IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "683", "No estás dentro de un vehículo para la animación.");
    new anim;
    if (sscanf(params, "d", anim)) return _Mensaje(playerid, 3, "0", "/coche [1-19]");
    if (anim < 1 || anim > 19) return _Mensaje(playerid, 3, "0", "/coche [1-19]");
    switch (anim) {
        case 1: ApplyAnimation(playerid, "KISSING", "GF_CarArgue_01", 4.0, 0, 0, 0, 1, 0, 1);
        case 2: ApplyAnimation(playerid, "KISSING", "GF_CarArgue_02", 4.0, 0, 0, 0, 1, 0, 1);
        case 3: ApplyAnimation(playerid, "KISSING", "GF_CarSpot", 4.0, 0, 0, 0, 1, 0, 1);
        case 4: ApplyAnimation(playerid, "LOWRIDER", "lrgirl_hair", 4.0, 0, 0, 0, 1, 0, 1);
        case 5: ApplyAnimation(playerid, "LOWRIDER", "lrgirl_idleloop", 4.0, 0, 0, 0, 1, 0, 1);
        case 6: ApplyAnimation(playerid, "LOWRIDER", "Sit_relaxed", 4.0, 0, 0, 0, 1, 0, 1);
        case 7: ApplyAnimation(playerid, "LOWRIDER", "Tap_hand", 4.0, 0, 0, 0, 1, 0, 1);
        case 8: ApplyAnimation(playerid, "CAR_CHAT", "carfone_in", 4.0, 0, 0, 0, 1, 0, 1);
        case 9: ApplyAnimation(playerid, "CAR_CHAT", "carfone_loopA", 4.0, 0, 0, 0, 1, 0, 1);
        case 10: ApplyAnimation(playerid, "CAR_CHAT", "carfone_loopB", 4.0, 0, 0, 0, 1, 0, 1);
        case 11: ApplyAnimation(playerid, "CAR_CHAT", "CAR_Sc1_BL", 4.0, 0, 0, 0, 1, 0, 1);
        case 12: ApplyAnimation(playerid, "CAR_CHAT", "CAR_Sc3_FL", 4.0, 0, 0, 0, 1, 0, 1);
        case 13: ApplyAnimation(playerid, "CAR_CHAT", "car_talkm_in", 4.0, 0, 0, 0, 1, 0, 1);
        case 14: ApplyAnimation(playerid, "CAR_CHAT", "car_talkm_loop", 4.0, 0, 0, 0, 1, 0, 1);
        case 15: ApplyAnimation(playerid, "CAR_CHAT", "car_talkm_out", 4.0, 0, 0, 0, 1, 0, 1);
        case 16: ApplyAnimation(playerid, "ped", "CAR_sit_weak", 4.0, 0, 0, 0, 1, 0, 1);
        case 17: ApplyAnimation(playerid, "ped", "CAR_LB_pro", 4.0, 0, 0, 0, 1, 0, 1);
        case 18: ApplyAnimation(playerid, "ped", "CAR_sit", 4.0, 0, 0, 0, 1, 0, 1);
        case 19: ApplyAnimation(playerid, "ped", "CAR_dead_RHS", 4.0, 0, 0, 0, 1, 0, 1);
    }
    return 1;
}

CMD:camara(playerid, params[]) {
    new anim;
    if (sscanf(params, "d", anim)) return _Mensaje(playerid, 3, "0", "/camara [1-14]");
    if (anim < 1 || anim > 14) return _Mensaje(playerid, 3, "0", "/camara [1-14]");
    switch (anim) {
        case 1: HaciendoAnimacion(playerid, "CAMERA", "camcrch_cmon", 4.0, 0, 0, 0, 1, 0);
        case 2: HaciendoAnimacion(playerid, "CAMERA", "camcrch_idleloop", 4.0, 0, 0, 0, 1, 0);
        case 3: HaciendoAnimacion(playerid, "CAMERA", "camcrch_stay", 4.0, 0, 0, 0, 1, 0);
        case 4: HaciendoAnimacion(playerid, "CAMERA", "camcrch_to_camstnd", 4.0, 0, 0, 0, 1, 0);
        case 5: HaciendoAnimacion(playerid, "CAMERA", "camstnd_cmon", 4.0, 0, 0, 0, 1, 0);
        case 6: HaciendoAnimacion(playerid, "CAMERA", "camstnd_idleloop", 4.0, 0, 0, 0, 1, 0);
        case 7: HaciendoAnimacion(playerid, "CAMERA", "camstnd_lkabt", 4.0, 0, 0, 0, 1, 0);
        case 8: HaciendoAnimacion(playerid, "CAMERA", "camstnd_to_camcrch", 4.0, 0, 0, 0, 1, 0);
        case 9: HaciendoAnimacion(playerid, "CAMERA", "piccrch_in", 4.0, 0, 0, 0, 1, 0);
        case 10: HaciendoAnimacion(playerid, "CAMERA", "piccrch_out", 4.0, 0, 0, 0, 1, 0);
        case 11: HaciendoAnimacion(playerid, "CAMERA", "piccrch_take", 4.0, 0, 0, 0, 1, 0);
        case 12: HaciendoAnimacion(playerid, "CAMERA", "picstnd_in", 4.0, 0, 0, 0, 1, 0);
        case 13: HaciendoAnimacion(playerid, "CAMERA", "picstnd_out", 4.0, 0, 0, 0, 1, 0);
        case 14: HaciendoAnimacion(playerid, "CAMERA", "picstnd_take", 4.0, 0, 0, 0, 1, 0);
    }
    return 1;
}

CMD:discutir(playerid, params[]) {
    new anim;
    if (sscanf(params, "d", anim)) return _Mensaje(playerid, 3, "0", "/discutir [1-6]");
    if (anim < 1 || anim > 6) return _Mensaje(playerid, 3, "0", "/discutir [1-6]");
    switch (anim) {
        case 1: HaciendoAnimacion(playerid, "KISSING", "GF_StreetArgue_01", 4.0, 0, 0, 0, 1, 0);
        case 2: HaciendoAnimacion(playerid, "KISSING", "GF_StreetArgue_02", 4.0, 0, 0, 0, 1, 0);
        case 3: HaciendoAnimacion(playerid, "PAULNMAC", "PnM_Argue1_A", 4.0, 0, 0, 0, 1, 0);
        case 4: HaciendoAnimacion(playerid, "PAULNMAC", "PnM_Argue1_B", 4.0, 0, 0, 0, 1, 0);
        case 5: HaciendoAnimacion(playerid, "PAULNMAC", "PnM_Argue2_A", 4.0, 0, 0, 0, 1, 0);
        case 6: HaciendoAnimacion(playerid, "PAULNMAC", "PnM_Argue2_B", 4.0, 0, 0, 0, 1, 0);
    }
    return 1;
}

CMD:policia(playerid, params[]) {
    new anim;
    if (sscanf(params, "d", anim)) return _Mensaje(playerid, 3, "0", "/policia [1-9]");
    if (anim < 1 || anim > 9) return _Mensaje(playerid, 3, "0", "/policia [1-9]");
    switch (anim) {
        case 1: HaciendoAnimacion(playerid, "POLICE", "CopTraf_Away", 4.0, 0, 0, 0, 1, 0);
        case 2: HaciendoAnimacion(playerid, "POLICE", "CopTraf_Come", 4.0, 0, 0, 0, 1, 0);
        case 3: HaciendoAnimacion(playerid, "POLICE", "CopTraf_Left", 4.0, 0, 0, 0, 1, 0);
        case 4: HaciendoAnimacion(playerid, "POLICE", "CopTraf_Stop", 4.0, 0, 0, 0, 1, 0);
        case 5: HaciendoAnimacion(playerid, "POLICE", "COP_getoutcar_LHS", 4.0, 0, 0, 0, 1, 0);
        case 6: HaciendoAnimacion(playerid, "POLICE", "Cop_move_FWD", 4.0, 0, 0, 0, 1, 0);
        case 7: HaciendoAnimacion(playerid, "POLICE", "Door_Kick", 4.0, 0, 0, 0, 1, 0);
        case 8: HaciendoAnimacion(playerid, "POLICE", "plc_drgbst_01", 4.0, 0, 0, 0, 1, 0);
        case 9: HaciendoAnimacion(playerid, "POLICE", "plc_drgbst_02", 4.0, 0, 0, 0, 1, 0);
    }
    return 1;
}

CMD:espada(playerid, params[]) {
    new anim;
    if (sscanf(params, "d", anim)) return _Mensaje(playerid, 3, "0", "/espada [1-2]");
    if (anim < 1 || anim > 2) return _Mensaje(playerid, 3, "0", "/espada [1-2]");
    switch (anim) {
        case 1: HaciendoAnimacion(playerid, "SWORD", "sword_block", 4.0, 0, 0, 0, 1, 0);
        case 2: HaciendoAnimacion(playerid, "SWORD", "sword_IDLE", 4.0, 0, 0, 0, 1, 0);
    }
    return 1;
}

CMD:herido(playerid, params[]) {
    new anim;
    if (sscanf(params, "d", anim)) return _Mensaje(playerid, 3, "0", "/herido [1-10]");
    if (anim < 1 || anim > 10) return _Mensaje(playerid, 3, "0", "/herido [1-10]");
    switch (anim) {
        case 1: HaciendoAnimacion(playerid, "SWAT", "gnstwall_injurd", 4.0, 0, 0, 0, 1, 0);
        case 2: HaciendoAnimacion(playerid, "CRACK", "crckdeth1", 4.0, 0, 0, 0, 1, 0);
        case 3: HaciendoAnimacion(playerid, "CRACK", "crckdeth2", 4.0, 0, 0, 0, 1, 0);
        case 4: HaciendoAnimacion(playerid, "CRACK", "crckdeth3", 4.0, 0, 0, 0, 1, 0);
        case 5: HaciendoAnimacion(playerid, "CRACK", "crckdeth4", 4.0, 0, 0, 0, 1, 0);
        case 6: HaciendoAnimacion(playerid, "CRACK", "crckidle1", 4.0, 0, 0, 0, 1, 0);
        case 7: HaciendoAnimacion(playerid, "CRACK", "crckidle2", 4.0, 0, 0, 0, 1, 0);
        case 8: HaciendoAnimacion(playerid, "CRACK", "crckidle3", 4.0, 0, 0, 0, 1, 0);
        case 9: HaciendoAnimacion(playerid, "CRACK", "crckidle4", 4.0, 0, 0, 0, 1, 0);
        case 10: HaciendoAnimacion(playerid, "WUZI", "CS_Dead_Guy", 4.0, 0, 0, 0, 1, 0);
    }
    return 1;
}

CMD:oralsex(playerid, params[]) {
    new anim;
    if (sscanf(params, "d", anim)) return _Mensaje(playerid, 3, "0", "/oralsex [1-12]");
    if (anim < 1 || anim > 12) return _Mensaje(playerid, 3, "0", "/oralsex [1-12]");
    switch (anim) {
        case 1: HaciendoAnimacion(playerid, "BLOWJOBZ", "BJ_COUCH_START_W", 4.0, 0, 0, 0, 1, 0);
        case 2: HaciendoAnimacion(playerid, "BLOWJOBZ", "BJ_COUCH_START_P", 4.0, 0, 0, 0, 1, 0);
        case 3: HaciendoAnimacion(playerid, "BLOWJOBZ", "BJ_COUCH_LOOP_W", 4.0, 0, 0, 0, 1, 0);
        case 4: HaciendoAnimacion(playerid, "BLOWJOBZ", "BJ_COUCH_LOOP_P", 4.0, 0, 0, 0, 1, 0);
        case 5: HaciendoAnimacion(playerid, "BLOWJOBZ", "BJ_COUCH_END_W", 4.0, 0, 0, 0, 1, 0);
        case 6: HaciendoAnimacion(playerid, "BLOWJOBZ", "BJ_COUCH_END_P", 4.0, 0, 0, 0, 1, 0);
        case 7: HaciendoAnimacion(playerid, "BLOWJOBZ", "BJ_STAND_START_W", 4.0, 0, 0, 0, 1, 0);
        case 8: HaciendoAnimacion(playerid, "BLOWJOBZ", "BJ_STAND_START_P", 4.0, 0, 0, 0, 1, 0);
        case 9: HaciendoAnimacion(playerid, "BLOWJOBZ", "BJ_STAND_LOOP_W", 4.0, 0, 0, 0, 1, 0);
        case 10: HaciendoAnimacion(playerid, "BLOWJOBZ", "BJ_STAND_LOOP_P", 4.0, 0, 0, 0, 1, 0);
        case 11: HaciendoAnimacion(playerid, "BLOWJOBZ", "BJ_STAND_END_W", 4.0, 0, 0, 0, 1, 0);
        case 12: HaciendoAnimacion(playerid, "BLOWJOBZ", "BJ_STAND_END_P", 4.0, 0, 0, 0, 1, 0);
    }
    return 1;
}

CMD:oralsexcar(playerid, params[]) {
    if (!IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "683", "No estás dentro de un vehículo para la animación.");
    new anim;
    if (sscanf(params, "d", anim)) return _Mensaje(playerid, 3, "0", "/oralsexcar [1-7]");
    if (anim < 1 || anim > 7) return _Mensaje(playerid, 3, "0", "/oralsexcar [1-7]");
    switch (anim) {
        case 1: ApplyAnimation(playerid, "BLOWJOBZ", "BJ_CAR_START_W", 4.0, 0, 0, 0, 1, 0, 1);
        case 2: ApplyAnimation(playerid, "BLOWJOBZ", "BJ_CAR_START_P", 4.0, 0, 0, 0, 1, 0, 1);
        case 3: ApplyAnimation(playerid, "BLOWJOBZ", "BJ_CAR_LOOP_W", 4.0, 0, 0, 0, 1, 0, 1); //Una sola vez
        case 4: ApplyAnimation(playerid, "BLOWJOBZ", "BJ_CAR_LOOP_W", 4.0, 1, 0, 0, 1, 0, 1); //Continuo
        case 5: ApplyAnimation(playerid, "BLOWJOBZ", "BJ_CAR_LOOP_P", 4.0, 0, 0, 0, 1, 0, 1);
        case 6: ApplyAnimation(playerid, "BLOWJOBZ", "BJ_CAR_END_W", 4.0, 0, 0, 0, 1, 0, 1);
        case 7: ApplyAnimation(playerid, "BLOWJOBZ", "BJ_CAR_END_P", 4.0, 0, 0, 0, 1, 0, 1);
    }
    return 1;
}

CMD:dildosex(playerid, params[]) {
    new anim;
    if (sscanf(params, "d", anim)) return _Mensaje(playerid, 3, "0", "/dildosex [1-8]");
    if (anim < 1 || anim > 8) return _Mensaje(playerid, 3, "0", "/dildosex [1-8]");
    switch (anim) {
        case 1: HaciendoAnimacion(playerid, "SNM", "SPANKING_IDLEW", 4.0, 0, 0, 0, 1, 0);
        case 2: HaciendoAnimacion(playerid, "SNM", "SPANKING_IDLEP", 4.0, 0, 0, 0, 1, 0);
        case 3: HaciendoAnimacion(playerid, "SNM", "SPANKINGW", 4.0, 0, 0, 0, 1, 0);
        case 4: HaciendoAnimacion(playerid, "SNM", "SPANKINGP", 4.0, 0, 0, 0, 1, 0);
        case 5: HaciendoAnimacion(playerid, "SNM", "SPANKEDW", 4.0, 0, 0, 0, 1, 0);
        case 6: HaciendoAnimacion(playerid, "SNM", "SPANKEDP", 4.0, 0, 0, 0, 1, 0);
        case 7: HaciendoAnimacion(playerid, "SNM", "SPANKING_ENDW", 4.0, 0, 0, 0, 1, 0);
        case 8: HaciendoAnimacion(playerid, "SNM", "SPANKING_ENDP", 4.0, 0, 0, 0, 1, 0);
    }
    return 1;
}

CMD:apuntar(playerid, params[]) {
    new anim;
    if (sscanf(params, "d", anim)) return _Mensaje(playerid, 3, "0", "/apuntar [1-8]");
    if (anim < 1 || anim > 8) return _Mensaje(playerid, 3, "0", "/apuntar [1-8]");
    switch (anim) {
        case 1: HaciendoAnimacion(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 0, 0, 0, 1, 0);
        case 2: HaciendoAnimacion(playerid, "SHOP", "SHP_Gun_Aim", 4.0, 0, 0, 0, 1, 0);
        case 3: HaciendoAnimacion(playerid, "PYTHON", "python_crouchreload", 4.0, 0, 0, 0, 1, 0);
        case 4: HaciendoAnimacion(playerid, "PYTHON", "python_reload", 4.0, 0, 0, 0, 1, 0);
        case 5: HaciendoAnimacion(playerid, "SHOP", "SHP_Gun_Grab", 4.0, 0, 0, 0, 1, 0);
        case 6: HaciendoAnimacion(playerid, "SHOP", "SHP_Gun_Threat", 4.0, 0, 0, 0, 1, 0);
        case 7: HaciendoAnimacion(playerid, "ped", "gang_gunstand", 4.0, 0, 0, 0, 1, 0);
        case 8: HaciendoAnimacion(playerid, "SHOP", "SPANKING_ENDP", 4.0, 0, 0, 0, 1, 0);
    }
    return 1;
}
CMD:oficinaanim(playerid, params[]) {
    new anim;
    if (sscanf(params, "d", anim)) return _Mensaje(playerid, 3, "0", "/oficinaanim [1-10]");
    if (anim < 1 || anim > 10) return _Mensaje(playerid, 3, "0", "/oficinaanim [1-10]");
    switch (anim) {
        case 1: HaciendoAnimacion(playerid, "INT_OFFICE", "FF_Dam_Fwd", 4.0, 0, 0, 0, 1, 0);
        case 2: HaciendoAnimacion(playerid, "INT_OFFICE", "OFF_Sit_2Idle_180", 4.0, 0, 0, 0, 1, 0);
        case 3: HaciendoAnimacion(playerid, "INT_OFFICE", "OFF_Sit_Bored_Loop", 4.0, 0, 0, 0, 1, 0);
        case 4: HaciendoAnimacion(playerid, "INT_OFFICE", "OFF_Sit_Crash", 4.0, 0, 0, 0, 1, 0);
        case 5: HaciendoAnimacion(playerid, "INT_OFFICE", "OFF_Sit_Drink", 4.0, 0, 0, 0, 1, 0);
        case 6: HaciendoAnimacion(playerid, "INT_OFFICE", "OFF_Sit_Idle_Loop", 4.0, 0, 0, 0, 1, 0);
        case 7: HaciendoAnimacion(playerid, "INT_OFFICE", "OFF_Sit_In", 4.0, 0, 0, 0, 1, 0);
        case 8: HaciendoAnimacion(playerid, "INT_OFFICE", "OFF_Sit_Read", 4.0, 0, 0, 0, 1, 0);
        case 9: HaciendoAnimacion(playerid, "INT_OFFICE", "OFF_Sit_Type_Loop", 4.0, 0, 0, 0, 1, 0);
        case 10: HaciendoAnimacion(playerid, "INT_OFFICE", "OFF_Sit_Watch", 4.0, 0, 0, 0, 1, 0);
    }
    return 1;
}

CMD:paja(playerid, params[]) { HaciendoAnimacion(playerid, "PAULNMAC", "wank_loop", 4.0, 1, 0, 0, 1, 1); return 1; }
CMD:irsecortao(playerid, pamras[]) { HaciendoAnimacion(playerid, "PAULNMAC", "wank_out", 4.0, 0, 0, 0, 0, 0); return 1; }
CMD:mear(playerid, params[]) { HaciendoAnimacion(playerid, "PAULNMAC", "Piss_in", 4.0, 0, 0, 0, 0, 0); return 1; }
CMD:comerciar(playerid, params[]) { HaciendoAnimacion(playerid, "DEALER", "shop_pay", 4.000000, 0, 1, 1, 0, 0); return 1; }
CMD:pelea(playerid, params[]) { HaciendoAnimacion(playerid, "ped", "FIGHTIDLE", 4.000000, 0, 1, 1, 1, 1); return 1; }
CMD:dormir(playerid, params[]) { HaciendoAnimacion(playerid, "INT_HOUSE", "BED_In_R", 4.1, 0, 0, 0, 1, 0); return 1; }
CMD:taxi(playerid, params[]) { HaciendoAnimacion(playerid, "PED", "IDLE_taxi", 4.1, 0, 1, 1, 1, 1); return 1; }
CMD:asco(playerid, params[]) { HaciendoAnimacion(playerid, "FOOD", "EAT_Vomit_SK", 4.1, 0, 1, 1, 1, 1); return 1; }
CMD:asientosexi(playerid, params[]) { HaciendoAnimacion(playerid, "SUNBATHE", "ParkSit_W_idleA", 4.000000, 0, 1, 1, 1, 0); return 1; }
CMD:mmm(playerid, params[]) { HaciendoAnimacion(playerid, "COP_AMBIENT", "Coplook_think", 4.1, 0, 0, 0, 0, 0); return 1; }
CMD:fokear(playerid, params[]) { HaciendoAnimacion(playerid, "ped", "fucku", 4.0, 0, 1, 1, 1, 1); return 1; }
CMD:cruzarbrazos(playerid, params[]) { HaciendoAnimacion(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 1, 1, 1, 0, 4000); return 1; }
CMD:recostarme(playerid, params[]) { HaciendoAnimacion(playerid, "SUNBATHE", "Lay_Bac_in", 4.0, 0, 0, 0, 1, 0); return 1; }
CMD:pararme(playerid, params[]) { HaciendoAnimacion(playerid, "SUNBATHE", "Lay_Bac_out", 4.0, 0, 0, 0, 0, 0); return 1; }
CMD:cubrirme(playerid, params[]) { HaciendoAnimacion(playerid, "ped", "cower", 4.0, 1, 0, 0, 0, 0); return 1; }
CMD:vomitar(playerid, params[]) { HaciendoAnimacion(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0); return 1; }
CMD:agonizar(playerid, params[]) { HaciendoAnimacion(playerid, "WUZI", "CS_Dead_Guy", 4.0, 0, 0, 0, 1, 0); return 1; }
CMD:depie(playerid, params[]) { HaciendoAnimacion(playerid, "ped", "getup_front", 4.000000, 0, 0, 0, 0, 0); return 1; }
CMD:si(playerid, params[]) { HaciendoAnimacion(playerid, "GANGS", "Invite_Yes", 4.0, 0, 0, 0, 0, 0); return 1; }
CMD:no(playerid, params[]) { HaciendoAnimacion(playerid, "GANGS", "Invite_No", 4.0, 0, 0, 0, 0, 0); return 1; }
CMD:levantarme(playerid, params[]) { HaciendoAnimacion(playerid, "ped", "SEAT_up", 4.000000, 0, 0, 1, 0, 0); return 1; }
CMD:echarme(playerid, params[]) { HaciendoAnimacion(playerid, "SUNBATHE", "SitnWait_in_W", 4.000000, 0, 0, 0, 1, 0); return 1; }
CMD:cansarme(playerid, params[]) { HaciendoAnimacion(playerid, "PED", "WOMAN_runfatold", 4.1, 7, 5, 1, 1, 1); return 1; }
CMD:carga(playerid, params[]) { HaciendoAnimacion(playerid, "CARRY", "crry_prtial", 4.1, 0, 1, 1, 1, 1); return 1; }
CMD:llorar(playerid, params[]) { HaciendoAnimacion(playerid, "GRAVEYARD", "mrnF_loop", 4.1, 1, 1, 1, 1, 1); return 1; }
CMD:bofetada(playerid, params[]) { HaciendoAnimacion(playerid, "MISC", "bitchslap", 4.1, 1, 0, 0, 1, 1); return 1; }
CMD:facepalm(playerid, params[]) { HaciendoAnimacion(playerid, "MISC", "plyr_shkhead", 4.1, 0, 0, 0, 0, 0); return 1; }
CMD:barandilla(playerid, params[]) { HaciendoAnimacion(playerid, "BD_FIRE", "BD_Panic_Loop", 4.1, 1, 1, 1, 1, 1); return 1; }
CMD:rifle(playerid, params[]) { HaciendoAnimacion(playerid, "BUDDY", "buddy_reload", 4.1, 0, 1, 1, 1, 1); return 1; }
CMD:bebido(playerid, params[]) { HaciendoAnimacion(playerid, "PED", "WALK_DRUNK", 4.1, 1, 1, 1, 1, 1); return 1; }
CMD:bomba(playerid, params[]) { HaciendoAnimacion(playerid, "BOMBER", "BOM_Plant_Loop", 4.0, 1, 0, 0, 1, 1); return 1; }
CMD:reir(playerid, params[]) { HaciendoAnimacion(playerid, "RAPPING", "Laugh_01", 4.0, 1, 1, 1, 1, 1); return 1; }
CMD:comiendo(playerid, params[]) { HaciendoAnimacion(playerid, "FOOD", "EAT_Burger", 4.0, 0, 1, 1, 1, 1); return 1; }
CMD:trato(playerid, params[]) { HaciendoAnimacion(playerid, "DEALER", "DEALER_DEAL", 4.0, 0, 1, 1, 1, 1); return 1; }
CMD:gro(playerid, params[]) { HaciendoAnimacion(playerid, "BEACH", "ParkSit_M_loop", 4.0, 1, 0, 1, 1, 1); return 1; }
CMD:hablando(playerid, params[]) { HaciendoAnimacion(playerid, "PED", "IDLE_CHAT", 4.0, 1, 0, 0, 1, 1); return 1; }
CMD:taichi(playerid, params[]) { HaciendoAnimacion(playerid, "PARK", "Tai_Chi_Loop", 4.0, 1, 1, 1, 1, 1); return 1; }
CMD:caer(playerid, params[]) { HaciendoAnimacion(playerid, "PED", "KO_skid_front", 4.1, 0, 1, 1, 1, 1); return 1; }
CMD:muerto(playerid, params[]) { HaciendoAnimacion(playerid, "PED", "FLOOR_hit_f", 4.0, 0, 1, 1, 1, 1); return 1; }
CMD:rascarse(playerid, params[]) { HaciendoAnimacion(playerid, "MISC", "Scratchballs_01", 4.1, 1, 1, 1, 1, 1); return 1; }
CMD:spray(playerid, params[]) { HaciendoAnimacion(playerid, "SPRAYCAN", "spraycan_full", 4.0, 1, 1, 1, 1, 1); return 1; }
CMD:medico(playerid, params[]) { HaciendoAnimacion(playerid, "MEDIC", "CPR", 4.0, 0, 0, 0, 0, 0); return 1; }
CMD:golpeado(playerid, params[]) { HaciendoAnimacion(playerid, "PED", "KO_shot_face", 4.0, 0, 1, 1, 1, 1); return 1; }
CMD:saltovital(playerid, params[]) { HaciendoAnimacion(playerid, "PED", "EV_dive", 4.0, 0, 1, 1, 1, 1); return 1; }
CMD:cansado(playerid, params[]) { HaciendoAnimacion(playerid, "PED", "IDLE_tired", 4.0, 1, 0, 1, 1, 1); return 1; }
CMD:tortazo(playerid, params[]) { HaciendoAnimacion(playerid, "PED", "BIKE_elbowL", 4.0, 0, 0, 0, 0, 0); return 1; }
CMD:rodar(playerid, params[]) { HaciendoAnimacion(playerid, "PED", "BIKE_fallR", 4.0, 0, 1, 1, 1, 1); return 1; }
CMD:cacheado(playerid, params[]) { HaciendoAnimacion(playerid, "POLICE", "crm_drgbst_01", 4.0, 0, 1, 1, 1, 1); return 1; }
CMD:boxear(playerid, params[]) { HaciendoAnimacion(playerid, "GYMNASIUM", "GYMshadowbox", 4.0, 1, 1, 1, 1, 1); return 1; }
CMD:animar(playerid, params[]) { HaciendoAnimacion(playerid, "RIOT", "RIOT_CHANT", 4.0, 1, 1, 1, 1, 1); return 1; }
CMD:dedo(playerid, params[]) { HaciendoAnimacion(playerid, "RIOT", "RIOT_FUKU", 4.0, 0, 0, 0, 0, 0); return 1; }
CMD:gritando(playerid, params[]) { HaciendoAnimacion(playerid, "RIOT", "RIOT_shout", 4.0, 1, 1, 1, 1, 1); return 1; }
CMD:esposado(playerid, params[]) { HaciendoAnimacion(playerid, "SWORD", "sword_block", 50.0, 0, 1, 1, 1, 1); return 1; }
CMD:lanzar(playerid, params[]) { HaciendoAnimacion(playerid, "GRENADE", "WEAPON_throwu", 4.0, 0, 1, 1, 1, 0); return 1; }

CMD:movil(playerid, params[]) {
    if (GetPVarInt(playerid, "HaciendoMueble") == 1) return _Mensaje(playerid, 0, "148", "No puedes utilizar una animación en este momento.");
    if (IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "151", "No puedes hacer una animación en un vehículo.");
    if (GetPVarInt(playerid, "Llamada_LSED") == 1) return _Mensaje(playerid, 0, "647", "No puedes usar este comando en este momento.");
    if (GetPVarInt(playerid, "EnEvento") == 1) return _Mensaje(playerid, 0, "647", "No puedes usar este comando en un evento.");
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
    return 1;
}

CMD:cmovil(playerid, params[]) {
    if (GetPVarInt(playerid, "HaciendoMueble") == 1) return _Mensaje(playerid, 0, "148", "No puedes utilizar una animación en este momento.");
    if (IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "151", "No puedes hacer una animación en un vehículo.");
    if (GetPVarInt(playerid, "Llamada_LSED") == 1) return _Mensaje(playerid, 0, "647", "No puedes usar este comando en este momento.");
    if (GetPVarInt(playerid, "EnEvento") == 1) return _Mensaje(playerid, 0, "647", "No puedes usar este comando en un evento.");
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
	return 1;
}

CMD:rendirme(playerid, params[]) return cmd_rendirse(playerid, params);
CMD:rendirse(playerid, params[]) {
    if (GetPVarInt(playerid, "HaciendoMueble") == 1) return _Mensaje(playerid, 0, "148", "No puedes utilizar una animación en este momento.");
    if (IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "151", "No puedes hacer una animación en un vehículo.");
    if (GetPVarInt(playerid, "Llamada_LSED") == 1) return _Mensaje(playerid, 0, "647", "No puedes usar este comando en este momento.");
    if (GetPVarInt(playerid, "EnEvento") == 1) return _Mensaje(playerid, 0, "647", "No puedes usar este comando en un evento.");
	if (GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) { SetPlayerSpecialAction(playerid, SPECIAL_ACTION_HANDSUP); }
    return 1;
}

CMD:stopanim(playerid, params[]) {
    if (GetPVarInt(playerid, "EnCrack") == 1) return _Mensaje(playerid, 0, "12", "No puedes usar este comando mientras estás herido.");
    if (GetPVarInt(playerid, "HaciendoMueble") == 1) return _Mensaje(playerid, 0, "148", "No puedes utilizar una animación en este momento.");
    if (IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "151", "No puedes hacer una animación en un vehículo.");
    if (GetPVarInt(playerid, "EnEvento") == 1) return _Mensaje(playerid, 0, "647", "No puedes usar este comando en un evento.");
	if (GetPVarInt(playerid, "Llamada_LSED") == 1) return _Mensaje(playerid, 0, "647", "No puedes usar este comando en este momento.");
    ClearAnimations(playerid);
    return 1;
}

CMD:danzar(playerid, params[]) {
    new S;
    if (sscanf(params, "i", S)) return _Mensaje(playerid, 3, "0", "/danzar [1 - 13]");
    if (S == 1) return HaciendoAnimacion(playerid, "DANCING", "bd_clap",4.0,1,0,0,0,0);
    else if (S == 2) return HaciendoAnimacion(playerid, "DANCING", "bd_clap1",4.0,1,0,0,0,0);
    else if (S == 3) return HaciendoAnimacion(playerid, "DANCING", "dance_loop",4.0,1,0,0,0,0);
    else if (S == 4) return HaciendoAnimacion(playerid, "DANCING", "DAN_Down_A",4.0,1,0,0,0,0);
    else if (S == 5) return HaciendoAnimacion(playerid, "DANCING", "DAN_Left_A",4.0,1,0,0,0,0);
    else if (S == 6) return HaciendoAnimacion(playerid, "DANCING", "DAN_Loop_A",4.0,1,0,0,0,0);
    else if (S == 7) return HaciendoAnimacion(playerid, "DANCING", "DAN_Right_A",4.0,1,0,0,0,0);
    else if (S == 8) return HaciendoAnimacion(playerid, "DANCING", "DAN_Up_A",4.0,1,0,0,0,0);
    else if (S == 9) return HaciendoAnimacion(playerid, "DANCING", "dnce_M_a",4.0,1,0,0,0,0);
    else if (S == 10) return HaciendoAnimacion(playerid, "DANCING", "dnce_M_b",4.0,1,0,0,0,0);
    else if (S == 11) return HaciendoAnimacion(playerid, "DANCING", "dnce_M_c",4.0,1,0,0,0,0);
    else if (S == 12) return HaciendoAnimacion(playerid, "DANCING", "dnce_M_d",4.0,1,0,0,0,0);
    else if (S == 13) return HaciendoAnimacion(playerid, "DANCING", "dnce_M_e",4.0,1,0,0,0,0);
    else return _Mensaje(playerid, 3, "0", "/danzar [1 - 13]");
}

CMD:brazos(playerid, params[]) {
    new animacion;
    if (sscanf(params, "d", animacion)) return _Mensaje(playerid, 3, "0", "/brazos [1-6]");
    switch (animacion) {
        case 1: HaciendoAnimacion(playerid, "CASINO", "cards_in",4.1,0,1,1,1,1);
        case 2: HaciendoAnimacion(playerid, "COP_AMBIENT", "Coplook_shake",4.1,0,1,1,1,1);
        case 3: HaciendoAnimacion(playerid, "COP_AMBIENT", "Coplook_think",4.1,0,1,1,1,1);
        case 4: HaciendoAnimacion(playerid, "COP_AMBIENT", "Coplook_watch",4.1,0,1,1,1,1);
        case 5: HaciendoAnimacion(playerid, "DEALER", "DEALER_IDLE",4.1,0,1,1,1,1);
        case 6: HaciendoAnimacion(playerid, "GRAVEYARD", "prst_loopa",4.1,0,1,1,1,1);
        default: _Mensaje(playerid, 3, "0", "/brazos [1-6]");
    }
    return 1;
}

CMD:crack(playerid, params[]) {
    new animacion;
    if (sscanf(params, "d", animacion)) return _Mensaje(playerid, 3, "0", "/crack [1-8]");
    switch (animacion) {
		case 1: HaciendoAnimacion(playerid,"CRACK","crckdeth1",4.1,0,1,1,1,1);
		case 2: HaciendoAnimacion(playerid,"CRACK","crckdeth2",4.1,1,0,0,1,1);
		case 3: HaciendoAnimacion(playerid,"CRACK","crckdeth3",4.1,0,1,1,1,1);
		case 4: HaciendoAnimacion(playerid,"CRACK","crckdeth4",4.1,0,1,1,1,1);
		case 5: HaciendoAnimacion(playerid,"CRACK","crckidle1",4.1,1,1,1,1,1);
		case 6: HaciendoAnimacion(playerid,"CRACK","crckidle2",4.1,1,0,0,1,1);
		case 7: HaciendoAnimacion(playerid,"CRACK","crckidle3",4.1,0,1,1,1,1);
		case 8: HaciendoAnimacion(playerid,"CRACK","crckidle4",4.1,1,0,0,1,1);
        default: _Mensaje(playerid, 3, "0", "/crack [1-8]");
    }
    return 1;
}

CMD:fumando(playerid, params[]) {
    new animacion;
    if (sscanf(params, "d", animacion)) return _Mensaje(playerid, 3, "0", "/fumando [1-5]");
    switch (animacion) {
		case 1: HaciendoAnimacion(playerid,"SMOKING", "M_smklean_loop", 4.0, 1, 0, 1, 1, 1);
		case 2: HaciendoAnimacion(playerid,"SMOKING","M_smkstnd_loop", 4.0, 1, 0, 1, 1, 1);
		case 3: HaciendoAnimacion(playerid,"SMOKING","M_smk_out", 4.0, 0, 0, 1, 1, 1);
		case 4: HaciendoAnimacion(playerid,"SMOKING","M_smk_in",4.0,0,1,1,1,1);
		case 5: HaciendoAnimacion(playerid,"GANGS","smkcig_prtl",4.1,1,1,1,1,1);
        default: _Mensaje(playerid, 3, "0", "/fumando [1-5]");
    }
    return 1;
}

CMD:asiento(playerid, params[]) {
    new anim;
    if (sscanf(params, "d", anim)) return _Mensaje(playerid, 3, "0", "/asiento [1-9]");
    if (anim < 1 || anim > 9) return _Mensaje(playerid, 3, "0", "/asiento [1-9]");
    switch (anim) {
        case 1: {
                JugadorSentado[playerid] = 1;
                HaciendoAnimacion(playerid, "Attractors", "Stepsit_in", 4.1, 0, 0, 0, 1, 1);
            }
        case 2: {
                JugadorSentado[playerid] = 1;
                HaciendoAnimacion(playerid, "Attractors", "Stepsit_out", 4.1, 0, 1, 1, 1, 1);
            }
        case 3: {
                JugadorSentado[playerid] = 1;
                HaciendoAnimacion(playerid, "FOOD", "FF_Sit_Eat3", 4.1, 0, 0, 0, 1, 1);
            }
        case 4: {
                JugadorSentado[playerid] = 1;
                HaciendoAnimacion(playerid, "FOOD", "FF_Sit_In", 4.1, 0, 0, 0, 1, 1);
            }
        case 5: {
                JugadorSentado[playerid] = 1;
                HaciendoAnimacion(playerid, "FOOD", "FF_Sit_In_L", 4.1, 0, 0, 0, 1, 1);
            }
        case 6: {
                JugadorSentado[playerid] = 1;
                HaciendoAnimacion(playerid, "FOOD", "FF_Sit_In_R", 4.1, 0, 0, 0, 1, 1);
            }
        case 7: {
                JugadorSentado[playerid] = 1;
                HaciendoAnimacion(playerid, "PED", "SEAT_down", 4.1, 0, 0, 0, 1, 1);
            }
        case 8: {
                JugadorSentado[playerid] = 1;
                HaciendoAnimacion(playerid, "INT_HOUSE", "LOU_In", 4.1, 0, 0, 0, 1, 1);
            }
        case 9: {
                JugadorSentado[playerid] = 1;
                HaciendoAnimacion(playerid, "MISC", "SEAT_LR", 4.1, 0, 1, 1, 1, 1);
            }
    }
    return 1;
}

CMD:saludo(playerid, params[]) {
    new animacion;
    if (sscanf(params, "d", animacion)) return _Mensaje(playerid, 3, "0", "/saludo [1-7]");
    switch (animacion) {
        case 1: HaciendoAnimacion(playerid, "GANGS", "prtial_hndshk_biz_01", 4.1, 0, 1, 1, 1, 1);
        case 2: HaciendoAnimacion(playerid, "GANGS", "hndshkcb", 4.1, 0, 1, 1, 1, 1);
        case 3: HaciendoAnimacion(playerid, "GANGS", "hndshkea", 4.1, 0, 1, 1, 1, 1);
        case 4: HaciendoAnimacion(playerid, "GANGS", "hndshkfa", 4.1, 0, 1, 1, 1, 1);
        case 5: HaciendoAnimacion(playerid, "GANGS", "hndshkba", 4.1, 0, 1, 1, 1, 1);
        case 6: HaciendoAnimacion(playerid, "ON_LOOKERS", "wave_loop", 4.0, 1, 0, 0, 1, 1);
        case 7: HaciendoAnimacion(playerid, "PED", "endchat_03", 4.1, 0, 1, 1, 1, 1);
        default: _Mensaje(playerid, 3, "0", "/saludo [1-7]");
    }
    return 1;
}

CMD:pandillero(playerid, params[]) {
    new animacion;
    if (sscanf(params, "d", animacion)) return _Mensaje(playerid, 3, "0", "/pandillero [1-16]");
    switch (animacion) {
        case 1: HaciendoAnimacion(playerid, "RAPPING", "RAP_A_Loop", 4.0, 1, 1, 1, 1, 1);
        case 2: HaciendoAnimacion(playerid, "RAPPING", "RAP_C_Loop", 4.0, 1, 1, 1, 1, 1);
        case 3: HaciendoAnimacion(playerid, "GHANDS", "gsign2", 4.1, 0, 1, 1, 1, 1);
        case 4: HaciendoAnimacion(playerid, "GHANDS", "gsign2LH", 4.1, 0, 1, 1, 1, 1);
        case 5: HaciendoAnimacion(playerid, "GHANDS", "gsign3", 4.1, 0, 1, 1, 1, 1);
        case 6: HaciendoAnimacion(playerid, "GHANDS", "gsign3LH", 4.1, 0, 1, 1, 1, 1);
        case 7: HaciendoAnimacion(playerid, "GHANDS", "gsign4", 4.1, 0, 1, 1, 1, 1);
        case 8: HaciendoAnimacion(playerid, "GHANDS", "gsign4LH", 4.1, 0, 1, 1, 1, 1);
        case 9: HaciendoAnimacion(playerid, "GHANDS", "gsign5", 4.1, 0, 1, 1, 1, 1);
        case 10: HaciendoAnimacion(playerid, "GHANDS", "gsign5LH", 4.1, 0, 1, 1, 1, 1);
        case 11: HaciendoAnimacion(playerid, "benchpress", "gym_bp_celebrate", 4.1, 0, 1, 1, 1, 1);
        case 12: HaciendoAnimacion(playerid, "LOWRIDER", "prtial_gngtlkG", 4.1, 0, 1, 1, 1, 1);
        case 13: HaciendoAnimacion(playerid, "RIOT", "RIOT_ANGRY", 4.1, 0, 1, 1, 1, 1);
        case 14: HaciendoAnimacion(playerid, "RIOT", "RIOT_challenge", 4.1, 0, 1, 1, 1, 1);
        case 15: HaciendoAnimacion(playerid, "RAPPING", "RAP_B_Loop", 4.1, 1, 1, 1, 1, 1);
        case 16: HaciendoAnimacion(playerid, "SCRATCHING", "scdrulp", 4.1, 1, 0, 0, 1, 1);
        default: _Mensaje(playerid, 3, "0", "/pandillero [1-16]");
    }
    return 1;
}

CMD:bate(playerid, params[]) {
    new animacion;
    if (sscanf(params, "d", animacion)) return _Mensaje(playerid, 3, "0", "/bate [1-2]");
    switch (animacion) {
        case 1: HaciendoAnimacion(playerid, "CRACK", "Bbalbat_Idle_01", 4.1, 0, 1, 1, 1, 1);
        case 2: HaciendoAnimacion(playerid, "CRACK", "Bbalbat_Idle_02", 4.1, 0, 1, 1, 1, 1);
        default: _Mensaje(playerid, 3, "0", "/bate [1-2]");
    }
    return 1;
}

CMD:basket(playerid, params[]) {
    new animacion;
    if (sscanf(params, "d", animacion)) return _Mensaje(playerid, 3, "0", "/basket [1-7]");
    switch (animacion) {
        case 1: HaciendoAnimacion(playerid, "BSKTBALL", "BBALL_run", 4.1, 1, 1, 0, 1, 1);
        case 2: HaciendoAnimacion(playerid, "BSKTBALL", "BBALL_idleloop", 4.1, 1, 1, 1, 1, 1);
        case 3: HaciendoAnimacion(playerid, "BSKTBALL", "BBALL_Jump_Shot", 4.1, 0, 0, 0, 0, 0);
        case 4: HaciendoAnimacion(playerid, "BSKTBALL", "BBALL_def_loop", 4.1, 1, 1, 1, 1, 1);
        case 5: HaciendoAnimacion(playerid, "BSKTBALL", "BBALL_Dnk", 4.1, 0, 1, 1, 1, 1);
        case 6: HaciendoAnimacion(playerid, "BSKTBALL", "BBALL_idle", 4.1, 1, 1, 1, 1, 1);
        case 7: HaciendoAnimacion(playerid, "BSKTBALL", "BBALL_idle2", 4.1, 1, 1, 1, 1, 1);
        default: _Mensaje(playerid, 3, "0", "/basket [1-7]");
    }
    return 1;
}

CMD:trafico(playerid, params[]) {
    new animacion;
    if (sscanf(params, "d", animacion)) return _Mensaje(playerid, 3, "0", "/trafico [1-4]");
    switch (animacion) {
        case 1: HaciendoAnimacion(playerid, "POLICE", "CopTraf_Away", 4.1, 1, 0, 0, 1, 1);
        case 2: HaciendoAnimacion(playerid, "POLICE", "CopTraf_Come", 4.1, 1, 0, 0, 1, 1);
        case 3: HaciendoAnimacion(playerid, "POLICE", "CopTraf_Left", 4.1, 1, 0, 0, 1, 1);
        case 4: HaciendoAnimacion(playerid, "POLICE", "CopTraf_Stop", 4.1, 1, 0, 0, 1, 1);
        default: _Mensaje(playerid, 3, "0", "/trafico [1-4]");
    }
    return 1;
}

CMD:apoyarse(playerid, params[]) {
    new animacion;
    if  (sscanf(params, "d", animacion)) return _Mensaje(playerid, 3, "0", "/apoyarse [1-2]");
    switch (animacion) {
        case 1: HaciendoAnimacion(playerid, "GANGS", "leanIDLE", 4.0, 1, 0, 1, 1, 1);
        case 2: HaciendoAnimacion(playerid, "MISC", "Plyrlean_loop", 4.0, 1, 1, 1, 1, 1);
        default: _Mensaje(playerid, 3, "0", "/apoyarse [1-2]");
    }
    return 1;
}

CMD:beso(playerid, params[]) {
    new animacion;
    if (sscanf(params, "d", animacion)) return _Mensaje(playerid, 3, "0", "/beso [1-2]");
    switch (animacion) {
        case 1: HaciendoAnimacion(playerid, "KISSING", "Grlfrd_Kiss_03", 4.1, 0, 0, 0, 1, 1);
        case 2: HaciendoAnimacion(playerid, "KISSING", "Playa_Kiss_03", 4.1, 0, 0, 0, 1, 1);
        default: _Mensaje(playerid, 3, "0", "/beso [1-2]");
    }
    return 1;
}

CMD:billar(playerid, params[]) {
    new animacion;
    if (sscanf(params, "d", animacion)) return _Mensaje(playerid, 3, "0", "/billar [1-3]");
    switch (animacion) {
        case 1: HaciendoAnimacion(playerid, "POOL", "POOL_Idle_Stance", 4.1, 0, 1, 1, 1, 1);
        case 2: HaciendoAnimacion(playerid, "POOL", "POOL_Med_Start", 4.1, 0, 1, 1, 1, 1);
        case 3: HaciendoAnimacion(playerid, "POOL", "POOL_Med_Shot", 4.1, 0, 1, 1, 1, 1);
        default: _Mensaje(playerid, 3, "0", "/billar [1-3]");
    }
    return 1;
}

CMD:correr(playerid, params[]) {
    new animacion;
    if (sscanf(params, "d", animacion)) return _Mensaje(playerid, 3, "0", "/correr [1-6]");
    switch (animacion) {
        case 1: HaciendoAnimacion(playerid, "PED", "run_civi", 4.1, 1, 1, 1, 1, 1);
        case 2: HaciendoAnimacion(playerid, "PED", "run_gang1", 4.1, 1, 1, 1, 1, 1);
        case 3: HaciendoAnimacion(playerid, "PED", "run_old", 4.1, 1, 1, 1, 1, 1);
        case 4: HaciendoAnimacion(playerid, "PED", "run_fat", 4.1, 1, 1, 1, 1, 1);
        case 5: HaciendoAnimacion(playerid, "PED", "woman_run", 4.1, 1, 1, 1, 1, 1);
        case 6: HaciendoAnimacion(playerid, "PED", "WOMAN_runsexy", 4.1, 1, 1, 1, 1, 1);
        default: _Mensaje(playerid, 3, "0", "/correr [1-6]");
    }
    return 1;
}

CMD:strip(playerid, params[]) {
    new animacion;
    if (sscanf(params, "d", animacion)) return _Mensaje(playerid, 3, "0", "/strip [1-7]");
    switch (animacion) {
        case 1: HaciendoAnimacion(playerid, "STRIP", "strip_A", 4.1, 1, 1, 1, 1, 1);
        case 2: HaciendoAnimacion(playerid, "STRIP", "strip_B", 4.1, 1, 1, 1, 1, 1);
        case 3: HaciendoAnimacion(playerid, "STRIP", "strip_C", 4.1, 1, 1, 1, 1, 1);
        case 4: HaciendoAnimacion(playerid, "STRIP", "strip_D", 4.1, 1, 1, 1, 1, 1);
        case 5: HaciendoAnimacion(playerid, "STRIP", "strip_E", 4.1, 1, 1, 1, 1, 1);
        case 6: HaciendoAnimacion(playerid, "STRIP", "strip_F", 4.1, 1, 1, 1, 1, 1);
        case 7: HaciendoAnimacion(playerid, "STRIP", "strip_G", 4.1, 1, 1, 1, 1, 1);
        default: _Mensaje(playerid, 3, "0", "/strip [1-7]");
    }
    return 1;
}

CMD:tumbarse(playerid, params[]) {
    new animacion;
    if (sscanf(params, "d", animacion)) return _Mensaje(playerid, 3, "0", "/tumbarse [1-5]");
    switch (animacion) {
        case 1: HaciendoAnimacion(playerid, "BEACH", "bather", 4.1, 0, 1, 1, 1, 1);
        case 2: HaciendoAnimacion(playerid, "BEACH", "Lay_Bac_Loop", 4.1, 0, 1, 1, 1, 1);
        case 3: HaciendoAnimacion(playerid, "BEACH", "BD_Fire3", 4.1, 0, 1, 1, 1, 1);
        case 4: HaciendoAnimacion(playerid, "BEACH", "ParkSit_W_loop", 4.1, 0, 1, 1, 1, 1);
        case 5: HaciendoAnimacion(playerid, "BEACH", "SitnWait_loop_W", 4.1, 0, 1, 1, 1, 1);
        default: _Mensaje(playerid, 3, "0", "/tumbarse [1-5]");
    }
    return 1;
}

CMD:mecanico(playerid, params[]) {
    new animacion;
    if (sscanf(params, "d", animacion)) return _Mensaje(playerid, 3, "0", "/mecanico [1-2]");
    switch (animacion) {
        case 1: HaciendoAnimacion(playerid, "CAR", "Fixn_Car_Loop", 4.1, 1, 0, 0, 1, 1);
        case 2: HaciendoAnimacion(playerid, "CAR", "Fixn_Car_Out", 4.1, 0, 0, 0, 1, 1);
        default: _Mensaje(playerid, 3, "0", "/mecanico [1-2]");
    }
    return 1;
}

CMD:consola(playerid, params[]) {
    new animacion;
    if (sscanf(params, "d", animacion)) return _Mensaje(playerid, 3, "0", "/consola [1-3]");
    switch (animacion) {
        case 1: HaciendoAnimacion(playerid, "CRIB", "PED_Console_Loop", 4.1, 1, 1, 1, 1, 1);
        case 2: HaciendoAnimacion(playerid, "CRIB", "PED_Console_Loose", 4.1, 0, 1, 1, 1, 1);
        case 3: HaciendoAnimacion(playerid, "CRIB", "PED_Console_Win", 4.1, 0, 1, 1, 1, 1);
        default: _Mensaje(playerid, 3, "0", "/consola [1-3]");
    }
    return 1;
}

CMD:bailar(playerid, params[]) {
    if (GetPVarInt(playerid, "HaciendoMueble") == 1) return _Mensaje(playerid, 0, "148", "No puedes utilizar una animación en este momento.");
    if (IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "151", "No puedes hacer una animación en un vehículo.");
    if (GetPVarInt(playerid, "EnEvento") == 1) return _Mensaje(playerid, 0, "647", "No puedes usar este comando en un evento.");
	if (GetPVarInt(playerid, "Llamada_LSED") == 1) return _Mensaje(playerid, 0, "647", "No puedes usar este comando en este momento.");
    new animacion;
    if (sscanf(params, "d", animacion)) return _Mensaje(playerid, 3, "0", "/bailar [1-4]");
    switch (animacion) {
        case 1: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE1);
        case 2: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
        case 3: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE3);
        case 4: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE4);
        default: _Mensaje(playerid, 3, "0", "/bailar [1-4]");
    }
    return 1;
}

//- Sistema de teléfonos públicos
CMD:creartelefono(playerid, params[]) {
    new tpid;
    if (!IsPlayerConnected(playerid)) return _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
    if (user[playerid][jAdmin] < 10) return _Mensaje(playerid, 0, "265", "Tú no tienes acceso a el comando /Creartelefono.");
    if (!sscanf(params, "d", tpid)) {
        if (tpid < 0 || tpid > MAX_TELEFONOS) return _Mensaje(playerid, 0, "266", "ID de télefono inválido.");
        if (InfoTelefono[tpid][tpPosicion][0] > 0) return _Mensaje(playerid, 0, "267", "Esta ID está siendo utilizada.");
        GetPlayerPos(playerid, InfoTelefono[tpid][tpPosicion][0], InfoTelefono[tpid][tpPosicion][1], InfoTelefono[tpid][tpPosicion][2]);
        InfoTelefono[tpid][tpObjeto] = CreateDynamicObject(1216, InfoTelefono[tpid][tpPosicion][0], InfoTelefono[tpid][tpPosicion][1]+2, InfoTelefono[tpid][tpPosicion][2], 0, 0, 0);
        _Mensaje(playerid, 2, "0", "Creaste el teléfono indicado, ahora editalo.");
        EditDynamicObject(playerid, InfoTelefono[tpid][tpObjeto]);
        SetPVarInt(playerid, "TT_TEF", 1);
        ActualizarTelefono();
    } else return _Mensaje(playerid, 3, "0", "/creartelefono [id libre]");
    return 1;
}

CMD:borrartelefono(playerid, params[]) {
    new tpid;
    if (!IsPlayerConnected(playerid)) return _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
    if (user[playerid][jAdmin] < 10) return _Mensaje(playerid, 0, "263", "Tú no tienes acceso a el comando /Borrartelefono.");
    if (sscanf(params, "d", tpid)) return _Mensaje(playerid, 3, "0", "/borrartelefono [id teléfono]");
    if (InfoTelefono[tpid][tpPosicion][0] == 0.0) return _Mensaje(playerid, 0, "264", "Ese teléfono no está creado.");
    InfoTelefono[tpid][tpPosicion][0] = 0.0;
    InfoTelefono[tpid][tpPosicion][1] = 0.0;
    InfoTelefono[tpid][tpPosicion][2] = 0.0;
    InfoTelefono[tpid][tpPosicion][3] = 0.0;
    InfoTelefono[tpid][tpPosicion][4] = 0.0;
    InfoTelefono[tpid][tpPosicion][5] = 0.0;
    DestroyDynamicObject(InfoTelefono[tpid][tpObjeto]);
    DestroyDynamic3DTextLabel(Text3D: InfoTelefono[tpid][tpTexto]);
    _Mensaje(playerid, 2, "0", "Borraste el teléfono indicado.");
    ActualizarTelefono();
    return 1;
}

//- Sistema de vehículos en venta
CMD:editarcoche(playerid, params[]) {
    new carsaleid, input;
    if (!IsPlayerConnected(playerid)) return _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
    if (user[playerid][jAdmin] < 10) return _Mensaje(playerid, 0, "570", "Tú no tienes acceso a el comando /editarcoche.");
    if (sscanf(params, "s[32]", params)) {
        _Mensaje(playerid, 3, "0", "/editarcoche [Nombre] [autoid]");
        _Mensaje(playerid, 1, "precio - unidades", "Opciones:");
        return 1;
    }
    if (!strcmp(params, "precio", true, 5)) {
        if (sscanf(params, "s[32]ii", params, carsaleid, input)) return _Mensaje(playerid, 3, "0", "/editarcoche precio [autoid] [precio]");
        if (!i_Conce[carsaleid][eModeloVeh]) return _Mensaje(playerid, 0, "571", "ID coche invalido.");
        if (user[playerid][jAdmin] < 10) return _Mensaje(playerid, 0, "570", "Tú no tienes acceso a el comando /editarcoche.");
        i_Conce[carsaleid][ePrecioVeh] = input;
        _Mensaje(playerid, 2, "0", "Cambiaste el precio del vehículo indicado.");
    }
    if (!strcmp(params, "unidades", true, 5)) {
        if (sscanf(params, "s[32]ii", params, carsaleid, input)) return _Mensaje(playerid, 3, "0", "/editarcoche unidades [autoid] [cantidad]");
        if (!i_Conce[carsaleid][eModeloVeh]) return _Mensaje(playerid, 0, "571", "ID coche invalido.");
        if (user[playerid][jAdmin] < 10) return _Mensaje(playerid, 0, "570", "Tú no tienes acceso a el comando /editarcoche.");
        i_Conce[carsaleid][eDisponibles] = input;
        _Mensaje(playerid, 2, "0", "Cambiaste la cantidad de unidades del vehículo indicado.");
    }
    return 1;
}

CMD:practicar(playerid, params[]) {
    if (_enPos(playerid, 10, 767.6719, 13.6320, 1000.7010)) {
        Dialog(playerid, D_Praticar, DIALOG_STYLE_LIST, "{D6E1EB}¿Qué le gustaría aprender?", "{ffffff}Kung Fu\t 40$\nBoxeo\t \t 30$", "Seleccionar", "Cancelar");
    } else _Mensaje(playerid, 0, "570", "No estas en el GYM.");
    return 1;
}

CMD:nombreadmin(playerid, params[]) {
    new string[128];
    if (isnull(params)) return _Mensaje(playerid, 3, "0", "/nombreadmin [Nuevo Nombre]");
    if (user[playerid][jAdmin] >= 5) {
        if (GetPVarInt(playerid, "UsandoNombreP") == 0) {
            if (!INI_Exist(params)) {
                format(string, sizeof(string), "Estás temporalmente con el nombre de %s.", params);
                _Mensaje(playerid, 2, "0", string);
                _Mensaje(playerid, 2, "0", "Nota: No se guardarán ningún stat con este nombre.");
                SetPVarInt(playerid, "UsandoNombreP", 1);
                new name[MAX_PLAYER_NAME];
                GetPlayerName(playerid, name, sizeof(name));
                SetPVarString(playerid, "NombreP", name);
                SetPlayerName(playerid, params);
            } else _Mensaje(playerid, 0, "1", "Este nombre ya está registrado.");
        } else {
            new name[MAX_PLAYER_NAME];
            GetPVarString(playerid, "NombreP", name, sizeof(name));
            format(string, sizeof(string), "Tu nombre a sido cambiado al anterior: %s", name);
            _Mensaje(playerid, 2, "0", string);
            _Mensaje(playerid, 2, "0", "Nota: Ahora tus stats se guardarán.");
            SetPVarInt(playerid, "UsandoNombreP", 0);
            SetPlayerName(playerid, name);
        }
    } else _Mensaje(playerid, 0, "75", "No puedes usar este comando ahora.");
    return 1;
}

CMD:visitar(playerid, params[]) {
	new string[129];
    if (VisitaTimer2[playerid] > 0) {
        format(string, sizeof(string), "Debes esperar %d minutos, para visitar otra casa.", VisitaTimer2[playerid]);
        _Mensaje(playerid, 2, "0", string);
        return 1;
    }
    for (new i = 0; i < MAX_CASAS; i++) { //- Sistema de casas
        if (_enPos(playerid, 1, InfoCasa[i][cExteriorX], InfoCasa[i][cExteriorY], InfoCasa[i][cExteriorZ]) && user[playerid][jVirtualWorld] == InfoCasa[i][c_VW]) {
    	    if (InfoCasa[i][cComprado] == 0) {
                SetPlayerInterior(playerid, InfoCasa[i][cInterior]);
                user[playerid][jInterior] = InfoCasa[i][cInterior];
                user[playerid][jVirtualWorld] = i + 6000;
                SetPlayerVirtualWorld(playerid, i + 6000);
                SetPlayerPos(playerid, InfoCasa[i][cInteriorX], InfoCasa[i][cInteriorY], InfoCasa[i][cInteriorZ]);
                SetPlayerFacingAngle(playerid, InfoCasa[i][cInteriorA]);
                SetCameraBehindPlayer(playerid);
                _Mensaje(playerid, 4, "00c200", "[Señorita]{ffffff} Tienes 20 segundos para mirar la casa y salir.");
                if (Es_Faccion(playerid, 1)) EnCasaID[playerid] = i;
                VisitaTimer[playerid] = SetTimerEx("VisitandoCasa", 20000, false, "i", playerid);
            } else _Mensaje(playerid, 0, "541", "Esta casa no esta en venta.");
            return 1;
        }
    }
    return 1;
}

funcion VisitandoCasa(playerid) {
    for (new i = 0; i < MAX_CASAS; i++) { //- Sistema de casas
        if (user[playerid][jVirtualWorld] == i + 6000) {
            SetPlayerPos(playerid, InfoCasa[i][cExteriorX], InfoCasa[i][cExteriorY], InfoCasa[i][cExteriorZ]);
            SetPlayerFacingAngle(playerid, InfoCasa[i][cExteriorA]);
            SetCameraBehindPlayer(playerid);
            SetPlayerVirtualWorld(playerid, InfoCasa[i][c_VW]);
            user[playerid][jVirtualWorld] = InfoCasa[i][c_VW];
            SetPlayerInterior(playerid, InfoCasa[i][c_Int]);
            user[playerid][jInterior] = InfoCasa[i][c_Int];
            EnCasaID[playerid] = INVALID_CASA_ID;
            KillTimer(VisitaTimer[playerid]);
            _Mensaje(playerid, 4, "00c200", "[Señorita]{ffffff} Hasta pronto, esperamos que compres esta casa en un futuro.");
            VisitaTimer2[playerid] = 10;
            return 1;
        }
    }
    return 1;
}

CMD:entrar(playerid)
{
	if (user[playerid][jEncarcelado] == 1) return _Mensaje(playerid, 0, "540", "No puedes usar este comando mientras estas en la cárcel.");
	for (new pid = 0; pid < MAX_PUERTAS; pid++) //- Sistema de puertas dinamicas
	{
		if (_enPos(playerid, 2, InfoPuerta[pid][pExteriorX], InfoPuerta[pid][pExteriorY], InfoPuerta[pid][pExteriorZ]))
		{
			if (InfoPuerta[pid][pNivelVIP] > 0 && user[playerid][jPremium] < InfoPuerta[pid][pNivelVIP]) { return _Mensaje(playerid, 0, "541", "No puedes entrar necesitas ser un mayor nivel de VIP."); }
			if(InfoPuerta[pid][pFaccion] > 0) { if(user[playerid][jMiembro] != InfoPuerta[pid][pFaccion]) { return _Mensaje(playerid, 0, "542", "Sólo entrada a miembros de la facción."); } }
			SetPlayerPos(playerid, InfoPuerta[pid][pInteriorX], InfoPuerta[pid][pInteriorY], InfoPuerta[pid][pInteriorZ]);
			SetPlayerFacingAngle(playerid, InfoPuerta[pid][pInteriorA]);
			SetCameraBehindPlayer(playerid);
			SetPlayerVirtualWorld(playerid, InfoPuerta[pid][pInteriorVW]);
			user[playerid][jVirtualWorld] = InfoPuerta[pid][pInteriorVW];
			SetPlayerInterior(playerid, InfoPuerta[pid][pInteriorInt]);
			user[playerid][jInterior] = InfoPuerta[pid][pInteriorInt];
			CargarObjetos(playerid);
			return 1;
		}
	}
	for (new nid = 0; nid < MAX_NEGOCIOS; nid++) //- Sistema de negocios
	{
		if (_enPos(playerid, 2, i_Negocio[nid][nExteriorX], i_Negocio[nid][nExteriorY], i_Negocio[nid][nExteriorZ]))
		{
			if (i_Negocio[nid][nSeguro] == 0) return TextoPantalla(playerid, "~r~Cerrado", 5000, 1);
			SetPlayerPos(playerid, i_Negocio[nid][nInteriorX], i_Negocio[nid][nInteriorY], i_Negocio[nid][nInteriorZ]);
			SetPlayerFacingAngle(playerid, i_Negocio[nid][nInteriorR]);
			SetCameraBehindPlayer(playerid);
			SetPlayerVirtualWorld(playerid, nid + 300);
			user[playerid][jVirtualWorld] = nid + 300;
			SetPlayerInterior(playerid, i_Negocio[nid][nInterior]);
			user[playerid][jInterior] = i_Negocio[nid][nInterior];
			CargarObjetos(playerid);
			TextoPantalla(playerid, "~w~Negocio", 3000, 1);
			if (i_Negocio[nid][nTipo] == 1) _Mensaje(playerid, 4, "ADC3E7", "/retirar - /depositar");
			return 1;
		}
	}
	for (new i = 0; i < MAX_CASAS; i++) //- Sistema de casas
	{
		if (_enPos(playerid, 1, InfoCasa[i][cExteriorX], InfoCasa[i][cExteriorY], InfoCasa[i][cExteriorZ]) && user[playerid][jVirtualWorld] == InfoCasa[i][c_VW])
		{
			if (user[playerid][jCasaKey] == i || user[playerid][jCasaRenta] == i || InfoCasa[i][cEstado] == 1 || user[playerid][jCasaKey2] == i || user[playerid][jCasaLlaves] == i)
			{
				SetPlayerInterior(playerid, InfoCasa[i][cInterior]);
				user[playerid][jInterior] = InfoCasa[i][cInterior];
				user[playerid][jVirtualWorld] = i + 6000;
				SetPlayerVirtualWorld(playerid, i + 6000);
				SetPlayerPos(playerid, InfoCasa[i][cInteriorX], InfoCasa[i][cInteriorY], InfoCasa[i][cInteriorZ]);
				SetPlayerFacingAngle(playerid, InfoCasa[i][cInteriorA]);
				SetCameraBehindPlayer(playerid);
				TextoPantalla(playerid, "~w~Bienvenido a Casa", 3000, 1);
				if(Es_Faccion(playerid, 1)) EnCasaID[playerid] = i;
			} else TextoPantalla(playerid, "~r~Cerrado", 5000, 1);
			return 1;
		}
	}
	for (new i = 0; i < MAX_EMPRESAS; i++) //- Sistema de empresas
	{
		if (_enPos(playerid, 1, i_Empresa[i][eExteriorX], i_Empresa[i][eExteriorY], i_Empresa[i][eExteriorZ]) && i_Empresa[i][eTipo] == 1)
		{
			if (user[playerid][jEmpresaKey] == i || user[playerid][jContrato] == i)
			{
				SetPlayerInterior(playerid, i_Empresa[i][eInterior]);
				user[playerid][jInterior] = i_Empresa[i][eInterior];
				user[playerid][jVirtualWorld] = i + 666;
				SetPlayerVirtualWorld(playerid, i + 666);
				SetPlayerPos(playerid, i_Empresa[i][eInteriorX], i_Empresa[i][eInteriorY], i_Empresa[i][eInteriorZ]);
				SetPlayerFacingAngle(playerid, i_Empresa[i][eInteriorR]);
				SetCameraBehindPlayer(playerid);
				TextoPantalla(playerid, "~w~Bienvenido a la empresa", 3000, 1);
			} else TextoPantalla(playerid, "~r~Cerrado", 5000, 1);
			return 1;
		}
		else if (_enPos(playerid, 6.0, i_Empresa[i][eExteriorX], i_Empresa[i][eExteriorY], i_Empresa[i][eExteriorZ]) && i_Empresa[i][eTipo] == 2)
		{
			if (i_Empresa[i][eSeguro] == 0) return TextoPantalla(playerid, "~r~Cerrado", 5000, 1);
			if (GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
			{
				if(i_Empresa[i][eEspacio] == 1) { SetPlayerPos(playerid, 1881.8655,-2208.4617,13.5469); SetPlayerFacingAngle(playerid, 357.8957); }
				else if(i_Empresa[i][eEspacio] == 2) { SetPlayerPos(playerid, 1886.1965,-2208.3889,13.5469); SetPlayerFacingAngle(playerid, 4.2893); }
				else if(i_Empresa[i][eEspacio] == 3) { SetPlayerPos(playerid, 1885.5272,-2209.2139,13.5469); SetPlayerFacingAngle(playerid, 88.6141); }
				SetPlayerInterior(playerid, i_Empresa[i][eInterior]);
				user[playerid][jInterior] = i_Empresa[i][eInterior];
				user[playerid][jVirtualWorld] = i + 666;
				SetPlayerVirtualWorld(playerid, i + 666);
				TextoPantalla(playerid, "~w~Bienvenido al taller", 3000, 1);
			}
			else
			{
				if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					for(new veh=0; veh <= MAX_VEHICLES; veh++)
					{
						if (VehicleToPoint(5.0, veh, i_Empresa[i][eInteriorX], i_Empresa[i][eInteriorY], i_Empresa[i][eInteriorZ]) && (GetVehicleVirtualWorld(i) == i + 666))
						{
							_Mensaje(playerid, 0, "540", "Hay un vehículo cerca del portón, espera a que se mueva.");
							return 1;
						}
					}
					if (IsPlayerInVehicle(playerid, tmpcar))
					{
						SetPlayerVirtualWorld(playerid,i + 666);
						SetPlayerInterior(playerid, i_Empresa[i][eInterior]);
						SetVehicleVirtualWorld(tmpcar, i + 666);
						LinkVehicleToInterior(tmpcar, i_Empresa[i][eInterior]);
						user[playerid][jInterior] = i_Empresa[i][eInterior];
						user[playerid][jVirtualWorld] = i + 666;
						SetVehiclePos(tmpcar, i_Empresa[i][eInteriorX], i_Empresa[i][eInteriorY], i_Empresa[i][eInteriorZ]);
						SetVehicleZAngle(tmpcar, i_Empresa[i][eInteriorR]);
						foreach(Player, p)
						{
							if (IsPlayerInVehicle(p, GetPlayerVehicleID(playerid)))
							{
								user[p][jInterior] = i_Empresa[i][eInterior];
								SetPlayerInterior(p, i_Empresa[i][eInterior]);
								user[p][jVirtualWorld] = i + 666;
								SetPlayerVirtualWorld(p, i + 666);
								TextoPantalla(p, "~w~Bienvenido al taller", 3000, 1);
							}
						}
						return 1;
					}
				}
			}
		}
	}
	GuardarCuenta(playerid);
	Streamer_Update(playerid);
	return 1;
}
CMD:salir(playerid)
{
	if (user[playerid][jEncarcelado] == 1) return _Mensaje(playerid, 0, "540", "No puedes usar este comando mientras estas preso.");
	for (new pid = 0; pid < MAX_PUERTAS; pid++) //- Sistema de puertas dinamicas
	{
		if (_enPos(playerid, 2.0, InfoPuerta[pid][pInteriorX], InfoPuerta[pid][pInteriorY], InfoPuerta[pid][pInteriorZ]) && user[playerid][jVirtualWorld] == InfoPuerta[pid][pInteriorVW])
		{
			if(InfoPuerta[pid][pFaccion] > 0) { if(user[playerid][jMiembro] != InfoPuerta[pid][pFaccion]) { return _Mensaje(playerid, 0, "542", "Sólo salida a miembros de la facción."); } }
			SetPlayerPos(playerid, InfoPuerta[pid][pExteriorX], InfoPuerta[pid][pExteriorY], InfoPuerta[pid][pExteriorZ]);
			SetPlayerFacingAngle(playerid, InfoPuerta[pid][pExteriorA]);
			SetPlayerInterior(playerid, InfoPuerta[pid][pExteriorInt]);
			user[playerid][jInterior] = InfoPuerta[pid][pExteriorInt];
			SetPlayerVirtualWorld(playerid, InfoPuerta[pid][pExteriorVW]);
			user[playerid][jVirtualWorld] = InfoPuerta[pid][pExteriorVW];
			return 1;
		}
	}
	for (new nid = 0; nid < MAX_NEGOCIOS; nid++) //- Sistema de negocios
	{
		if (_enPos(playerid, 3, i_Negocio[nid][nInteriorX], i_Negocio[nid][nInteriorY], i_Negocio[nid][nInteriorZ]) && user[playerid][jVirtualWorld] == nid + 300)
		{
			SetPlayerPos(playerid, i_Negocio[nid][nExteriorX], i_Negocio[nid][nExteriorY], i_Negocio[nid][nExteriorZ]);
			SetPlayerFacingAngle(playerid, i_Negocio[nid][nExteriorR]);
			SetPlayerInterior(playerid, 0);
            user[playerid][jInterior] = 0;
			SetPlayerVirtualWorld(playerid, 0);
            user[playerid][jVirtualWorld] = 0;
			return 1;
		}
	}
	for (new i = 0; i < MAX_CASAS; i++) //- Sistema de casas
	{
		if (_enPos(playerid, 3, InfoCasa[i][cInteriorX], InfoCasa[i][cInteriorY], InfoCasa[i][cInteriorZ]) && user[playerid][jVirtualWorld] == i + 6000)
		{
			SetPlayerPos(playerid, InfoCasa[i][cExteriorX], InfoCasa[i][cExteriorY], InfoCasa[i][cExteriorZ]);
			SetPlayerFacingAngle(playerid, InfoCasa[i][cExteriorA]);
			SetPlayerVirtualWorld(playerid, InfoCasa[i][c_VW]);
			user[playerid][jVirtualWorld] = InfoCasa[i][c_VW];
			SetPlayerInterior(playerid, InfoCasa[i][c_Int]);
			user[playerid][jInterior] = InfoCasa[i][c_Int];
			EnCasaID[playerid] = INVALID_CASA_ID;
			KillTimer(VisitaTimer[playerid]);
			return 1;
		}
	}
	for (new i = 0; i < MAX_EMPRESAS; i++) //- Sistema de empresas
	{
		if (i_Empresa[i][eTipo] == 1)
		{
			if (_enPos(playerid, 3, i_Empresa[i][eInteriorX], i_Empresa[i][eInteriorY], i_Empresa[i][eInteriorZ]) && user[playerid][jVirtualWorld] == i + 666)
			{
				SetPlayerPos(playerid, i_Empresa[i][eExteriorX], i_Empresa[i][eExteriorY], i_Empresa[i][eExteriorZ]);
				SetPlayerFacingAngle(playerid, i_Empresa[i][eExteriorR]);
				SetPlayerVirtualWorld(playerid, 0);
				user[playerid][jVirtualWorld] = 0;
				SetPlayerInterior(playerid, 0);
				user[playerid][jInterior] = 0;
				return 1;
  			}
		}
		else if (i_Empresa[i][eTipo] == 2)
		{
			if (_enPos(playerid, 8.0, i_Empresa[i][eInteriorX], i_Empresa[i][eInteriorY], i_Empresa[i][eInteriorZ]) && user[playerid][jVirtualWorld] == i + 666)
			{
				if (GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					SetPlayerPos(playerid, i_Empresa[i][eExteriorX], i_Empresa[i][eExteriorY], i_Empresa[i][eExteriorZ]);
					SetPlayerFacingAngle(playerid, i_Empresa[i][eExteriorR]);
					SetPlayerVirtualWorld(playerid, 0);
					user[playerid][jVirtualWorld] = 0;
					user[playerid][jInterior] = 0;
					SetPlayerInterior(playerid, 0);
					DentroEmpresa[playerid] = -1;
				}
				else
				{
					if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
					{
						for(new veh=0; veh <= MAX_VEHICLES; veh++)
						{
							if (VehicleToPoint(5.0, veh, i_Empresa[i][eExteriorX], i_Empresa[i][eExteriorY], i_Empresa[i][eExteriorZ]))
							{
								_Mensaje(playerid, 0, "540", "Hay un vehículo cerca del portón, espera a que se mueva.");
								return 1;
							}
						}
						new tmpcar = GetPlayerVehicleID(playerid);
						if (IsPlayerInVehicle(playerid, tmpcar))
						{
							LinkVehicleToInterior(tmpcar, 0);
							SetVehicleVirtualWorld(tmpcar, 0);
							SetVehiclePos(tmpcar, i_Empresa[i][eExteriorX_V], i_Empresa[i][eExteriorY_V], i_Empresa[i][eExteriorZ]);
							SetPlayerInterior(playerid, 0);
							SetPlayerVirtualWorld(playerid, 0);
							user[playerid][jVirtualWorld] = 0;
							user[playerid][jInterior] = 0;
							SetVehicleZAngle(tmpcar, i_Empresa[i][eExteriorR]);
							DentroEmpresa[playerid] = -1;
							foreach(new p: Player)
							{
								if (IsPlayerInVehicle(p, tmpcar))
								{
									SetPlayerInterior(p, 0);
									SetPlayerVirtualWorld(p, 0);
									user[p][jVirtualWorld] = 0;
									user[p][jInterior] = 0;
									DentroEmpresa[p] = -1;
								}
							}
							return 1;
						}
					}
				}
			}
		}
		else if (i_Empresa[i][eTipo] == 3)
  		{
		//
		}
	}
	GuardarCuenta(playerid);
	Streamer_Update(playerid);
	return 1;
}

//- Comandos Negocios.
CMD:vendernegocio(playerid)
{
	new string[128], nid = user[playerid][jNegocioKey];
	if (nid == INVALID_NEGOCIO_ID) return _Mensaje(playerid, 0, "736", "No tienes un negocio.");

	if (_enPos(playerid, 3.0, i_Negocio[nid][nExteriorX], i_Negocio[nid][nExteriorY], i_Negocio[nid][nExteriorZ]))
	{
		if (nid != INVALID_NEGOCIO_ID && strcmp(NombreRJugador(playerid), i_Negocio[nid][nDueno], true) == 0)
		{
			if (i_Negocio[nid][nCuotas] != 0) return _Mensaje(playerid, 0, "106", "El negocio posee cuotas pendientes.");
			new sell = i_Negocio[nid][nPrecio];
			Ganancia(playerid, sell);
			format(string, sizeof(string), "Has vendido tu negocio. Has recuperado %d$", sell);
			_Mensaje(playerid, 2, "0", string);
			VenderNegocio(nid);
			user[playerid][jNegocioKey] = INVALID_NEGOCIO_ID;
		} else _Mensaje(playerid, 0, "737", "Este negocio no está a tu nombre.");
	} else _Mensaje(playerid, 0, "738", "Debes estar cerca de tu negocio para venderlo.");
	return 1;
}
CMD:vendernegocio2(playerid)
{
	new string[128], nid = user[playerid][jNegocioKey2];
	if (nid == INVALID_NEGOCIO_ID) return _Mensaje(playerid, 0, "736", "No tienes un negocio.");
	if (_enPos(playerid, 3.0, i_Negocio[nid][nExteriorX], i_Negocio[nid][nExteriorY], i_Negocio[nid][nExteriorZ]))
	{
		if (nid != INVALID_NEGOCIO_ID && strcmp(NombreRJugador(playerid), i_Negocio[nid][nDueno], true) == 0)
		{
			if (i_Negocio[nid][nCuotas] != 0) return _Mensaje(playerid, 0, "106", "El negocio posee cuotas pendientes.");
			new sell = i_Negocio[nid][nPrecio];
			Ganancia(playerid, sell);
			format(string, sizeof(string), "Has vendido tu negocio. Has recuperado %d$", sell);
			_Mensaje(playerid, 2, "0", string);
			VenderNegocio(nid);
			user[playerid][jNegocioKey2] = INVALID_NEGOCIO_ID;
		} else _Mensaje(playerid, 0, "737", "Este negocio no está a tu nombre.");
	} else _Mensaje(playerid, 0, "738", "Debes estar cerca de tu negocio para venderlo.");
	return 1;
}
VenderNegocio(nid)
{
	i_Negocio[nid][nSeguro] = 1;
	i_Negocio[nid][nComprado] = 0;
	i_Negocio[nid][nCuotas] = 0;
	i_Negocio[nid][nPedido] = 0;
	format(i_Negocio[nid][nDueno], 32, "enventa");
	if (i_Negocio[nid][nTipo] == 1) format(i_Negocio[nid][nNombre], 32, "24-7");
	else if (i_Negocio[nid][nTipo] == 2) format(i_Negocio[nid][nNombre], 32, "Ropa");
	else if (i_Negocio[nid][nTipo] == 3) format(i_Negocio[nid][nNombre], 32, "Restaurante");
	else if (i_Negocio[nid][nTipo] == 4) format(i_Negocio[nid][nNombre], 32, "Cluckin bell");
	else if (i_Negocio[nid][nTipo] == 5) format(i_Negocio[nid][nNombre], 32, "Pizzeria");
	else if (i_Negocio[nid][nTipo] == 6) format(i_Negocio[nid][nNombre], 32, "Burger Shot");
	else if (i_Negocio[nid][nTipo] == 7) format(i_Negocio[nid][nNombre], 32, "Ammunation");
	else if (i_Negocio[nid][nTipo] == 8) format(i_Negocio[nid][nNombre], 32, "Peluquería");
	else if (i_Negocio[nid][nTipo] == 9) format(i_Negocio[nid][nNombre], 32, "Tienda Sexual");
	else if (i_Negocio[nid][nTipo] == 10) format(i_Negocio[nid][nNombre], 32, "Gasolinera");
	else if (i_Negocio[nid][nTipo] == 11) format(i_Negocio[nid][nNombre], 32, "Electrónica");
	else if (i_Negocio[nid][nTipo] == 12) format(i_Negocio[nid][nNombre], 32, "Bar");
	else if (i_Negocio[nid][nTipo] == 13) format(i_Negocio[nid][nNombre], 32, "Ferreteria");
	else if (i_Negocio[nid][nTipo] == 14) format(i_Negocio[nid][nNombre], 32, "Alhambra");
	else if (i_Negocio[nid][nTipo] == 15) format(i_Negocio[nid][nNombre], 32, "Strip club");
	else if (i_Negocio[nid][nTipo] == 16) format(i_Negocio[nid][nNombre], 32, "Club private");
	else if (i_Negocio[nid][nTipo] == 17) format(i_Negocio[nid][nNombre], 32, "Tienda empeño");
	_NegocioP(nid);
	save_Negocio(nid);
	return 1;
}
CMD:venderminegocio(playerid, params[])
{
	new nid = user[playerid][jNegocioKey];
	if (nid == INVALID_NEGOCIO_ID) return _Mensaje(playerid, 0, "736", "No tienes un negocio.");
	if (i_Negocio[nid][nCuotas] != 0) return _Mensaje(playerid, 0, "106", "El negocio posee cuotas pendientes.");
	new string[128], playerid2, price;
	if (sscanf(params, "dd", playerid2, price)) return _Mensaje(playerid, 3, "0", "/venderminegocio [id jugador] [precio]");
	if (price < 1) return _Mensaje(playerid, 0, "384", "Precio debe ser mayor a 0.");
	if (playerid == playerid2) return _Mensaje(playerid, 0, "385", "No puedes venderte el negocio a ti mismo.");
	if (!IsPlayerConnected(playerid2)) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
	if (CercaDelWeon(8.0, playerid, playerid2))
	{
		NegocioOffer[playerid2] = playerid;
		NegocioPrice[playerid2] = price;
		format(string, sizeof(string), "* Ofreciste a %s para comprar tu negocio por $%d.", NombreJugador(playerid2), price);
		_Mensaje(playerid, 4, "33CCFF", string);
		format(string, sizeof(string), "* %s te ha ofrecido su negocio por $%d, (/aceptar).", NombreJugador(playerid), price);
		_Mensaje(playerid2, 4, "33CCFF", string);
		return 1;
	} else _Mensaje(playerid, 0, "133", "El jugador no se encuentra cerca de tí.");
	return 1;
}

CMD:negocio(playerid) return cmd_minegocio(playerid);
CMD:minegocio(playerid)
{
	new tDialogo[300];
	if(user[playerid][jNegocioKey] == INVALID_NEGOCIO_ID && user[playerid][jNegocioKey2] == INVALID_NEGOCIO_ID && user[playerid][jNegocioLlaves] == INVALID_NEGOCIO_ID) return _Mensaje(playerid, 0, "580", "No tienes ningun negocio o no tienes las llaves de uno.");
	new nid = user[playerid][jNegocioKey], nid2 = user[playerid][jNegocioKey2], nid3 = user[playerid][jNegocioLlaves];
	if (GetPlayerVirtualWorld(playerid) == user[playerid][jNegocioKey] + 300)
	{
		format(tDialogo, sizeof(tDialogo), "{ffffff}Nombre ({0095B5}%s{ffffff})\nDinero ({00C200}$%d{ffffff})\nProductos ({0095B5}%d{ffffff}) - ({ffff00}%d{ffffff})\nLlaves (%s{ffffff})\nArmario", i_Negocio[nid][nNombre], i_Negocio[nid][nDinero], i_Negocio[nid][nProductos], i_Negocio[nid][nPedido], _estadoN(nid,2));
		Dialog(playerid, D_NEGOCIO_OPCIONES, DIALOG_STYLE_LIST, "[Negocio]: {D6E1EB} Menú", tDialogo, "Seleccionar", "Cancelar");
		DentroNegocio[playerid] = nid;
	}
	else if (GetPlayerVirtualWorld(playerid) == user[playerid][jNegocioKey2] + 300)
	{
		format(tDialogo, sizeof(tDialogo), "{ffffff}Nombre ({0095B5}%s{ffffff})\nDinero ({00C200}$%d{ffffff})\nProductos ({0095B5}%d{ffffff}) - ({ffff00}%d{ffffff})\nLlaves (%s{ffffff})\nArmario", i_Negocio[nid2][nNombre], i_Negocio[nid2][nDinero], i_Negocio[nid2][nProductos], i_Negocio[nid2][nPedido], _estadoN(nid2,2));
		Dialog(playerid, D_NEGOCIO_OPCIONES, DIALOG_STYLE_LIST, "[Negocio]: {D6E1EB} Menú", tDialogo, "Seleccionar", "Cancelar");
		DentroNegocio[playerid] = nid2;
	}
	else if (GetPlayerVirtualWorld(playerid) == user[playerid][jNegocioLlaves] + 300)
	{
		format(tDialogo, sizeof(tDialogo), "{ffffff}Nombre ({0095B5}%s{ffffff})\nDinero ({00C200}$%d{ffffff})\nProductos ({0095B5}%d{ffffff}) - ({ffff00}%d{ffffff})\nLlaves (%s{ffffff})", i_Negocio[nid3][nNombre], i_Negocio[nid3][nDinero], i_Negocio[nid3][nProductos], i_Negocio[nid3][nPedido], _estadoN(nid3,2));
		Dialog(playerid, D_NEGOCIO_OPCIONES, DIALOG_STYLE_LIST, "[Negocio]: {D6E1EB} Menú", tDialogo, "Seleccionar", "Cancelar");
		DentroNegocio[playerid] = nid3;
	} else _Mensaje(playerid, 0, "580", "No estás en ningun negocio.");
	return 1;
}

CMD:editarneg(playerid, params[])
{
	new nid, string[256], input;
	if (user[playerid][jAdmin] < 5) return _Mensaje(playerid, 0, "546", "Tú no tienes acceso a el comando /editarneg");
	if (sscanf(params, "s[32]", params))
	{
		_Mensaje(playerid, 3, "0", "/editarneg [nombre] [negocio] [codigo]");
		_Mensaje(playerid, 1, "exterior - precio - productos - interior.", "Nombres:");
		return 1;
	}
	if (!strcmp(params, "exterior", true, 8))
	{
		if (sscanf(params, "s[32]i", params, nid)) return _Mensaje(playerid, 3, "0", "/editarn exterior [negocio]");
		GetPlayerPos(playerid, i_Negocio[nid][nExteriorX], i_Negocio[nid][nExteriorY], i_Negocio[nid][nExteriorZ]);
		_NegocioP(nid);
		_Mensaje(playerid, 4, "ffffff", "Editaste el exterior del negocio.");
		format(string, sizeof(string), "Registros: %s ha cambiado el exterior del negocio ID %d.", NombreRJugador(playerid), nid);
		Log("Registros/Negocios.log", string);
	}
	else if (!strcmp(params, "precio", true, 6))
	{
		if (sscanf(params, "s[32]ii", params, nid, input)) return _Mensaje(playerid, 3, "0", "/editarn precio [negocio] [precio]");
		if (!i_Negocio[nid][nTipo]) return _Mensaje(playerid, 0, "548", "Id negocio invalida.");
		if (user[playerid][jAdmin] < 10) return _Mensaje(playerid, 0, "546", "Tú no tienes acceso a el comando /Editarn.");
		i_Negocio[nid][nPrecio] = input;
		save_Negocio(nid);
		_Mensaje(playerid, 4, "ffffff", "Editaste el precio del negocio.");
		format(string, sizeof(string), "Registros: %s ha puesto el negocio ID %d precio $%d.", NombreRJugador(playerid), nid, input);
		Log("Registros/Negocios.log", string);
	}
	else if (!strcmp(params, "interior", true, 8))
	{
		if (sscanf(params, "s[32]i", params, nid)) return _Mensaje(playerid, 3, "0", "/editarn interior [negocio]");
		GetPlayerPos(playerid, i_Negocio[nid][nInteriorX], i_Negocio[nid][nInteriorY], i_Negocio[nid][nInteriorZ]);
		GetPlayerFacingAngle(playerid, i_Negocio[nid][nInteriorR]);
		i_Negocio[nid][nInterior] = GetPlayerInterior(playerid);
		_NegocioP(nid);
		_Mensaje(playerid, 4, "ffffff", "Editaste el interior del negocio.");
		format(string, sizeof(string), "Registros: %s ha cambiado el exterior del negocio ID %d.", NombreRJugador(playerid), nid);
		Log("Registros/Negocios.log", string);
	}
	else if (!strcmp(params, "productos", true, 9))
	{
		if (sscanf(params, "s[32]ii", params, nid, input)) return _Mensaje(playerid, 3, "0", "/nedit productos [negocio] [amount]");
		if (!i_Negocio[nid][nTipo]) return _Mensaje(playerid, 0, "548", "Id negocio invalida.");
		if (input < 0) return _Mensaje(playerid, 0, "549", "Productos no pueden ser negativos.");
		i_Negocio[nid][nProductos] = input;
		save_Negocio(nid);
		_Mensaje(playerid, 4, "ffffff", "Editaste productos del negocio.");
		format(string, sizeof(string), "Registros: %s ha puesto el negocio ID %d productos %d.", NombreRJugador(playerid), nid, input);
		Log("Registros/Negocios.log", string);
	}
	else if (!strcmp(params, "pedido", true, 6))
	{
		if (sscanf(params, "s[32]ii", params, nid, input)) return _Mensaje(playerid, 3, "0", "/nedit pedido [negocio] [amount]");
		if (!i_Negocio[nid][nTipo]) return _Mensaje(playerid, 0, "548", "Id negocio invalida.");
		if (input < 0) return _Mensaje(playerid, 0, "549", "Productos no pueden ser negativos.");
		i_Negocio[nid][nPedido] = input;
		save_Negocio(nid);
		_Mensaje(playerid, 4, "ffffff", "Editaste los pedidos del negocio.");
		format(string, sizeof(string), "Registros: %s ha puesto el negocio ID %d productos %d.", NombreRJugador(playerid), nid, input);
		Log("Registros/Negocios.log", string);
	}
	save_Negocio(nid);
	return 1;
}

CMD:irnegocio(playerid, params[])
{
	new nid, string[128];
	if (!IsPlayerConnected(playerid)) return _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
	if (user[playerid][jAdmin] < 1) return _Mensaje(playerid, 0, "550", "Tú no tienes acceso a el comando /Irnegocio.");
	if (sscanf(params, "i", nid)) return _Mensaje(playerid, 3, "0", "/irnegocio [negocio]");
	if (nid < 0 || nid >= MAX_NEGOCIOS) return _Mensaje(playerid, 0, "453", "ID de negocio erróneo.");
	if (!i_Negocio[nid][nTipo]) return _Mensaje(playerid, 0, "548", "Id negocio invalida.");
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid, 0);
	SetPlayerPos(playerid, i_Negocio[nid][nExteriorX], i_Negocio[nid][nExteriorY], i_Negocio[nid][nExteriorZ]);
	format(string, sizeof(string), " Usted se teletransporto al negocio ID %d.", nid);
	_Mensaje(playerid, 2, "0", string);
	return 1;
}

CMD:avenegocio(playerid, params[]) {
	new nid, string[256];
	if (user[playerid][jAdmin] < 10) return _Mensaje(playerid, 0, "551", "Tú no tienes acceso a el comando /Avenegocio.");
	if (sscanf(params, "i", nid)) return _Mensaje(playerid, 3, "0", "/avenegocio [negocio]");
	if (!i_Negocio[nid][nTipo]) return _Mensaje(playerid, 0, "548", "Id negocio invalida.");
	foreach(Player, i) {
		if (IsPlayerConnected(i)) {
			if (user[i][jNegocioKey] == nid) {
				user[i][jNegocioKey] = INVALID_NEGOCIO_ID;
				format(string, sizeof(string), " %s ha vendido tu negocio ranura 1 (STAFF).", NombreRJugador(playerid));
				_Mensaje(i, 4, "b00000", string);
			} else if (user[i][jNegocioKey2] == nid) {
				user[i][jNegocioKey2] = INVALID_NEGOCIO_ID;
				format(string, sizeof(string), " %s ha vendido tu negocio ranura 2 (STAFF).", NombreRJugador(playerid));
				_Mensaje(i, 4, "b00000", string);
			} else if (user[i][jNegocioLlaves] == nid) user[i][jNegocioLlaves] = INVALID_CASA_ID;
		}
	}
	i_Negocio[nid][nComprado] = 0;
	i_Negocio[nid][nPedido] = 0;
	i_Negocio[nid][nCuotas] = 0;
	i_Negocio[nid][nDinero] = 0;
	i_Negocio[nid][nProductos] = 2000;
	i_Negocio[nid][nSeguro] = 1;
	_Mensaje(playerid, 4, "b00000", "Has liberado el negocio correctamente.");
	if (i_Negocio[nid][nTipo] == 1) format(i_Negocio[nid][nNombre], 32, "24-7");
	else if (i_Negocio[nid][nTipo] == 2) format(i_Negocio[nid][nNombre], 32, "Ropa");
	else if (i_Negocio[nid][nTipo] == 3) format(i_Negocio[nid][nNombre], 32, "Restaurante");
	else if (i_Negocio[nid][nTipo] == 4) format(i_Negocio[nid][nNombre], 32, "Cluckin bell");
	else if (i_Negocio[nid][nTipo] == 5) format(i_Negocio[nid][nNombre], 32, "Pizzeria");
	else if (i_Negocio[nid][nTipo] == 6) format(i_Negocio[nid][nNombre], 32, "Burger Shot");
	else if (i_Negocio[nid][nTipo] == 7) format(i_Negocio[nid][nNombre], 32, "Ammunation");
	else if (i_Negocio[nid][nTipo] == 8) format(i_Negocio[nid][nNombre], 32, "Peluquería");
	else if (i_Negocio[nid][nTipo] == 9) format(i_Negocio[nid][nNombre], 32, "Tienda Sexual");
	else if (i_Negocio[nid][nTipo] == 10) format(i_Negocio[nid][nNombre], 32, "Gasolinera");
	else if (i_Negocio[nid][nTipo] == 11) format(i_Negocio[nid][nNombre], 32, "Electrónica");
	else if (i_Negocio[nid][nTipo] == 12) format(i_Negocio[nid][nNombre], 32, "Bar");
	else if (i_Negocio[nid][nTipo] == 13) format(i_Negocio[nid][nNombre], 32, "Ferreteria");
	else if (i_Negocio[nid][nTipo] == 14) format(i_Negocio[nid][nNombre], 32, "Alhambra");
	else if (i_Negocio[nid][nTipo] == 15) format(i_Negocio[nid][nNombre], 32, "Strip club");
	else if (i_Negocio[nid][nTipo] == 16) format(i_Negocio[nid][nNombre], 32, "Club private");
	else if (i_Negocio[nid][nTipo] == 17) format(i_Negocio[nid][nNombre], 32, "Tienda empeno");
	_NegocioP(nid);
	save_Negocio(nid);
	return 1;
}

CMD:comprarnegocio(playerid, params[]) {
    new string[128];
    if (!IsPlayerConnected(playerid)) return _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
    if (user[playerid][jTiempos][7] > 0) {
        format(string, sizeof(string), "Ya has comprado un negocio. Debes esperar por lo menos %d minutos.", user[playerid][jTiempos][7]);
        _Mensaje(playerid, 2, "0", string);
        return 1;
    }
	if (user[playerid][j_Mascara] == 1) return _Mensaje(playerid, 0, "0", "No puedes comprar una propiedad con /mascara.");
	for (new nid = 0; nid < MAX_NEGOCIOS; nid++) {
        if (_enPos(playerid, 2.0, i_Negocio[nid][nExteriorX], i_Negocio[nid][nExteriorY], i_Negocio[nid][nExteriorZ])) {
            if (i_Negocio[nid][nComprado] == 1) return _Mensaje(playerid, 0, "553", "Este negocio ya tiene dueño.");
            if(user[playerid][jNegocioKey] == INVALID_NEGOCIO_ID) {
			    if (ComprobarDineroJ(playerid) >= i_Negocio[nid][nPrecio]) {
                    DarDineroGC(playerid, -i_Negocio[nid][nPrecio]);
                    user[playerid][jNegocioKey] = nid;
                    i_Negocio[nid][nProductos] = 500;
                    i_Negocio[nid][nComprado] = 1;
                    strmid(i_Negocio[nid][nDueno], NombreRJugador(playerid), 0, strlen(NombreRJugador(playerid)), 255);
                    _NegocioP(nid);
                    _Mensaje(playerid, 2, "0", "Felicitaciones!, has comprado este negocio.");
                    format(string, sizeof(string), "Registros: %s ha comprado el negocio id %d.", NombreRJugador(playerid), nid);
                    Log("Registros/Negocios.log", string);
                    save_Negocio(nid);
                    GuardarCuenta(playerid);
                    user[playerid][jTiempos][7] = 250;
                    return 1;
                } else _Mensaje(playerid, 0, "555", "No tienes fondos suficientes para comprarte este negocio.");
            } else if (user[playerid][jPremium] == 0 || user[playerid][jPremium] == 1) _Mensaje(playerid, 0, "578", "Ya posees un negocio en la ranura 1.");
			if (user[playerid][jPremium] >= 2) {
                if(user[playerid][jNegocioKey2] == INVALID_NEGOCIO_ID) {
			        if (ComprobarDineroJ(playerid) >= i_Negocio[nid][nPrecio]) {
                        DarDineroGC(playerid, -i_Negocio[nid][nPrecio]);
                        user[playerid][jNegocioKey2] = nid;
                        i_Negocio[nid][nProductos] = 500;
                        i_Negocio[nid][nComprado] = 1;
                        strmid(i_Negocio[nid][nDueno], NombreRJugador(playerid), 0, strlen(NombreRJugador(playerid)), 255);
                        _NegocioP(nid);
                        _Mensaje(playerid, 2, "0", "Felicitaciones!, has comprado este negocio.");
                        format(string, sizeof(string), "Registros: %s ha comprado el negocio id %d.", NombreRJugador(playerid), nid);
                        Log("Registros/Negocios.log", string);
                        save_Negocio(nid);
                        GuardarCuenta(playerid);
                        user[playerid][jTiempos][7] = 250;
                        return 1;
                    } else _Mensaje(playerid, 0, "555", "No tienes fondos suficientes para comprarte este negocio.");
                } else _Mensaje(playerid, 0, "578", "Ya posees un negocio en la ranura 2.");
            }
        }
    }
    return 1;
}

CMD:rellenarneg(playerid, params[]) {
    if (!IsPlayerConnected(playerid)) _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
    if (user[playerid][jAdmin] < 5) return _Mensaje(playerid, 0, "559", "Tú no tienes acceso a el comando /Abrirnegocios.");
    for (new nid = 0; nid < MAX_NEGOCIOS; nid++) {
        if (i_Negocio[nid][nComprado] == 0) i_Negocio[nid][nProductos] = 5000;
        else if (i_Negocio[nid][nComprado] == 1) i_Negocio[nid][nProductos] += 1000;
        TextoPantalla(playerid, "~g~Negocios rellenados", 3500, 3);
    }
    return 1;
}

CMD:crearnegocio(playerid, params[]) {
    new tipo, string[128];
    if (!IsPlayerConnected(playerid)) return _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
    if (user[playerid][jAdmin] < 5) return _Mensaje(playerid, 0, "556", "Tú no tienes acceso a el comando /Crearnegocio.");
    if (sscanf(params, "i", tipo)) {
        _Mensaje(playerid, 3, "0", "/crearnegocio [opcion ID]");
        _Mensaje(playerid, 1, "ID_1: 24-7 | ID_2: Ropa | ID_3: Restaurante | ID_4: Cluckin bell", "Tipos:");
        _Mensaje(playerid, 1, "ID_5: Pizzeria | ID_6: Burger Shot | ID_7: Ammunation | ID_8: Peluquería", "Tipos:");
        _Mensaje(playerid, 1, "ID_9: Sex shop | ID_10: Gasolinera | ID_11_ Electrónica | ID_12: Bar", "Tipos:");
        _Mensaje(playerid, 1, "ID_13: Ferreteria | ID_14: Alhambra | ID_15: Strip | ID_16: Club privado", "Tipos:");
        _Mensaje(playerid, 1, "ID_17: Empeño", "Tipos:");
        return 1;
    }
    if (tipo < 1 || tipo > 17) return _Mensaje(playerid, 0, "557", "Los negocios están entre 1 - 16.");
    for (new nid = 0; nid < MAX_NEGOCIOS; nid++) {
        if (!i_Negocio[nid][nTipo]) {
            new Float: X, Float: Y, Float: Z, Float: R;
            GetPlayerPos(playerid, X, Y, Z);
            GetPlayerFacingAngle(playerid, R);
            i_Negocio[nid][nTipo] = tipo;
            i_Negocio[nid][nSeguro] = 1;
            format(i_Negocio[nid][nDueno], 32, "enventa");
            GetPlayerPos(playerid, i_Negocio[nid][nExteriorX], i_Negocio[nid][nExteriorY], i_Negocio[nid][nExteriorZ]);
            GetPlayerFacingAngle(playerid, i_Negocio[nid][nExteriorR]);
            i_Negocio[nid][nProductos] = 5000;
            i_Negocio[nid][nComprado] = 0;
            if (tipo == 1) { // 24/7
                i_Negocio[nid][nInteriorX] = -27.3743;
                i_Negocio[nid][nInteriorY] = -57.7146;
                i_Negocio[nid][nInteriorZ] = 1003.5469;
                i_Negocio[nid][nInteriorR] = 357.5915;
                i_Negocio[nid][nPrecio] = 126020;
                i_Negocio[nid][nInterior] = 6;
                format(i_Negocio[nid][nNombre], 32, "24-7");
            } else if (tipo == 2) { // Ropa
                i_Negocio[nid][nInteriorX] = 207.7245;
                i_Negocio[nid][nInteriorY] = -110.9889;
                i_Negocio[nid][nInteriorZ] = 1005.1328;
                i_Negocio[nid][nInteriorR] = 356.3849;
                i_Negocio[nid][nPrecio] = 148600;
                i_Negocio[nid][nInterior] = 15;
                format(i_Negocio[nid][nNombre], 32, "Ropa");
            } else if (tipo == 3) { // Restaurante
                i_Negocio[nid][nInteriorX] = -794.9186;
                i_Negocio[nid][nInteriorY] = 489.2863;
                i_Negocio[nid][nInteriorZ] = 1376.1953;
                i_Negocio[nid][nInteriorR] = 0.8184;
                i_Negocio[nid][nPrecio] = 70870;
                i_Negocio[nid][nInterior] = 1;
                format(i_Negocio[nid][nNombre], 32, "Restaurante");
            } else if (tipo == 4) { // Cluckin bell
                i_Negocio[nid][nInteriorX] = 364.9697;
                i_Negocio[nid][nInteriorY] = -11.2050;
                i_Negocio[nid][nInteriorZ] = 1001.8516;
                i_Negocio[nid][nInteriorR] = 356.3849;
                i_Negocio[nid][nPrecio] = 58870;
                i_Negocio[nid][nInterior] = 9;
                format(i_Negocio[nid][nNombre], 32, "Cluckin bell");
            } else if (tipo == 5) { // Pizzeria
                i_Negocio[nid][nInteriorX] = 372.3343;
                i_Negocio[nid][nInteriorY] = -133.2180;
                i_Negocio[nid][nInteriorZ] = 1001.4922;
                i_Negocio[nid][nInteriorR] = 356.3849;
                i_Negocio[nid][nPrecio] = 62060;
                i_Negocio[nid][nInterior] = 5;
                format(i_Negocio[nid][nNombre], 32, "Pizzeria");
            } else if (tipo == 6) { // BurgerShot
                i_Negocio[nid][nInteriorX] = 363.4130;
                i_Negocio[nid][nInteriorY] = -74.5787;
                i_Negocio[nid][nInteriorZ] = 1001.5078;
                i_Negocio[nid][nInteriorR] = 356.3849;
                i_Negocio[nid][nPrecio] = 48700;
                i_Negocio[nid][nInterior] = 10;
                format(i_Negocio[nid][nNombre], 32, "Burger Shot");
            } else if (tipo == 7) { // Ammu-Nation
                i_Negocio[nid][nInteriorX] = 315.2409;
                i_Negocio[nid][nInteriorY] = -143.3522;
                i_Negocio[nid][nInteriorZ] = 999.6016;
                i_Negocio[nid][nInteriorR] = 355.6529;
                i_Negocio[nid][nPrecio] = 720860;
                i_Negocio[nid][nInterior] = 7;
                format(i_Negocio[nid][nNombre], 32, "Ammunation");
            } else if (tipo == 8) { // Peluquería
                i_Negocio[nid][nInteriorX] = 412.0487;
                i_Negocio[nid][nInteriorY] = -54.3948;
                i_Negocio[nid][nInteriorZ] = 1001.9000;
                i_Negocio[nid][nInteriorR] = 0.0000;
                i_Negocio[nid][nPrecio] = 45000;
                i_Negocio[nid][nInterior] = 12;
                format(i_Negocio[nid][nNombre], 32, "Peluquería");
            } else if (tipo == 9) { // Sex Shop
                i_Negocio[nid][nInteriorX] = -100.6073;
                i_Negocio[nid][nInteriorY] = -24.8283;
                i_Negocio[nid][nInteriorZ] = 1000.7188;
                i_Negocio[nid][nInteriorR] = 358.8331;
                i_Negocio[nid][nPrecio] = 32500;
                i_Negocio[nid][nInterior] = 3;
                format(i_Negocio[nid][nNombre], 32, "Tienda Sexual");
            } else if (tipo == 10) { // Gasolinera
                i_Negocio[nid][nInteriorX] = -27.2924;
                i_Negocio[nid][nInteriorY] = -31.7512;
                i_Negocio[nid][nInteriorZ] = 1003.5573;
                i_Negocio[nid][nInteriorR] = 7.7609;
                i_Negocio[nid][nPrecio] = 57803;
                i_Negocio[nid][nInterior] = 4;
                format(i_Negocio[nid][nNombre], 32, "Gasolinera");
            } else if (tipo == 11) { // Electrónica
                i_Negocio[nid][nInteriorX] = 161.4084;
                i_Negocio[nid][nInteriorY] = -97.1046;
                i_Negocio[nid][nInteriorZ] = 1001.8047;
                i_Negocio[nid][nInteriorR] = 358.9875;
                i_Negocio[nid][nPrecio] = 246780;
                i_Negocio[nid][nInterior] = 18;
                format(i_Negocio[nid][nNombre], 32, "Electrónica");
            } else if (tipo == 12) { // Bar
                i_Negocio[nid][nInteriorX] = 501.8288;
                i_Negocio[nid][nInteriorY] = -67.5071;
                i_Negocio[nid][nInteriorZ] = 998.7578;
                i_Negocio[nid][nInteriorR] = 180.0000;
                i_Negocio[nid][nPrecio] = 77350;
                i_Negocio[nid][nInterior] = 11;
                format(i_Negocio[nid][nNombre], 32, "Bar");
            } else if (tipo == 13) { // Ferreteria
                i_Negocio[nid][nInteriorX] = 296.8466;
                i_Negocio[nid][nInteriorY] = -111.8738;
                i_Negocio[nid][nInteriorZ] = 1001.5156;
                i_Negocio[nid][nInteriorR] = 13.0877;
                i_Negocio[nid][nPrecio] = 79750;
                i_Negocio[nid][nInterior] = 6;
                format(i_Negocio[nid][nNombre], 32, "Ferretería");
            } else if (tipo == 14) { // Alhambra
                i_Negocio[nid][nInteriorX] = 493.4698;
                i_Negocio[nid][nInteriorY] = -24.9232;
                i_Negocio[nid][nInteriorZ] = 1000.6719;
                i_Negocio[nid][nInteriorR] = 4.1157;
                i_Negocio[nid][nPrecio] = 420750;
                i_Negocio[nid][nInterior] = 17;
                format(i_Negocio[nid][nNombre], 32, "Alhambra");
            } else if (tipo == 15) { // Strip club
                i_Negocio[nid][nInteriorX] = 1204.8970;
                i_Negocio[nid][nInteriorY] = -13.8423;
                i_Negocio[nid][nInteriorZ] = 1000.9219;
                i_Negocio[nid][nInteriorR] = 359.9443;
                i_Negocio[nid][nPrecio] = 250750;
                i_Negocio[nid][nInterior] = 2;
                format(i_Negocio[nid][nNombre], 32, "Strip club");
            } else if (tipo == 16) { // Club private
                i_Negocio[nid][nInteriorX] = 1212.0414;
                i_Negocio[nid][nInteriorY] = -25.8775;
                i_Negocio[nid][nInteriorZ] = 1000.9531;
                i_Negocio[nid][nInteriorR] = 175.7025;
                i_Negocio[nid][nPrecio] = 235000;
                i_Negocio[nid][nInterior] = 3;
                format(i_Negocio[nid][nNombre], 32, "Club private");
            } else if (tipo == 17) { // Empeño
                i_Negocio[nid][nInteriorX] = -2240.7686;
                i_Negocio[nid][nInteriorY] = 137.2062;
                i_Negocio[nid][nInteriorZ] = 1035.4141;
                i_Negocio[nid][nInteriorR] = 270.4910;
                i_Negocio[nid][nPrecio] = 237300;
                i_Negocio[nid][nInterior] = 6;
                format(i_Negocio[nid][nNombre], 32, "Tienda empeno");
            }
            _NegocioP(nid);
            format(string, sizeof(string), "Registros: %s ha creado el negocio ID %d.", NombreRJugador(playerid), nid);
            Log("Registros/Negocios.log", string);
            save_Negocio(nid);
            nid = MAX_NEGOCIOS;
        }
    }
    return 1;
}

CMD:borrarnegocio(playerid, params[]) {
	new id, string[128];
	if (user[playerid][jAdmin] < 5) return _Mensaje(playerid, 0, "558", "Tú no tienes acceso a el comando /Borrarnegocio.");
	if (sscanf(params, "i", id)) return _Mensaje(playerid, 3, "0", "/borrarnegocio [negocio id]");
	if (!i_Negocio[id][nTipo]) return _Mensaje(playerid, 0, "548", "Id negocio invalida.");
	foreach(Player, i) {
		if (IsPlayerConnected(i)) {
			if (user[i][jNegocioKey] == id) {
				user[i][jNegocioKey] = INVALID_NEGOCIO_ID;
				format(string, sizeof(string), "Super Admin %s ha vendido tu negocio ranura 1 (STAFF).", NombreRJugador(playerid));
				_Mensaje(i, 4, "b00000", string);
			} else if (user[i][jNegocioKey2] == id) {
				user[i][jNegocioKey2] = INVALID_NEGOCIO_ID;
				format(string, sizeof(string), "Super Admin %s ha vendido tu negocio ranura 2 (STAFF).", NombreRJugador(playerid));
				_Mensaje(i, 4, "b00000", string);
			} else if (user[i][jNegocioLlaves] == id) user[i][jNegocioLlaves] = INVALID_CASA_ID;
		}
	}
	format(i_Negocio[id][nNombre], 32, "nada");
	format(i_Negocio[id][nDueno], 32, "enventa");
	i_Negocio[id][nTipo] = 0;
	i_Negocio[id][nSeguro] = 0;
	i_Negocio[id][nComprado] = 0;
	i_Negocio[id][nExteriorX] = 0.0;
	i_Negocio[id][nExteriorY] = 0.0;
	i_Negocio[id][nExteriorZ] = 0.0;
	i_Negocio[id][nExteriorR] = 0.0;
	i_Negocio[id][nInteriorX] = 0.0;
	i_Negocio[id][nInteriorY] = 0.0;
	i_Negocio[id][nInteriorZ] = 0.0;
	i_Negocio[id][nInteriorR] = 0.0;
	i_Negocio[id][nDinero] = 0;
	i_Negocio[id][nProductos] = 0;
	i_Negocio[id][nPrecio] = 0;
	i_Negocio[id][nInterior] = 0;
	i_Negocio[id][nCuotas] = 0;
	i_Negocio[id][nPedido] = 0;
	DestroyDynamicPickup(i_Negocio[id][nIcono]);
	_Negocio2P(id);
	save_Negocio(id);
	return 1;
}

CMD:nseguro(playerid)
{
	new nid = user[playerid][jNegocioKey], nid2 = user[playerid][jNegocioKey2], nid3 = user[playerid][jNegocioLlaves], string[128];
    if (nid != INVALID_NEGOCIO_ID && (_enPos(playerid, 3.0, i_Negocio[nid][nExteriorX], i_Negocio[nid][nExteriorY], i_Negocio[nid][nExteriorZ]) || _enPos(playerid, 3.0, i_Negocio[nid][nInteriorX], i_Negocio[nid][nInteriorY], i_Negocio[nid][nInteriorZ]))) {
    	if (!i_Negocio[nid][nSeguro])
		{
			if (i_Negocio[nid][EnLlamas] == 1) return _Mensaje(playerid, 0, "560", "No puedes abrir un negocio en llamas.");
	        if (i_Negocio[nid][nCuotas] != 0) {
	        	format(string, sizeof(string), "El gobierno ha clausurado tu negocio, debes pagar una cuota de $%d.", i_Negocio[nid][nCuotas]);
	            _Mensaje(playerid, 4, "BA1E00", string);
	            return 1;
	        }
            i_Negocio[nid][nSeguro] = 1;
            AccionesRol(playerid, 0, "saca sus llaves de negocio y lo abre.");
            TextoPantalla(playerid, "~g~Negocio abierto", 3500, 1);
        }
		else if (i_Negocio[nid][nSeguro])
		{
            i_Negocio[nid][nSeguro] = 0;
            AccionesRol(playerid, 0, "saca sus llaves de negocio y lo cierra.");
            TextoPantalla(playerid, "~r~Negocio Cerrado", 3500, 1);
        }
        save_Negocio(nid);
    } else if (nid2 != INVALID_NEGOCIO_ID && (_enPos(playerid, 3.0, i_Negocio[nid2][nExteriorX], i_Negocio[nid2][nExteriorY], i_Negocio[nid2][nExteriorZ]) || _enPos(playerid, 3.0, i_Negocio[nid2][nInteriorX], i_Negocio[nid2][nInteriorY], i_Negocio[nid2][nInteriorZ]))) {
        if (!i_Negocio[nid2][nSeguro])
		{
			if (i_Negocio[nid2][EnLlamas] == 1) return _Mensaje(playerid, 0, "560", "No puedes abrir un negocio en llamas.");
	        if (i_Negocio[nid2][nCuotas] != 0) {
	        	format(string, sizeof(string), "El gobierno ha clausurado tu negocio, debes pagar una cuota de $%d.", i_Negocio[nid2][nCuotas]);
	            _Mensaje(playerid, 4, "BA1E00", string);
	            return 1;
	        }
            i_Negocio[nid2][nSeguro] = 1;
            AccionesRol(playerid, 0, "saca sus llaves de negocio y lo abre.");
            TextoPantalla(playerid, "~g~Negocio abierto", 3500, 1);
        }
		else if (i_Negocio[nid2][nSeguro])
		{
            i_Negocio[nid2][nSeguro] = 0;
            AccionesRol(playerid, 0, "saca sus llaves de negocio y lo cierra.");
            TextoPantalla(playerid, "~r~Negocio Cerrado", 3500, 1);
        }
        save_Negocio(nid2);
    } else if (nid3 != INVALID_NEGOCIO_ID && (_enPos(playerid, 3.0, i_Negocio[nid3][nExteriorX], i_Negocio[nid3][nExteriorY], i_Negocio[nid3][nExteriorZ]) || _enPos(playerid, 3.0, i_Negocio[nid3][nInteriorX], i_Negocio[nid3][nInteriorY], i_Negocio[nid3][nInteriorZ]))) {
        if (!i_Negocio[nid3][nSeguro])
		{
			if (i_Negocio[nid3][EnLlamas] == 1) return _Mensaje(playerid, 0, "560", "No puedes abrir un negocio en llamas.");
	        if (i_Negocio[nid3][nCuotas] != 0) {
	        	format(string, sizeof(string), "El gobierno ha clausurado tu negocio, debes pagar una cuota de $%d.", i_Negocio[nid3][nCuotas]);
	            _Mensaje(playerid, 4, "BA1E00", string);
	            return 1;
	        }
            i_Negocio[nid3][nSeguro] = 1;
            AccionesRol(playerid, 0, "saca sus llaves de negocio y lo abre.");
            TextoPantalla(playerid, "~g~Negocio abierto", 3500, 1);
        }
		else if (i_Negocio[nid3][nSeguro])
		{
            i_Negocio[nid3][nSeguro] = 0;
            AccionesRol(playerid, 0, "saca sus llaves de negocio y lo cierra.");
            TextoPantalla(playerid, "~r~Negocio Cerrado", 3500, 1);
        }
        save_Negocio(nid3);
    } else _Mensaje(playerid, 0, "560", "No tienes un negocio o no estás cerca de la puerta para hacer esto.");
    return 1;
}

CMD:dados(playerid)
{
    new num = random(10) + 2, string[128];
    if(user[playerid][jm_Derecha] != 83 && user[playerid][jm_Izquierda] != 83){ _Mensaje(playerid, 0, "9", "No tienes unos dados en ninguna mano."); return 1;}
    if(!CheckTimer(10, IntentarD[playerid])) {
        AccionesRol(playerid, 1, "arrojó sus dados.");
        format(string, sizeof(string), "[**%d | %s] Ha salido la cantidad de %d en los dados que tiró.", playerid, NombreJugador(playerid), num);
        ProxDetector(25.0, playerid, string, 0x9EC73DAA, 0x9EC73DAA, 0x9EC73DAA, 0x9EC73DAA, 0x9EC73DAA);
        IntentarD[playerid] = gettime();
    } else {
        format(string, 144, "Faltan %d segundos para que puedas usar este comando.", CheckTimer(10, IntentarD[playerid]));
        _Mensaje(playerid, 0, "536", string);
    }
    return 1;
}
CMD:moneda(playerid)
{
    new coin = random(2) + 1, string[90], coinname[10];
    if (coin == 1) coinname = "cara";
    else coinname = "cruz";
    format(string, sizeof(string), "%s lanza una moneda al aire y cae %s", NombreJugador(playerid), coinname);
    ProxDetector(10.0, playerid, string, 0xACC97F22A, 0xACC97F22A, 0xACC97F22A, 0xACC97F22A, 0xACC97F22A);
    return 1;
}

CMD:multar(playerid, params[]) {
    new string[256];
    if (!Es_Faccion(playerid, 1)) return _Mensaje(playerid, 0, "1", "No eres policía.");
    if (user[playerid][jDivision] == 0 || user[playerid][jDivision] == 3) return _Mensaje(playerid, 0, "229", "No eres de la división PD o SD.");
	if (EnServicioPD[playerid] == 0) return _Mensaje(playerid, 0, "1", "No estas en servicio.");
    if (!sscanf(params, "dds[128]", params[0], params[1], params[2])) {
        if (params[1] < 0 || params[1] > 2000) return _Mensaje(playerid, 0, "1", "El máximo de multa son 2,000$");
        if (IsPlayerConnected(params[0])) {
            if (FacturaMulta[playerid] == 1) return _Mensaje(playerid, 0, "1", "Este jugador ya tiene una petición pendiente");
            if (!CercaDelWeon(8.0, playerid, params[0])) return _Mensaje(playerid, 0, "1", "Muy lejos de el jugador.");
            if (ComprobarDineroJ(params[0]) < params[1]) {
                format(string, sizeof(string), "El infractor no tiene %d$ para pagar la multa.", params[1]);
                return _Mensaje(playerid, 2, "0", string);
            } else {
                _Mensaje(params[0], 4, "ffffff", "");
                _Mensaje(params[0], 4, "00c200", "Estado de San Andreas");
                format(string, sizeof(string), "Demandante:{ffffff} %s", NombreJugador(playerid));
                _Mensaje(params[0], 4, "00A2ff", string);
                format(string, sizeof(string), "Infracción:{ffffff} %s", params[2]);
                _Mensaje(params[0], 4, "00A2ff", string);
                format(string, sizeof(string), "Multa:{ffffff} %d$", params[1]);
                _Mensaje(params[0], 4, "00A2ff", string);
                _Mensaje(params[0], 4, "ffffff", "");
                _Mensaje(playerid, 4, "ffffff", "");
                _Mensaje(playerid, 2, "0", "Espera la respuesta del sujeto");
                _Mensaje(params[0], 2, "0", "Te han multado. Utilize [/aceptar ó /cancelar] para pagar la multa.");
                MultaOfrecer[params[0]] = playerid;
                MultaPrecio[params[0]] = params[1];
                FacturaMulta[params[0]] = 1;
            }
        } else _Mensaje(playerid, 0, "12", "Esa ID es inválida.");
    } else _Mensaje(playerid, 3, "0", "/multar [id jugador] [precio] [razón]");
    return 1;
}

_D2negocio(playerid, Float: distancia) {
	if (_enPos(playerid, distancia, -27.3743,-57.7146,1003.5469)) return 1; //24/7
	else if (_enPos(playerid, distancia, -794.9186,489.2863,1376.1953)) return 1; //restaurante
	else if (_enPos(playerid, distancia, 364.9697,-11.2050,1001.8516)) return 1; //cluckin bell
	else if (_enPos(playerid, distancia, 372.3343,-133.2180,1001.4922)) return 1; //Pizzeria
	else if (_enPos(playerid, distancia, 363.4130,-74.5787,1001.5078)) return 1; //Burger Shot
	else if (_enPos(playerid, distancia, 315.2409,-143.3522,999.6016)) return 1; //Ammunation
	else if (_enPos(playerid, distancia, 227.4995,-8.1626,1002.2109)) return 1; //Peluquería
	else if (_enPos(playerid, distancia, -100.6073,-24.8283,1000.7188)) return 1; //Tienda Sexual
	else if (_enPos(playerid, distancia, -27.2924,-31.7512,1003.5573)) return 1; //Gasolinera
	else if (_enPos(playerid, distancia, 161.4084,-97.1046,1001.8047)) return 1; //Electrónica
	else if (_enPos(playerid, distancia, 501.8288,-67.5071,998.7578)) return 1; //Bar
	else if (_enPos(playerid, distancia, 296.8466,-111.8738,1001.5156)) return 1; //Ferretería
	else if (_enPos(playerid, distancia, 493.4698,-24.9232,1000.6719)) return 1; //Alhambra
	else if (_enPos(playerid, distancia, 1204.8970,-13.8423,1000.9219)) return 1; //Strip club
	else if (_enPos(playerid, distancia, 1212.0414,-25.8775,1000.9531)) return 1; //Club private
	else if (_enPos(playerid, distancia, -2237.2800,130.3547,1035.4141)) return 1; //tienda empeno
    return 0;
}

_Dnegocio(playerid, Float: distancia)
{
	if (_enPos(playerid, distancia, -23.4566, -55.6323, 1003.5469)) return 1; // 24/7
	else if (_enPos(playerid, distancia, 207.4873, -100.3286, 1005.2578)) return 1; // ropa
	else if (_enPos(playerid, distancia, -785.9495, 500.0739, 1371.7422)) return 1; // restaurante
	else if (_enPos(playerid, distancia, 371.4320, -6.0194, 1001.8589)) return 1; // cluckin bell
	else if (_enPos(playerid, distancia, 375.2599, -118.8117, 1001.4995)) return 1; // pizzeriia
	else if (_enPos(playerid, distancia, 377.3137, -67.4423, 1001.5078)) return 1; // habmurer
	else if (_enPos(playerid, distancia, 308.3979, -141.4581, 999.6016)) return 1; // ammu
	else if (_enPos(playerid, distancia, 415.1097, -51.4637, 1001.9000)) return 1; //peluquería
	else if (_enPos(playerid, distancia, -103.8922, -22.6771, 1000.7188)) return 1; // sex shop
	else if (_enPos(playerid, distancia, -30.7083, -29.6858, 1003.5078)) return 1; // gasolinera
	else if (_enPos(playerid, distancia, 161.3464, -83.5198, 1001.8989)) return 1; // electronica
	else if (_enPos(playerid, distancia, 497.8823, -75.9014, 998.7012)) return 1; // bar
	else if (_enPos(playerid, distancia, 449.7225, -83.9301, 999.5547)) return 1; // restaurante 2
	else if (_enPos(playerid, distancia, 290.2224, -109.6350, 1001.5685)) return 1; // Ferreteria
	else if (_enPos(playerid, distancia, 499.9653,-19.0419,1000.6719)) return 1; // Alhambra
	else if (_enPos(playerid, distancia, 1214.8792,-13.2081,1000.9219)) return 1; // Strip club
	else if (_enPos(playerid, distancia, 1207.2340,-30.3012,1000.9531)) return 1; // Club private
	else if (_enPos(playerid, distancia, -2237.2800,130.3547,1035.4141)) return 1; // tienda empeno
	return 0;
}

CMD:empeno(playerid) return cmd_comprar(playerid);
CMD:comprar(playerid)
{
	new nid = GetPlayerVirtualWorld(playerid) - 300;
	if (_Dnegocio(playerid, 3.0))
	{
		if (GetPlayerVirtualWorld(playerid) < 300) return _Mensaje(playerid, 0, "545", "No estás exactamente en el interior del negocio por tu VW.");
		IDNegocio[playerid] = nid;

		if (i_Negocio[nid][nTipo] == 0) return 1;
		else if (i_Negocio[nid][nTipo] == 1) // 24-7
		{
            if (i_Negocio[nid][nProductos] < 1) return _Mensaje(playerid, 0, "564", "Este negocio está actualmente sin productos.");
            Dialog(playerid, D_TIENDA247, DIALOG_STYLE_TABLIST_HEADERS, "Productos de venta", "Producto\tPrecio\n\
            Recargar saldo\n\
            Teléfono(número)\t$6\n\
            Modelos de teléfono\t$15\n\
            Loteria\t$2\n\
            Cigarros\t$4\n\
            Cámara\t$12\n\
            Encendedor\t$3\n\
            Sprunk\t$4\n\
            Agua\t$1\n\
            Bolsa de doritos\t$2\n\
            Bolsa de patatas\t$2\n\
            Bolsa de nachos\t$2\n\
            Dados\t$3\n\
			Codeine\t$3", "Seleccionar", "Cancelar");
            save_Negocio(nid);
        }
		else if (i_Negocio[nid][nTipo] == 2) // Ropa
		{
            if (i_Negocio[nid][nProductos] < 1) return _Mensaje(playerid, 0, "564", "Este negocio está actualmente sin productos.");
            Dialog(playerid, D_ROPA, DIALOG_STYLE_MSGBOX, "Productos de venta", "Puedes comprar skins o accesorios.", "Skins", "Accesorios");
            save_Negocio(nid);
        }
		else if (i_Negocio[nid][nTipo] == 3) { // Restaurante
            if (i_Negocio[nid][nProductos] < 1) return _Mensaje(playerid, 0, "564", "Este negocio está actualmente sin productos.");
            Dialog(playerid, D_RESTAURANTES, DIALOG_STYLE_TABLIST_HEADERS, "Productos de venta", "Producto\tPrecio\n\
            Botella de cerveza\t$2\n\
            Copa de vino\t$3\n\
            Vaso de whisky\t$4\n\
            Vaso de ron\t$5\n\
            Kids meal\t$3\n\
            Bolsa patatas\t$2\n\
            Burrito\t$2\n\
            Pizza jamón y queso\t$4\n\
            Parilla vegetariana\t$2", "Seleccionar", "Cancelar");
            save_Negocio(nid);
        } else if (i_Negocio[nid][nTipo] == 4) { //CluckinBell
            if (i_Negocio[nid][nProductos] < 1) return _Mensaje(playerid, 0, "564", "Este negocio está actualmente sin productos.");
            Dialog(playerid, D_CLUCKINBELL, DIALOG_STYLE_TABLIST_HEADERS, "Productos de venta", "Producto\tPrecio\n\
            The little\t$2\n\
            Cluker\t$2\n\
            Kids meal\t$3\n\
            Cluker mediana\t$4\n\
            Super cluker\t$5\n\
            Cluker' bell + cocacola\t$3\n\
            Especial bell\t$4", "Seleccionar", "Cancelar");
            save_Negocio(nid);
        } else if (i_Negocio[nid][nTipo] == 5) { //Pizzeria
            if (i_Negocio[nid][nProductos] < 1) return _Mensaje(playerid, 0, "564", "Este negocio está actualmente sin productos.");
            Dialog(playerid, D_PIZZASTACK, DIALOG_STYLE_TABLIST_HEADERS, "Productos de venta", "Producto\tPrecio\n\
            The bustert\t$2\n\
            The double d-lux\t$3\n\
            The full rack\t$3\n\
            Pizza jamón y queso\t$4\n\
            Pizza completa + cocacola\t$5\n\
            Plato del hoy\t$4\n\
            Especial pizza familiar\t$6", "Seleccionar", "Cancelar");
            save_Negocio(nid);
        } else if (i_Negocio[nid][nTipo] == 6) { //BurgerShot
            if (i_Negocio[nid][nProductos] < 1) return _Mensaje(playerid, 0, "564", "Este negocio está actualmente sin productos.");
            Dialog(playerid, D_BURGERSHOT, DIALOG_STYLE_TABLIST_HEADERS, "Productos de venta", "Producto\tPrecio\n\
            Simple shot\t$2\n\
            Doble barreled\t$3\n\
            Buckshot especial\t$4\n\
            Parilla vegetariana\t$2\n\
            Filete de mariscos\t$5\n\
            Pollo bits\t$3", "Seleccionar", "Cancelar");
            save_Negocio(nid);
        } else if (i_Negocio[nid][nTipo] == 7) { //Ammu-Nation
			if (user[playerid][jNegocioKey] != nid) if (user[playerid][jLicencias][0] == 0) return _Mensaje(playerid, 0, "565", "No tienes licencia de armas.");
			if (i_Negocio[nid][nProductos] < 1) return _Mensaje(playerid, 0, "564", "Este negocio está actualmente sin productos.");
			Dialog(playerid, D_AMMUNATION, DIALOG_STYLE_TABLIST_HEADERS, "Productos de venta", "Producto\tPrecio\n\
			Navaja\t$12\n\
			45.Glock\t$370\n\
			Rifle Weihrauch HW 97\t$1.500\n\
			Chaleco\t$500\n\
			Cartuchos/Cargadores", "Seleccionar", "Cancelar");
			save_Negocio(nid);
		}
		else if (i_Negocio[nid][nTipo] == 8) //Peluquería
		{
            if (i_Negocio[nid][nProductos] < 1) return _Mensaje(playerid, 0, "564", "Este negocio está actualmente sin productos.");

			Dialog(playerid, D_Peluqueria1, DIALOG_STYLE_MSGBOX, "Productos de venta", "\n{ffffff}A continuación debes elegir la..\nranura donde quieres el {00a2ff}accesorio{ffffff}.\n\n   - Recuerda que cada {00a2ff}accesorio{ffffff} tiene un costo de {00c200}25{ffffff}$.\n\n", "Continuar", "Cancelar"); //- Accesorios

			save_Negocio(nid);
        }
		else if (i_Negocio[nid][nTipo] == 9) { //SexShop
            if (i_Negocio[nid][nProductos] < 1) return _Mensaje(playerid, 0, "564", "Este negocio está actualmente sin productos.");
            Dialog(playerid, D_SEXSHOP, DIALOG_STYLE_LIST, "Productos de venta", "{FFFFFF}Ropa de mujer\nRopa de hombre\nJuguetes de diversión", "Seleccionar", "Cancelar");
            save_Negocio(nid);
        } else if (i_Negocio[nid][nTipo] == 10) { //Gasolinera
            if (i_Negocio[nid][nProductos] < 1) return _Mensaje(playerid, 0, "564", "Este negocio está actualmente sin productos.");
            Dialog(playerid, D_GASOLINERA, DIALOG_STYLE_TABLIST_HEADERS, "Productos de venta", "Producto\tPrecio\n\
            Lata gas\t$3\n\
            Bolsa patatas\t$2\n\
            Refresco\t$2\n\
            Cigarros\t$3\n\
            Encendedor\t$4\n\
            Piezas recambio\t$50", "Seleccionar", "Cancelar");
            save_Negocio(nid);
        } else if (i_Negocio[nid][nTipo] == 11) { //Electronica
            if (i_Negocio[nid][nProductos] < 1) return _Mensaje(playerid, 0, "564", "Este negocio está actualmente sin productos.");
            Dialog(playerid, D_ELECTRONICA, DIALOG_STYLE_TABLIST_HEADERS, "Productos de venta", "Producto\tPrecio\n\
            Teléfono(número)\t$6\n\
            Teléfono(objeto)\t$10\n\
            Cámara\t$12\n\
            Equipo sonido\t$40\n\
            Seguro alarma\t$50\n\
            Stereo music\t$100\n\
            Seguro industrial\t$80\n\
			Radio portable\t$50", "Seleccionar", "Cancelar");
            save_Negocio(nid);
        } else if (i_Negocio[nid][nTipo] == 12) { //Bar
            if (i_Negocio[nid][nProductos] < 1) return _Mensaje(playerid, 0, "564", "Este negocio está actualmente sin productos.");
            Dialog(playerid, D_NEG_CLUBS, DIALOG_STYLE_TABLIST_HEADERS, "Productos de venta", "Producto\tPrecio\n\
            Botella de agua\t$4\n\
            Copa de vino\t$15\n\
            Vaso de whisky\t$20\n\
            Vaso de ron\t$14\n\
			Cerveza\t$8\n\
            Botella de whisky\t$100\n\
            Caja de cigarros\t$20\n\
            Encendedor\t$10\n\
            Burrito\t$6", "Seleccionar", "Cancelar");
            save_Negocio(nid);
        } else if (i_Negocio[nid][nTipo] == 13) { //- Ferreteria
            if (i_Negocio[nid][nProductos] < 1) return _Mensaje(playerid, 0, "564", "Este negocio está actualmente sin productos.");
            Dialog(playerid, D_FERRETERIA, DIALOG_STYLE_TABLIST_HEADERS, "Productos de venta", "Producto\tPrecio\n\
            Lata de gasolina\t$3\n\
            Destornillador\t$2\n\
            Palanca\t$30\n\
            Chaleco naranja\t$25\n\
            Pala\t$5\n\
			Spray (para graffitis)\t$8\n\
			Caja vacía\t$50\n\
            Bate baseball\t$75\n\
			Cuchillo (plantas)\t$25", "Seleccionar", "Cancelar");
            save_Negocio(nid);
        } else if (i_Negocio[nid][nTipo] == 14) { //- Alhambra
            if (i_Negocio[nid][nProductos] < 1) return _Mensaje(playerid, 0, "564", "Este negocio está actualmente sin productos.");
            Dialog(playerid, D_NEG_CLUBS, DIALOG_STYLE_TABLIST_HEADERS, "Productos de venta", "Producto\tPrecio\n\
            Botella de agua\t$4\n\
            Copa de vino\t$15\n\
            Vaso de whisky\t$20\n\
            Vaso de ron\t$14\n\
			Cerveza\t$8\n\
            Botella de whisky\t$100\n\
            Caja de cigarros\t$20\n\
            Encendedor\t$10\n\
            Burrito\t$6\n\
			Botella de vino\t$85\n\
			Botella de ron\t$81", "Seleccionar", "Cancelar");
            save_Negocio(nid);
        } else if (i_Negocio[nid][nTipo] == 15) { //- Strip club
            if (i_Negocio[nid][nProductos] < 1) return _Mensaje(playerid, 0, "564", "Este negocio está actualmente sin productos.");
            Dialog(playerid, D_NEG_CLUBS, DIALOG_STYLE_TABLIST_HEADERS, "Productos de venta", "Producto\tPrecio\n\
            Botella de agua\t$4\n\
            Copa de vino\t$15\n\
            Vaso de whisky\t$20\n\
            Vaso de ron\t$14\n\
			Cerveza\t$8\n\
            Botella de whisky\t$100\n\
            Caja de cigarros\t$20\n\
            Encendedor\t$10\n\
            Burrito\t$6\n\
			Botella de vino\t$85\n\
			Botella de ron\t$81", "Seleccionar", "Cancelar");
            save_Negocio(nid);
        } else if (i_Negocio[nid][nTipo] == 16) { //- Club private
            if (i_Negocio[nid][nProductos] < 1) return _Mensaje(playerid, 0, "564", "Este negocio está actualmente sin productos.");
            Dialog(playerid, D_NEG_CLUBS, DIALOG_STYLE_TABLIST_HEADERS, "Productos de venta", "Producto\tPrecio\n\
            Botella de agua\t$4\n\
            Copa de vino\t$15\n\
            Vaso de whisky\t$20\n\
            Vaso de ron\t$14\n\
			Cerveza\t$8\n\
            Botella de whisky\t$100\n\
            Caja de cigarros\t$20\n\
            Encendedor\t$10\n\
            Burrito\t$6\n\
			Botella de vino\t$85\n\
			Botella de ron\t$81", "Seleccionar", "Cancelar");
            save_Negocio(nid);
        } else if (i_Negocio[nid][nTipo] == 17) { //- Tienda de empeño
            if (i_Negocio[nid][nProductos] < 1) return _Mensaje(playerid, 0, "564", "Este negocio se quedó sin dinero.");
            Dialog(playerid, D_Empeno, DIALOG_STYLE_TABLIST_HEADERS, "Empeño", "Objeto\tPaga\n\
            {18f88c}Retirar Objeto{ffffff}\t-\n\
            Rifle\t$1000\n\
            Teléfono\t$8\n\
            Chaleco\t$300\n\
			Radio\t$35\n\
            GPS\t$450\n\
            Cámara\t$10", "Seleccionar", "Cancelar");
            save_Negocio(nid);
        }
    } else _Mensaje(playerid, 0, "302", "No estás en un negocio.");
    return 1;
}

CMD:crearregalo(playerid, params[]) {
    if (user[playerid][jAdmin] >= 5) {
        if (IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "203", "No puedes usar este comando mientras estás en un vehículo.");
        new string[128], Float: Position[4];
        if (CajadeRegalo == 0) {
            GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
            GetPlayerFacingAngle(playerid, Position[3]);
            CajadeRegalo = CreateDynamicObject(19056, Position[0], Position[1], Position[2] - 0.4, 0.0, 0.0, Position[3], -1, -1, -1, 200.0);
            dynamicgift3DText = CreateDynamic3DTextLabel("Caja de regalo | /regalo.", 0xD6E1EBFF, Position[0], Position[1], Position[2] + 0.25, 8.0);
            SetPlayerPos(playerid, Position[0], Position[1], Position[2] + 3);
            format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s pusó un regalo temporal en su posición.", NombreRJugador(playerid));
            MensajeAdmin(string);
        } else {
            DestroyDynamicObject(CajadeRegalo);
            CajadeRegalo = 0;
            DestroyDynamic3DTextLabel(Text3D: dynamicgift3DText);
            format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s eliminó el regalo temporal.", NombreRJugador(playerid));
            MensajeAdmin(string);
        }
    } else _Mensaje(playerid, 0, "204", "Tú no tienes acceso a el comando /crearregalo.");
    return 1;
}

CMD:courieradmincolor(playerid)
{
    new nick[MAX_PLAYER_NAME];
    GetPlayerName(playerid, nick, sizeof(nick));
    if (!strcmp(nick, "Steve_Pugliese", true)) {
        foreach(Player, i) {
            SetPlayerColor(i, C_PLAYERBLANCO);
        }
    } else _Mensaje(playerid, 0, "468", "Tú no tienes acceso a el comando /darcolor, tu no eres CMBlock.");
    return 1;
}

CMD:courieradmin(playerid)
{
    new nick[MAX_PLAYER_NAME];
    GetPlayerName(playerid, nick, sizeof(nick));
    if (!strcmp(nick, "Steve_Pugliese", true))
	{
        user[playerid][jT_fabrica] = -1;
        user[playerid][jT_fabrica2] = -1;
        user[playerid][jI_fabrica] = 0;
        user[playerid][jI_fabrica2] = 0;
        user[playerid][jTiempos][1] = 0;
        user[playerid][jTiempos][2] = 0;
        user[playerid][jTiempos][3] = 0;
        user[playerid][jTiempos][4] = 0;
        user[playerid][jTiempos][5] = 0;
        user[playerid][jTiempos][6] = 0;
        user[playerid][jTiempos][7] = 0;
        user[playerid][jTiempos][8] = 0;
        user[playerid][jTiempos][9] = 0;
    	user[playerid][jTiempos][10] = 0;
    	user[playerid][jTiempos][11] = 0;
    	user[playerid][jTiempos][12] = 0;
    	user[playerid][jTiempos][13] = 0;
    	user[playerid][jTiempos][14] = 0;
    	user[playerid][jTiempos][16] = 0;
    	user[playerid][jTiempos][17] = 0;
    	user[playerid][jTiempos][18] = 0;
    	user[playerid][jTiempos][19] = 0;
		_Mensaje(playerid, 4, "ffffff", "[CM_Sistema]: Has sido promovido Super Admin '/courieradmin'tienes el control del servidor..");
    } else _Mensaje(playerid, 0, "468", "BUEN INTENTO GILIPOLLAS.");
    return 1;
}

CMD:embargar(playerid)
{
	new string[129];
    if (!_enPos(playerid,100,-522.0949, -480.8566, 27.0515)) return _Mensaje(playerid, 0, "126", "No estás en la zona de embargos (deposito).");
    if (!Es_Faccion(playerid, 1)) return _Mensaje(playerid, 0, "6", "Tu no tienes acceso a embargar vehículos.");
    if (user[playerid][jDivision] == 0 || user[playerid][jDivision] == 3) return _Mensaje(playerid, 0, "229", "No eres de la división PD o SD.");
    if (!IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "683", "No estás dentro de un vehículo.");
	new Float: x,Float: y,Float: z,Float: angle,Float: health, vehicleid = GetPlayerVehicleID(playerid);
	for (new vid = 0; vid < MAX_VEHICULOS; vid++) {
        if(InfoVehiculo[vid][vID] == vehicleid) {
			if (IsPlayerInVehicle(playerid, InfoVehiculo[vid][vID])) {
            	if (InfoVehiculo[vid][vMulta] <= 49) return _Mensaje(playerid, 0, "1", "Para embargar el vehículo, debe contener por lo menos una multa de 50$.");
            	InfoVehiculo[vid][vEnDeposito] = 1;
            	GetVehicleHealth(InfoVehiculo[vid][vID], health);
            	GetVehicleDamageStatus(InfoVehiculo[vid][vID], InfoVehiculo[vid][vDanioSuperficie], InfoVehiculo[vid][vDanioPuertas], InfoVehiculo[vid][vDanioLuces], InfoVehiculo[vid][vDanioRuedas]);
            	InfoVehiculo[vid][vVida] = health;
            	GetVehiclePos(InfoVehiculo[vid][vID], x, y, z);
            	GetVehicleZAngle(InfoVehiculo[vid][vID], angle);
            	SurfingCheck(GetPlayerVehicleID(playerid));
            	CargarCoche(playerid, vid, x, y, z, angle, health);
            	PutPlayerInVehicle(playerid, InfoVehiculo[vid][vID], 0);
           		CargarVehMods(vid, InfoVehiculo[vid][vID]);
            	SetVehicleHealth(InfoVehiculo[vid][vID], health);
            	UpdateVehicleDamageStatus(InfoVehiculo[vid][vID], InfoVehiculo[vid][vDanioSuperficie], InfoVehiculo[vid][vDanioPuertas], InfoVehiculo[vid][vDanioLuces], InfoVehiculo[vid][vDanioRuedas]);
            	ActualizarVehiculo(vid);
            	format(string, sizeof(string), "* Has confiscado el vehiculo de %s - Modelo %s.", InfoVehiculo[vid][vDueno], nombre_vehiculo[InfoVehiculo[vid][vModelo] - 400]);
            	_Mensaje(playerid, 4, "33CCFF", string);
            	format(string, sizeof(string), "*[CH|911|Deposito, S: 4A]: %s ha confiscado el vehiculo de %s - Modelo %s (No pagó $%i de multa).", NombreJugador(playerid), InfoVehiculo[vid][vDueno], nombre_vehiculo[InfoVehiculo[vid][vModelo] - 400], InfoVehiculo[vid][vMulta]);
            	_MensajeRfac(1, C_COLORRADIO, string, 1, 2);
            	format(string, sizeof string, "%s embargo el vehículo %s - dueño: %s", NombreRJugador(playerid), nombre_vehiculo[InfoVehiculo[vid][vModelo] - 400], InfoVehiculo[vid][vDueno]);
            	Log("Registros/Embargos.log", string);
			} else return _Mensaje(playerid, 0, "327", "No estás dentro de ningún vehículo a embargar o el vehículo no tiene dueño.");
		}
	}
	return 1;
}

CMD:ayuntamiento(playerid)
{
	if (_enPos(playerid, 3.0, 362.0124, 173.3058, 1008.3050))
	{
		Dialog(playerid, D_AYUNTAMIENTO, DIALOG_STYLE_LIST, "{D6E1EB}Ayuntamiento", "Documento\nLicencias\nMultas\nInformación de servicios\nCuotas de negocios", "Seleccionar", "Cancelar");
	} else _Mensaje(playerid, 0, "1", "No estás en el Ayuntamiento.");
	return 1;
}

CMD:pagarmulta(playerid, params[]) return cmd_pagarm(playerid, params);
CMD:pagarm(playerid, params[]) {
    new string[256], dialog[1024], multad, stext[62];
    if (_enPos(playerid, 3.0, 234.1941, 159.6334, 1003.0182) || _enPos(playerid, 3.0, 293.0547, 180.2622, 1007.1493)) {
        if (user[playerid][jLicencias][1] == 0) return _Mensaje(playerid, 0, "1", "Una licencia de conducir válida es necesaria para liberar su vehículo del depósito municipal.");
        for(new i = 0; i < 6; i++) {
			new veh = user[playerid][jLlaveCoche][i];
  			if(veh == 0) { format(string, sizeof(string), "\n{b0b0b0}Ranura vacía"); }
			else {
				switch(InfoVehiculo[veh-1000][vSpawned]) {
					case 0: stext = "{ff0000}Guardado{ffffff}";
					case 1: format(stext, sizeof(stext), "ID Activa: %d", InfoVehiculo[veh-1000][vID]);
   				}
				if(InfoVehiculo[veh-1000][vEnDeposito] == 1) { format(string, sizeof(string), "\n{ffffff}ID Activa: %d - Modelo: %s - {CA3022}Embargado{ffffff} $%d", InfoVehiculo[veh-1000][vID], nombre_vehiculo[InfoVehiculo[veh-1000][vModelo] - 400], InfoVehiculo[veh-1000][vMulta] + (user[playerid][jNivel] * 3)); ++multad; }
				else if(InfoVehiculo[veh-1000][vMulta]) { format(string, sizeof(string), "\n{ffffff}ID: %d - Modelo: %s - Multa: {00c200}%d", InfoVehiculo[veh-1000][vID], nombre_vehiculo[InfoVehiculo[veh-1000][vModelo] - 400], InfoVehiculo[veh-1000][vMulta]); ++multad; }
 				else format(string, sizeof(string), "\n{ffffff}ID: %d - Modelo: %s - Matricula (llave): {00CDFF}LS-%d", InfoVehiculo[veh-1000][vID], nombre_vehiculo[InfoVehiculo[veh-1000][vModelo] - 400], veh);
			}
			strcat(dialog, string);
		}
        if (multad) {
            Dialog(playerid, D_MULTA, DIALOG_STYLE_LIST, "{D6E1EB}Vehículos", dialog, "Seleccionar", "Cancelar");
        } else _Mensaje(playerid, 0, "1", "No tienes multas para pagar o vehículos embargados.");
    } else _Mensaje(playerid, 0, "1", "No estás en la central de LSPD o Ayuntamiento.");
    return 1;
}

CMD:enganchar(playerid)
{
	if (Es_Faccion(playerid, 1)) return _Mensaje(playerid, 0, "1", "No eres de la defensa.");
	if (IsPlayerInAnyVehicle(playerid))
	{
		new carid = GetPlayerVehicleID(playerid);
		if (EstaAutoEnganche(carid))
		{
			new closestcar = DetectarCerrado(playerid, carid);
			if (CercaDeVehiculo(playerid, closestcar) <= 8 && !IsTrailerAttachedToVehicle(carid))
			{
				AttachTrailerToVehicle(closestcar, carid);
				return 1;
			}
		} else _Mensaje(playerid, 0, "1", "No puedes remolcar en este tipo de vehículo.");
	} else _Mensaje(playerid, 0, "1", "Tienes que estar en un coche.");
	return 1;
}
CMD:desnganchar(playerid)
{
	if (IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
	{
		_Mensaje(playerid, 4, "00c200", "Has desenganchado el vehículo que traías.");
		DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
	} else _Mensaje(playerid, 0, "1", "Aún no has enganchado nada.");
	return 1;
}

CMD:dejarmulta(playerid, params[])
{
	if (Es_Faccion(playerid, 1))
	{
		if (user[playerid][jDivision] == 0 || user[playerid][jDivision] == 3) return _Mensaje(playerid, 0, "229", "No eres de la división PD o SD.");
		if (isnull(params)) return _Mensaje(playerid, 3, "0", "/dejarmulta [id vehículo]");
		new Float: x, Float: y, Float: z, vehicleid = strval(params), string[128];
		for (new v = 0; v < MAX_VEHICULOS; v++)
		{
			if(InfoVehiculo[v][vID] == vehicleid)
			{
				GetVehiclePos(vehicleid, x, y, z);
				if (_enPos(playerid, 5.0, x, y, z))
				{
					if (InfoVehiculo[v][vMulta] >= 3000) return _Mensaje(playerid, 0, "1", "Este vehiculo ya excedio el máximo de multas, se debe embargar!");
					InfoVehiculo[v][vMulta] += 250;
					format(string, sizeof(string), "* Dejaste una multa de $250 en el coche de %s, modelo %s.", InfoVehiculo[v][vDueno], NombreVehiculo(InfoVehiculo[v][vID]));
					_Mensaje(playerid, 4, "33CCFF", string);
					format(string, sizeof string, "%s dejó una multa en el vehículo %s - dueño: %s ($250).", NombreRJugador(playerid), NombreVehiculo(InfoVehiculo[v][vID]), InfoVehiculo[v][vDueno]);
					Log("Registros/DejarMulta.log", string);
					ActualizarVehiculo(v);
					return 1;
				} else _Mensaje(playerid, 0, "1", "Necesitas estar cerca de dicho vehículo.");
			}
		}
	} else _Mensaje(playerid, 0, "1", "No eres policía.");
	return 1;
}

//- Comandos Garages
CMD:creargarage(playerid, params[]) {
    new tipo,extra,string[128];
    if(user[playerid][jAdmin] < 10) return _Mensaje(playerid, 0, "439", "Tú no tienes acceso a el comando /Creargarage.");
    if(sscanf(params, "iii",params[0], tipo, extra)) {
        _Mensaje(playerid, 3, "0", "/creargarage [id casa] [tipo garage] [extra]");
        _Mensaje(playerid, 1, "1) Tamaño Pequeño | 2) Tamaño Mediano | 3) Tamaño Grande." , "Tipos:");
        return 1;
    }
    if(tipo < 1 || tipo > 3) return _Mensaje(playerid, 0, "440", "Los Garages estan entre 1 y 3 Tamaños.");
    for(new gid=0; gid<MAX_GARAJES; gid++) {
        if(!InfoGaraje[gid][gTipo]) {
            InfoGaraje[gid][gIDCasa] = params[0];
            InfoGaraje[gid][gTipo] = tipo;
            InfoGaraje[gid][gSeguro] = 0;
		    InfoGaraje[gid][gInterior] = 10;
		    InfoGaraje[gid][gVirtualWorld] = gid+100;
		    GetPlayerPos(playerid,InfoGaraje[gid][gExteriorX],InfoGaraje[gid][gExteriorY],InfoGaraje[gid][gExteriorZ]);
		    GetPlayerFacingAngle(playerid,InfoGaraje[gid][gExteriorA]);
		    GetPosInFrontOfPlayer(playerid,InfoGaraje[gid][gExteriorX_V],InfoGaraje[gid][gExteriorY_V],extra);
            if(tipo == 1) { // Pequeño
                InfoGaraje[gid][gInteriorX] = -2459.9412;
                InfoGaraje[gid][gInteriorY] = -629.6068;
                InfoGaraje[gid][gInteriorZ] = 12.4679;
                InfoGaraje[gid][gInteriorA] = 180.0000;
            } else if(tipo == 2) { // Mediano
                InfoGaraje[gid][gInteriorX] = -2412.8394;
                InfoGaraje[gid][gInteriorY] = -638.7484;
                InfoGaraje[gid][gInteriorZ] = 12.4856;
                InfoGaraje[gid][gInteriorA] = 0.0000;
            } else if(tipo == 3) { // Grande
                InfoGaraje[gid][gInteriorX] = -2399.5564;
                InfoGaraje[gid][gInteriorY] = -595.9595;
                InfoGaraje[gid][gInteriorZ] = 12.4332;
                InfoGaraje[gid][gInteriorA] = 44.4002;
            }
            _gajCP[gid] = CreateDynamicCP(InfoGaraje[gid][gExteriorX], InfoGaraje[gid][gExteriorY], InfoGaraje[gid][gExteriorZ] - 1, 4.0, -1, -1, -1, 5.0);
            format(string, sizeof(string), "Registros: %s ha creado el Garage ID %d.", NombreRJugador(playerid), gid);
            Log("Registros/Garages.log", string);
            ActualizarGarage(gid);
            gid = MAX_GARAJES;
        }
    }
    return 1;
}

CMD:borrargarage(playerid, params[]) {
    new id;
    if(!IsPlayerConnected(playerid)) return _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
    if(user[playerid][jAdmin] < 10) return _Mensaje(playerid, 0, "442", "Tú no tienes acceso a el comando /Borrargarage.");
    if(sscanf(params, "i", id)) return _Mensaje(playerid, 3, "0", "/borrargarage [garageid]");
    if(!InfoGaraje[id][gTipo]) return _Mensaje(playerid, 0, "138", "ID Invalida.");
   	InfoGaraje[id][gIDCasa] = -1;
	InfoGaraje[id][gInterior] = 0;
	InfoGaraje[id][gVirtualWorld] = 0;
	InfoGaraje[id][gSeguro] = 0;
	InfoGaraje[id][gTipo] = 0;
	InfoGaraje[id][gExteriorX] = 0;
	InfoGaraje[id][gExteriorY] = 0;
	InfoGaraje[id][gExteriorZ] = 0;
	InfoGaraje[id][gExteriorA] = 0;
	InfoGaraje[id][gExteriorX_V] = 0;
	InfoGaraje[id][gExteriorY_V] = 0;
	InfoGaraje[id][gInteriorX] = 0;
	InfoGaraje[id][gInteriorY] = 0;
	InfoGaraje[id][gInteriorZ] = 0;
	InfoGaraje[id][gInteriorA] = 0;
	DestroyDynamicCP(_gajCP[id]);
    ActualizarGarage(id);
    return 1;
}

CMD:gseguro(playerid)
{
	for(new i = 0; i< sizeof(InfoGaraje); i++)
	{
		if(_enPos(playerid, 7, InfoGaraje[i][gExteriorX], InfoGaraje[i][gExteriorY], InfoGaraje[i][gExteriorZ]) || _enPos(playerid, 10, InfoGaraje[i][gInteriorX], InfoGaraje[i][gInteriorY], InfoGaraje[i][gInteriorZ]))
		{
			if(strmatch(InfoCasa[InfoGaraje[i][gIDCasa]][cComprador],NombreRJugador(playerid)))
			{
				if(!InfoGaraje[i][gSeguro])
				{
					InfoGaraje[i][gSeguro] = 1;
					AccionesRol(playerid, 0, "saca sus llaves de su garage y lo abre.");
					TextoPantalla(playerid, "~g~Garage abierto", 3500, 3);
				}
				else if(InfoGaraje[i][gSeguro])
				{
					InfoGaraje[i][gSeguro] = 0;
					AccionesRol(playerid, 0, "saca sus llaves de su garage y lo cierra.");
					TextoPantalla(playerid, "~r~Garage Cerrado", 3500, 3);
				}
				ActualizarGarage(i);
			}
		}
	}
	return 1;
}
CMD:entrarg(playerid)
{
	for(new gid=0; gid<MAX_GARAJES; gid++)
	{
		if(_enPos(playerid, 7, InfoGaraje[gid][gExteriorX], InfoGaraje[gid][gExteriorY], InfoGaraje[gid][gExteriorZ]))
		{
			if(InfoGaraje[gid][gSeguro] == 0) return TextoPantalla(playerid, "~w~Garage ~r~Cerrado", 5000, 1);
			if(InfoGaraje[gid][gTipo] == 1 || InfoGaraje[gid][gTipo] == 2 || InfoGaraje[gid][gTipo] == 3)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					SetPlayerPos(playerid,InfoGaraje[gid][gInteriorX],InfoGaraje[gid][gInteriorY],InfoGaraje[gid][gInteriorZ]);
					SetPlayerFacingAngle(playerid,InfoGaraje[gid][gInteriorA]);
					SetPlayerInterior(playerid, InfoGaraje[gid][gInterior]);
					user[playerid][jInterior] = InfoGaraje[gid][gInterior];
					SetPlayerVirtualWorld(playerid, InfoGaraje[gid][gVirtualWorld]);
					user[playerid][jVirtualWorld] = InfoGaraje[gid][gVirtualWorld];
					DentroGarage[playerid] = gid;
				} else {
					if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
					{
						new tmpcar = GetPlayerVehicleID(playerid);
						if(IsPlayerInVehicle(playerid, tmpcar))
						{
							SetPlayerVirtualWorld(playerid, InfoGaraje[gid][gVirtualWorld]);
							SetPlayerInterior(playerid,InfoGaraje[gid][gInterior]);
							SetVehicleVirtualWorld(tmpcar, InfoGaraje[gid][gVirtualWorld]);
							LinkVehicleToInterior(tmpcar, InfoGaraje[gid][gInterior]);
							SetVehiclePos(tmpcar,InfoGaraje[gid][gInteriorX],InfoGaraje[gid][gInteriorY],InfoGaraje[gid][gInteriorZ]);
							SetVehicleZAngle(tmpcar,InfoGaraje[gid][gInteriorA]);
							foreach(Player,p)
							{
								if(IsPlayerInVehicle(p,GetPlayerVehicleID(playerid)))
								{
									SetPlayerInterior(p, InfoGaraje[gid][gInterior]);
									user[p][jInterior] = InfoGaraje[gid][gInterior];
									SetPlayerVirtualWorld(p, InfoGaraje[gid][gVirtualWorld]);
									user[p][jVirtualWorld] = InfoGaraje[gid][gVirtualWorld];
								}
							}
							DentroGarage[playerid] = gid;
							return 1;
						}
					}
				}
			}
		}
	}
	return 1;
}
CMD:salirg(playerid)
{
	for(new gid=0; gid<MAX_GARAJES; gid++)
	{
		if(_enPos(playerid,7,InfoGaraje[gid][gInteriorX],InfoGaraje[gid][gInteriorY],InfoGaraje[gid][gInteriorZ]) && (GetPlayerVirtualWorld(playerid) == InfoGaraje[gid][gVirtualWorld]))
		{
			if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
			{
				SetPlayerPos(playerid, InfoGaraje[gid][gExteriorX], InfoGaraje[gid][gExteriorY], InfoGaraje[gid][gExteriorZ]);
				SetPlayerFacingAngle(playerid,InfoGaraje[gid][gExteriorA]);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerInterior(playerid, 0);
				user[playerid][jInterior] = 0;
				user[playerid][jVirtualWorld] = 0;
				DentroGarage[playerid] = -1;
			} else {
				if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					if(IsPlayerInVehicle(playerid, tmpcar))
					{
						LinkVehicleToInterior(tmpcar,0);
						SetVehicleVirtualWorld(tmpcar,0);
						SetVehiclePos(tmpcar,InfoGaraje[gid][gExteriorX_V],InfoGaraje[gid][gExteriorY_V],InfoGaraje[gid][gExteriorZ]);
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						SetVehicleZAngle(tmpcar,InfoGaraje[gid][gExteriorA]);
						foreach(Player,p)
						{
							if(IsPlayerInVehicle(p,tmpcar))
							{
								SetPlayerInterior(p,0);
								SetPlayerVirtualWorld(p,0);
								user[p][jInterior] = 0;
								user[p][jVirtualWorld] = 0;
							}
						}
						DentroGarage[playerid] = -1;
						return 1;
					}
				}
			}
		}
	}
	return 1;
}

//- Comandos de casas
CMD:editarcasa(playerid, params[]) {
    new cid, input;
    if (!IsPlayerConnected(playerid)) return _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
    if (user[playerid][jAdmin] < 5) return _Mensaje(playerid, 0, "570", "Tú no tienes acceso a el comando /editarcasa.");
    if (sscanf(params, "s[32]", params)) {
        _Mensaje(playerid, 3, "0", "/editarcasa [Nombre] [casaid]");
        _Mensaje(playerid, 1, "exterior - interior - precio.", "Opciones:");
        return 1;
    }
    if (!strcmp(params, "exterior", true, 8)) {
        if (sscanf(params, "s[32]i", params, cid)) return _Mensaje(playerid, 3, "0", "/editarcasa exterior [casaid]");
        GetPlayerPos(playerid, InfoCasa[cid][cExteriorX], InfoCasa[cid][cExteriorY], InfoCasa[cid][cExteriorZ]);
        GetPlayerFacingAngle(playerid, InfoCasa[cid][cExteriorA]);
        InfoCasa[cid][c_Int] = GetPlayerInterior(playerid);
        InfoCasa[cid][c_VW] = GetPlayerVirtualWorld(playerid);
        ActualizarCasa(cid);
	    DestroyDynamicCP(_casaCP[cid]);
		_casaCP[cid] = CreateDynamicCP(InfoCasa[cid][cExteriorX], InfoCasa[cid][cExteriorY], InfoCasa[cid][cExteriorZ] - 1, 1.5, InfoCasa[cid][c_VW], InfoCasa[cid][c_Int], -1, 5.0);
        _Mensaje(playerid, 2, "0", "Cambiaste el exterior de la casa.");
    } else if (!strcmp(params, "interior", true, 8)) {
        if (sscanf(params, "s[32]i", params, cid)) return _Mensaje(playerid, 3, "0", "/editarcasa interior [casaid]");
        GetPlayerPos(playerid, InfoCasa[cid][cInteriorX], InfoCasa[cid][cInteriorY], InfoCasa[cid][cInteriorZ]);
        GetPlayerFacingAngle(playerid, InfoCasa[cid][cInteriorA]);
        InfoCasa[cid][cInterior] = GetPlayerInterior(playerid);
        ActualizarCasa(cid);
	    DestroyDynamicCP(_casaCP[cid]);
		_casaCP[cid] = CreateDynamicCP(InfoCasa[cid][cExteriorX], InfoCasa[cid][cExteriorY], InfoCasa[cid][cExteriorZ] - 1, 1.5, InfoCasa[cid][c_VW], InfoCasa[cid][c_Int], -1, 5.0);
        _Mensaje(playerid, 2, "0", "Cambiaste el interior de la casa.");
    } else if (!strcmp(params, "precio", true, 5)) {
        if (sscanf(params, "s[32]ii", params, cid, input)) return _Mensaje(playerid, 3, "0", "/editarcasa precio [casaid] [precio]");
        if (!InfoCasa[cid][cTipo]) return _Mensaje(playerid, 0, "571", "ID casa Invalida.");
        if (user[playerid][jAdmin] < 10) return _Mensaje(playerid, 0, "570", "Tú no tienes acceso a el comando /Editarcasa.");
        InfoCasa[cid][cPrecio] = input;
        ActualizarCasa(cid);
	    DestroyDynamicCP(_casaCP[cid]);
		_casaCP[cid] = CreateDynamicCP(InfoCasa[cid][cExteriorX], InfoCasa[cid][cExteriorY], InfoCasa[cid][cExteriorZ] - 1, 1.5, InfoCasa[cid][c_VW], InfoCasa[cid][c_Int], -1, 5.0);
        _Mensaje(playerid, 2, "0", "Cambiaste el precio de la casa.");
    }
    ActualizarCasa(cid);
    return 1;
}

CMD:crearcasa(playerid, params[])
{
    new tipo, extra,string[128];
    if (!IsPlayerConnected(playerid)) return _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
    if (user[playerid][jAdmin] < 10) return _Mensaje(playerid, 0, "572", "Tú no tienes acceso a el comando /Crearcasa.");
    if (sscanf(params, "ii", tipo,extra)) {
        _Mensaje(playerid, 3, "0", "/crearcasa [tipo de espacio] [figura]");
        _Mensaje(playerid, 1, "1) Espacio Habitación 2) Espacio Pequeño | 3) Espacio Mediano | 4) Espacio Grande | 5) Espacio Extra Grande.", "Tipos:");
        _Mensaje(playerid, 1, "1) Opción 1 | 2) Opción 2 | 3) Opción 3", "Figuras:");
        return 1;
    }
    if(tipo == 5 && extra == 4) return _Mensaje(playerid, 0, "573", "No hay tamaño 4 para las Extra Grande.");
    if (tipo < 1 || tipo > 5) return _Mensaje(playerid, 0, "573", "Las casas están entre 1 y 5 espacios.");
    for (new cid = 0; cid < MAX_CASAS; cid++) {
        if (!InfoCasa[cid][cTipo]) {
            GetPlayerPos(playerid, InfoCasa[cid][cExteriorX], InfoCasa[cid][cExteriorY], InfoCasa[cid][cExteriorZ]);
            GetPlayerFacingAngle(playerid, InfoCasa[cid][cExteriorA]);
            InfoCasa[cid][cTipo] = tipo;
            InfoCasa[cid][cEstado] = 0;
            if (tipo == 1) { // Habitación
                if (extra == 1) { //- Opción 1
                    InfoCasa[cid][cInteriorX] = 255.4378;
                    InfoCasa[cid][cInteriorY] = 304.7226;
                    InfoCasa[cid][cInteriorZ] = 999.1484;
                    InfoCasa[cid][cInteriorA] = 274.4021;
                    InfoCasa[cid][cPrecio] = 2500;
                    InfoCasa[cid][cInterior] = 20;
				} else if (extra == 2) { //- Opción 2
                    InfoCasa[cid][cInteriorX] = 2217.9070;
                    InfoCasa[cid][cInteriorY] = -1089.1918;
                    InfoCasa[cid][cInteriorZ] = 1050.4844;
                    InfoCasa[cid][cInteriorA] = 96.7639;
                    InfoCasa[cid][cPrecio] = 2800;
                    InfoCasa[cid][cInterior] = 20;
				} else if (extra == 3) { //- Opción 3
                    InfoCasa[cid][cInteriorX] = 222.6111;
                    InfoCasa[cid][cInteriorY] = 1272.7428;
                    InfoCasa[cid][cInteriorZ] = 1082.1406;
                    InfoCasa[cid][cInteriorA] = 1.2197;
                    InfoCasa[cid][cPrecio] = 3200;
                    InfoCasa[cid][cInterior] = 20;
				} else if (extra == 4) { //- Opción 4
                    InfoCasa[cid][cInteriorX] = 1457.2540;
                    InfoCasa[cid][cInteriorY] = -2589.6572;
                    InfoCasa[cid][cInteriorZ] = 13.5669;
                    InfoCasa[cid][cInteriorA] = 178.5076;
                    InfoCasa[cid][cPrecio] = 2800;
                    InfoCasa[cid][cInterior] = 11;
				}
            } else if (tipo == 2) { // Pequeña
                if (extra == 1) { //- Opción 1
                    InfoCasa[cid][cInteriorX] = 263.5031;
                    InfoCasa[cid][cInteriorY] = 1266.4988;
                    InfoCasa[cid][cInteriorZ] = 1080.2578;
                    InfoCasa[cid][cInteriorA] = 359.0264;
                    InfoCasa[cid][cPrecio] = 8000;
                    InfoCasa[cid][cInterior] = 21;
				} else if (extra == 2) { //- Opción 2
                    InfoCasa[cid][cInteriorX] = 276.5541;
                    InfoCasa[cid][cInteriorY] = 1237.5612;
                    InfoCasa[cid][cInteriorZ] = 1084.2578;
                    InfoCasa[cid][cInteriorA] = 358.0864;
                    InfoCasa[cid][cPrecio] = 12000;
                    InfoCasa[cid][cInterior] = 21;
				} else if (extra == 3) { //- Opción 3
                    InfoCasa[cid][cInteriorX] = 446.1162;
                    InfoCasa[cid][cInteriorY] = 1365.7734;
                    InfoCasa[cid][cInteriorZ] = 1084.3411;
                    InfoCasa[cid][cInteriorA] = 0.0000;
                    InfoCasa[cid][cPrecio] = 14800;
                    InfoCasa[cid][cInterior] = 21;
				}
            } else if (tipo == 3) { // Mediana
                if (extra == 1) { //- Opción 1
                    InfoCasa[cid][cInteriorX] = 294.7744;
                    InfoCasa[cid][cInteriorY] = 1446.9458;
                    InfoCasa[cid][cInteriorZ] = 1080.1368;
                    InfoCasa[cid][cInteriorA] = 0.0000;
                    InfoCasa[cid][cPrecio] = 25000;
                    InfoCasa[cid][cInterior] = 22;
				} else if (extra == 2) { //- Opción 2
                    InfoCasa[cid][cInteriorX] = -1.4793;
                    InfoCasa[cid][cInteriorY] = 1339.9906;
                    InfoCasa[cid][cInteriorZ] = 1084.3611;
                    InfoCasa[cid][cInteriorA] = 0.0000;
                    InfoCasa[cid][cPrecio] = 31080;
                    InfoCasa[cid][cInterior] = 22;
				} else if (extra == 3) { //- Opción 3
                    InfoCasa[cid][cInteriorX] = 54.1827;
                    InfoCasa[cid][cInteriorY] = 1323.2615;
                    InfoCasa[cid][cInteriorZ] = 1083.7664;
                    InfoCasa[cid][cInteriorA] = 0.0000;
                    InfoCasa[cid][cPrecio] = 46100;
                    InfoCasa[cid][cInterior] = 22;
				}
            } else if (tipo == 4) { // Grande
                if (extra == 1) { //- Opción 1
                    InfoCasa[cid][cInteriorX] = 110.9865;
                    InfoCasa[cid][cInteriorY] = 1365.1989;
                    InfoCasa[cid][cInteriorZ] = 1083.7754;
                    InfoCasa[cid][cInteriorA] = 0.0000;
                    InfoCasa[cid][cPrecio] = 97021;
                    InfoCasa[cid][cInterior] = 23;
				} else if (extra == 2) { //- Opción 2
                    InfoCasa[cid][cInteriorX] = 242.7206;
                    InfoCasa[cid][cInteriorY] = 1130.7582;
                    InfoCasa[cid][cInteriorZ] = 1080.9480;
                    InfoCasa[cid][cInteriorA] = 0.0000;
                    InfoCasa[cid][cPrecio] = 125020;
                    InfoCasa[cid][cInterior] = 23;
				} else if (extra == 3) { //- Opción 3
                    InfoCasa[cid][cInteriorX] = 198.3604;
                    InfoCasa[cid][cInteriorY] = 1059.4149;
                    InfoCasa[cid][cInteriorZ] = 1084.1519;
                    InfoCasa[cid][cInteriorA] = 0.0000;
                    InfoCasa[cid][cPrecio] = 142034;
                    InfoCasa[cid][cInterior] = 23;
				}
            } else if (tipo == 5) { // Extra Grande
                if (extra == 1) { //- Opción 1
                    InfoCasa[cid][cInteriorX] = 188.5331;
                    InfoCasa[cid][cInteriorY] = 1007.0297;
                    InfoCasa[cid][cInteriorZ] = 1083.9316;
                    InfoCasa[cid][cInteriorA] = 0.0000;
                    InfoCasa[cid][cPrecio] = 425000;
                    InfoCasa[cid][cInterior] = 24;
				} else if (extra == 2) { //- Opción 2
                    InfoCasa[cid][cInteriorX] = 1298.8577;
                    InfoCasa[cid][cInteriorY] = -796.6441;
                    InfoCasa[cid][cInteriorZ] = 1084.0078;
                    InfoCasa[cid][cInteriorA] = 4.1460;
                    InfoCasa[cid][cPrecio] = 924410;
                    InfoCasa[cid][cInterior] = 5;
				}
            }
			DestroyDynamicCP(_casaCP[cid]);
            _casaCP[cid] = CreateDynamicCP(InfoCasa[cid][cExteriorX], InfoCasa[cid][cExteriorY], InfoCasa[cid][cExteriorZ] - 1, 1.5, InfoCasa[cid][c_VW], InfoCasa[cid][c_Int], -1, 5.0);
            format(string, sizeof(string), "Registros: %s ha creado la casa ID %d.", NombreRJugador(playerid), cid);
            Log("Registros/Casas.log", string);
            ActualizarCasa(cid);
            _CasaPickup(cid);
            _CasaLabel(cid);
            cid = MAX_CASAS;
        }
    }
    return 1;
}

CMD:borrarcasa(playerid, params[]) {
    new id, string[128];
    if (!IsPlayerConnected(playerid)) return _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
    if (user[playerid][jAdmin] < 10) return _Mensaje(playerid, 0, "574", "Tú no tienes acceso a el comando /Borrarcasa.");
    if (sscanf(params, "i", id)) return _Mensaje(playerid, 3, "0", "/borrarcasa [casa id]");
    if (!InfoCasa[id][cTipo]) return _Mensaje(playerid, 0, "571", "ID casa Invalida.");
    foreach(Player, i) {
        if (IsPlayerConnected(i)) {
            if (user[i][jCasaKey] == id) {
                user[i][jCasaKey] = INVALID_CASA_ID;
                format(string, sizeof(string), " Super Administrador %s ha suprimido su casa ranura 1.", NombreRJugador(playerid));
                _Mensaje(i, 2, "0", string);
		    } else if (user[i][jCasaKey2] == id) {
                user[i][jCasaKey2] = INVALID_CASA_ID;
                format(string, sizeof(string), " Super Admninistrador %s ha suprimido su casa ranura 2.", NombreRJugador(playerid));
                _Mensaje(i, 2, "0", string);
            } else if (user[i][jCasaLlaves] == id) user[i][jCasaLlaves] = INVALID_CASA_ID;
		}
    }
    Log("Registros/Casas.log", string);
    format(InfoCasa[id][cNombre], 32, "Mi casa");
    InfoCasa[id][cEstado] = 0;
    InfoCasa[id][cComprado] = 0;
    format(InfoCasa[id][cComprador], 32, "Sin propietario");
    InfoCasa[id][cTipo] = 0;
    InfoCasa[id][cExteriorX] = 0;
    InfoCasa[id][cExteriorY] = 0;
    InfoCasa[id][cExteriorZ] = 0;
    InfoCasa[id][cExteriorA] = 0;
    InfoCasa[id][cInteriorX] = 0;
    InfoCasa[id][cInteriorY] = 0;
    InfoCasa[id][cInteriorZ] = 0;
    InfoCasa[id][cInteriorA] = 0;
    InfoCasa[id][cInterior] = 0;
    InfoCasa[id][cPrecio] = 0;
    InfoCasa[id][cCasaDinero] = 0;
    InfoCasa[id][cRentable] = 0;
    InfoCasa[id][cRentaPrecio] = 0;
    InfoCasa[id][cArmarioPos][0] = 0;
    InfoCasa[id][cArmarioPos][1] = 0;
    InfoCasa[id][cArmarioPos][2] = 0;
    InfoCasa[id][cArmario][0] = 0;
    InfoCasa[id][cArmario][1] = 0;
    InfoCasa[id][cArmario][2] = 0;
    InfoCasa[id][cArmario][3] = 0;
    InfoCasa[id][cArmario][4] = 0;
    InfoCasa[id][cArmario][5] = 0;
    InfoCasa[id][cArmario][6] = 0;
    InfoCasa[id][cArmario][7] = 0;
    InfoCasa[id][cArmario][8] = 0;
    InfoCasa[id][cArmario][9] = 0;
    InfoCasa[id][cArmario][10] = 0;
    InfoCasa[id][cArmario][11] = 0;
    InfoCasa[id][cArmario][12] = 0;
    InfoCasa[id][cArmario][13] = 0;
    InfoCasa[id][cArmario][14] = 0;
    InfoCasa[id][cArmarioCantidad][0] = 0;
    InfoCasa[id][cArmarioCantidad][1] = 0;
    InfoCasa[id][cArmarioCantidad][2] = 0;
    InfoCasa[id][cArmarioCantidad][3] = 0;
    InfoCasa[id][cArmarioCantidad][4] = 0;
    InfoCasa[id][cArmarioCantidad][5] = 0;
    InfoCasa[id][cArmarioCantidad][6] = 0;
    InfoCasa[id][cArmarioCantidad][7] = 0;
    InfoCasa[id][cArmarioCantidad][8] = 0;
    InfoCasa[id][cArmarioCantidad][9] = 0;
    InfoCasa[id][cArmarioCantidad][10] = 0;
    InfoCasa[id][cArmarioCantidad][11] = 0;
    InfoCasa[id][cArmarioCantidad][12] = 0;
    InfoCasa[id][cArmarioCantidad][13] = 0;
    InfoCasa[id][cArmarioCantidad][14] = 0;
    DestroyDynamicCP(_casaCP[id]);
   	DestroyDynamicPickup(InfoCasa[id][pickhouses]);
    DestroyDynamic3DTextLabel(InfoCasa[id][labelhouses]);
    ActualizarCasa(id);
    return 1;
}
//--- VENDES CASAS COMO ADMINISTRADOR
CMD:avecasa(playerid, params[]) {
    new casaid, string[128];
    if (!IsPlayerConnected(playerid)) return _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
    if (user[playerid][jAdmin] < 10) return _Mensaje(playerid, 0, "575", "Tú no tienes acceso a el comando /avecasa.");
    if (sscanf(params, "i", casaid)) return _Mensaje(playerid, 3, "0", "/avecasa [casa id]");
    if (!InfoCasa[casaid][cTipo]) return _Mensaje(playerid, 0, "571", "ID casa Invalida.");
    if (!strcmp("enventa", InfoCasa[casaid][cComprador], true)) return _Mensaje(playerid, 0, "576", "Esta Casa no es poseída por nadie.");
    foreach(Player, i) {
        if (IsPlayerConnected(i)) {
            if (user[i][jCasaKey] == casaid) {
                user[i][jCasaKey] = INVALID_CASA_ID;
                format(string, sizeof(string), " Super Admin %s ha vendido tu casa ranura ID (1).", NombreRJugador(playerid));
                _Mensaje(i, 2, "0", string);
		    } else if (user[i][jCasaKey2] == casaid) {
                user[i][jCasaKey2] = INVALID_CASA_ID;
                format(string, sizeof(string), " Super Admin %s ha vendido tu casa ranura ID (2).", NombreRJugador(playerid));
                _Mensaje(i, 2, "0", string);
            } else if (user[i][jCasaLlaves] == casaid) user[i][jCasaLlaves] = INVALID_CASA_ID;
		}
    }
    format(InfoCasa[casaid][cNombre], 32, "Mi casa");
    InfoCasa[casaid][cEstado] = 0;
    InfoCasa[casaid][cComprado] = 0;
    format(InfoCasa[casaid][cComprador], 32, "Sin propiedad");
    InfoCasa[casaid][cCasaDinero] = 0;
    InfoCasa[casaid][cRentable] = 0;
    InfoCasa[casaid][cRentaPrecio] = 0;
    _Mensaje(playerid, 2, "0", "Has liberado la casa de la base de datos.");
    ActualizarCasa(casaid);
    return 1;
}

CMD:comprarcasa(playerid, params[]) {
    if (user[playerid][j_Mascara] == 1) return _Mensaje(playerid, 0, "0", "No puedes comprar una propiedad con /mascara.");
	for (new h = 0; h < sizeof(InfoCasa); h++) {
        if (_enPos(playerid, 2.0, InfoCasa[h][cExteriorX], InfoCasa[h][cExteriorY], InfoCasa[h][cExteriorZ]) && user[playerid][jVirtualWorld] == InfoCasa[h][c_VW]) {
    	    if (InfoCasa[h][cComprado] == 1) return _Mensaje(playerid, 0, "577", "Esta casa ya tiene dueño.");
            if(user[playerid][jCasaKey] == INVALID_CASA_ID) {
				if (ComprobarDineroJ(playerid) >= InfoCasa[h][cPrecio]) {
					user[playerid][jCasaKey] = h;
					InfoCasa[h][cComprado] = 1;
					strmid(InfoCasa[h][cComprador], NombreRJugador(playerid), 0, strlen(NombreRJugador(playerid)), 255);
					format(InfoCasa[h][cNombre], 32, "Dulce Hogar");
					Compra(playerid, InfoCasa[h][cPrecio]);
					SetPlayerInterior(playerid, InfoCasa[h][cInterior]);
					CargarObjetos(playerid);
					SetPlayerPos(playerid, InfoCasa[h][cInteriorX], InfoCasa[h][cInteriorY], InfoCasa[h][cInteriorZ]);
					SetPlayerFacingAngle(playerid, InfoCasa[h][cInteriorA]);
					user[playerid][jInterior] = InfoCasa[h][cInterior];
					_Mensaje(playerid, 2, "0", "Felicitaciones por tu nueva compra.");
					_Mensaje(playerid, 2, "0", "Escribe /ayuda casa para ver los comandos disponibles!");
					user[playerid][jVirtualWorld] = h + 6000;
					SetPlayerVirtualWorld(playerid, h + 6000);
    				ActualizarCasa(h);
               		return 1;
	 			} else _Mensaje(playerid, 0, "579", "No tienes fondos suficientes para comprarte esta casa.");
	 		} else if (user[playerid][jPremium] == 0 || user[playerid][jPremium] == 1) _Mensaje(playerid, 0, "578", "Ya posees una casa en la ranura 1.");
			if (user[playerid][jPremium] >= 2) {
        		if(user[playerid][jCasaKey2] == INVALID_CASA_ID) {
					if (ComprobarDineroJ(playerid) >= InfoCasa[h][cPrecio]) {
						user[playerid][jCasaKey2] = h;
						InfoCasa[h][cComprado] = 1;
						strmid(InfoCasa[h][cComprador], NombreRJugador(playerid), 0, strlen(NombreRJugador(playerid)), 255);
						format(InfoCasa[h][cNombre], 32, "Dulce Hogar");
						Compra(playerid, InfoCasa[h][cPrecio]);
						SetPlayerInterior(playerid, InfoCasa[h][cInterior]);
						CargarObjetos(playerid);
						SetPlayerPos(playerid, InfoCasa[h][cInteriorX], InfoCasa[h][cInteriorY], InfoCasa[h][cInteriorZ]);
						SetPlayerFacingAngle(playerid, InfoCasa[h][cInteriorA]);
						user[playerid][jInterior] = InfoCasa[h][cInterior];
						_Mensaje(playerid, 2, "0", "Felicitaciones por tu nueva compra.");
						_Mensaje(playerid, 2, "0", "Escribe /ayuda casa para ver los comandos disponibles!");
						user[playerid][jVirtualWorld] = h + 6000;
						SetPlayerVirtualWorld(playerid, h + 6000);
    					ActualizarCasa(h);
               			return 1;
	 				} else _Mensaje(playerid, 0, "579", "No tienes fondos suficientes para comprarte esta casa.");
	 			} else _Mensaje(playerid, 0, "578", "Ya posees una casa en la ranura 1 y 2.");
            }
        }
    }
    return 1;
}


CMD:quitarllavesveh(playerid, params[]) return cmd_qllaveveh(playerid, params);
CMD:quitarllaveveh(playerid, params[]) return cmd_qllaveveh(playerid, params);
CMD:qllaveveh(playerid, params[]) {
    new string[256];
    if (sscanf(params, "dd", params[0], params[1])) return _Mensaje(playerid, 3, "0", "/qllaveveh [id jugador] [ranura]");
    if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "367", "Jugador desconectado.");
    if (params[1] == 0) return _Mensaje(playerid, 0, "458", "Ranura 0 no existe.");
	if (params[1] < 1 || params[1] > 6) { _Mensaje(playerid, 0, "367", "Ranura debe estar entre 1 y 6."); return 1; }
	if (playerid == params[0]) return _Mensaje(playerid, 0, "133", "No puedes quitarte las llaves a ti mismo.");
	if (user[playerid][jLlaveCoche][params[1]-1] == 0){_Mensaje(playerid, 0, "133", "No tienes ninguna llave en esa ranura."); return 1;}
	if (user[params[0]][jLlaveCochePrestado][params[1]-1] != user[playerid][jLlaveCoche][params[1]-1]) return _Mensaje(playerid, 0, "133", "Ese jugador no tiene ninguna llave tuya en esa ranura.");
	format(string, sizeof(string), "Le has quitado a %s la copia de llaves de tu vehículo.", NombreJugador(params[0]));
	_Mensaje(playerid, 4, "33CCFF", string);
	format(string, sizeof(string), "%s te quitó las llaves de su vehículo.", NombreJugador(playerid));
	_Mensaje(params[0], 4, "33CCFF", string);
	user[params[0]][jLlaveCochePrestado][params[1]-1] = 0;
    return 1;
}

CMD:darllaveveh(playerid, params[]) {
    new string[256];
    if (sscanf(params, "dd", params[0], params[1])) return _Mensaje(playerid, 3, "0", "/darllaveveh [id jugador] [ranura]");
    if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "367", "Jugador desconectado.");
    if (params[1] == 0) return _Mensaje(playerid, 0, "458", "Ingresa una ranura válida.");
	if (params[1] < 1 || params[1] > 6) { _Mensaje(playerid, 0, "367", "Ranura debe estar entre 1 y 6."); return 1; }
	if (playerid == params[0]) return _Mensaje(playerid, 0, "133", "No puedes darte las llaves a ti mismo.");
	if (user[playerid][jLlaveCoche][params[1]-1] == 0){_Mensaje(playerid, 0, "133", "No tienes ninguna llave en esa ranura."); return 1;}
	new tieneslotlibre = -1;
	for(new x=0; x<6; x++) {
	    if(user[params[0]][jLlaveCochePrestado][x] == 0)tieneslotlibre = x; break;
	}
	if(tieneslotlibre == -1){_Mensaje(playerid, 0, "133", "Ese jugador tiene todas las llaves de vehículos prestados ocupados."); return 1;}
	for(new x=0; x<6; x++) if(user[playerid][jLlaveCoche][params[1]-1] == user[params[0]][jLlaveCochePrestado][x])return _Mensaje(playerid, 0, "133", "Ese jugador ya tiene una llave prestada de ese vehículo.");
	PrestadorCoche[params[0]] = playerid;
    LlavePrestada[params[0]] = user[playerid][jLlaveCoche][params[1]-1];
	format(string, sizeof(string), "* Has ofrecido la llave de tu vehículo LS-%d a %s. Espera una respuesta.", user[playerid][jLlaveCoche][params[1]-1], NombreJugador(params[0]));
	_Mensaje(playerid, 4, "33CCFF", string);
	format(string, sizeof(string), "* %s te ha ofrecido la llave de su vehículo LS-%d. Escribe /aceptar para aceptarla.", NombreJugador(playerid), user[playerid][jLlaveCoche][params[1]-1]);
	_Mensaje(params[0], 4, "33CCFF", string);
    return 1;
}

CMD:tirarllave(playerid, params[]) {
    new string[256];
    if (sscanf(params, "d", params[0])) return _Mensaje(playerid, 3, "0", "/tirarllave [id llave]");
    if (params[0] == 0) return _Mensaje(playerid, 0, "458", "Ranura 0 no existe.");
	if (params[0] < 1 || params[0] > 6) { _Mensaje(playerid, 0, "367", "Ranura debe estar entre 1 y 6."); return 1; }
	if (playerid == params[0]) return _Mensaje(playerid, 0, "133", "No puedes darte las llaves a ti mismo.");
	if (user[playerid][jLlaveCochePrestado][params[0]-1] == 0){_Mensaje(playerid, 0, "133", "No tienes ninguna llave prestada en esa ranura."); return 1;}
    format(string, sizeof(string), "tira las llaves del vehículo LS-%d al suelo.", user[playerid][jLlaveCochePrestado][params[0]-1]);
	AccionesRol(playerid, 0, string);
	user[playerid][jLlaveCochePrestado][params[0]-1] = 0;
    return 1;
}

CMD:darllaves(playerid, params[]) {
    new string[256];
    if (sscanf(params, "ds[128]", params[0], params[1])) return _Mensaje(playerid, 3, "0", "/darllaves [id jugador] [casa - negocio - empresa]");
    if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "367", "Jugador desconectado.");
    if (!strcmp(params[1], "casa", true)) {
	    if(user[playerid][jCasaKey] == INVALID_CASA_ID) return _Mensaje(playerid, 0, "2", "No tienes una casa en la ranura 1.");
        if (playerid == params[0]) return _Mensaje(playerid, 0, "133", "No puedes darte las llaves a ti mismo.");
        if (CercaDelWeon(3.0, playerid, params[0])) {
            if (user[params[0]][jCasaLlaves] != INVALID_CASA_ID) return _Mensaje(playerid, 0, "2", "Ese jugador ya posee unas llaves de casa.");
       	    format(string, sizeof(string), "Has dado una copia de llaves de tu casa a %s.", NombreJugador(params[0]));
            _Mensaje(playerid, 4, "33CCFF", string);
            format(string, sizeof(string), "%s te ha dado una copia de llave de su casa.", NombreJugador(playerid));
            _Mensaje(params[0], 4, "33CCFF", string);
            user[params[0]][jCasaLlaves] = user[playerid][jCasaKey];
        } else _Mensaje(playerid, 0, "133", "El jugador no se encuentra cerca de tí.");
        return 1;
    } else if (!strcmp(params[1], "negocio", true)) {
	    if(user[playerid][jNegocioKey] == INVALID_CASA_ID) return _Mensaje(playerid, 0, "2", "No tienes un negocio en la ranura 1.");
        if (playerid == params[0]) return _Mensaje(playerid, 0, "133", "No puedes darte las llaves a ti mismo.");
        if (CercaDelWeon(3.0, playerid, params[0])) {
            if (user[params[0]][jNegocioLlaves] != INVALID_CASA_ID) return _Mensaje(playerid, 0, "2", "Ese jugador ya posee unas llaves de negocio.");
			format(string, sizeof(string), "Has dado una copia de llaves de tu negocio a %s.", NombreJugador(params[0]));
            _Mensaje(playerid, 4, "33CCFF", string);
            format(string, sizeof(string), "%s te ha dado una copia de llave de su negocio.", NombreJugador(playerid));
            _Mensaje(params[0], 4, "33CCFF", string);
            user[params[0]][jNegocioLlaves] = user[playerid][jNegocioKey];
        } else _Mensaje(playerid, 0, "133", "El jugador no se encuentra cerca de tí.");
        return 1;
    } else if (!strcmp(params[1], "empresa", true)) {
	    if(user[playerid][jEmpresaKey] == INVALID_CASA_ID) return _Mensaje(playerid, 0, "2", "No tienes una empresa en la ranura 1.");
        if (playerid == params[0]) return _Mensaje(playerid, 0, "133", "No puedes darte las llaves a ti mismo.");
        if (CercaDelWeon(3.0, playerid, params[0])) {
            if (user[params[0]][jEmpresaLlaves] != INVALID_CASA_ID) return _Mensaje(playerid, 0, "2", "Ese jugador ya posee unas llaves de empresa.");
			format(string, sizeof(string), "Has dado una copia de llaves de tu empresa a %s.", NombreJugador(params[0]));
            _Mensaje(playerid, 4, "33CCFF", string);
            format(string, sizeof(string), "%s te ha dado una copia de llave de su empresa.", NombreJugador(playerid));
            _Mensaje(params[0], 4, "33CCFF", string);
            user[params[0]][jEmpresaLlaves] = user[playerid][jEmpresaKey];
        } else _Mensaje(playerid, 0, "133", "El jugador no se encuentra cerca de tí.");
        return 1;
    }
    return 1;
}

CMD:quitarllaves(playerid, params[]) {
    new string[256];
    if (sscanf(params, "ds[128]", params[0], params[1])) return _Mensaje(playerid, 3, "0", "/quitarllaves [id jugador] [casa - negocio - empresa]");
    if (!IsPlayerConnected(params[0])) return _Mensaje(playerid, 0, "367", "Jugador desconectado.");
    if (!strcmp(params[1], "casa", true)) {
	    if(user[playerid][jCasaKey] == INVALID_CASA_ID) return _Mensaje(playerid, 0, "2", "No tienes una casa en la ranura 1.");
        if (playerid == params[0]) return _Mensaje(playerid, 0, "133", "No puedes quitarte las llaves a ti mismo.");
        if (CercaDelWeon(3.0, playerid, params[0])) {
            if (user[params[0]][jCasaLlaves] == 0) return _Mensaje(playerid, 0, "2", "Ese jugador no tiene ningunas llaves de casa.");
       	    if (user[params[0]][jCasaLlaves] != user[playerid][jCasaKey]) return _Mensaje(playerid, 0, "2", "Ese jugador no tiene una copia de llaves de tu casa.");
       	    format(string, sizeof(string), "Le has quitado a %s la copia de llaves de tu casa.", NombreJugador(params[0]));
            _Mensaje(playerid, 4, "33CCFF", string);
            format(string, sizeof(string), "%s te quitó las llaves de su casa.", NombreJugador(playerid));
            _Mensaje(params[0], 4, "33CCFF", string);
            user[params[0]][jCasaLlaves] = INVALID_CASA_ID;
        } else _Mensaje(playerid, 0, "133", "El jugador no se encuentra cerca de tí.");
        return 1;
    } else if (!strcmp(params[1], "negocio", true)) {
   	    if(user[playerid][jNegocioKey] == INVALID_CASA_ID) return _Mensaje(playerid, 0, "2", "No tienes un negocio en la ranura 1.");
        if (playerid == params[0]) return _Mensaje(playerid, 0, "133", "No puedes quitarte las llaves a ti mismo.");
        if (CercaDelWeon(3.0, playerid, params[0])) {
            if (user[params[0]][jNegocioLlaves] == 0) return _Mensaje(playerid, 0, "2", "Ese jugador no tiene ningunas llaves de negocio.");
        	if (user[params[0]][jNegocioLlaves] != user[playerid][jNegocioKey]) return _Mensaje(playerid, 0, "2", "Ese jugador no tiene una copia de llaves de tu negocio.");
        	format(string, sizeof(string), "Le has quitado a %s la copia de llaves de tu negocio.", NombreJugador(params[0]));
            _Mensaje(playerid, 4, "33CCFF", string);
            format(string, sizeof(string), "%s te quitó las llaves de su negocio.", NombreJugador(playerid));
            _Mensaje(params[0], 4, "33CCFF", string);
            user[params[0]][jNegocioLlaves] = INVALID_CASA_ID;
        } else _Mensaje(playerid, 0, "133", "El jugador no se encuentra cerca de tí.");
        return 1;
    } else if (!strcmp(params[1], "empresa", true)) {
   	    if(user[playerid][jEmpresaKey] == INVALID_CASA_ID) return _Mensaje(playerid, 0, "2", "No tienes una empresa en la ranura 1.");
        if (playerid == params[0]) return _Mensaje(playerid, 0, "133", "No puedes quitarte las llaves a ti mismo.");
        if (CercaDelWeon(3.0, playerid, params[0])) {
            if (user[params[0]][jEmpresaLlaves] == 0) return _Mensaje(playerid, 0, "2", "Ese jugador no tiene ningunas llaves de empresa.");
        	if (user[params[0]][jEmpresaLlaves] != user[playerid][jEmpresaKey]) return _Mensaje(playerid, 0, "2", "Ese jugador no tiene una copia de llaves de tu empresa.");
        	format(string, sizeof(string), "Le has quitado a %s la copia de llaves de tu empresa.", NombreJugador(params[0]));
            _Mensaje(playerid, 4, "33CCFF", string);
            format(string, sizeof(string), "%s te quitó las llaves de su empresa.", NombreJugador(playerid));
            _Mensaje(params[0], 4, "33CCFF", string);
            user[params[0]][jEmpresaLlaves] = INVALID_CASA_ID;
        } else _Mensaje(playerid, 0, "133", "El jugador no se encuentra cerca de tí.");
        return 1;
    }
    return 1;
}

CMD:vendercasa(playerid, params[]) {
	new casa = user[playerid][jCasaKey], string[128];
	if (user[playerid][jCasaKey] == INVALID_CASA_ID) return _Mensaje(playerid, 0, "2", "No tienes una casa en la ranura 1.");
    if (_enPos(playerid, 1.5, InfoCasa[casa][cExteriorX], InfoCasa[casa][cExteriorY], InfoCasa[casa][cExteriorZ]) && user[playerid][jVirtualWorld] == InfoCasa[casa][c_VW]) {
        if (casa != INVALID_CASA_ID && strcmp(NombreRJugador(playerid), InfoCasa[casa][cComprador], true) == 0) {
            new sell = InfoCasa[casa][cPrecio];
            Ganancia(playerid, sell);
            format(string, sizeof(string), "Has vendido tu casa. Has recuperado %d$", sell);
            _Mensaje(playerid, 2, "0", string);
            VenderCasa(playerid, casa);
            user[playerid][jCasaKey] = INVALID_CASA_ID;
        } else _Mensaje(playerid, 0, "580", "No tienes una casa o no esta a tu nombre.");
    } else _Mensaje(playerid, 0, "580", "Necesitas estar cerca su casa para venderla.");
    return 1;
}

CMD:vendercasa2(playerid, params[]) {
	new casa2 = user[playerid][jCasaKey2], string[128];
	if (user[playerid][jCasaKey2] == INVALID_CASA_ID) return _Mensaje(playerid, 0, "2", "No tienes una casa en la ranura 2.");
    if (_enPos(playerid, 1.5, InfoCasa[casa2][cExteriorX], InfoCasa[casa2][cExteriorY], InfoCasa[casa2][cExteriorZ]) && user[playerid][jVirtualWorld] == InfoCasa[casa2][c_VW]) {
        if (casa2 != INVALID_CASA_ID && strcmp(NombreRJugador(playerid), InfoCasa[casa2][cComprador], true) == 0) {
            new sell = InfoCasa[casa2][cPrecio];
            Ganancia(playerid, sell);
            format(string, sizeof(string), "Has vendido tu casa. Has recuperado %d$", sell);
            _Mensaje(playerid, 2, "0", string);
            VenderCasa(playerid, casa2);
            user[playerid][jCasaKey2] = INVALID_CASA_ID;
        } else _Mensaje(playerid, 0, "580", "No tienes una casa o no esta a tu nombre.");
    } else _Mensaje(playerid, 0, "580", "Necesitas estar cerca su casa para venderla.");
    return 1;
}

CMD:vendermicasa(playerid, params[])
{
	if (user[playerid][jCasaKey] == INVALID_CASA_ID) return _Mensaje(playerid, 0, "2", "No tienes una casa en la ranura 1.");
    new string[128], playerid2, price;
    if (sscanf(params, "dd", playerid2, price)) return _Mensaje(playerid, 3, "0", "/vendermicasa [id jugador] [precio]");
    if (price < 1) return _Mensaje(playerid, 0, "384", "Precio debe ser mayor a 0.");
    if (playerid == playerid2) return _Mensaje(playerid, 0, "385", "No puedes venderte la casa a ti mismo.");
    if (!IsPlayerConnected(playerid2)) return _Mensaje(playerid, 0, "75", "Jugador no conectado.");
    if (CercaDelWeon(8.0, playerid, playerid2)) {
        CasaOffer[playerid2] = playerid;
        CasaPrice[playerid2] = price;
        format(string, sizeof(string), "* Ofreciste a %s para comprar tu casa por $%d.", NombreJugador(playerid2), price);
        _Mensaje(playerid, 4, "33CCFF", string);
        format(string, sizeof(string), "* %s te ha ofrecido su casa por $%d, (/aceptar).", NombreJugador(playerid), price);
        _Mensaje(playerid2, 4, "33CCFF", string);
        return 1;
    } else _Mensaje(playerid, 0, "133", "El jugador no se encuentra cerca de tí.");
    return 1;
}

VenderCasa(playerid, houseid)
{
	format(InfoCasa[houseid][cNombre], 32, "Dulce Hogar");
	InfoCasa[houseid][cComprado] = 0;
	InfoCasa[houseid][cEstado] = 0;
	InfoCasa[houseid][cCasaDinero] = 0;
	InfoCasa[houseid][cRentable] = 0;
	InfoCasa[houseid][cRentaPrecio] = 0;
	format(InfoCasa[houseid][cComprador], 32, "enventa");
	ActualizarCasa(houseid);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	return 1;
}

CMD:ropa(playerid)
{
	new Str[18 * MAX_ROPA], Ropa[MAX_ROPA][20], strI[20], ropita;
	if (!EstaEnTiendaRopa(playerid)) return _Mensaje(playerid, 0, "583", "Necesitas estar en una tienda de ropa o en el armario de tu casa");
	if(user[playerid][jPremium] == 0) ropita = 4;
	else if(user[playerid][jPremium] == 1) ropita = 5;
	else if(user[playerid][jPremium] == 2) ropita = 6;
	else if(user[playerid][jPremium] == 3) ropita = MAX_ROPA;
	Loop(i, ropita, 0)
	{
		if(!user[playerid][jRopaArmario][i])
		{
			Ropa[i] = "Nada";
		} else format(Ropa[i], 20, "%d", user[playerid][jRopaArmario][i]);
		format(strI, sizeof(strI), "Ranura %d - '%s'\n", i, Ropa[i]);
		strins(Str, strI, strlen(Str));
	}
	SetPVarInt(playerid, "ROPA_EDITAR", 0);
	Dialog(playerid, D_EDITARROPA, DIALOG_STYLE_LIST, "{D6E1EB}Escoge la ranura a editar", Str, "Elegir", "Cancelar");
	return 1;
}

CMD:ponerarmario(playerid)
{
	if(user[playerid][jCasaKey] == INVALID_CASA_ID && user[playerid][jCasaKey2] == INVALID_CASA_ID && user[playerid][jCasaLlaves] == INVALID_CASA_ID) return _Mensaje(playerid, 0, "580", "No tienes ninguna casa o no tienes las llaves de una.");
	if (GetPlayerVirtualWorld(playerid) == user[playerid][jCasaKey] + 6000)
	{
		GetPlayerPos(playerid, InfoCasa[user[playerid][jCasaKey]][cArmarioPos][0], InfoCasa[user[playerid][jCasaKey]][cArmarioPos][1], InfoCasa[user[playerid][jCasaKey]][cArmarioPos][2]);
		_Mensaje(playerid, 4, "33CCFF", "* Configuraste la posición del armario. Recuerda donde está.");
		ActualizarCasa(user[playerid][jCasaKey]);
	}
	else if (GetPlayerVirtualWorld(playerid) == user[playerid][jCasaKey2] + 6000)
	{
		GetPlayerPos(playerid, InfoCasa[user[playerid][jCasaKey2]][cArmarioPos][0], InfoCasa[user[playerid][jCasaKey2]][cArmarioPos][1], InfoCasa[user[playerid][jCasaKey2]][cArmarioPos][2]);
		_Mensaje(playerid, 4, "33CCFF", "* Configuraste la posición del armario. Recuerda donde está.");
		ActualizarCasa(user[playerid][jCasaKey2]);
	}
	else if (GetPlayerVirtualWorld(playerid) == user[playerid][jCasaLlaves] + 6000)
	{
		GetPlayerPos(playerid, InfoCasa[user[playerid][jCasaLlaves]][cArmarioPos][0], InfoCasa[user[playerid][jCasaLlaves]][cArmarioPos][1], InfoCasa[user[playerid][jCasaLlaves]][cArmarioPos][2]);
		_Mensaje(playerid, 4, "33CCFF", "* Configuraste la posición del armario. Recuerda donde está.");
		ActualizarCasa(user[playerid][jCasaLlaves]);
	} else return _Mensaje(playerid, 0, "582", "Debes poner el armario en el interior de tu casa.");
	return 1;
}
CMD:armario(playerid)
{
	if(user[playerid][jCasaKey] == INVALID_CASA_ID && user[playerid][jCasaKey2] == INVALID_CASA_ID && user[playerid][jCasaLlaves] == INVALID_CASA_ID) return _Mensaje(playerid, 0, "580", "No tienes ninguna casa o no tienes las llaves de una.");
	if (GetPlayerVirtualWorld(playerid) == user[playerid][jCasaKey] + 6000)
	{
		if (_enPos(playerid, 3.0, InfoCasa[user[playerid][jCasaKey]][cArmarioPos][0], InfoCasa[user[playerid][jCasaKey]][cArmarioPos][1], InfoCasa[user[playerid][jCasaKey]][cArmarioPos][2]))
		{
			Dialog(playerid, D_Carmario, DIALOG_STYLE_LIST, "{D6E1EB}Opciones", "{ffffff}Ropero\nArmario", "Seleccionar", "Atrás");
			DentroCasa[playerid] = user[playerid][jCasaKey];
		} else return _Mensaje(playerid, 0, "584", "No estás en el armario o no lo has creado usa el comando /ponerarmario.");
	}
	else if (GetPlayerVirtualWorld(playerid) == user[playerid][jCasaKey2] + 6000)
	{
		if (_enPos(playerid, 3.0, InfoCasa[user[playerid][jCasaKey2]][cArmarioPos][0], InfoCasa[user[playerid][jCasaKey2]][cArmarioPos][1], InfoCasa[user[playerid][jCasaKey2]][cArmarioPos][2]))
		{
			Dialog(playerid, D_Carmario, DIALOG_STYLE_LIST, "{D6E1EB}Opciones", "{ffffff}Ropero\nArmario", "Seleccionar", "Atrás");
			DentroCasa[playerid] = user[playerid][jCasaKey2];
		} else return _Mensaje(playerid, 0, "584", "No estás en el armario o no lo has creado usa el comando /ponerarmario.");
	}
	else if (GetPlayerVirtualWorld(playerid) == user[playerid][jCasaLlaves] + 6000)
	{
		if (_enPos(playerid, 3.0, InfoCasa[user[playerid][jCasaLlaves]][cArmarioPos][0], InfoCasa[user[playerid][jCasaLlaves]][cArmarioPos][1], InfoCasa[user[playerid][jCasaLlaves]][cArmarioPos][2]))
		{
			Dialog(playerid, D_Carmario, DIALOG_STYLE_LIST, "{D6E1EB}Opciones", "{ffffff}Ropero", "Seleccionar", "Atrás");
			DentroCasa[playerid] = user[playerid][jCasaLlaves];
		} else return _Mensaje(playerid, 0, "584", "No estás en el armario o no lo has creado usa el comando /ponerarmario.");
	} else return _Mensaje(playerid, 0, "585", "No estás en ninguna casa.");
	return 1;
}
CMD:casa(playerid) return cmd_micasa(playerid);
CMD:micasa(playerid)
{
	new tDialogo[300];
    if(user[playerid][jCasaKey] == INVALID_CASA_ID && user[playerid][jCasaKey2] == INVALID_CASA_ID && user[playerid][jCasaLlaves] == INVALID_CASA_ID) return _Mensaje(playerid, 0, "580", "No tienes ninguna casa o no tienes las llaves de una.");
    if (GetPlayerVirtualWorld(playerid) == user[playerid][jCasaKey] + 6000)
	{
        format(tDialogo, sizeof(tDialogo), "{FFFFFF}Nombre ({00C446}%s{FFFFFF})\nDinero ({00C200}$%d{FFFFFF})", InfoCasa[user[playerid][jCasaKey]][cNombre], InfoCasa[user[playerid][jCasaKey]][cCasaDinero]);
        Dialog(playerid, D_CASA_OPCIONES, DIALOG_STYLE_LIST, "{D6E1EB}Opciones:", tDialogo, "Seleccionar", "Cancelar");
        DentroCasa[playerid] = user[playerid][jCasaKey];
    }
	else if (GetPlayerVirtualWorld(playerid) == user[playerid][jCasaKey2] + 6000)
	{
        format(tDialogo, sizeof(tDialogo), "{FFFFFF}Nombre ({00C446}%s{FFFFFF})\nDinero ({00C200}$%d{FFFFFF})", InfoCasa[user[playerid][jCasaKey2]][cNombre], InfoCasa[user[playerid][jCasaKey2]][cCasaDinero]);
        Dialog(playerid, D_CASA_OPCIONES, DIALOG_STYLE_LIST, "{D6E1EB}Opciones:", tDialogo, "Seleccionar", "Cancelar");
        DentroCasa[playerid] = user[playerid][jCasaKey2];
    }
	else if (GetPlayerVirtualWorld(playerid) == user[playerid][jCasaLlaves] + 6000)
	{
        format(tDialogo, sizeof(tDialogo), "{FFFFFF}Nombre ({00C446}%s{FFFFFF})\nDinero ({00C200}$%d{FFFFFF})", InfoCasa[user[playerid][jCasaLlaves]][cNombre], InfoCasa[user[playerid][jCasaLlaves]][cCasaDinero]);
        Dialog(playerid, D_CASA_OPCIONES, DIALOG_STYLE_LIST, "{D6E1EB}Opciones:", tDialogo, "Seleccionar", "Cancelar");
        DentroCasa[playerid] = user[playerid][jCasaLlaves];
    } else return _Mensaje(playerid, 0, "585", "No estás en ninguna casa.");
    return 1;
}

CMD:cseguro(playerid, params[]) {
	new casa = user[playerid][jCasaKey], casa2 = user[playerid][jCasaKey2], casa3 = user[playerid][jCasaLlaves];
    if (casa != INVALID_CASA_ID && (_enPos(playerid, 2.0, InfoCasa[casa][cExteriorX], InfoCasa[casa][cExteriorY], InfoCasa[casa][cExteriorZ]) || _enPos(playerid, 5.0, InfoCasa[casa][cInteriorX], InfoCasa[casa][cInteriorY], InfoCasa[casa][cInteriorZ]))) {
        if (InfoCasa[casa][cEstado] == 1) {
            InfoCasa[casa][cEstado] = 0;
            AccionesRol(playerid, 0, "saca sus llaves de casa y lo cierra.");
        } else {
            InfoCasa[casa][cEstado] = 1;
            AccionesRol(playerid, 0, "saca sus llaves de casa y lo abre.");
        }
        ActualizarCasa(casa);
    } else if (casa2 != INVALID_CASA_ID && (_enPos(playerid, 2.0, InfoCasa[casa2][cExteriorX], InfoCasa[casa2][cExteriorY], InfoCasa[casa2][cExteriorZ]) || _enPos(playerid, 5.0, InfoCasa[casa2][cInteriorX], InfoCasa[casa2][cInteriorY], InfoCasa[casa2][cInteriorZ]))) {
        if (InfoCasa[casa2][cEstado] == 1) {
            InfoCasa[casa2][cEstado] = 0;
            AccionesRol(playerid, 0, "saca sus llaves de casa y lo cierra.");
        } else {
            InfoCasa[casa2][cEstado] = 1;
            AccionesRol(playerid, 0, "saca sus llaves de casa y lo abre.");
        }
        ActualizarCasa(casa2);
    } else if (casa3 != INVALID_CASA_ID && (_enPos(playerid, 2.0, InfoCasa[casa3][cExteriorX], InfoCasa[casa3][cExteriorY], InfoCasa[casa3][cExteriorZ]) || _enPos(playerid, 5.0, InfoCasa[casa3][cInteriorX], InfoCasa[casa3][cInteriorY], InfoCasa[casa3][cInteriorZ]))) {
        if (InfoCasa[casa3][cEstado] == 1) {
            InfoCasa[casa3][cEstado] = 0;
            AccionesRol(playerid, 0, "saca sus llaves de casa y lo cierra.");
        } else {
            InfoCasa[casa3][cEstado] = 1;
            AccionesRol(playerid, 0, "saca sus llaves de casa y lo abre.");
        }
        ActualizarCasa(casa3);
    } else _Mensaje(playerid, 0, "590", "No tienes una casa o no estás cerca de la puerta para hacer esto.");
    return 1;
}

CMD:crseguro(playerid, params[]) {
    new casa = user[playerid][jCasaRenta];
    if (casa != INVALID_CASA_ID && (_enPos(playerid, 2.0, InfoCasa[casa][cExteriorX], InfoCasa[casa][cExteriorY], InfoCasa[casa][cExteriorZ]) || _enPos(playerid, 2.0, InfoCasa[casa][cExteriorX], InfoCasa[casa][cExteriorY], InfoCasa[casa][cExteriorZ]))) {
        if (InfoCasa[casa][cEstado] == 1) {
            InfoCasa[casa][cEstado] = 0;
            AccionesRol(playerid, 0, "saca sus llaves de casa rentable y lo cierra.");
        } else {
            InfoCasa[casa][cEstado] = 1;
            AccionesRol(playerid, 0, "saca sus llaves de casa rentable y lo abre.");
        }
        ActualizarCasa(casa);
    } else _Mensaje(playerid, 0, "591", "No tienes una casa rentada o no estás cerca de la puerta para hacer esto.");
    return 1;
}

CMD:rentar(playerid, params[]) {
    new string[128], Float: oldposx, Float: oldposy, Float: oldposz;
    new playername[MAX_PLAYER_NAME];
    GetPlayerName(playerid, playername, sizeof(playername));
    GetPlayerPos(playerid, oldposx, oldposy, oldposz);
    for (new h = 0; h < sizeof(InfoCasa); h++) {
        if (_enPos(playerid, 2.0, InfoCasa[h][cExteriorX], InfoCasa[h][cExteriorY], InfoCasa[h][cExteriorZ]) && InfoCasa[h][cRentaPrecio] >= 1) {
            if (!strcmp(InfoCasa[h][cComprador], "enventa", true)) {
                _Mensaje(playerid, 0, "592", "No se puede alquilar una casa sin dueño.");
            } else {
                if (user[playerid][jCasaRenta] != INVALID_CASA_ID) { _Mensaje(playerid, 0, "594", "Ya tienes una casa en renta, escribe /desrentar si quieres dejar de rentar en la actual."); return 1; }
                if (ComprobarDineroJ(playerid) > InfoCasa[h][cRentaPrecio]) {
                    if (InfoCasa[h][cRentable] == 0) {
                        _Mensaje(playerid, 0, "595", "Está casa no está en renta, lo sentimos.");
                        return 1;
                    } else {
                        user[playerid][jCasaRenta] = h;
                        DarDineroGC(playerid, -InfoCasa[h][cRentaPrecio]);
                        InfoCasa[h][cCasaDinero] = InfoCasa[h][cCasaDinero] + InfoCasa[h][cRentaPrecio];
                        SetPlayerInterior(playerid, InfoCasa[h][cInterior]);
                        CargarObjetos(playerid);
                        SetPlayerPos(playerid, InfoCasa[h][cInteriorX], InfoCasa[h][cInteriorY], InfoCasa[h][cInteriorZ]);
                        SetPlayerFacingAngle(playerid, InfoCasa[h][cInteriorA]);
                        TextoPantalla(playerid, "~w~Bienvenido a Casa", 5000, 3);
                        user[playerid][jInterior] = InfoCasa[h][cInterior];
                        user[playerid][jVirtualWorld] = 6000 + h;
                        SetPlayerVirtualWorld(playerid, h + 6000);
                        _Mensaje(playerid, 2, "0", "Felicitaciones. Puedes salir en cualquier momento por este mismo lugar, escribiendo /salir.");
                        _Mensaje(playerid, 2, "0", "Usa /ayuda casa para ver los comandos disponibles.");
                        format(string, sizeof(string), "%s rento la casa id %d (dueño %s) por $%d.", NombreRJugador(playerid), h, InfoCasa[h][cComprador], InfoCasa[h][cRentaPrecio]);
                        Log("Registros/Casas.log", string);
                        return 1;
                    }
                } else return _Mensaje(playerid, 0, "596", "No tienes dinero para rentar esta casa!");
            }
        }
    }
    return 1;
}

CMD:desrentar(playerid, params[]) {
    new playername[MAX_PLAYER_NAME];
    GetPlayerName(playerid, playername, sizeof(playername));
    if (user[playerid][jCasaRenta] != INVALID_CASA_ID) {
        user[playerid][jCasaRenta] = INVALID_CASA_ID;
        _Mensaje(playerid, 2, "0", "Quedaste sin casa.");
    }
    return 1;
}

CMD:timbre(playerid)
{
	for (new h; h < sizeof(InfoCasa); h++) if (_enPos(playerid, 2.0, InfoCasa[h][cExteriorX], InfoCasa[h][cExteriorY], InfoCasa[h][cExteriorZ]) && user[playerid][jVirtualWorld] == InfoCasa[h][c_VW]) {
		foreach(Player, i) if (GetPlayerVirtualWorld(i) == h + 6000 && GetPlayerInterior(i) == InfoCasa[h][cInterior]) {
			TextoPantalla(i, "~n~~n~~n~~n~~n~~n~~n~~n~~w~Timbre...", 4000, 3);
		}
		AccionesRol(playerid, 0, "presiona un botón al lado de la puerta y toca el timbre de la casa.");
	}
	return 1;
}

CMD:irintcasa(playerid, params[]) {
    if (user[playerid][jAdmin] >= 5) {
        new housenum;
        if (sscanf(params, "d", housenum)) return _Mensaje(playerid, 3, "0", "/irintcasa [casa id]");
        if (housenum < 0 || housenum >= MAX_CASAS) return _Mensaje(playerid, 0, "453", "ID de casa errónea.");

        SetPlayerInterior(playerid, InfoCasa[housenum][cInterior]);
        SetPlayerPos(playerid, InfoCasa[housenum][cInteriorX], InfoCasa[housenum][cInteriorY], InfoCasa[housenum][cInteriorZ]);
        TextoPantalla(playerid, "~w~Teletransportado", 5000, 1);
        user[playerid][jInterior] = InfoCasa[housenum][cInterior];
    }
    return 1;
}

CMD:preciorenta(playerid, params[]) {
    new string[128], fee, cid = user[playerid][jCasaKey], cid2 = user[playerid][jCasaKey2];
    if (sscanf(params, "d", fee)) return _Mensaje(playerid, 3, "0", "/preciorenta [precio]");
    if (cid != INVALID_CASA_ID && (_enPos(playerid, 2.0, InfoCasa[cid][cExteriorX], InfoCasa[cid][cExteriorY], InfoCasa[cid][cExteriorZ]) || _enPos(playerid, 2.0, InfoCasa[cid][cInteriorX], InfoCasa[cid][cInteriorY], InfoCasa[cid][cInteriorZ]))) {
        if (!(1 <= fee <= 100)) {
            _Mensaje(playerid, 0, "598", "Renta minima es $1, maxima es $100.");
        } else {
            InfoCasa[cid][cRentaPrecio] = fee;
            InfoCasa[cid][cRentable] = 1;
            format(string, sizeof(string), "* Colocaste tu casa en renta y el precio del mismo es de $%i.", InfoCasa[cid][cRentaPrecio]);
            _Mensaje(playerid, 4, "33CCFF", string);
        }
    } else if (cid2 != INVALID_CASA_ID && (_enPos(playerid, 2.0, InfoCasa[cid2][cExteriorX], InfoCasa[cid2][cExteriorY], InfoCasa[cid2][cExteriorZ]) || _enPos(playerid, 2.0, InfoCasa[cid2][cInteriorX], InfoCasa[cid2][cInteriorY], InfoCasa[cid2][cInteriorZ]))) {
        if (!(1 <= fee <= 100)) {
            _Mensaje(playerid, 0, "598", "Renta minima es $1, maxima es $100.");
        } else {
            InfoCasa[cid2][cRentaPrecio] = fee;
            InfoCasa[cid][cRentable] = 1;
            format(string, sizeof(string), "* Colocaste tu casa en renta y el precio del mismo es de $%i.", InfoCasa[cid2][cRentaPrecio]);
            _Mensaje(playerid, 4, "33CCFF", string);
        }
    } else _Mensaje(playerid, 0, "37", "No eres dueño de una casa o no estas cerca de una.");
    return 1;
}

CMD:ponerrenta(playerid, params[]) {
    new cid = user[playerid][jCasaKey], cid2 = user[playerid][jCasaKey2];
    if (cid != INVALID_CASA_ID && (_enPos(playerid, 2.0, InfoCasa[cid][cExteriorX], InfoCasa[cid][cExteriorY], InfoCasa[cid][cExteriorZ]) || _enPos(playerid, 2.0, InfoCasa[cid][cInteriorX], InfoCasa[cid][cInteriorY], InfoCasa[cid][cInteriorZ]))) {
        if (!InfoCasa[cid][cRentable]) {
            InfoCasa[cid][cRentable] = 1;
            _Mensaje(playerid, 2, "0", "Esta casa ahora está en renta.");
        } else {
            InfoCasa[cid][cRentable] = 0;
            _Mensaje(playerid, 2, "0", "Esta casa ya no está en renta.");
        }
    } else if (cid2 != INVALID_CASA_ID && (_enPos(playerid, 2.0, InfoCasa[cid2][cExteriorX], InfoCasa[cid2][cExteriorY], InfoCasa[cid2][cExteriorZ]) || _enPos(playerid, 2.0, InfoCasa[cid2][cInteriorX], InfoCasa[cid2][cInteriorY], InfoCasa[cid2][cInteriorZ]))) {
        if (!InfoCasa[cid2][cRentable]) {
            InfoCasa[cid2][cRentable] = 1;
            _Mensaje(playerid, 2, "0", "Esta casa ahora está en renta.");
        } else {
            InfoCasa[cid2][cRentable] = 0;
            _Mensaje(playerid, 2, "0", "Esta casa ya no está en renta.");
        }
    } else _Mensaje(playerid, 0, "37", "No eres dueño de una casa o no estas cerca de una.");
    return 1;
}

CMD:ircasa(playerid, params[]) {
    new cid, string[128];
    if (!IsPlayerConnected(playerid)) return _Mensaje(playerid, 0, "137", "Usted necesita estar conectado para poder utilzar cualquier comando.");
    if (user[playerid][jAdmin] < 1) return _Mensaje(playerid, 0, "599", "Tú no tienes acceso a el comando /Ircasa.");
    if (sscanf(params, "i", cid)) return _Mensaje(playerid, 3, "0", "/ircasa [casa id]");
    if (cid < 0 || cid >= MAX_CASAS) return _Mensaje(playerid, 0, "453", "ID de casa errónea.");
    if (!InfoCasa[cid][cTipo]) return _Mensaje(playerid, 0, "138", "ID Invalida.");
    SetPlayerVirtualWorld(playerid, InfoCasa[cid][c_VW]);
    SetPlayerInterior(playerid, InfoCasa[cid][c_Int]);
    SetPlayerPos(playerid, InfoCasa[cid][cExteriorX], InfoCasa[cid][cExteriorY], InfoCasa[cid][cExteriorZ]);
    format(string, sizeof(string), "Usted se teletransporto a la Casa ID %d.", cid);
    _Mensaje(playerid, 2, "0", string);
    return 1;
}

CMD:eliminarcp(playerid) return cmd_eliminarcheckpoint(playerid);
CMD:eliminarcheckpoint(playerid)
{
	if (Granjero[playerid] == 1) return _Mensaje(playerid, 0, "75", "Te encuentras cosechando, termina antes.");
	DisablePlayerCheckpoint(playerid);
	DeletePVar(playerid, "EnCheckPoint");
	_Bomb2Call[playerid] = 0;
	_Medic2Call[playerid] = 0;
	DeletePVar(playerid, "TipoCarga");
	_CamVeh[playerid] = INVALID_VEHICLE_ID;
	TogglePlayerAllDynamicCPs(playerid, true);
	_Mensaje(playerid, 2, "0", "El checkpoint que tenías pendiente fue eliminado, junto a los posibles bugeados.");
	return 1;
}

CMD:recon(playerid, params[]) return cmd_spec(playerid, params);
CMD:spec(playerid, params[]) {
    if(user[playerid][jAdmin] < 1) {
        _Mensaje(playerid, 0, "1", "No puedes usar este comando.");
        return 1;
    }
    new tmp[32];
    if(EnServicioADM[playerid] == 0) return _Mensaje(playerid, 0, "158", "Sistema responsable. [Escribe] /adminservicio");
    if(sscanf(params, "s[32]", tmp)) return _Mensaje(playerid, 0, "158", "/spec (playerid/off)");
    if(strcmp("off", tmp, true, strlen(tmp)) == 0) {
        if(Spectando[playerid] > 0 && user[playerid][jAdmin] >= 1) {
            SpectadorID[Spectate[playerid]] = 999;
            Spectando[playerid] = 0;
            Spectate[playerid] = 999;
            SetPVarInt(playerid, "SpecState", -1);
            TogglePlayerSpectating(playerid, false);
            SetCameraBehindPlayer(playerid);
            SetPlayerPos(playerid, user[playerid][jPosicion_X], user[playerid][jPosicion_Y], user[playerid][jPosicion_Z]);
            SetPlayerInterior(playerid, user[playerid][jInterior]);
            SetPlayerVirtualWorld(playerid, user[playerid][jVirtualWorld]);
            CargarObjetos(playerid);
            return 1;
        } else {
            _Mensaje(playerid, 0, "158", "No puedes spectar a esta persona.");
            return 1;
        }
    }
    new playerid2 = ReturnUser(tmp);
    if(IsPlayerConnected(playerid2)) {
        if(playerid2 != INVALID_PLAYER_ID) {
            if(Spectando[playerid] == 0) {
                GetPlayerPos(playerid, user[playerid][jPosicion_X], user[playerid][jPosicion_Y], user[playerid][jPosicion_Z]);
                user[playerid][jInterior] = GetPlayerInterior(playerid);
                user[playerid][jVirtualWorld] = GetPlayerVirtualWorld(playerid);
                if(IsPlayerInAnyVehicle(playerid2)) {
                    TogglePlayerSpectating(playerid, true);
                    new carid = GetPlayerVehicleID(playerid2);
                    PlayerSpectateVehicle(playerid, carid);
                    SetPlayerInterior(playerid, GetPlayerInterior(playerid2));
                    SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(playerid2));
                    SetPVarInt(playerid, "SpecState", GetPlayerState(playerid2));
                } else {
                    TogglePlayerSpectating(playerid, true);
                    PlayerSpectatePlayer(playerid, playerid2);
                    SetPlayerInterior(playerid, GetPlayerInterior(playerid2));
                    SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(playerid2));
                    SetPVarInt(playerid, "SpecState", GetPlayerState(playerid2));
                }
                SpectadorID[playerid2] = playerid;
                Spectate[playerid] = playerid2;
                Spectando[playerid] = 1;
            } else {
                if(IsPlayerInAnyVehicle(playerid2)) {
                    TogglePlayerSpectating(playerid, true);
                    new carid = GetPlayerVehicleID(playerid2);
                    PlayerSpectateVehicle(playerid, carid);
                    SetPlayerInterior(playerid, GetPlayerInterior(playerid2));
                    SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(playerid2));
                    SetPVarInt(playerid, "SpecState", GetPlayerState(playerid2));
                } else {
                    TogglePlayerSpectating(playerid, true);
                    PlayerSpectatePlayer(playerid, playerid2);
                    SetPlayerInterior(playerid, GetPlayerInterior(playerid2));
                    SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(playerid2));
                    SetPVarInt(playerid, "SpecState", GetPlayerState(playerid2));
                }
                SpectadorID[Spectate[playerid]] = 999;
                SpectadorID[playerid2] = playerid;
                Spectate[playerid] = playerid2;
                Spectando[playerid] = 1;
            }
        }
    } else _Mensaje(playerid, 0, "158", "Ese jugador está desconectado.");
    return 1;
}

CMD:cambiarhora(playerid, params[])
{
	new string[128];
	if (user[playerid][jAdmin] < 4) return _Mensaje(playerid, 0, "492", "Tú no tienes acceso a este comando.");
	if (sscanf(params, "i", params[0])) return _Mensaje(playerid, 3, "0", "/cambiarhora 'Hora'");
	SetWorldTime(params[0]);
	format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Gane Admin %s utilizó '/cambiarhora', (Hora actual: %d.)", NombreJugador(playerid), params[0]);
	MensajeAdmin(string);
	return 1;
}

CMD:cambiarclima(playerid, params[])
{
	if (user[playerid][jAdmin] < 4) return _Mensaje(playerid, 0, "492", "Tú no tienes acceso a este comando.");
	new weather, string[128];
	if (sscanf(params, "d", weather)) return _Mensaje(playerid, 3, "0", "/cambiarclima [id clima]");
	if (weather < 0 || weather > 45) { _Mensaje(playerid, 0, "158", "Id's de climas de 0 a 45."); return 1; }
	clima = weather;
	SetWeather(weather);
	SetPlayerWeather(playerid, weather);
	format(string, sizeof(string), "[AvisoAdmin]: {FFFFFF}Game Admin %s utilizó '/cambiarclima', (Clima actual: %d).", NombreRJugador(playerid), weather);
	MensajeAdmin(string);
	return 1;
}

//- Sistema de eventos
CMD:adminevento(playerid, params[]) {
    if (user[playerid][jAdmin] < 5) return _Mensaje(playerid, 0, "492", "Tú no tienes acceso a este comando.");
    _Mensaje(playerid, 4, "A7CE00", "/lugarevento /tipoevento /editarevento /abrirevento");
    _Mensaje(playerid, 4, "A7CE00", "/anunciar /cerrarevento /iniciarevento /borrarevento");
    return 1;
}

CMD:tipoevento(playerid, params[]) {
    if (user[playerid][jAdmin] < 5) return _Mensaje(playerid, 0, "492", "Tú no tienes acceso a este comando.");
    if (isnull(params)) {
    	_Mensaje(playerid, 3, "0", "/tipoevento [tipo]");
    	_Mensaje(playerid, 2, "0", "Nombres: normal, cocheb, ninguno.");
    	return 1;
	}
	if (strcmp(params, "normal", true) == 0) {
  		InfoEvento[iTipo] = 1;
		_Mensaje(playerid, 2, "0", "Ajustaste el tipo de evento a normal.");
	} else if (strcmp(params, "cocheb", true) == 0) {
		InfoEvento[iTipo] = 2;
		_Mensaje(playerid, 2, "0", "Ajustaste el tipo de evento a coche bomba.");
    } else if (strcmp(params, "ninguno", true) == 0) {
		InfoEvento[iTipo] = 0;
		_Mensaje(playerid, 2, "0", "Ajustaste el tipo de evento a Ninguno.");
    }
    return 1;
}

CMD:editarevento(playerid, params[]) {
    if (user[playerid][jAdmin] < 5) return _Mensaje(playerid, 0, "492", "Tú no tienes acceso a este comando.");
	if (InfoEvento[iTipo] == 0) return _Mensaje(playerid, 0, "1", "No se ha establecido un tipo de evento.");
 	new choice[32], opstring[256];
    if (sscanf(params, "s[32]S[256]", choice, opstring)) {
		_Mensaje(playerid, 3, "0", "/editarevento [nombre]");
		_Mensaje(playerid, 2, "0", "Nombres: mensaje, musica, vida, chaleco");
	}
	if (strcmp(choice, "mensaje", true) == 0) {
		if (!opstring[0]) return _Mensaje(playerid, 3, "0", "/editarevento mensaje [texto]");
		strmid(InfoEvento[iMensaje], opstring, 0, strlen(opstring), 256);
		_Mensaje(playerid, 2, "0", "Ajustaste el mensaje del evento.");
	} else if (strcmp(choice, "musica", true) == 0) {
		if (!opstring[0]) return _Mensaje(playerid, 3, "0", "/editarevento música [link]");
		strmid(InfoEvento[iMusica], opstring, 0, strlen(opstring), 256);
		_Mensaje(playerid, 2, "0", "Ajustaste la música del evento.");
	} else if (strcmp(choice, "vida", true) == 0) {
		if (!opstring[0]) return _Mensaje(playerid, 3, "0", "/editarevento vida [cantidad]");
		new Float: health;
		health = floatstr(opstring);
		InfoEvento[iVida] = health;
		_Mensaje(playerid, 2, "0", "Ajustaste el spawn vida del evento.");
	} else if (strcmp(choice, "chaleco", true) == 0) {
		if (!opstring[0]) return _Mensaje(playerid, 3, "0", "/editarevento chaleco [cantidad]");
		new Float: armor;
		armor = floatstr(opstring);
		InfoEvento[iChaleco] = armor;
		_Mensaje(playerid, 2, "0", "Ajustaste la armadura del evento.");
	}
    return 1;
}

CMD:abrirevento(playerid, params[]) {
	if (user[playerid][jAdmin] < 5) return _Mensaje(playerid, 0, "492", "Tú no tienes acceso a este comando.");
	if (InfoEvento[iEtapa] == 0) {
		if (InfoEvento[iTipo] == 0) return _Mensaje(playerid, 0, "12", "No se ha definido el tipo de evento.");
		if (InfoEvento[iVida] == 0) return _Mensaje(playerid, 0, "12", "No se ha definido la salud del evento.");
		if (InfoEvento[iPosicionX] == 0 || InfoEvento[iPosicionY] == 0 || InfoEvento[iPosicionZ] == 0) return _Mensaje(playerid, 0, "12", "No se ha definido la posición de evento.");
		InfoEvento[iEtapa] = 1;
		if (InfoEvento[iTipo] == 2) {
		 	EventoVBomba();
    		iObjeto[0] = CreateObject(2990, 1374.70349, 2192.37427, 9.32361,   0.00000, 0.00000, 0.00000);
			iObjeto[1] = CreateObject(2990, 1364.79016, 2192.39355, 9.32361,   0.00000, 0.00000, 0.00000);
			iObjeto[2] = CreateObject(1533, 1358.29321, 2192.39966, 9.88074,   0.00000, 0.00000, 0.00000);
		}
		EscucharMusica(playerid, InfoEvento[iMusica]);
		_Mensaje(playerid, 0, "12", "Has abierto el evento, escribe /anunciar para avisar el mismo.");
	} else return _Mensaje(playerid, 0, "12", "Ya hay un evento creado escribe /borrarevento.");
	return 1;
}

CMD:salirevento(playerid, params[]) {
    if (GetPVarInt(playerid, "EnEvento") == 0) return _Mensaje(playerid, 0, "12", "No estás dentro de ningún evento.");
    if (InfoEvento[iEtapa] == 1 || InfoEvento[iEtapa] == 2) return _Mensaje(playerid, 0, "12", "No puedes salir del evento, hasta que comience.");
    SetPVarInt(playerid, "EnEvento", 0);
    TogglePlayerControllable(playerid, 1);
    SetPlayerSkin(playerid, user[playerid][jRopa]);
    SetPlayerPos(playerid, jEvento[playerid][eVariable][1], jEvento[playerid][eVariable][2], jEvento[playerid][eVariable][3]);
    SetPlayerVirtualWorld(playerid, jEvento[playerid][eVW]);
    SetPlayerFacingAngle(playerid, jEvento[playerid][eVariable][0]);
    SetPlayerInterior(playerid, jEvento[playerid][eInterior]);
    Sangre_(playerid, jEvento[playerid][eVariable][4]);
    Chaleco_(playerid, jEvento[playerid][eVariable][5]);
    SetPlayerColor(playerid, C_PLAYERBLANCO);
    StopAudioStreamForPlayer(playerid);
    for (new i = 0; i < 6; i++) { jEvento[playerid][eVariable][i] = 0; }
    jEvento[playerid][eVW] = 0;
    jEvento[playerid][eInterior] = 0;
    _Mensaje(playerid, 4, "33CCFF", "Has salido del evento de la administración.");
    return 1;
}

CMD:lugarevento(playerid, params[]) {
	if (user[playerid][jAdmin] < 5) return _Mensaje(playerid, 0, "492", "Tú no tienes acceso a este comando.");
	GetPlayerPos(playerid, InfoEvento[iPosicionX], InfoEvento[iPosicionY], InfoEvento[iPosicionZ]);
	InfoEvento[iInterior] = GetPlayerInterior(playerid);
	InfoEvento[iVirtualWorld] = GetPlayerVirtualWorld(playerid);
	_Mensaje(playerid, 2, "0", "Has ajustado el lugar de spawn del evento.");
    return 1;
}

CMD:borrarevento(playerid, params[]) {
	if (user[playerid][jAdmin] < 5) return _Mensaje(playerid, 0, "492", "Tú no tienes acceso a este comando.");
	if (InfoEvento[iEtapa] == 0) return _Mensaje(playerid, 0, "12", "No hay ningún evento creado.");
	StopAudioStreamForPlayer(playerid);
	foreach(Player, i) {
		if (GetPVarInt(i, "EnEvento") == 1) {
		    TogglePlayerControllable(i, 1);
			SetPlayerSkin(i, user[i][jRopa]);
   			SetPlayerPos(i, jEvento[i][eVariable][1], jEvento[i][eVariable][2], jEvento[i][eVariable][3]);
            SetPlayerVirtualWorld(i, jEvento[i][eVW]);
            SetPlayerFacingAngle(i, jEvento[i][eVariable][0]);
            SetPlayerInterior(i, jEvento[i][eInterior]);
            Sangre_(i, jEvento[i][eVariable][4]);
            Chaleco_(i, jEvento[i][eVariable][5]);
            SetPlayerColor(i, C_PLAYERBLANCO);
            StopAudioStreamForPlayer(i);
            for (new d = 0; d < 6; d++) { jEvento[i][eVariable][d] = 0.0; }
            jEvento[i][eVW] = 0;
            jEvento[i][eInterior] = 0;
            SetPVarInt(i, "EnEvento", 0);
            _Mensaje(i, 2, "0", "Has sido expulsado del evento dado que el mismo ha terminado.");
		}
	}
	if(InfoEvento[iTipo] == 2){
    	DestroyObject(iObjeto[0]);
		DestroyObject(iObjeto[1]);
		DestroyObject(iObjeto[2]);
 		for(new i = 0; i < 32; i++) {
			DestroyVehicle(iVehiculo[i]);
    	}
	}
	InfoEvento[iPosicionX] = 0;
	InfoEvento[iPosicionY] = 0;
	InfoEvento[iPosicionZ] = 0;
	InfoEvento[iEtapa] = 0;
	InfoEvento[iTipo] = 0;
	InfoEvento[iVida] = 0;
	EnviarMensajeTodos(C_GCRP, "[Administración]{FFFFFF} El evento ha sido terminado por un administrador.");
    return 1;
}

CMD:iniciarevento(playerid, params[]) {
	if (user[playerid][jAdmin] < 5) return _Mensaje(playerid, 0, "492", "Tú no tienes acceso a este comando.");
	if (InfoEvento[iEtapa] == 3) {
		InfoEvento[iEtapa] = 4;
		foreach(Player, i) {
			if (GetPVarInt(i, "EnEvento") == 1) {
				if (InfoEvento[iTipo] == 1) {
					SetPlayerHealth(i, InfoEvento[iVida]);
					SetPlayerArmour(i, InfoEvento[iChaleco]);
					TogglePlayerControllable(i, 1);
				} else if (InfoEvento[iTipo] == 2) {
					SetPlayerHealth(i, InfoEvento[iVida]);
					TogglePlayerControllable(i, 0);
				}
				_Mensaje(i, 4, "33CCFF", "Ha iniciado el evento.");
			} else _Mensaje(i, 2, "0", "El evento ha iniciado. Si deseas unirte en el próximo entras con escribir /evento.");
		}
	} else _Mensaje(playerid, 0, "12", "Aún no has cerrado el evento, escribe /cerrarevento.");
    return 1;
}

CMD:anunciar(playerid, params[]) {
	if (user[playerid][jAdmin] < 5) return _Mensaje(playerid, 0, "492", "Tú no tienes acceso a este comando.");
	if (InfoEvento[iEtapa] == 1) {
		InfoEvento[iEtapa] = 2;
		_Mensaje(playerid, 2, "0", "Para bloquear el evento usa /cerrarevento");
		EnviarMensajeTodos(C_GCRP, "[Administración]{FFFFFF} Ha comenzado un evento, si deseas entrar escribe /evento.");
	} else _Mensaje(playerid, 0, "12", "Aún no has abierto un evento, escribe /abrirevento.");
    return 1;
}

CMD:cerrarevento(playerid, params[]) {
	if (user[playerid][jAdmin] < 5) return _Mensaje(playerid, 0, "492", "Tú no tienes acceso a este comando.");
 	if (InfoEvento[iEtapa] == 2) {
		InfoEvento[iEtapa] = 3;
	    if (InfoEvento[iTipo] == 2) DestroyObject(iObjeto[2]);
		_Mensaje(playerid, 2, "0", "Has bloqueado el evento, utiliza /inicarevento para iniciar oficialmente el evento.");
		EnviarMensajeTodos(C_GCRP, "[Administración]{FFFFFF} El evento actual ha sido bloqueado, intenta entrar la próxima.");
	} else _Mensaje(playerid, 0, "12", "Aún no has anunciado el evento, escribe /anunciar.");
    return 1;
}

CMD:evento(playerid, params[]) {
    if (user[playerid][jm_Derecha] > 0) { return _Mensaje(playerid, 0, "9", "Debes guardar tu objeto de la mano derecha."); }
    if (user[playerid][jm_Izquierda] > 0) { return _Mensaje(playerid, 0, "9", "Debes guardar tu objeto de la mano izquierda."); }
	if (IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "151", "No puedes ingresar al evento dentro de un vehículo.");
	if (InfoEvento[iEtapa] == 0) return _Mensaje(playerid, 0, "12", "La administración no ha creado ningún evento.");
	if (InfoEvento[iEtapa] == 1) return _Mensaje(playerid, 0, "12", "La administración se encuentra configurando el evento.");
	if (InfoEvento[iEtapa] == 3) return _Mensaje(playerid, 0, "12", "El evento se encuentra bloqueado, intentalo la próxima vez.");
	if (InfoEvento[iEtapa] == 4) return _Mensaje(playerid, 0, "12", "El evento se encuentra iniciado, intentalo la próxima vez.");
	SetPVarInt(playerid, "EnEvento", 1);
	GetPlayerHealth(playerid, jEvento[playerid][eVariable][4]);
	GetPlayerArmour(playerid, jEvento[playerid][eVariable][5]);
	jEvento[playerid][eVW] = GetPlayerVirtualWorld(playerid);
	jEvento[playerid][eInterior] = GetPlayerInterior(playerid);
	GetPlayerPos(playerid, jEvento[playerid][eVariable][1], jEvento[playerid][eVariable][2], jEvento[playerid][eVariable][3]);
	GetPlayerFacingAngle(playerid, jEvento[playerid][eVariable][0]);
	SetPlayerPos(playerid, InfoEvento[iPosicionX], InfoEvento[iPosicionY], InfoEvento[iPosicionZ]);
	SetPlayerInterior(playerid, InfoEvento[iInterior]);
	SetPlayerVirtualWorld(playerid, InfoEvento[iVirtualWorld]);
	_Mensaje(playerid, 4, "7ADA4F", InfoEvento[iMensaje]);
	SetPlayerHealth(playerid, InfoEvento[iVida]);
	SetPlayerArmour(playerid, InfoEvento[iChaleco]);
	SetPlayerColor(playerid, 0x7ADA4F00);
	EscucharMusica(playerid, InfoEvento[iMusica]);
    return 1;
}

CMD:repetir(playerid, params[]) {
	if (user[playerid][jAdmin] < 5) return _Mensaje(playerid, 0, "492", "Tú no tienes acceso a este comando.");
	if (InfoEvento[iEtapa] == 0) return _Mensaje(playerid, 0, "12", "No hay ningún vehículo creado.");
	foreach(Player, i) {
		if (GetPVarInt(i, "EnEvento") == 1) {
			EscucharMusica(i, InfoEvento[iMusica]);
		}
	}
	EscucharMusica(playerid, InfoEvento[iMusica]);
    return 1;
}


// Último comando - Ultimo comando.
funcion EventoVBomba(){
	iVehiculo[0] = CreateVehicle(402, 1326.1973, 2118.8928, 10.6636, -40.2600, -1, -1, 100);
	iVehiculo[1] = CreateVehicle(411, 1314.5972, 2153.8081, 10.6941, 6.6600, -1, -1, 100);
	iVehiculo[2] = CreateVehicle(429, 1378.7793, 2164.8770, 10.6552, 36.4200, -1, -1, 100);
	iVehiculo[3] = CreateVehicle(434, 1340.0458, 2166.6074, 10.8525, -48.1800, -1, -1, 100);
	iVehiculo[4] = CreateVehicle(451, 1325.0521, 2168.4104, 10.6430, -26.6400, -1, -1, 100);
	iVehiculo[5] = CreateVehicle(457, 1378.7094, 2182.8389, 10.6271, 100.5600, -1, -1, 100);
	iVehiculo[6] = CreateVehicle(480, 1335.8922, 2182.1252, 10.7124, 51.1200, -1, -1, 100);
	iVehiculo[7] = CreateVehicle(494, 1330.6438, 2149.5244, 10.8030, 111.6000, -1, -1, 100);
	iVehiculo[8] = CreateVehicle(504, 1353.4980, 2143.4944, 10.7193, 88.1400, -1, -1, 100);
	iVehiculo[9] = CreateVehicle(541, 1345.9536, 2120.0095, 10.5714, 148.0200, -1, -1, 100);
	iVehiculo[10] = CreateVehicle(568, 1346.1998, 2155.6047, 10.7953, 93.9600, -1, -1, 100);
	iVehiculo[11] = CreateVehicle(568, 1386.3228, 2114.1292, 10.7953, 111.0000, -1, -1, 100);
	iVehiculo[12] = CreateVehicle(504, 1362.3533, 2112.5066, 10.7193, 49.5000, -1, -1, 100);
	iVehiculo[13] = CreateVehicle(541, 1358.3707, 2175.9995, 10.5714, 105.0600, -1, -1, 100);
	iVehiculo[14] = CreateVehicle(568, 1323.4623, 2183.5752, 10.7953, 117.3600, -1, -1, 100);
	iVehiculo[15] = CreateVehicle(411, 1306.1986, 2140.0791, 10.6941, -68.1000, -1, -1, 100);
	iVehiculo[16] = CreateVehicle(494, 1335.3978, 2109.3628, 10.8030, 93.8400, -1, -1, 100);
	iVehiculo[17] = CreateVehicle(402, 1308.1580, 2110.1309, 10.6636, 21.4200, -1, -1, 100);
	iVehiculo[18] = CreateVehicle(504, 1337.2611, 2133.4199, 10.7193, 106.4400, -1, -1, 100);
	iVehiculo[19] = CreateVehicle(451, 1309.2305, 2169.8694, 10.6430, -16.6200, -1, -1, 100);
	iVehiculo[20] = CreateVehicle(568, 1368.5773, 2140.9824, 10.7953, 156.9000, -1, -1, 100);
	iVehiculo[21] = CreateVehicle(494, 1377.8752, 2128.9712, 10.8030, 106.6200, -1, -1, 100);
	iVehiculo[22] = CreateVehicle(434, 1324.0791, 2138.3721, 10.8525, -48.1800, -1, -1, 100);
	iVehiculo[23] = CreateVehicle(429, 1363.7599, 2157.4900, 10.6552, -60.0600, -1, -1, 100);
	iVehiculo[24] = CreateVehicle(451, 1307.9832, 2186.9597, 10.6430, -36.4200, -1, -1, 100);
	iVehiculo[25] = CreateVehicle(494, 1391.4565, 2143.9143, 10.8030, 32.8200, -1, -1, 100);
	iVehiculo[26] = CreateVehicle(504, 1356.6694, 2127.7380, 10.7193, 106.9800, -1, -1, 100);
	iVehiculo[27] = CreateVehicle(434, 1313.7233, 2126.9399, 10.8525, 18.3600, -1, -1, 100);
	iVehiculo[28] = CreateVehicle(568, 1390.7986, 2127.8159, 10.7953, 182.1600, -1, -1, 100);
	iVehiculo[29] = CreateVehicle(457, 1348.3839, 2191.5864, 10.6271, 152.7000, -1, -1, 100);
	iVehiculo[30] = CreateVehicle(457, 1370.7083, 2172.7051, 10.6271, 22.9200, -1, -1, 100);
	iVehiculo[31] = CreateVehicle(568, 1380.8029, 2151.0508, 10.7953, 93.9600, -1, -1, 100);
}

stock EscucharMusica(playerid, url[], Float: posX = 0.0, Float: posY = 0.0, Float: posZ = 0.0, Float: distance = 50.0, usepos = 0)
{
    if(B_Musica[playerid] == 0) PlayAudioStreamForPlayer(playerid, url, posX, posY, posZ, distance, usepos);
}

stock PlayStream(playerid, url[], Float: posX = 0.0, Float: posY = 0.0, Float: posZ = 0.0, Float: distance = 50.0, usepos = 0) {
    if(GetPVarType(playerid, "MusBB")) StopAudioStreamForPlayer(playerid);
    else SetPVarInt(playerid, "MusBB", 1);
    PlayAudioStreamForPlayer(playerid, url, posX, posY, posZ, distance, usepos);
}

stock ReproducirMVeh(playerid, url[], Float: posX = 0.0, Float: posY = 0.0, Float: posZ = 0.0, Float: distance = 50.0, usepos = 0) {
    if(GetPVarType(playerid, "MusVeh")) StopAudioStreamForPlayer(playerid);
    else SetPVarInt(playerid, "MusVeh", 1);
    PlayAudioStreamForPlayer(playerid, url, posX, posY, posZ, distance, usepos);
}

public OnPlayerLeaveDynamicArea(playerid, areaid)
{
	if(MusicaEsc[playerid] == 0)
	{
		foreach(Player, i)
		{
			if(GetPVarType(i, "BBArea"))
			{
				if(areaid == GetPVarInt(i, "BBArea"))
				{
					StopStream(playerid);
					return 1;
				}
			}
		}
		foreach(Player, i)
		{
			if(GetPVarType(i, "AreaVehMus"))
			{
				if(areaid == GetPVarInt(i, "AreaVehMus"))
				{
					PararMVeh(playerid);
					return 1;
				}
			}
		}
	}
	return 1;
}

public OnPlayerEnterDynamicArea(playerid, areaid)
{
	if(MusicaEsc[playerid] == 0)
	{
    	foreach(Player, i)
		{
			if(GetPVarType(i, "BBArea"))
			{
				if(areaid == GetPVarInt(i, "BBArea")) {
					new station[256];
					GetPVarString(i, "BBStation", station, sizeof(station));
					if(!isnull(station))
					{
						if(B_Musica[playerid] == 0)
						{
							Mensaje_(playerid, 0x9EC73DAA, "[ENTORNO] Comienzas a oír música proveniente de un equipo de sonido.");
							PlayStream(playerid, station, GetPVarFloat(i, "BBX"), GetPVarFloat(i, "BBY"), GetPVarFloat(i, "BBZ"), 30.0, 1);
						}
					}
					return 1;
				}
			}
		}
		foreach(Player, i)
		{
			if(GetPVarType(i, "AreaVehMus"))
			{
				if(areaid == GetPVarInt(i, "AreaVehMus"))
				{
					new station[256];
					GetPVarString(i, "AreaVehAud", station, sizeof(station));
					if(!isnull(station))
					{
						if(B_Musica[playerid] == 0)
						{
							new string[128];
    						format(string, sizeof(string), "[ENTORNO] Comienzas a oír música proveniente de un %s.", NombreVehiculo(GetPVarInt(i, "AreaVehID")));
    						Mensaje_(playerid, 0x9EC73DAA, string);
							ReproducirMVeh(playerid, station, GetPVarFloat(i, "AreaVehPosX"), GetPVarFloat(i, "AreaVehPosY"), GetPVarFloat(i, "AreaVehPosZ"), 50.0, 1);
						}
					}
					return 1;
				}
			}
		}
	}
	return 1;
}

funcion StopStream(playerid) {
    DeletePVar(playerid, "MusBB");
    StopAudioStreamForPlayer(playerid);
}

funcion PararMVeh(playerid) {
    DeletePVar(playerid, "MusVeh");
    StopAudioStreamForPlayer(playerid);
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
	if(GetPlayerState(playerid) == 1) { return 1; }
	switch(Casco[playerid])
	{
		case 1:
		{
			if(EnMotos_Bicis(vehicleid)) AccionesRol(playerid, 0, "pone las manos en su casco, y se lo quita.");
			else AccionesRol(playerid, 0, "pone las manos en su cinturón y se lo quita.");
			Casco[playerid] = 0;
		}
	}
	if(VehSeguro[vehicleid] >= 1)
	{
		if (veh_asiento[playerid] != -1)
		{
			ClearAnimations(playerid);
			PutPlayerInVehicle(playerid, vehicleid, veh_asiento[playerid]);
		    return 1;
		}
	}
	veh_asiento[playerid] = -1;
	SetPVarInt(playerid, "veh_bajo", vehicleid);
	return 1;
}

stock ActualizarPuertaLabel(doorid) {
    DestroyDynamic3DTextLabel(InfoPuerta[doorid][pTextoExt]);
    DestroyDynamic3DTextLabel(InfoPuerta[doorid][pTextoInt]);
    DestroyDynamicPickup(InfoPuerta[doorid][pModeloExt]);
    DestroyDynamicPickup(InfoPuerta[doorid][pModeloInt]);
    new string[256];
    format(string, sizeof(string), "%s - {1C9781}ID: %d", InfoPuerta[doorid][pDescripcion], doorid);
    InfoPuerta[doorid][pTextoExt] = CreateDynamic3DTextLabel(string, -1, InfoPuerta[doorid][pExteriorX], InfoPuerta[doorid][pExteriorY], InfoPuerta[doorid][pExteriorZ] + 0.5, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, InfoPuerta[doorid][pExteriorVW], InfoPuerta[doorid][pExteriorInt], -1);
    format(string, sizeof(string), "%s - {1C9781}ID: %d", InfoPuerta[doorid][pDescripcion], doorid);
    InfoPuerta[doorid][pTextoInt] = CreateDynamic3DTextLabel(string, -1, InfoPuerta[doorid][pInteriorX], InfoPuerta[doorid][pInteriorY], InfoPuerta[doorid][pInteriorZ] + 0.5, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, InfoPuerta[doorid][pInteriorVW], InfoPuerta[doorid][pInteriorInt], -1);
    InfoPuerta[doorid][pModeloExt] = CreateDynamicPickup(19130, 1, InfoPuerta[doorid][pExteriorX], InfoPuerta[doorid][pExteriorY], InfoPuerta[doorid][pExteriorZ], InfoPuerta[doorid][pExteriorVW]);
    InfoPuerta[doorid][pModeloInt] = CreateDynamicPickup(19130, 1, InfoPuerta[doorid][pInteriorX], InfoPuerta[doorid][pInteriorY], InfoPuerta[doorid][pInteriorZ], InfoPuerta[doorid][pInteriorVW]);
}

stock GetPlayerPartName(playerid) {
    new x, name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, MAX_PLAYER_NAME);
    while (x < strlen(name)) {
        if (name[x] == '_') {
            strdel(name, x, MAX_PLAYER_NAME);
            return name;
        }
        x++;
    }
    return name;
}

stock GetPlayerSecondName(playerid) {
    new x, name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, MAX_PLAYER_NAME);
    while (x < strlen(name)) {
        if (name[x] == '_') {
            strdel(name, 0, x + 1);
            return name;
        }
        x++;
    }
    return name;
}

stock PezCosto(playerid, fish){
	if(IsPlayerConnected(playerid)){
		new cost = 0;
		switch (fish){
			case 1: cost = 2;
			case 2: cost = 2;
			case 3: cost = 2;
			case 5: cost = 3;
			case 6: cost = 2;
			case 8: cost = 3;
			case 9: cost = 4;
			case 11: cost = 2;
			case 12: cost = 2;
			case 14: cost = 3;
			case 15: cost = 4;
			case 16: cost = 3;
			case 17: cost = 2;
			case 18: cost = 2;
			case 19: cost = 3;
			case 21: cost = 2;
			case 22: cost = 5;
		}
		return cost;
	}
	return 0;
}

StaffEnLinea(){
	new count;
	foreach(Player, i){
		if(user[i][jAdmin] >= 1){
			count++;
		}
	}
	return count;
}

funcion CheckBan(ip[]) {
    new string[20];
    new File: file = fopen("Baneados.rp", io_read);
    while(fread(file, string)) {
        if(strcmp(ip, string, true, strlen(ip)) == 0) {
            fclose(file);
            return 1;
        }
    }
    fclose(file);
    return 0;
}

funcion AddBan(ip[]) {
    if(CheckBan(ip) == 0) {
        new File: file = fopen("Baneados.rp", io_append);
        new string[20];
        format(string, sizeof(string), "\n%s", ip);
        fwrite(file, string);
        fclose(file);
        foreach(Player, playerid) {
            new playerIP[16];
            GetPlayerIp(playerid, playerIP, sizeof(playerIP));
            if(strcmp(playerIP, ip) == 0) {
                _Mensaje(playerid, 2, "0", "Fuiste baneado del servidor. Para ser desbloqueado www.gs-rp.es/foro (desconexión server)");
                Expulsar(playerid, 1);
            }
        }
        return 1;
    }
    return 0;
}

funcion RemoveBan(ip[]) {
    if(CheckBan(ip) == 1) {
        new string[20];
        new File: file = fopen("Baneados.rp", io_read);
        fcreate("BaneadosTemp.rp");
        new File: file2 = fopen("BaneadosTemp.rp", io_append);
        while(fread(file, string)) {
            if(strcmp(ip, string, true, strlen(ip)) != 0 && strcmp("\n", string) != 0) {
                fwrite(file2, string);
            }
        }
        fclose(file);
        fclose(file2);
        file = fopen("Baneados.rp", io_write);
        file2 = fopen("BaneadosTemp.rp", io_read);
        while(fread(file2, string)) {
            fwrite(file, string);
        }
        fclose(file);
        fclose(file2);
        fremove("BaneadosTemp.rp");
        return 1;
    }
    return 0;
}

funcion TiempoBannedIP(playerid) {
    new playerip[32];
    user[playerid][jBaneado] = 20;
    GetPlayerIp(playerid, playerip, sizeof(playerip));
    Kick(playerid);
    AddBan(playerip);
    return 1;
}

stock IsValidVehicleID(vehicleid) {
    if(GetVehicleModel(vehicleid)) return 1;
    return 0;
}

stock RegaloTodos(playerid) {
    new gift = Random(1, 3);
    switch(gift) {
        case 1: {
                DarDineroGC(playerid, 55000);
                _Mensaje(playerid, 2, "0", "[CMBlock te envío un regalo] ($55.000) añadidos a tu cuenta exitosamente.");
            }
        case 2: {
                user[playerid][jExperiencia] += 4;
                _Mensaje(playerid, 2, "0", "[CMBlock te envío un regalo] (cuatro[4] puntos) de experiencia añadidos a tu cuenta exitosamente.");
            }
        case 3: {
                user[playerid][jExperiencia] += 2;
                _Mensaje(playerid, 2, "0", "[CMBlock te envío un regalo] (dos[2] puntos) de experiencia añadidos a tu cuenta exitosamente.");
            }
        default: return RegaloTodos(playerid);
    }
    return 1;
}

Ayuda(playerid, tip) {
    switch(tip) {
        case 0: {
            new ayuda[]=
            "{FFFF00}Cuenta: {FFFFFF} /stats  - /abrircuenta - /desbug - /ayuda - /documento - /duda\n\
            {FFFF00}Interiores: {FFFFFF}/comprar -  /entrar - /salir - /borrarcheckpoint (tecla 'H' [entrar/salir])\n\
            {FFFF00}Drogas: {FFFFFF}/plantar - /verplanta - /sacarplanta - /consumir\n\
            {FFFF00}Música: {FFFFFF}/stereo - /estacion - /apagarstereo - /equiposonido - /requiposonido\n\
            {FFFF00}Otros:  {FFFFFF}/peaje - /revisar - /admins /gps - /id - /climpiar - /dnifalso\n\
            {FFFF00}Teléfono: {FFFFFF}/sms - /llamar - /colgar - /avisarpd - /hora\n\
            {FFFF00}Banco: {FFFFFF}/pagar - /saldo  -  /dar - /licencias - /darcheque ";
            Dialog(playerid, D_AYUDA, DIALOG_STYLE_MSGBOX, "{FFFFFF}Ayuda: {FFFF00}Cuenta de usuario", ayuda, "Volver","Cerrar");
        }
        case 1: {
            new ayuda[]=
            "{FFFF00}Bolsillos Opciones: {FFFFFF}/ceder - /usar - /cargar - /inv o /bol (tecla 'Y')\n\
            {FFFF00}Bolsillos Opciones: {FFFFFF} /guardar - /sacar - /cmano - /tirar\n\
            {FFFF00}Colocar Objetos [Espalda]: {FFFFFF}/espalda - /qespalda - /recoger\n\
            {FFFF00}Colocar Objetos [Cinturón]: {FFFFFF}/cinturon - /guardarct  - /sacarct";
            Dialog(playerid, D_AYUDA, DIALOG_STYLE_MSGBOX, "{FFFFFF}Ayuda: {FFFF00}Sistema de bolsillos", ayuda, "Volver","Cerrar");
        }
        case 2: {
            new ayuda[]=
            "{FFFF00}Acción [IC]: {FFFFFF}/me [acción]\n\
            {FFFF00}Acción [IC]: {FFFFFF}/ame [acción corta]\n\
            {FFFF00}Acción [IC]: {FFFFFF}/do [entorno]\n\
            {FFFF00}Acción [IC]: {FFFFFF}/g [eritar]\n\
            {FFFF00}Acción [IC]: {FFFFFF}/s [susurrar]\n\
            {FFFF00}Chat [OOC]: {FFFFFF}/b [chat OOC]\n\
            {FFFF00}Ayuda Admin [OOC]:  {FFFFFF}/re [reportar] - /duda\n\
            {FFFF00}Chat Privado [OOC]:  {FFFFFF}/mp [susurros]\n\
            {FFFF00}Chat [IC/PD/ED/SD]: {FFFFFF}/r [chat Faccion IC]\n\
            {FFFF00}Acción [OOC]: {FFFFFF}/fac [chat Faccion OOC]\n\
            {FFFF00}Chat [OOC]: {FFFFFF} /fam [chat Familia OOC]\n\
            Bloquear canales: {FFFFFF}/togSAN /togooc /togfac /togfam /togmusic /apagarprivados /apagarmovil /apagarradio";
            Dialog(playerid, D_AYUDA, DIALOG_STYLE_MSGBOX, "{FFFFFF}Ayuda: {FFFF00}Canales", ayuda, "Volver","Cerrar");
        }
        case 3: {
            if(user[playerid][jCasaKey] == INVALID_CASA_ID && user[playerid][jCasaRenta] == INVALID_CASA_ID && user[playerid][jCasaKey2] == INVALID_CASA_ID && user[playerid][jCasaLlaves] == INVALID_CASA_ID) return _Mensaje(playerid, 0, "643", "Usted no tiene una casa o no estas rentando una o no tienes las llaves de una.");
            new ayuda[]=
            "{FFFF00}Cmd. Casa: {FFFFFF}/micasa - /cseguro - /ponerarmario - /armario - /ponerrenta - /darllaves\n\
            {FFFF00}Cmd. Casa: {FFFFFF}/entrarg - /salirg - /gseguro - /preciorenta - /vendercasa - /quitarllaves\n\
            {FFFF00}Comandos del rentador: {FFFFFF}/crseguro - /rentar - /desrentar";
            Dialog(playerid, D_AYUDA, DIALOG_STYLE_MSGBOX, "{FFFFFF}Ayuda: {FFFF00}Sistema de casas", ayuda, "Volver","Cerrar");
        }
        case 4: {
            new ayuda[]=
            "{FFFF00}Cmd. Coches:{FFFFFF}/estacionar - /motor - /capo - /maletero - /luces\n\
            {FFFF00}Cmd. Coches: {FFFFFF}/seguro - /borrarvehiculo /vermaletero - /guantera\n\
            {FFFF00}Cmd. Coches: {FFFFFF}/darllaveveh - /estadocoche -  /expulsarveh - /cinturons\n\
            {FFFF00}Cmd. Coches: {FFFFFF}/coches - /vendercoche - /quitartunning - /combustible";
            Dialog(playerid, D_AYUDA, DIALOG_STYLE_MSGBOX, "{FFFFFF}Ayuda: {FFFF00}Sistema de vehículos", ayuda, "Volver","Cerrar");
        }
        case 5: {
            if(Es_Faccion(playerid, 1))
			{
				if(user[playerid][jDivision] == 1)
				{
					new ayuda[]=
					"{FFFFFF}/bp /ref /noref /palcohol /optiwand /cachear /ordenadorpd /destruir\n\
					/darlicencia /balasgoma /ram /verarmario /callsign /sct /ct /rt(recargartaser)\n\
					/reanimar /m /destruirplanta /maleteropd /bar /qb /qbs /pinchos /prisiongarage\n\
					/spinchos /qpinchos /sirena /quitar /detener /arrestar /arrestarf /salirgpd\n\
					/limpiar /antecedente /su /presos /esposar /modopecho /gct /entrargpd /placa\n\
					/mascarapd /multar /embargar /enganchar /desnenganchar /dejarmulta /gunrack";
					Dialog(playerid, D_AYUDA, DIALOG_STYLE_MSGBOX, "{FFFFFF}Ayuda: {FFFF00}[LSPD]", ayuda, "Regresar","Cerrar");
				}
				else if(user[playerid][jDivision] == 2)
				{
					new ayuda[]=
					"{FFFFFF}/bp /ref /noref /palcohol /optiwand /cachear /ordenadorpd /destruir\n\
					/balasgoma /ram /verarmario /callsign /reanimar /limpiar /prisiongarage\n\
					/m /destruirplanta /miranda /bar /qb /qbs /pinchos /spinchos\n\
					/qpinchos /sirena /quitar /detener /arrestar /arrestarf /maleterosd \n\
					/antecedente /su /presos /esposar /modopecho /gct /sct /cinturon\n\
					/multar /embargar /enganchar /desnenganchar /dejarmulta";
					Dialog(playerid, D_AYUDA, DIALOG_STYLE_MSGBOX, "{FFFFFF}Ayuda: {FFFF00}[SASD]", ayuda, "Regresar","Cerrar");
				}
				else if(user[playerid][jDivision] == 3)
				{
					new ayuda[]=
					"{FFFFFF}/taclear /altavozpf /palcohol /cachear /ordenadorpd /destruir\n\
					/balasgoma /callsign /reanimar /m /miranda /bar /prisiongarage\n\
					/qb /qbs /sirena /quitar /detener /arrestar /arrestarf /limpiar\n\
					/antecedente /su /presos /esposar /modopecho /gct /sct /cinturon";
					Dialog(playerid, D_AYUDA, DIALOG_STYLE_MSGBOX, "{FFFFFF}Ayuda: {FFFF00}[SADOC]", ayuda, "Regresar","Cerrar");
				}
            }
			else if(Es_Faccion(playerid, 2))
			{
                new ayuda[]=
                "{FFFFFF}/repararmotor /miembros /servicio /r\n\
                /modificar /colorcoche /paintcoche";
                Dialog(playerid, D_AYUDA, DIALOG_STYLE_MSGBOX, "{FFFFFF}Ayuda: {FFFF00}[Mecánicos]", ayuda, "Regresar","Cerrar");
            }
			else if(Es_Faccion(playerid, 3))
			{
                new ayuda[]=
                "{FFFFFF}/entrevista /apgarage /equipo /directo /miembros\n\
                /enservicio /conectar /desconectar /r /maleterosan";
                Dialog(playerid, D_AYUDA, DIALOG_STYLE_MSGBOX, "{FFFFFF}Ayuda: {FFFF00}[Facción]", ayuda, "Regresar","Cerrar");
            }
			else if(Es_Faccion(playerid, 4))
			{
                new ayuda[]=
                "{FFFFFF}/gob /impuesto /sfondos /dfondos /equipo\n\
                /r /d /servicio /miembros /maleteroalc";
                Dialog(playerid, D_AYUDA, DIALOG_STYLE_MSGBOX, "{FFFFFF}Ayuda: {FFFF00}[Facción]", ayuda, "Regresar","Cerrar");
            }
			else if(Es_Faccion(playerid, 5))
			{
                new ayuda[]=
                "{FFFFFF}/callsign /apagarincendio /miembros /gob /r /d\n\
                /bar /qb/m /servicio /reanimar /equipo /ram\n\
                /detener /curar /verincendios /maleterolsed";
                Dialog(playerid, D_AYUDA, DIALOG_STYLE_MSGBOX, "{FFFFFF}Ayuda: {FFFF00}[LS-ED]", ayuda, "Regresar","Cerrar");
            }
        }
		case 6:
		{
			if (user[playerid][jEmpresaKey] == -1 && user[playerid][jEmpresaLlaves] == -1 && user[playerid][jContrato] == -1) return _Mensaje(playerid, 0, "580", "No tienes una empresa o no trabajas para una.");
			Mensaje_(playerid, 0xffff00FF, "Repartos:{FFFFFF} /motor /repartos /mercancia");
			Mensaje_(playerid, 0x00a2ffFF, "[Empresa_Mecánico]:{FFFFFF} /repararmotor /colorcoche /paintcoche /gasolina /carroceria /ruedas /tunear /vertuneo /precios");
			Mensaje_(playerid, 0x00A04CFF, "[Empresa_Propietario]:{FFFFFF} /empresa /eseguro /ecoches /comprarcoches /darempleo /infoempresa /salirempleo /muebles /venderempresa");
			return 1;
		}
		case 7:
		{
			if(user[playerid][jNegocioKey] == INVALID_NEGOCIO_ID && user[playerid][jNegocioKey2] == INVALID_NEGOCIO_ID && user[playerid][jNegocioLlaves] == INVALID_NEGOCIO_ID) return _Mensaje(playerid, 0, "643", "Usted no tiene ningun negocio.");
			Mensaje_(playerid, 0x00A04CFF, "[Negocio]:{FFFFFF} /negocio /nseguro /vendernegocio /venderminegocio(2) /comprarnegocio");
			return 1;
		}
        case 8:
		{
			Mensaje_(playerid, 0x00A04CFF, "{00ff0f0}[Sistema_Accesorios]: accesorios /poneraccesorios /quitaraccesorios /poneracc [0-4 ranura]");
			return 1;
		}
        case 9: {
            switch(user[playerid][jTrabajo1])
			{
                case 1: _Mensaje(playerid, 4, "b0b0b0", "Carguero:{ffffff} /empezarcarga /dcargar /habilidad /mejorar");
                case 2: _Mensaje(playerid, 4, "b0b0b0", "Delincuente:{ffffff} /delincuente /hurtar /cachear /carterista /robarcaja");
                case 3: _Mensaje(playerid, 4, "b0b0b0", "Pescador:{ffffff} /pescar /venderpeces /barco /arpon /puerto /habilidad /mejorar");
                case 4: _Mensaje(playerid, 4, "b0b0b0", "Camionero:{ffffff} /camionero /borrarcarga /habilidad /mejorar");
                case 5: _Mensaje(playerid, 4, "b0b0b0", "Ladrón de coches:{ffffff} /delincuente /pedido /engine /fseguro");
                case 6: _Mensaje(playerid, 4, "b0b0b0", "Carpintero:{ffffff} /crearmueble /dmueble /habilidad /mejorar");
                case 7: _Mensaje(playerid, 4, "b0b0b0", "Leñador:{ffffff} /creartronco /dtronco /vendertroncos /habilidad /mejorar");
                case 10: _Mensaje(playerid, 4, "b0b0b0", "Granjero:{ffffff} /cosechar /dcosechar /vendercosecha /habilidad /mejorar");
                case 11: _Mensaje(playerid, 4, "b0b0b0", "Traficante:{ffffff} /traficar /habilidad /mejorar");
            }
            switch(user[playerid][jTrabajo2])
			{
                case 1: _Mensaje(playerid, 4, "b0b0b0", "Carguero:{ffffff} /empezarcarga /dcargar /habilidad /mejorar");
                case 2: _Mensaje(playerid, 4, "b0b0b0", "Delincuente:{ffffff} /delincuente /hurtar /cachear /carterista");
                case 3: _Mensaje(playerid, 4, "b0b0b0", "Pescador:{ffffff} /pescar /venderpeces /barco /arpon /puerto /habilidad /mejorar");
                case 4: _Mensaje(playerid, 4, "b0b0b0", "Camionero:{ffffff} /camionero /borrarcarga /habilidad /mejorar");
                case 5: _Mensaje(playerid, 4, "b0b0b0", "Ladrón de coches:{ffffff} /delincuente /pedido /engine /fseguro");
                case 6: _Mensaje(playerid, 4, "b0b0b0", "Carpintero:{ffffff} /crearmueble /dmueble /habilidad /mejorar");
                case 7: _Mensaje(playerid, 4, "b0b0b0", "Leñador:{ffffff} /creartronco /dtronco /vendertroncos /habilidad /mejorar");
                case 10: _Mensaje(playerid, 4, "b0b0b0", "Granjero:{ffffff} /cosechar /dcosechar /vendercosecha /habilidad /mejorar");
                case 11: _Mensaje(playerid, 4, "b0b0b0", "Traficante:{ffffff} /traficar /habilidad /mejorar");
            }
            switch(user[playerid][jTrabajo3])
			{
                case 1: _Mensaje(playerid, 4, "b0b0b0", "Carguero:{ffffff} /empezarcarga /dcargar /habilidad /mejorar");
                case 2: _Mensaje(playerid, 4, "b0b0b0", "Delincuente:{ffffff} /delincuente /hurtar /cachear /carterista");
                case 3: _Mensaje(playerid, 4, "b0b0b0", "Pescador:{ffffff} /pescar /venderpeces /barco /arpon /puerto /habilidad /mejorar");
                case 4: _Mensaje(playerid, 4, "b0b0b0", "Camionero:{ffffff} /camionero /borrarcarga /habilidad /mejorar");
                case 5: _Mensaje(playerid, 4, "b0b0b0", "Ladrón de coches:{ffffff} /delincuente /pedido /engine /fseguro");
                case 6: _Mensaje(playerid, 4, "b0b0b0", "Carpintero:{ffffff} /crearmueble /dmueble /habilidad /mejorar");
                case 7: _Mensaje(playerid, 4, "b0b0b0", "Leñador:{ffffff} /creartronco /dtronco /vendertroncos /habilidad /mejorar");
                case 10: _Mensaje(playerid, 4, "b0b0b0", "Granjero:{ffffff} /cosechar /dcosechar /vendercosecha /habilidad /mejorar");
                case 11: _Mensaje(playerid, 4, "b0b0b0", "Traficante:{ffffff} /traficar /habilidad /mejorar");
            }
        }
        case 10: {
            if(user[playerid][jPremium] == 0) return _Mensaje(playerid, 0, "207", "No eres usuario premium.");
            if(user[playerid][jPremium] >= 1) {
                new ayuda[]=
                "{FFFFFF}/casillero /prendas /togvip /vmiembros";
                Dialog(playerid, D_AYUDA, DIALOG_STYLE_MSGBOX, "{FFFFFF}Ayuda: {FFFF00}Sistema Premium", ayuda, "Regresar","Cerrar");
            }
        }
        case 11: {
            new danimaccion[3000];
            strcat(danimaccion,"{FFFFFF}/danzar - /bebido - /movil - /cmovil - /bomba - /apuntar - /dormir\n");
    		strcat(danimaccion,"/adios - /saludo - /trato - /crack - /fumando - /gro - /hablando - /taichi\n");
    		strcat(danimaccion,"/caer - /reir - /tumbarse - /vomitar - /comiendo - /herido - /medico - /oralsex\n");
    		strcat(danimaccion,"/muerto - /brazos - /pandillero - /taxi - /trafico - /golpeado - /besar - /boxear\n");
    		strcat(danimaccion,"/espada /policia  /tortazo - /rodar - /cacheado - /bate - /gritando - /facepalm\n");
    		strcat(danimaccion,"/animar - /esposado - /lanzar - /basket - /cansado - /saltovital - /pelea - /depie\n");
    		strcat(danimaccion,"/rascarse - /apoyarse - /correr - /strip - /bailar - /asientosexi - /spray - /fokear\n");
    		strcat(danimaccion,"/rifle - /mecanico - /carga - /consola - /barandilla - /llorar - /cruzarbrazos\n");
    		strcat(danimaccion,"/discutir /camara  /bofetada - /billar - /beso - /dedo - /mear - /asco - /no - /si\n");
    		strcat(danimaccion,"/cansarme - /asiento - /pararme - /irsecortao - /comerciar - /echarme - /cubrirme\n");
  			strcat(danimaccion,"/coche - /agonizar - /levantarme - /mmm - /paja /oficinaanim /dildosex - /oralsexcar\n");
            Dialog(playerid,D_AYUDA, DIALOG_STYLE_MSGBOX, "{FFFFFF}Ayuda: {FFFF00}Animaciones / Acciones", danimaccion, "Regresar","Cerrar");
        }
    }
    return 1;
}

funcion NoRefAutoF(playerid)
{ //Deja de solicitar refuerzos
	if(SolicitaRefuerzos[playerid] == 0) return 1;
	new string[128];
	SolicitaRefuerzos[playerid] = 0;
	format(string, sizeof(string), "*[CH|911|Central, S: 4A]: A todas las unidades que están de apoyo, se canceló el pedido, los que estén presente esperar código 4 del superior.");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Es_Faccion(i, 1) && EnServicioPD[i] == 1)
			{
				if (user[i][jDivision] == 1 || user[i][jDivision] == 2)
				{
					DisablePlayerCheckpoint(i);
					_Mensaje(i, 4, "9B9BFF", string);
					SetPlayerMarkerForPlayer(i, playerid, 0xFFFFFF00);
				}
			}
		}
	}
	_Mensaje(playerid, 2, "0", "Solicitud de refuerzos cancelada automáticamente.");
	return 1;
}

stock VehicleToPoint(Float:radi, vehicleid, Float:x, Float:y, Float:z) {
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new Float:tempposx, Float:tempposy, Float:tempposz;
	GetVehiclePos(vehicleid, oldposx, oldposy, oldposz);
	tempposx = (oldposx -x);
	tempposy = (oldposy -y);
	tempposz = (oldposz -z);
	if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
	{
		return 1;
	}
	return 0;
}

encode_tires(tire1, tire2, tire3, tire4) {
	return tire1 | (tire2 << 1) | (tire3 << 2) | (tire4 << 3);
}

funcion LimpiarPantalla(playerid) {
    for(new i = 0; i < 20; i++) {
        _Mensaje(playerid, 4, "ffffff", "");
    }
    return 1;
}

stock IsWeaponWithAmmo(weaponid)
{
	switch(weaponid)
	{

		case 16..18, 22..39, 41..42: return 1;
		default: return 0;
	}
	return 0;

}

stock GetPlayerWeaponAmmo(playerid,weaponid)
{
	new wd[2][13];
	for(new i; i<13; i++) GetPlayerWeaponData(playerid,i,wd[0][i],wd[1][i]);
	for(new i; i<13; i++)
	{

		if(weaponid == wd[0][i]) return wd[1][i];
	}
	return 0;
}

public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
	new idobj = user[playerid][jm_Derecha];/* balas = GetPlayerAmmo(playerid);*/
	if(IsPlayerConnectedEx(playerid))
	{
		if(IsWeaponWithAmmo(weaponid))
		{
			if (InfoObjeto[idobj][IDArma] != weaponid && user[playerid][jNivel] <= 2) // "armas invisibles"
			{
			    new text_[144];
				format(text_, sizeof(text_), "{FF6347}Administración: El jugador %s fue expulsado. Razón: [Arma no sincronizada (posible whitebug o cheat)]", NombreRJugador(playerid));
				MensajeAdmin(text_);
				_Expulsar(playerid, 0, "Arma no sincronizada");
				return 1;
			} // el viejo sistema lo borré a la mierda, este de abajo es el efectivo.
			if(user[playerid][jm_DerechaCant])
			{
       			user[playerid][jm_DerechaCant]--;
				//fix para que no se le cedan balas extras al jugador
			    if(GetPlayerWeaponAmmo(playerid, InfoObjeto[idobj][IDArma]) != 0 && GetPlayerWeaponAmmo(playerid, InfoObjeto[idobj][IDArma]) < user[playerid][jm_DerechaCant])
			    {
			        user[playerid][jm_DerechaCant] = GetPlayerWeaponAmmo(playerid, InfoObjeto[idobj][IDArma]);
			    }
				if(user[playerid][jm_DerechaCant] == 0) // remueve arma si no tienes balas, si continua disparando abajo está el check para dar kick <-
				{
				    ResetPlayerWeapons(playerid);
				}
			}
			else
			{
			    Anti[playerid][BalasW]++;
			    ResetPlayerWeapons(playerid);
			   	if(Anti[playerid][BalasW] == 3 && AntiG[Balas]) // 3 advertencias de tolerancia
			    {
   					new text_[144];
					format(text_, sizeof(text_), "{FF6347}Administración: El jugador %s fue expulsado por CMBlock-BOT y limpiado. Razón:[Cheat de munición]", NombreRJugador(playerid));
					_MensajeOOC(0xFF6347FF, text_);
					format(text_, sizeof(text_), "El jugador %s ha utilizado cheat de munición. [%s]", NombreRJugador(playerid), InfoObjeto[user[playerid][jm_Derecha]][NombreObjeto]);
					Log("Registros/cheatsbalas.log", text_);
					QuitarManos(playerid);
					_Expulsar(playerid, 0, "[SistemaAdmin]: Munición desincronizada con el servidor expulsado por el sistema CMBlock-BOT");
					return 1;
				}
			}
		}
	}
    if(hittype == BULLET_HIT_TYPE_VEHICLE) {
		if(fX > 20.0 || fX < -20.0 || fY > 20.0 || fY < -20.0 || fZ > 20.0 || fZ < -20.0) {
			return 0b0;
		}
		new Float:VehVida;
        GetVehicleHealth(hitid, VehVida);
        if(VehVida > 400) {
    	         switch(weaponid) {
                  case 22: SetVehicleHealth(hitid, VehVida - 20); // 45. Colt
                  case 23: SetVehicleHealth(hitid, VehVida - 25); // Silenced 45. Colt
                  case 24: SetVehicleHealth(hitid, VehVida - 30); // Deagle
                  case 25: SetVehicleHealth(hitid, VehVida - 50); // Escopeta
                  case 26: SetVehicleHealth(hitid, VehVida - 55); // Escopeta recortada
                  case 27: SetVehicleHealth(hitid, VehVida - 70); // Escopeta de combate
                  case 28: SetVehicleHealth(hitid, VehVida - 15); // Uzi
                  case 29: SetVehicleHealth(hitid, VehVida - 20); // MP5K
                  case 30: SetVehicleHealth(hitid, VehVida - 30); // M4
                  case 31: SetVehicleHealth(hitid, VehVida - 30); // AK-47
                  case 32: SetVehicleHealth(hitid, VehVida - 15); // Tec-9
                  case 33: SetVehicleHealth(hitid, VehVida - 25); // Rifle de caza
                  case 34: SetVehicleHealth(hitid, VehVida - 50); // Sniper Rifle
                  case 35: SetVehicleHealth(hitid, 0); // RPG
                  case 36: SetVehicleHealth(hitid, 0); // HS Rocket
                  case 38: SetVehicleHealth(hitid, VehVida - 200); // Minigun
                  default:SetVehicleHealth(hitid, VehVida);
              }
         }
	}
	if(hittype==BULLET_HIT_TYPE_PLAYER){
		if(!(-100.0<=fX<=100.0)||!(-1000.0<=fY<=100.0)||!(-100.0<=fZ<=100.0)){
           //kickorbanthecrasher
			return 0b0;
		}
	}
	if(user[playerid][jm_Derecha] == 40 && weaponid == 23){TaserRecarga[playerid] = 1; SetTimerEx("RecargarTaser", 5000, false, "i", playerid);} //Sistema de recarga de taser
    return 1;
}

stock K_Cheat(jugador, texto[])
{
    new _mnjs[256];
	if(user[jugador][jAdmin] == 0)
	{
		new ip[32];
        GetPlayerIp(jugador, ip, sizeof(ip));
        format(_mnjs, sizeof(_mnjs), "{000000}[CMBlock(Bot)]: {FFFFFF}El jugador %s fue expulsado 168 horas por %s.", NombreRJugador(jugador), texto);
		MensajeAdmin(_mnjs);
		banipA(jugador, texto, "SERVER", 168);
		format(_mnjs, sizeof(_mnjs), "Registros: El jugador %s fue baneado por %s (IP: %s).", NombreRJugador(jugador), texto, ip);
		Log("Registros/Cheats.log", _mnjs);
		AddBan(ip);
	} else {
		format(_mnjs, sizeof(_mnjs), "{000000}[AvisoAdmin]: {FFFFFF}El jugador %s está usando (%s).", NombreRJugador(jugador), texto);
		MensajeAdmin(_mnjs);
	}
	return 1;
}

funcion RecargarTaser(playerid) {
	TaserRecarga[playerid] = 0;
	return 1;
}

stock Random(min, max) {
    new a = random(max - min) + min;
    return a;
}

funcion CargarObjetos(playerid) {
    TogglePlayerControllable(playerid, 0);
	TextoPantalla(playerid, "~g~Cargando~n~   ~w~~h~~h~GS:RP.ES 2.X", 4000, 1);
    SetPVarInt(playerid, "CargandoObjetos", 1);
    return SetTimerEx("RemoverObjetosC", 4000, 0, "d", playerid);
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys) {
    if(IsPlayerNPC(playerid)) return 1;
    if(newkeys == KEY_FIRE || newkeys == KEY_HANDBRAKE)
	{
	    if(user[playerid][jm_Derecha] == 32 || user[playerid][jm_Derecha] == 33)
	    {
	    	if(GetPlayerWeaponAmmo(playerid, InfoObjeto[user[playerid][jm_Derecha]][IDArma]) != 0 && GetPlayerWeaponAmmo(playerid, InfoObjeto[user[playerid][jm_Derecha]][IDArma]) < user[playerid][jm_DerechaCant])
	    	{
	       		user[playerid][jm_DerechaCant] = GetPlayerWeaponAmmo(playerid, InfoObjeto[user[playerid][jm_Derecha]][IDArma]);
			}
	    }
    }
	if(newkeys == KEY_CTRL_BACK)
	{
		if(IsPlayerConnected(playerid))
		{
			cmd_entrar(playerid);
			cmd_salir(playerid);
		}
	}
	// Este } Termina el "KEY_CTRL_BACK" Letra H.
    if(newkeys == KEY_YES) {
        if(EnServicioPD[playerid] == 0){_Inventario(playerid);} //Abrir inventario
        if(user[playerid][jm_Derecha] == 40 && user[playerid][jm_DerechaCant] == 0 && EnServicioPD[playerid] > 0) {
		    if(TaserRecarga[playerid] != 0){_Mensaje(playerid, 0, "0", "Espera 5 segundos antes de recargar."); return 1;}
		    AccionesRol(playerid, 0, "recarga su pistola táser (400V).");
			_GiveWeapon(playerid, 23, 2);
			user[playerid][jm_DerechaCant] = 2;
			ApplyAnimation(playerid,"SILENCED","Silence_reload",4.1,0,1,1,0,0,1);
		}
    }
    if(IsPlayerNPC(playerid)) return 1;
    if(IsKeyJustDown(KEY_SPRINT, newkeys, oldkeys) && JugadorUsandoAnimacion[playerid] == 1) {
        JugadorSentado[playerid] = 0;
        JugadorUsandoAnimacion[playerid] = 0;
  	    ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0, 1);
    }
    if(newkeys & KEY_JUMP && !(oldkeys & KEY_JUMP) && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CUFFED) ApplyAnimation(playerid, "GYMNASIUM", "gym_jog_falloff", 1.5, 0, 0, 0, 0, 0, 1);
    if(newkeys & KEY_SPRINT && !(oldkeys & KEY_SPRINT) && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CUFFED) ApplyAnimation(playerid, "GYMNASIUM", "gym_jog_falloff", 1.5, 0, 0, 0, 0, 0, 1);
    if(newkeys & KEY_SPRINT) {
        if(IsPlayerConnected(playerid)) {
            if(user[playerid][jAlcohol] > 35) { if (!IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid, "PED", "WALK_DRUNK", 4.1, 1, 1, 1, 1, 1, 1); }
        }
    }
    if((newkeys & KEY_FIRE)) {
        if(GetPVarInt(playerid, "TomoCarpintero") == 1) {
            if(GetPVarInt(playerid,"MueblesCreados") == 0) {
			    Tronco(playerid);
                return 1;
		    }
        }
        if(GetPVarInt(playerid, "TrabajandoC") == 1) {
            if(GetPVarInt(playerid,"MueblesCreados") == 0) {
		        HacerMueble(playerid);
                return 1;
            }
        }
        if(GetPVarInt(playerid, "TrabajandoL") == 1) {
            if(GetPVarInt(playerid,"TroncosCreados") == 0) {
                if (user[playerid][jTroncos] < 201) {
			        TalarArbol(playerid);
                    return 1;
				} else _Mensaje(playerid, 0, "2", "Has alcanzado el máximo de troncos (200), vendelos en la carpintería.");
	        }
        }
        if(HaciendoPressBanca[playerid] == 1) {
            RepeticionesPressBanca[playerid]++;
            ProgresoPressBanca[playerid]++;
            if(ProgresoPressBanca[playerid] >= 20) {
                ApplyAnimation(playerid, "benchpress", "gym_bp_up_B", 1, 0, 0, 0, 1, 0, 1);
                ProgresoPressBanca[playerid] = 0;
            }
        }
    }
    if (((newkeys & KEY_WALK && newkeys & KEY_UP) || (newkeys & KEY_WALK && newkeys & KEY_DOWN) || (newkeys & KEY_WALK && newkeys & KEY_LEFT) || (newkeys & KEY_WALK && newkeys & KEY_RIGHT))
		|| ((oldkeys & KEY_WALK && newkeys & KEY_UP) || (oldkeys & KEY_WALK && newkeys & KEY_DOWN) || (oldkeys & KEY_WALK && newkeys & KEY_LEFT) || (oldkeys & KEY_WALK && newkeys & KEY_RIGHT))
		|| ((newkeys & KEY_WALK && oldkeys & KEY_UP) || (newkeys & KEY_WALK && oldkeys & KEY_DOWN) || (newkeys & KEY_WALK && oldkeys & KEY_LEFT) || (newkeys & KEY_WALK && oldkeys & KEY_RIGHT))
		&& GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
    return 1;
}

forward WalkAnim(playerid);
public  WalkAnim(playerid) {
	new keys, updown, leftright;
	GetPlayerKeys(playerid,keys,updown,leftright);
 	if (GetPVarInt(playerid, "HaciendoMueble") == 1) return 1;
    if (GetPVarInt(playerid, "Llamada_LSED") == 1) return 1;
    if (GetPVarInt(playerid, "_heridoC") == 1) return 1;
    if (GetPVarInt(playerid, "EnEvento") == 1) return 1;
	if (GetPlayerWalkingStyle(playerid) == WALK_PED) {
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT)) {
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_civi",4.1,1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		} else ApplyAnimation(playerid,"PED","WALK_civi",4.0,0,0,0,0,1,1), KillTimer(walktime[playerid]);
	} else if (GetPlayerWalkingStyle(playerid) == WALK_GANGSTA) {
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT)) {
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_gang1",4.1,1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		} else ApplyAnimation(playerid,"PED","WALK_gang1",4.0,0,0,0,0,1,1), KillTimer(walktime[playerid]);
	} else if (GetPlayerWalkingStyle(playerid) == WALK_GANGSTA2) {
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT)) {
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_gang2",4.1,1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		} else ApplyAnimation(playerid,"PED","WALK_gang2",4.0,0,0,0,0,1,1), KillTimer(walktime[playerid]);
	} else if (GetPlayerWalkingStyle(playerid) == WALK_OLD) {
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT)) {
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_old",4.1,1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		} else ApplyAnimation(playerid,"PED","WALK_old",4.0,0,0,0,0,1,1), KillTimer(walktime[playerid]);
	} else if (GetPlayerWalkingStyle(playerid) == WALK_FAT_OLD) {
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT)) {
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_fatold",4.1,1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		} else ApplyAnimation(playerid,"PED","WALK_fatold",4.0,0,0,0,0,1,1), KillTimer(walktime[playerid]);
	} else if (GetPlayerWalkingStyle(playerid) == WALK_FAT) {
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT)) {
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_fat",4.1,1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		} else ApplyAnimation(playerid,"PED","WALK_fat",4.0,0,0,0,0,1,1), KillTimer(walktime[playerid]);
	} else if (GetPlayerWalkingStyle(playerid) == WALK_LADY) {
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT)) {
			KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WOMAN_walknorm",4.1,1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		} else ApplyAnimation(playerid,"PED","WOMAN_walknorm",4.0,0,0,0,0,1,1), KillTimer(walktime[playerid]);
	} else if (GetPlayerWalkingStyle(playerid) == WALK_LADY2) {
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT)) {
			KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WOMAN_walkbusy",4.1,1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		} else ApplyAnimation(playerid,"PED","WOMAN_walkbusy",4.0,0,0,0,0,1,1), KillTimer(walktime[playerid]);
	} else if (GetPlayerWalkingStyle(playerid) == WALK_WHORE) {
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT)) {
			KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.1,1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		} else ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.0,0,0,0,0,1,1), KillTimer(walktime[playerid]);
	} else if (GetPlayerWalkingStyle(playerid) == WALK_WHORE2) {
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT)) {
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WOMAN_walksexy",4.1,1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		} else ApplyAnimation(playerid,"PED","WOMAN_walksexy",4.0,0,0,0,0,1,1), KillTimer(walktime[playerid]);
	} else if (GetPlayerWalkingStyle(playerid) == WALK_DRUNK) {
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT)) {
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_drunk",4.1,1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		} else ApplyAnimation(playerid,"PED","WALK_drunk",4.0,0,0,0,0,1,1), KillTimer(walktime[playerid]);
	} else if (GetPlayerWalkingStyle(playerid) == WALK_BLIND) {
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT)) {
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","Walk_Wuzi",4.1,1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		} else ApplyAnimation(playerid,"PED","Walk_Wuzi",4.0,0,0,0,0,1,1), KillTimer(walktime[playerid]);
	}
	return 1;
}

stock SetPlayerWalkingStyle(playerid, style) {
	WalkStyle[playerid] = style;
}

stock GetPlayerWalkingStyle(playerid) {
	return WalkStyle[playerid];
}

funcion RemovePlayerWeapon(playerid, weaponid) { //Quitar un arma de un jugador
    if(!IsPlayerConnected(playerid) || weaponid < 0 || weaponid > 50) return;
    new saveweapon[13], saveammo[13];
    for(new slot = 0; slot < 13; slot++)
    GetPlayerWeaponData(playerid, slot, saveweapon[slot], saveammo[slot]);
    ResetPlayerWeapons(playerid);
    for(new slot; slot < 13; slot++) {
        if(saveweapon[slot] == weaponid || saveammo[slot] == 0) continue;
        GivePlayerWeapon(playerid, saveweapon[slot], saveammo[slot]);
    }
    GivePlayerWeapon(playerid, 0, 1);
}

funcion FinEntrenar(playerid, entrenamiento) {
    if(HaciendoPressBanca[playerid] == 1) {
        new string[128];
        if(RepeticionesPressBanca[playerid] / 20 <= 30) { format(string, sizeof(string), "Has hecho %d repeticiones en press banca.", RepeticionesPressBanca[playerid] / 20); }
        else { format(string, sizeof(string), "Has hecho 30 repeticiones en press banca."); RepeticionesPressBanca[playerid] = 600; }
        _Mensaje(playerid, 2, "0", string);
        TogglePlayerControllable(playerid, 1);
        ApplyAnimation(playerid, "benchpress", "gym_bp_getoff", 1, 0, 0, 0, 0, 0, 1);
        RemovePlayerAttachedObject(playerid, 9);
        new fuerza = RepeticionesPressBanca[playerid] / 20 / 2 + random(10);
        format(string, sizeof(string), "Tu fuerza ha aumentado en %.2f.", float(fuerza) / 100);
        _Mensaje(playerid, 2, "0", string);
        user[playerid][jFuerza] += fuerza;
        RepeticionesPressBanca[playerid] = 0;
        HaciendoPressBanca[playerid] = 0;
        user[playerid][jTiempos][2] += 120;
        UsandoGym[entrenamiento-1] = 0;
        if(entrenamiento == 1) PressBancaBarraObjeto[0] = CreateObject(2913, barbell_pos[0][0], barbell_pos[0][1], barbell_pos[0][2], barbell_pos[0][3], barbell_pos[0][4], barbell_pos[0][5]);
        else if(entrenamiento == 2) PressBancaBarraObjeto[1] = CreateObject(2913, barbell_pos[1][0], barbell_pos[1][1], barbell_pos[1][2], barbell_pos[1][3], barbell_pos[1][4], barbell_pos[1][5]);
        else if(entrenamiento == 3) PressBancaBarraObjeto[2] = CreateObject(2913, barbell_pos[2][0], barbell_pos[2][1], barbell_pos[2][2], barbell_pos[2][3], barbell_pos[2][4], barbell_pos[2][5]);
        else if(entrenamiento == 4) PressBancaBarraObjeto[3] = CreateObject(2913, barbell_pos[3][0], barbell_pos[3][1], barbell_pos[3][2], barbell_pos[3][3], barbell_pos[3][4], barbell_pos[3][5]);
        else if(entrenamiento == 5) PressBancaBarraObjeto[4] = CreateObject(2913, barbell_pos[4][0], barbell_pos[4][1], barbell_pos[4][2], barbell_pos[4][3], barbell_pos[4][4], barbell_pos[4][5]);
        return 1;
    }
    return 1;
}

stock Compra(playerid, amount) {
    if(IsPlayerConnected(playerid)) {
        new a[14];
        format(a, sizeof(a), "~r~ -%d$", amount);
        TextoPantalla(playerid, a, 3000, 1);
        DarDineroGC(playerid, -amount);
        PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
    }
    return 1;
}

stock Ganancia(playerid, amount) {
    if(IsPlayerConnected(playerid)) {
        new a[12];
        format(a, sizeof(a), "~g~ %d$", amount);
        TextoPantalla(playerid, a, 3000, 1);
        DarDineroGC(playerid, amount);
        PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
    }
    return 1;
}

stock RevisarDinero(playerid, money) {
    if(IsPlayerConnected(playerid)) {
        new b[64];
        new xx;
        xx = money - (ComprobarDineroJ(playerid));
        if(ComprobarDineroJ(playerid) >= money) {
            return 1;
        } else {
            format(b, sizeof(b), "No tienes dinero suficiente! Te faltan %d$", xx);
            _Mensaje(playerid, 0, "33", b);
            return 0;
        }
    }
    return 0;
}

stock Admin(lvl, playerid) {
    if(IsPlayerConnected(playerid)) {
        new admin = user[playerid][jAdmin];
        if(admin >= lvl) {
            return 1;
        }
    }
    return 0;
}

HaciendoAnimacion(playerid, animlib[], animname[], Float: Speed, looping, lockx, locky, lockz, lp) {
    if (GetPVarInt(playerid, "HaciendoMueble") == 1) return _Mensaje(playerid, 0, "148", "No puedes utilizar una animación en este momento.");
    if (IsPlayerInAnyVehicle(playerid)) return _Mensaje(playerid, 0, "151", "No puedes hacer una animación en un vehículo.");
    if (GetPVarInt(playerid, "EnEvento") == 1) return _Mensaje(playerid, 0, "647", "No puedes usar este comando en un evento.");
	if (GetPVarInt(playerid, "Llamada_LSED") == 1) return _Mensaje(playerid, 0, "647", "No puedes usar animaciones en este momento.");
    if (GetPVarInt(playerid, "_heridoC") == 1) return _Mensaje(playerid, 0, "647", "No puedes usar animaciones en este momento.");
	JugadorUsandoAnimacion[playerid] = 1;
    ApplyAnimation(playerid, animlib, animname, Speed, looping, lockx, locky, lockz, lp, 1);
    return 1;
}

PreCargaAnim(playerid, animlib[]){
	ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);
}

CargarAnim(playerid) {
    PreCargaAnim(playerid, "CARRY");
    PreCargaAnim(playerid, "PAULNMAC");
    PreCargaAnim(playerid, "DEALER");
    PreCargaAnim(playerid, "INT_HOUSE");
    PreCargaAnim(playerid, "PED");
    PreCargaAnim(playerid, "ped");
    PreCargaAnim(playerid, "BAR");
    PreCargaAnim(playerid, "FOOD");
    PreCargaAnim(playerid, "SUNBATHE");
    PreCargaAnim(playerid, "COP_AMBIENT");
    PreCargaAnim(playerid, "KISSING");
    PreCargaAnim(playerid, "WUZI");
    PreCargaAnim(playerid, "GANGS");
    PreCargaAnim(playerid, "GRAVEYARD");
    PreCargaAnim(playerid, "MISC");
    PreCargaAnim(playerid, "BD_FIRE");
    PreCargaAnim(playerid, "BUDDY");
    PreCargaAnim(playerid, "BOMBER");
    PreCargaAnim(playerid, "RAPPING");
    PreCargaAnim(playerid, "BEACH");
	PreCargaAnim(playerid, "CHAINSAW");
    PreCargaAnim(playerid, "PARK");
    PreCargaAnim(playerid, "SWEET");
    PreCargaAnim(playerid, "SPRAYCAN");
    PreCargaAnim(playerid, "MEDIC");
    PreCargaAnim(playerid, "POLICE");
    PreCargaAnim(playerid, "GYMNASIUM");
    PreCargaAnim(playerid, "RIOT");
    PreCargaAnim(playerid, "SWORD");
	PreCargaAnim(playerid, "GRENADE");
    PreCargaAnim(playerid, "DANCING");
    PreCargaAnim(playerid, "CASINO");
    PreCargaAnim(playerid, "CRACK");
    PreCargaAnim(playerid, "SMOKING");
    PreCargaAnim(playerid, "Attractors");
    PreCargaAnim(playerid, "ON_LOOKERS");
    PreCargaAnim(playerid, "GHANDS");
    PreCargaAnim(playerid, "benchpress");
    PreCargaAnim(playerid, "LOWRIDER");
    PreCargaAnim(playerid, "RIOT");
    PreCargaAnim(playerid, "SCRATCHING");
    PreCargaAnim(playerid, "BLOWJOBZ");
    PreCargaAnim(playerid, "BSKTBALL");
    PreCargaAnim(playerid, "FAT");
    PreCargaAnim(playerid, "POOL");
    PreCargaAnim(playerid, "SNM");
    PreCargaAnim(playerid, "SHOP");
    PreCargaAnim(playerid, "STRIP");
    PreCargaAnim(playerid, "CAR");
    PreCargaAnim(playerid, "GHETTO_DB");
    PreCargaAnim(playerid, "CRIB");
    PreCargaAnim(playerid, "SWAT");
    PreCargaAnim(playerid, "GRAFFITI");
    PreCargaAnim(playerid, "BASEBALL");
    PreCargaAnim(playerid, "INT_OFFICE");
    PreCargaAnim(playerid, "PYTHON");
    PreCargaAnim(playerid, "CAR_CHAT");
    PreCargaAnim(playerid, "CAMERA");
}

stock SetPosEx(playerid, Float:X, Float:Y, Float:Z, Float:A, interiorid, worldid) {
    SetPlayerPos(playerid, X, Y, Z);
    SetPlayerFacingAngle(playerid, A);
    SetPlayerInterior(playerid, interiorid);
    SetPlayerVirtualWorld(playerid, worldid);
	user[playerid][jVirtualWorld] = interiorid;
	user[playerid][jInterior] = worldid;
}

funcion RemoverObjetosC(playerid) {
    if(GetPVarType(playerid, "CargandoObjetos")) {
        DeletePVar(playerid, "CargandoObjetos");
        TogglePlayerControllable(playerid, 1);
    }
}

//- Sistema de graffitis

stock HexToInt(string[]) { // Created by Zamaroth
	if (string[0] == 0) return 0;
	new i, cur = 1, res = 0;
	for (i = strlen(string); i > 0; i --) {
		if (string[i-1] < 58) res = res + cur * (string[i-1]-48); else res = res + cur * (string[i-1]-65+10);
		cur = cur * 16;
	}
	return res;
}

public OnPlayerUpdate(playerid)
{
	if(IsPlayerConnectedEx(playerid))
	{
		if (GetPVarInt(playerid, "EnEvento") == 0)
		{
			SetPlayerArmour(playerid, user[playerid][jChaleco]);
			if (user[playerid][jMuerto2] == 0) SetPlayerHealth(playerid, user[playerid][jSangre]);
			else if (user[playerid][jMuerto2] == 2) SetPlayerHealth(playerid, 15.0);
		}
		if(GetPVarInt(playerid, "Congelado") == 1) TogglePlayerControllable(playerid, 0);
		if(user[playerid][jm_Derecha] > 0)
		{
			if(GetPlayerWeapon(playerid) != InfoObjeto[user[playerid][jm_Derecha]][IDArma] && user[playerid][jm_DerechaCant] > 0)
			{
			    if(user[playerid][jm_DerechaCant] > 0 && GetPlayerWeaponAmmo(playerid, InfoObjeto[user[playerid][jm_Derecha]][IDArma]) == 0)
				{
			        ResetPlayerWeapons(playerid);
			        _GiveWeapon(playerid, InfoObjeto[user[playerid][jm_Derecha]][IDArma], user[playerid][jm_DerechaCant]);
			    }
				SetPlayerArmedWeapon(playerid, InfoObjeto[user[playerid][jm_Derecha]][IDArma]);
			}
			else if(user[playerid][jm_DerechaCant] == 0)
			{ //Si no le queda munición
				if(GetPlayerWeapon(playerid) != 0) SetPlayerArmedWeapon(playerid, 0);
			}
		}
		if(EnServicioADM[playerid] == 1) SetPlayerColor(playerid, 0x90309700);
		else { if (user[playerid][jColorP] == 1) SetPlayerColor(playerid, 0xFFDB4200); }
 }
	return 1;
}

funcion OtherTimerEx(playerid, type) {
    if(type == TIPO_TELEPORTTRAFICANTE) {
        if(GetPVarInt(playerid, "TeleportTafricante") > 0) {
            SetPVarInt(playerid, "TeleportTafricante", GetPVarInt(playerid, "TeleportTafricante") - 1);
            SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TIPO_TELEPORTTRAFICANTE);
        }
    } else if(type == TIPO_TELEPORTCAMIONERO) {
        if(GetPVarInt(playerid, "TeleportCamionero") > 0) {
            SetPVarInt(playerid, "TeleportCamionero", GetPVarInt(playerid, "TeleportCamionero") - 1);
            SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TIPO_TELEPORTCAMIONERO);
        }
    }  else if(type == TIPO_TELEPORTPESCADOR) {
        if(GetPVarInt(playerid, "TeleportPescador") > 0) {
            SetPVarInt(playerid, "TeleportPescador", GetPVarInt(playerid, "TeleportPescador") - 1);
            SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TIPO_TELEPORTPESCADOR);
        }
    } else if(type == TIPO_TELEPORTGRANJERO) {
        if(GetPVarInt(playerid, "TeleportGranjero") > 0) {
            SetPVarInt(playerid, "TeleportGranjero", GetPVarInt(playerid, "TeleportGranjero") - 1);
            SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TIPO_TELEPORTGRANJERO);
        }
    } else if(type == TIPO_TELEPORTTRABAJO1) {
        if(GetPVarInt(playerid, "TeleportTrabajo1") > 0) {
            SetPVarInt(playerid, "TeleportTrabajo1", GetPVarInt(playerid, "TeleportTrabajo1") - 1);
            SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TIPO_TELEPORTTRABAJO1);
        }
    }
}

funcion RevisarVIP(playerid) {
    new year, month, day;
    getdate(year, month, day);
    if(user[playerid][jPremium] == 0) {
        user[playerid][jD_premium] = -1;
        user[playerid][jM_premium] = -1;
        return 1;
    }
    if(user[playerid][jD_premium] >= 1 && user[playerid][jM_premium] >= 1) {
        if(user[playerid][jPremium] >= 1) {
            if(day >= user[playerid][jD_premium] && month >= user[playerid][jM_premium]) {
                user[playerid][jD_premium] = -1;
                user[playerid][jM_premium] = -1;
                user[playerid][jPremium] = 0;
				SetPlayerColor(playerid, C_PLAYERBLANCO);
				user[playerid][jColorP] = 0;
                return _Mensaje(playerid, 4, "C93CCE", "[SistemaPremium]:{ffffff} Tu membresía premium, puedes hacer tu orden de renovación ahora mismo!");
            }
        }
    }
    return 1;
}

stock EnviarTextoRadio(playerid, string[]) {
    new MiscString[256], Float: aaaPositions[3];
    foreach(Player, i) {
        if(user[i][jFrecuencia] == user[playerid][jFrecuencia] && B_Radio[i] != 0) {
			GetPlayerPos(i, aaaPositions[0], aaaPositions[1], aaaPositions[2]);
            format(MiscString, sizeof(MiscString), "{D4AB5C}(RADIO - %dkhz) %s:{ffffff} %s", user[playerid][jFrecuencia], NombreJugador(playerid), string);
            SendSplitMessage(i, 0xffffffff, MiscString);
        }
    }
    format(MiscString, sizeof(MiscString), "%s por radio: %s", NombreJugador(playerid), string);
	ProxDetector(10.0, playerid, MiscString, C_FADE1, C_FADE2, C_FADE3, C_FADE4, C_FADE5);
}

stock fcreate(filename[]) {
    if(fexist(filename)) return false;
    new File: fhnd;
    fhnd = fopen(filename, io_write);
    if(fhnd) {
        fclose(fhnd);
        return true;
    }
    return false;
}

funcion splits(const strsrc[], strdest[][], delimiter) {
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc)){
		if(strsrc[i]==delimiter || i==strlen(strsrc)){
			len = strmid(strdest[aNum], strsrc, li, i, 128);
			strdest[aNum][len] = 0;
			li = i+1;
			aNum++;
		}
		i++;
	}
	return 1;
}

IsKeyJustDown(key, newkeys, oldkeys) {
    if((newkeys & key) && !(oldkeys & key)) return 1;
    return 0;
}

stock RandomEx(min, max) {
    new randval = random(max - min) + min;
    return randval;
}

funcion IsValidIP(ip[]) {
    new a;
    for(new i = 0; i < strlen(ip); i++) {
        if(ip[i] == '.') {
            a++;
        }
    }
    if(a != 3) {
        return 1;
    }
    return 0;
}

IsVehicleBusy(vehicleid) { // The_Chaoz ¿?¿?¿
    for(new i; i<GetMaxPlayers(); i++)
    	if(IsPlayerConnected(i) && IsPlayerInVehicle(i, vehicleid))
    		return 1;
    return 0;
}

//- ALEX DONUTS ZC 2012.
funcion CrearFamVeh(f, fv, modelid, Float: x, Float: y, Float: z, Float: angle, color1, color2) {
    if(InfoVehFam[f][fv][vID] == INVALID_VEHICLE_ID) {
        InfoVehFam[f][fv][vModelo] = modelid;
        InfoVehFam[f][fv][vPosicionX] = x;
        InfoVehFam[f][fv][vPosicionY] = y;
        InfoVehFam[f][fv][vPosicionZ] = z;
        InfoVehFam[f][fv][vPosicionR] = angle;
        InfoVehFam[f][fv][vColor_1] = color1;
        InfoVehFam[f][fv][vColor_2] = color2;
        InfoVehFam[f][fv][vGasolina] = 150;
        new Coche = CreateVehicle(modelid, x, y, z, angle, color1, color2, -1);
        InfoVehFam[f][fv][vID] = Coche;
        SetVehicleMatricula(Coche);
        return Coche;
    }
    return INVALID_VEHICLE_ID;
}

funcion CargarFamVeh(fvid) {
    for(new fv = 0; fv < MAX_VEHFAMILIAS; fv++) {
        if(InfoVehFam[fvid][fv][vModelo] != 0) {
            new Coche = CreateVehicle(InfoVehFam[fvid][fv][vModelo], InfoVehFam[fvid][fv][vPosicionX], InfoVehFam[fvid][fv][vPosicionY], InfoVehFam[fvid][fv][vPosicionZ], InfoVehFam[fvid][fv][vPosicionR], InfoVehFam[fvid][fv][vColor_1], InfoVehFam[fvid][fv][vColor_2], -1);
            InfoVehFam[fvid][fv][vID] = Coche;
            GasolinaInicialVeh[Coche] = InfoVehFam[fvid][fv][vGasolina];
            SetVehicleMatricula(Coche);
        }
    }
}

funcion DestroyGangVehicle(f, fv) {
    if(InfoVehFam[f][fv][vID] != INVALID_VEHICLE_ID) {
        DestroyVehicle(InfoVehFam[f][fv][vID]);
        InfoVehFam[f][fv][vModelo] = 0;
        InfoVehFam[f][fv][vPosicionX] = 0.0;
        InfoVehFam[f][fv][vPosicionY] = 0.0;
        InfoVehFam[f][fv][vPosicionZ] = 0.0;
        InfoVehFam[f][fv][vPosicionR] = 0.0;
        InfoVehFam[f][fv][vPaintJob] = -1;
        InfoVehFam[f][fv][vColor_1] = 126;
        InfoVehFam[f][fv][vColor_2] = 126;
        InfoVehFam[f][fv][vGasolina] = 150;
        GasolinaInicialVeh[InfoVehFam[f][fv][vID]] = 200;
        InfoVehFam[f][fv][vID] = INVALID_VEHICLE_ID;
    }
}

funcion UpdateGangVehicleParkPosition(f, fv, Float: newx, Float: newy, Float: newz, Float: newangle, Float: health, vw, int) {
    if(InfoVehFam[f][fv][vID] != INVALID_VEHICLE_ID) {
        new Float: oldx, Float: oldy, Float: oldz;
        oldx = InfoVehFam[f][fv][vPosicionX];
        oldy = InfoVehFam[f][fv][vPosicionY];
        oldz = InfoVehFam[f][fv][vPosicionZ];
        if(oldx == newx && oldy == newy && oldz == newz) return 0;
        InfoVehFam[f][fv][vPosicionX] = newx;
        InfoVehFam[f][fv][vPosicionY] = newy;
        InfoVehFam[f][fv][vPosicionZ] = newz;
        InfoVehFam[f][fv][vPosicionR] = newangle;
        DestroyVehicle(InfoVehFam[f][fv][vID]);
        new Coche = CreateVehicle(InfoVehFam[f][fv][vModelo], InfoVehFam[f][fv][vPosicionX], InfoVehFam[f][fv][vPosicionY], InfoVehFam[f][fv][vPosicionZ],
        InfoVehFam[f][fv][vPosicionR], InfoVehFam[f][fv][vColor_1], InfoVehFam[f][fv][vColor_2], -1);
        InfoVehFam[f][fv][vID] = Coche;
        SetVehicleHealth(Coche, health);
        SetVehicleVirtualWorld(Coche, vw);
        LinkVehicleToInterior(Coche, int);
        ActualizarFamilia(f);
        SetVehicleMatricula(Coche);
        return 1;
    }
    return 0;
}

funcion GetGangFreeVehicleId(f) {
    new i = 0;
    while(i < MAX_VEHFAMILIAS && InfoVehFam[f][i][vID] != INVALID_VEHICLE_ID) {
        i++;
    }
    if(i == MAX_VEHFAMILIAS) return -1;
    return i;
}

funcion VehiculoDeFamilia(f, vehicleid) {
    if(f == 0) return -1;
    if(vehicleid == -1) return -1;
    for(new v = 0; v < MAX_VEHFAMILIAS; v++) {
        if(InfoVehFam[f][v][vID] == vehicleid) {
            return v;
        }
    }
    return -1;
}

funcion ReturnUser(text[]) {
    new strPos, returnID = 0, bool: isnum = true;
    while(text[strPos]) {
        if(isnum) {
            if('0' <= text[strPos] <= '9') returnID = (returnID * 10) + (text[strPos] - '0');
            else isnum = false;
        }
        strPos++;
    }
    if(isnum) {
        if(IsPlayerConnected(returnID)) return returnID;
    } else {
        new sz_playerName[MAX_PLAYER_NAME];

        foreach(Player, i) {
            GetPlayerName(i, sz_playerName, MAX_PLAYER_NAME);
            if(!strcmp(sz_playerName, text, true, strPos)) return i;
        }
    }
    return INVALID_PLAYER_ID;
}

funcion Guardarcoches(playerid)
{
	for(new i = 0; i < 6; i++)
	{
		new veh = user[playerid][jLlaveCoche][i];
		if(veh != 0)
		{
			if(InfoVehiculo[veh-1000][vSpawned] == 1)
			{
				if(!IsVehicleBusy(InfoVehiculo[veh-1000][vID]))
				{
					VehiculoGuardar(veh-1000);
				}
			}
		}
	}
}

//- Sistema de vehículos;
funcion VehiculoSacar(vid) {
	if(InfoVehiculo[vid][vModelo] != 0) {
   		new Coche = CreateVehicle(InfoVehiculo[vid][vModelo], InfoVehiculo[vid][vPosicionX], InfoVehiculo[vid][vPosicionY], InfoVehiculo[vid][vPosicionZ], InfoVehiculo[vid][vPosicionR], InfoVehiculo[vid][vColor_1], InfoVehiculo[vid][vColor_2], -1);
   		InfoVehiculo[vid][vID] = Coche;
    	InfoVehiculo[vid][vSpawned] = 1;
     	GasolinaInicialVeh[Coche] = InfoVehiculo[vid][vGasolina];
      	SetVehicleHealth(Coche, InfoVehiculo[vid][vVida]);
       	SetVehicleVirtualWorld(Coche, InfoVehiculo[vid][vVirtualWorld]);
        LinkVehicleToInterior(Coche, InfoVehiculo[vid][vInterior]);
        UpdateVehicleDamageStatus(Coche, InfoVehiculo[vid][vDanioSuperficie], InfoVehiculo[vid][vDanioPuertas], InfoVehiculo[vid][vDanioLuces], InfoVehiculo[vid][vDanioRuedas]);
        DarMatricula(Coche, InfoVehiculo[vid][vLlave]);
    	CargarVehMods(vid, Coche);
        InfoVehiculo[vid][v_Guantera] = 0;
		estacionveh[Coche] = 0;
		VehSeguro[Coche] = 0;
		if(InfoVehiculo[vid][vUSeguro] == 1) { VehSeguro[Coche] = 1; vehicle_lock_doors(Coche); }
		ActualizarVehiculo(vid);
    }
}

funcion VehiculoGuardar(vid) {
	if(InfoVehiculo[vid][vModelo] != 0) {
		if(VehSeguro[InfoVehiculo[vid][vID]] != 0) VehSeguro[InfoVehiculo[vid][vID]] = 0;
        new oldfuel;
		oldfuel = GasolinaInicialVeh[InfoVehiculo[vid][vID]];
        InfoVehiculo[vid][vGasolina] = oldfuel;
        GetVehiclePos(InfoVehiculo[vid][vID], InfoVehiculo[vid][vPosicionX], InfoVehiculo[vid][vPosicionY], InfoVehiculo[vid][vPosicionZ]);
        GetVehicleZAngle(InfoVehiculo[vid][vID], InfoVehiculo[vid][vPosicionR]);
  		GetVehicleHealth(InfoVehiculo[vid][vID], InfoVehiculo[vid][vVida]);
  		GetVehicleDamageStatus(InfoVehiculo[vid][vID], InfoVehiculo[vid][vDanioSuperficie], InfoVehiculo[vid][vDanioPuertas], InfoVehiculo[vid][vDanioLuces], InfoVehiculo[vid][vDanioRuedas]);
        ActualizarMods(InfoVehiculo[vid][vID]);
		DestroyVehicle(InfoVehiculo[vid][vID]);
		InfoVehiculo[vid][vID] = INVALID_PLAYER_VEHICLE_ID;
		InfoVehiculo[vid][vSpawned] = 0;
        InfoVehiculo[vid][v_Guantera] = 0;
        ActualizarVehiculo(vid);
    }
}

funcion VehiculoBorrar(vid) {
	if(InfoVehiculo[vid][vID] != INVALID_PLAYER_VEHICLE_ID) {
  		DestroyVehicle(InfoVehiculo[vid][vID]);
    	InfoVehiculo[vid][vID] = INVALID_PLAYER_VEHICLE_ID;
        format(InfoVehiculo[vid][vDueno], 32, "sindueño");
    	InfoVehiculo[vid][vLlave] = 0;
    	InfoVehiculo[vid][vModelo] = 0;
        InfoVehiculo[vid][vVida] = 1000.0;
        InfoVehiculo[vid][vPosicionX] = 0.0;
        InfoVehiculo[vid][vPosicionY] = 0.0;
        InfoVehiculo[vid][vPosicionZ] = 0.0;
        InfoVehiculo[vid][vPosicionR] = 0.0;
        InfoVehiculo[vid][vVirtualWorld] = 0;
        InfoVehiculo[vid][vInterior] = 0;
        InfoVehiculo[vid][vPrecio] = 0;
        InfoVehiculo[vid][vGuantera][0] = 0;
        InfoVehiculo[vid][vGuantera][1] = 0;
        InfoVehiculo[vid][vGuantera][2] = 0;
        InfoVehiculo[vid][vGuanteraCantidad][0] = 0;
        InfoVehiculo[vid][vGuanteraCantidad][1] = 0;
        InfoVehiculo[vid][vGuanteraCantidad][2] = 0;
        InfoVehiculo[vid][vMaletero][0] = 0;
        InfoVehiculo[vid][vMaletero][1] = 0;
        InfoVehiculo[vid][vMaletero][2] = 0;
        InfoVehiculo[vid][vMaletero][3] = 0;
        InfoVehiculo[vid][vMaletero][4] = 0;
        InfoVehiculo[vid][vMaletero][5] = 0;
        InfoVehiculo[vid][vMaletero][6] = 0;
        InfoVehiculo[vid][vMaletero][7] = 0;
        InfoVehiculo[vid][vMaletero][8] = 0;
        InfoVehiculo[vid][vMaletero][9] = 0;
        InfoVehiculo[vid][vMaletero][10] = 0;
        InfoVehiculo[vid][vMaletero][11] = 0;
        InfoVehiculo[vid][vMaletero][12] = 0;
        InfoVehiculo[vid][vMaletero][13] = 0;
        InfoVehiculo[vid][vMaletero][14] = 0;
        InfoVehiculo[vid][vMaleteroCantidad][0] = 0;
        InfoVehiculo[vid][vMaleteroCantidad][1] = 0;
        InfoVehiculo[vid][vMaleteroCantidad][2] = 0;
        InfoVehiculo[vid][vMaleteroCantidad][3] = 0;
        InfoVehiculo[vid][vMaleteroCantidad][4] = 0;
        InfoVehiculo[vid][vMaleteroCantidad][5] = 0;
        InfoVehiculo[vid][vMaleteroCantidad][6] = 0;
        InfoVehiculo[vid][vMaleteroCantidad][7] = 0;
        InfoVehiculo[vid][vMaleteroCantidad][8] = 0;
        InfoVehiculo[vid][vMaleteroCantidad][9] = 0;
        InfoVehiculo[vid][vMaleteroCantidad][10] = 0;
        InfoVehiculo[vid][vMaleteroCantidad][11] = 0;
        InfoVehiculo[vid][vMaleteroCantidad][12] = 0;
        InfoVehiculo[vid][vMaleteroCantidad][13] = 0;
        InfoVehiculo[vid][vMaleteroCantidad][14] = 0;
        InfoVehiculo[vid][vSpawned] = 0;
        InfoVehiculo[vid][vGasolina] = 200;
        InfoVehiculo[vid][vStereo] = 0;
        InfoVehiculo[vid][vNeon] = 0;
        InfoVehiculo[vid][vSeguro] = 0;
        InfoVehiculo[vid][vUSeguro] = 0;
        InfoVehiculo[vid][vPaintJob] = -1;
        InfoVehiculo[vid][vColor_1] = 0;
        InfoVehiculo[vid][vColor_2] = 0;
        InfoVehiculo[vid][vMulta] = 0;
        InfoVehiculo[vid][vEnDeposito] = 0;
        InfoVehiculo[vid][v_Guantera] = 0;
        InfoVehiculo[vid][vDanioSuperficie] = 0;
        InfoVehiculo[vid][vDanioPuertas] = 0;
        InfoVehiculo[vid][vDanioLuces] = 0;
        InfoVehiculo[vid][vDanioRuedas] = 0;
        for(new m = 0; m < MAX_MODVEHICULOS; m++) {
            InfoVehiculo[vid][vModificaciones][m] = 0;
        }
        ActualizarVehiculo(vid);
    }
}

funcion TieneLlavesCoche(playerid, vehicleid) {
    if(!IsPlayerConnected(playerid)) return -1;
    if(!GetVehicleModel(vehicleid)) return -1;
    for(new v = 0; v < MAX_VEHICULOS; v++) {
        if(InfoVehiculo[v][vID] == vehicleid) {
			for(new x = 0; x < 6; x++) {
				if(user[playerid][jLlaveCoche][x] == InfoVehiculo[v][vLlave] || user[playerid][jLlaveCochePrestado][x] == InfoVehiculo[v][vLlave]){
 					return v;
				}
			}
        }
    }
    return -1;
}

stock TieneLlavesVeh(playerid, vehicleid) {
    for(new v = 0; v < MAX_VEHICULOS; v++) {
        if(InfoVehiculo[v][vID] == vehicleid) {
    		new TieneLlave;
    		for(new x = 0; x < 6; x++) {
				if(user[playerid][jLlaveCoche][x] == InfoVehiculo[v][vLlave] || user[playerid][jLlaveCochePrestado][x] == InfoVehiculo[v][vLlave]){
				TieneLlave = 1; break; }
			}
			if(TieneLlave != 0){return 1;}
        }
    }
	return 0;
}

funcion CVehiculos(playerid) {
    new cars = 0;
    for(new i = 0; i < 6; i++) {
        if(user[playerid][jLlaveCoche][i] != 0) {
            cars++;
        }
    }
    return cars;
}

funcion CargarVehMods(vid, vehiculo)
{
	if(InfoVehiculo[vid][vSpawned] == 1)
	{
		new paintjob = InfoVehiculo[vid][vPaintJob], color1 = InfoVehiculo[vid][vColor_1], color2 = InfoVehiculo[vid][vColor_2];
		if(InfoVehiculo[vid][vPaintJob] != -1)
		{
			ChangeVehiclePaintjob(vehiculo, paintjob);
		}
		ChangeVehicleColor(vehiculo, color1, color2);
		for(new m = 0; m < MAX_MODVEHICULOS; m++)
		{
			AddVehicleComponent(vehiculo, InfoVehiculo[vid][vModificaciones][m]);
		}
	}
}

funcion CrearUCoche(jugador, modelo, Float: x, Float: y, Float: z, Float: angle, color1, color2, precio, d) {
    for (new vid = 0; vid < MAX_VEHICULOS; vid++) {
        if (!InfoVehiculo[vid][vModelo]) {
        	new EspacioLibre;
			for(new xd = 0; xd < 6; xd++) {
				if(user[jugador][jLlaveCoche][xd] == 0) {
					EspacioLibre = 1;
					break;
				}
			}
			if(EspacioLibre == 0) { _Mensaje(jugador, 0, "0", "Ya tienes todas las ranuras de llaves propias ocupadas."); return 1; }
			for(new xd; xd < 6; xd++) {
				if(user[jugador][jLlaveCoche][xd] == 0) {
					user[jugador][jLlaveCoche][xd] = vid+1000;
					break;
				}
			}
			strmid(InfoVehiculo[vid][vDueno], NombreRJugador(jugador), 0, strlen(NombreRJugador(jugador)), 255);
        	InfoVehiculo[vid][vLlave] = vid+1000;
        	InfoVehiculo[vid][vModelo] = modelo;
        	InfoVehiculo[vid][vPosicionX] = x;
        	InfoVehiculo[vid][vPosicionY] = y;
       		InfoVehiculo[vid][vPosicionZ] = z;
        	InfoVehiculo[vid][vPosicionR] = angle;
    		InfoVehiculo[vid][vSpawned] = 1;
        	InfoVehiculo[vid][vVirtualWorld] = GetPlayerVirtualWorld(jugador);
        	InfoVehiculo[vid][vInterior] = GetPlayerInterior(jugador);
        	InfoVehiculo[vid][vColor_1] = color1;
        	InfoVehiculo[vid][vColor_2] = color2;
        	InfoVehiculo[vid][vPrecio] = precio;
        	InfoVehiculo[vid][vGasolina] = i_Usado[d][uGasolina];
        	InfoVehiculo[vid][vEnDeposito] = 0;
        	InfoVehiculo[vid][v_Guantera] = 0;
        	InfoVehiculo[vid][vVida] = i_Usado[d][uVida];
        	InfoVehiculo[vid][vSeguro] = i_Usado[d][uSeguro];
         	InfoVehiculo[vid][vStereo] = i_Usado[d][uStereo];
         	InfoVehiculo[vid][vNeon] = i_Usado[d][uNeon];
       		new Coche = CreateVehicle(modelo, x, y, z, angle, color1, color2, -1);
        	InfoVehiculo[vid][vID] = Coche;
        	SetVehicleVirtualWorld(Coche, InfoVehiculo[vid][vVirtualWorld]);
        	LinkVehicleToInterior(Coche, InfoVehiculo[vid][vInterior]);
        	new paintjob = i_Usado[d][uPaintJob];
         	if(i_Usado[d][uPaintJob] != -1) {
          		ChangeVehiclePaintjob(Coche, paintjob);
            }
            for(new m = 0; m < MAX_MODVEHICULOS; m++) {
            	AddVehicleComponent(Coche, i_Usado[d][uModificaciones][m]);
             	InfoVehiculo[vid][vModificaciones][m] = i_Usado[d][uModificaciones][m];
            }
            GasolinaInicialVeh[Coche] = i_Usado[d][uGasolina];
            SetVehicleHealth(Coche, i_Usado[d][uVida]);
   	 	    UpdateVehicleDamageStatus(Coche, i_Usado[d][uDanioSuperficie], i_Usado[d][uDanioPuertas], i_Usado[d][uDanioLuces], i_Usado[d][uDanioRuedas]);
			DarMatricula(Coche, vid+1000);
			SetPlayerPos(jugador, x, y, z);
			PutPlayerInVehicle(jugador, InfoVehiculo[vid][vID], 0);
        	ActualizarVehiculo(vid);
            vid = MAX_VEHICULOS;
        }
    }
    return 1;
}

funcion CrearCoche(jugador, modelo, Float: x, Float: y, Float: z, Float: angle, color1, color2, precio) {
    for (new vid = 0; vid < MAX_VEHICULOS; vid++) {
        if (!InfoVehiculo[vid][vModelo]) {
        	new EspacioLibre;
			for(new xd = 0; xd < 6; xd++) {
				if(user[jugador][jLlaveCoche][xd] == 0) {
					EspacioLibre = 1;
					break;
				}
			}
			if(EspacioLibre == 0) { _Mensaje(jugador, 0, "0", "Ya tienes todas las ranuras de llaves propias ocupadas."); return 1; }
			for(new xd; xd < 6; xd++) {
				if(user[jugador][jLlaveCoche][xd] == 0) {
					user[jugador][jLlaveCoche][xd] = vid+1000;
					break;
				}
			}
			strmid(InfoVehiculo[vid][vDueno], NombreRJugador(jugador), 0, strlen(NombreRJugador(jugador)), 255);
        	InfoVehiculo[vid][vLlave] = vid+1000;
        	InfoVehiculo[vid][vModelo] = modelo;
        	InfoVehiculo[vid][vPosicionX] = x;
        	InfoVehiculo[vid][vPosicionY] = y;
       		InfoVehiculo[vid][vPosicionZ] = z;
    		InfoVehiculo[vid][vSpawned] = 1;
			InfoVehiculo[vid][vPaintJob] = -1;
        	InfoVehiculo[vid][vPosicionR] = angle;
        	InfoVehiculo[vid][vVirtualWorld] = GetPlayerVirtualWorld(jugador);
        	InfoVehiculo[vid][vInterior] = GetPlayerInterior(jugador);
        	InfoVehiculo[vid][vColor_1] = color1;
        	InfoVehiculo[vid][vColor_2] = color2;
        	InfoVehiculo[vid][vStereo] = 0;
        	InfoVehiculo[vid][vNeon] = 0;
        	InfoVehiculo[vid][vPrecio] = precio;
        	InfoVehiculo[vid][vGasolina] = 200;
        	InfoVehiculo[vid][vSeguro] = 0;
        	InfoVehiculo[vid][vEnDeposito] = 0;
   		 	InfoVehiculo[vid][v_Guantera] = 0;
        	InfoVehiculo[vid][vVida] = 1000.0;
        	for(new m = 0; m < MAX_MODVEHICULOS; m++) { InfoVehiculo[vid][vModificaciones][m] = 0; }
        	new Coche = CreateVehicle(modelo, x, y, z, angle, color1, color2, -1);
        	InfoVehiculo[vid][vID] = Coche;
        	SetVehicleVirtualWorld(Coche, InfoVehiculo[vid][vVirtualWorld]);
        	LinkVehicleToInterior(Coche, InfoVehiculo[vid][vInterior]);
        	DarMatricula(Coche, vid+1000);
			SetPlayerPos(jugador, x, y, z);
			PutPlayerInVehicle(jugador, InfoVehiculo[vid][vID], 0);
        	ActualizarVehiculo(vid);
            vid = MAX_VEHICULOS;
        }
    }
    return 1;
}

funcion ActualizarMods(vehiculo) {
	new vid;
    for(new veh = 0; veh < MAX_VEHICULOS; veh++) {
		if(InfoVehiculo[veh][vID] == vehiculo) {
		    vid = veh;
		}
	}
    new exhaust, frontbumper, rearbumper, roof, spoilers, sideskirt1,
    sideskirt2, wheels, hydraulics, nitro, hood, lamps, stereo, ventright, ventleft;
    exhaust = GetVehicleComponentInSlot(vehiculo, CARMODTYPE_EXHAUST);
    frontbumper = GetVehicleComponentInSlot(vehiculo, CARMODTYPE_FRONT_BUMPER);
    rearbumper = GetVehicleComponentInSlot(vehiculo, CARMODTYPE_REAR_BUMPER);
    roof = GetVehicleComponentInSlot(vehiculo, CARMODTYPE_ROOF);
    spoilers = GetVehicleComponentInSlot(vehiculo, CARMODTYPE_SPOILER);
    sideskirt1 = GetVehicleComponentInSlot(vehiculo, CARMODTYPE_SIDESKIRT);
    sideskirt2 = GetVehicleComponentInSlot(vehiculo, CARMODTYPE_SIDESKIRT);
    wheels = GetVehicleComponentInSlot(vehiculo, CARMODTYPE_WHEELS);
    hydraulics = GetVehicleComponentInSlot(vehiculo, CARMODTYPE_HYDRAULICS);
    nitro = GetVehicleComponentInSlot(vehiculo, CARMODTYPE_NITRO);
    hood = GetVehicleComponentInSlot(vehiculo, CARMODTYPE_HOOD);
    lamps = GetVehicleComponentInSlot(vehiculo, CARMODTYPE_LAMPS);
    stereo = GetVehicleComponentInSlot(vehiculo, CARMODTYPE_STEREO);
    ventright = GetVehicleComponentInSlot(vehiculo, CARMODTYPE_VENT_RIGHT);
    ventleft = GetVehicleComponentInSlot(vehiculo, CARMODTYPE_VENT_LEFT);
    if(spoilers >= 1000) InfoVehiculo[vid][vModificaciones][0] = spoilers;
    if(hood >= 1000) InfoVehiculo[vid][vModificaciones][1] = hood;
    if(roof >= 1000) InfoVehiculo[vid][vModificaciones][2] = roof;
    if(sideskirt1 >= 1000) InfoVehiculo[vid][vModificaciones][3] = sideskirt1;
    if(lamps >= 1000) InfoVehiculo[vid][vModificaciones][4] = lamps;
    if(nitro >= 1000) InfoVehiculo[vid][vModificaciones][5] = nitro;
    if(exhaust >= 1000) InfoVehiculo[vid][vModificaciones][6] = exhaust;
    if(wheels >= 1000) InfoVehiculo[vid][vModificaciones][7] = wheels;
    if(stereo >= 1000) InfoVehiculo[vid][vModificaciones][8] = stereo;
    if(hydraulics >= 1000) InfoVehiculo[vid][vModificaciones][9] = hydraulics;
    if(frontbumper >= 1000) InfoVehiculo[vid][vModificaciones][10] = frontbumper;
    if(rearbumper >= 1000) InfoVehiculo[vid][vModificaciones][11] = rearbumper;
    if(ventright >= 1000) InfoVehiculo[vid][vModificaciones][12] = ventright;
    if(ventleft >= 1000) InfoVehiculo[vid][vModificaciones][13] = ventleft;
    if(sideskirt2 >= 1000) InfoVehiculo[vid][vModificaciones][14] = sideskirt2;
}

funcion ColocarMods(vehiculo, vid) {
    new paintjob = InfoVehiculo[vid][vPaintJob], color1 = InfoVehiculo[vid][vColor_1], color2 = InfoVehiculo[vid][vColor_2];
    if(InfoVehiculo[vid][vPaintJob] != -1) {
        ChangeVehiclePaintjob(vehiculo, paintjob);
        ChangeVehicleColor(vehiculo, color1, color2);
    }
    for(new m = 0; m < MAX_MODVEHICULOS; m++) {
        AddVehicleComponent(vehiculo, InfoVehiculo[vid][vModificaciones][m]);
    }
}

//- Sistema de vehículos dínamicos by ALEX DONUTS
new OneSeatVehicles[38] = {
    425, 430, 432, 441, 446, 448, 452, 453,
    454, 464, 465, 472, 473, 476, 481, 484,
    485, 486, 493, 501, 509, 510, 519, 520,
    530, 531, 532, 539, 553, 564, 568, 571,
    572, 574, 583, 592, 594, 595
};

funcion IsSeatAvailable(vehicleid, seat) {
    new carmodel = GetVehicleModel(vehicleid);
    for(new i = 0; i < sizeof(OneSeatVehicles); i++) {
        if(carmodel == OneSeatVehicles[i]) return 0;
    }
    foreach(Player, i) {
        if(GetPlayerVehicleID(i) == vehicleid && GetPlayerVehicleSeat(i) == seat) return 0;
    }
    return 1;
}

funcion VehiculoLuces(vehicleid, playerid) {
    new engine, lights, alarm, doors, bonnet, boot, objective;
    GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
    if(lights == VEHICLE_PARAMS_ON) {
        SetVehicleParamsEx(vehicleid, engine, VEHICLE_PARAMS_OFF, alarm, doors, bonnet, boot, objective);
        _Mensaje(playerid, 2, "0", "Luces del vehiculo fueron apagadas.");
    } else if(lights == VEHICLE_PARAMS_OFF || lights == VEHICLE_PARAMS_UNSET) {
        SetVehicleParamsEx(vehicleid, engine, VEHICLE_PARAMS_ON, alarm, doors, bonnet, boot, objective);
        _Mensaje(playerid, 2, "0", "Luces del vehiculo encendidas con éxito.");
    }
    return 1;
}

funcion VehiculoCapo(vehicleid, playerid) {
    new engine, lights, alarm, doors, bonnet, boot, objective;
    GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
    if(bonnet == VEHICLE_PARAMS_ON) {
        SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, VEHICLE_PARAMS_OFF, boot, objective);
        _Mensaje(playerid, 2, "0", "Capó del vehiculo fue cerrado.");
    } else if(bonnet == VEHICLE_PARAMS_OFF || bonnet == VEHICLE_PARAMS_UNSET) {
        SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, VEHICLE_PARAMS_ON, boot, objective);
        _Mensaje(playerid, 2, "0", "Capó del vehiculo fue abierto.");
    }
    return 1;
}

stock DetectarCerrado(playerid, exception = INVALID_VEHICLE_ID) {
    new Float: Distance,
    target = -1;
    for(new v; v < MAX_VEHICLES; v++) if(VehNoExiste(v)) {
        if(v != exception && (target < 0 || Distance > CercaDeVehiculo(playerid, v))) {
            target = v;
            Distance = CercaDeVehiculo(playerid, v);
        }
    }
    return target;
}

funcion VehiculoMaletero(vehicleid, playerid) {
    new engine, lights, alarm, doors, bonnet, boot, objective;
    GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
    if(boot == VEHICLE_PARAMS_ON) {
        SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, VEHICLE_PARAMS_OFF, objective);
        _Mensaje(playerid, 2, "0", "Maletero del vehiculo fue cerrado.");
    } else if(boot == VEHICLE_PARAMS_OFF || boot == VEHICLE_PARAMS_UNSET) {
        SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, VEHICLE_PARAMS_ON, objective);
        _Mensaje(playerid, 2, "0", "Maletero del vehiculo fue abierto.");
    }
    return 1;
}

funcion CercaDelVehiculo(playerid, vehicleid, Float: radius) {
    new Float: Floats[3];
    GetVehiclePos(vehicleid, Floats[0], Floats[1], Floats[2]);
    return _enPos(playerid, radius, Floats[0], Floats[1], Floats[2]);
}

stock VehNoExiste(vehicleid) {
    if(GetVehicleModel(vehicleid) >= 400) {
        return 1;
    }
    return 0;
}

funcion CercaDeVehiculo(playerid, veh) {
    new Float: Floats[7];
    GetPlayerPos(playerid, Floats[0], Floats[1], Floats[2]);
    GetVehiclePos(veh, Floats[3], Floats[4], Floats[5]);
    Floats[6] = floatsqroot((Floats[3] - Floats[0]) * (Floats[3] - Floats[0]) + (Floats[4] - Floats[1]) * (Floats[4] - Floats[1]) + (Floats[5] - Floats[2]) * (Floats[5] - Floats[2]));
    return floatround(Floats[6]);
}

funcion SkinsValidos(skinid) {
    if(skinid < 0 || skinid > 311) return false;
    return true;
}

funcion EncenderVehiculo(vehicleid, playerid) {
    new engine, lights, alarm, doors, bonnet, boot, objective;
    GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
    if(engine == VEHICLE_PARAMS_ON) {
        SetVehicleParamsEx(vehicleid, VEHICLE_PARAMS_OFF, lights, alarm, doors, bonnet, boot, objective);
        AccionesRol(playerid, 0, "apaga el motor del vehículo y retira las llaves del contacto.");
        arr_Engine {vehicleid} = 0;
        PlayerTextDrawHide(playerid, Velocimetro[playerid]);
    } else if(engine == VEHICLE_PARAMS_OFF || engine == VEHICLE_PARAMS_UNSET) {
        new Float: f_vHealth;
        GetVehicleHealth(vehicleid, f_vHealth);
        if(f_vHealth < 350.0) return _Mensaje(playerid, 0, "641", "Vehículo averiado, lo mejor sería llamar un mecánico o comprar piezas en la gasolinera.");
        if(GasolinaInicialVeh[vehicleid] <= 0) return _Mensaje(playerid, 0, "642", "Vehículo sin gasolina, lo mejor sería llamar un mecánico o comprar una lata de gasolina.");
        SetVehicleParamsEx(vehicleid, VEHICLE_PARAMS_ON, lights, alarm, doors, bonnet, boot, objective);
        PlayerTextDrawShow(playerid, Velocimetro[playerid]);
        arr_Engine {vehicleid} = 1;
    }
    return 1;
}

// Función: Otros Timers.
funcion PagoDiario(i) {
	new banco = user[i][jBanco], string[128], sueldo, casai, negi, talli, vehi = 0;
	//- impuestos
	if(user[i][jCasaKey] != -1) {
		if (InfoCasa[user[i][jCasaKey]][cTipo] == 1) casai += 20;
		else if (InfoCasa[user[i][jCasaKey]][cTipo] == 2) casai += 40;
		else if (InfoCasa[user[i][jCasaKey]][cTipo] == 3) casai += 75;
		else if (InfoCasa[user[i][jCasaKey]][cTipo] == 4) casai += 80;
		else if (InfoCasa[user[i][jCasaKey]][cTipo] == 5) casai += 100;
	} else {
		casai = 0;
	}
	if(user[i][jNegocioKey] != -1) {
		if (i_Negocio[user[i][jNegocioKey]][nTipo] == 1) negi += 20;
		else if (i_Negocio[user[i][jNegocioKey]][nTipo] == 2) negi += 20;
		else if (i_Negocio[user[i][jNegocioKey]][nTipo] == 3) negi += 30;
		else if (i_Negocio[user[i][jNegocioKey]][nTipo] == 4) negi += 20;
		else if (i_Negocio[user[i][jNegocioKey]][nTipo] == 5) negi += 20;
		else if (i_Negocio[user[i][jNegocioKey]][nTipo] == 6) negi += 20;
		else if (i_Negocio[user[i][jNegocioKey]][nTipo] == 7) negi += 50;
		else if (i_Negocio[user[i][jNegocioKey]][nTipo] == 8) negi += 50;
		else if (i_Negocio[user[i][jNegocioKey]][nTipo] == 9) negi += 30;
		else if (i_Negocio[user[i][jNegocioKey]][nTipo] == 10) negi += 12;
		else if (i_Negocio[user[i][jNegocioKey]][nTipo] == 11) negi += 50;
		else if (i_Negocio[user[i][jNegocioKey]][nTipo] == 12) negi += 50;
		else if (i_Negocio[user[i][jNegocioKey]][nTipo] == 13) negi += 20;
		else if (i_Negocio[user[i][jNegocioKey]][nTipo] == 14) negi += 60;
		else if (i_Negocio[user[i][jNegocioKey]][nTipo] == 15) negi += 40;
		else if (i_Negocio[user[i][jNegocioKey]][nTipo] == 16) negi += 50;
	} else {
		negi = 0;
	}
	if(user[i][jLlaveCoche][0] != 0) { vehi += 25; }
	if(user[i][jLlaveCoche][1] != 0) { vehi += 25; }
	if(user[i][jLlaveCoche][2] != 0) { vehi += 25; }
	if(user[i][jLlaveCoche][3] != 0) { vehi += 25; }
	if(user[i][jLlaveCoche][4] != 0) { vehi += 25; }
	if(user[i][jLlaveCoche][5] != 0) { vehi += 25; }
	if(user[i][jAdiccion][0] > 10)
	{
		_Mensaje(i, 4, "ef0041", "Mierda tío! te has enganchado. Sientes la necesidad de consumir crack.");
	}
	if(user[i][jAdiccion][1] > 10)
	{
		_Mensaje(i, 4, "ef0041", "Mierda tío! te has enganchado. Sientes la necesidad de consumir marihuana.");
	}
	if(user[i][jAdiccion][2] > 10)
	{
		_Mensaje(i, 4, "ef0041", "Mierda tío! te has enganchado. Sientes la necesidad de consumir heroina.");
	}
	if(user[i][jAdiccion][3] > 10)
	{
		_Mensaje(i, 4, "ef0041", "Mierda tío! te has enganchado. Sientes la necesidad de consumir cocaina.");
	}
	if(user[i][jAdiccion][4] > 10)
	{
		_Mensaje(i, 4, "ef0041", "Mierda tío! te has enganchado. Sientes la necesidad de consumir LSD.");
	}
	if(user[i][jAdiccion][0] > 0) user[i][jAdiccion][0]--;
	if(user[i][jAdiccion][1] > 0) user[i][jAdiccion][1]--;
	if(user[i][jAdiccion][2] > 0) user[i][jAdiccion][2]--;
	if(user[i][jAdiccion][3] > 0) user[i][jAdiccion][3]--;
	if(user[i][jAdiccion][4] > 0) user[i][jAdiccion][4]--;
	if(user[i][jFuerza] > 1000) user[i][jFuerza] = 999;
	_Mensaje(i, 4, "b0b0b0", "IMPUESTOS: {FFFF00}Estado de Los Santos (SA)");
	format(string, sizeof(string), "Casas: %d$ - Negocios: %d$ - Vehículos: %d$", casai, negi, vehi);
	_Mensaje(i, 4, "ffffff", string);
	format(string, sizeof(string), "** Cantidad total a pagar: {ff0000}(%d$) descontados de su cuenta.", casai+negi+talli+vehi);
	_Mensaje(i, 4, "ffffff", string);
	DineroEstado += casai+negi+talli+vehi;
 	user[i][jBanco] -= casai+negi+talli+vehi;
	//- ingresos
	if(user[i][jMiembro] > 0 && user[i][jMiembro] <= 6) {
		if(user[i][jMiembro] == 1) { //- LSPD
			switch(user[i][jRango]) { //- Rangos
				case 1: sueldo = 50;
    			case 2: sueldo = 100;
       			case 3: sueldo = 150;
	            case 4: sueldo = 200;
	            case 5: sueldo = 240;
	            case 6: sueldo = 280;
             	case 7: sueldo = 340;
			 	case 8: sueldo = 385;
     			case 9: sueldo = 430;
        		case 10: sueldo = 580;
          		case 11: sueldo = 620;
            	case 12: sueldo = 800;
                default: sueldo = 50;
			}
		} else if(user[i][jMiembro] == 2) { //- Mecánicos
			switch(user[i][jRango]) { //- Rangos
				case 1: sueldo = 80;
				case 2: sueldo = 170;
				case 3: sueldo = 250;
				case 4: sueldo = 380;
				case 5: sueldo = 500;
				default: sueldo = 80;
			}
		}  else if(user[i][jMiembro] == 3) { //- CNN
			switch(user[i][jRango]) { //- Rangos
				case 1: sueldo = 100;
				case 2: sueldo = 150;
				case 3: sueldo = 200;
				case 4: sueldo = 350;
				case 5: sueldo = 400;
				case 6: sueldo = 500;
				case 7: sueldo = 700;
				default: sueldo = 100;
			}
		} else if(user[i][jMiembro] == 4) { //- Gobierno
			switch(user[i][jRango]) { //- Rangos
				case 1: sueldo = 125;
				case 2: sueldo = 170;
				case 3: sueldo = 250;
	            case 4: sueldo = 350;
	            case 5: sueldo = 480;
	            case 6: sueldo = 550;
	            case 7: sueldo = 660;
	            case 8: sueldo = 700;
	            case 9: sueldo = 800;
	            default: sueldo = 125;
			}
		} else if(user[i][jMiembro] == 5) { //- LSED
			switch(user[i][jRango]) { //- Rangos
				case 1: sueldo = 100;
				case 2: sueldo = 150;
				case 3: sueldo = 200;
				case 4: sueldo = 250;
				case 5: sueldo = 300;
				case 6: sueldo = 350;
				case 7: sueldo = 400;
				case 8: sueldo = 450;
				case 9: sueldo = 500;
				case 10: sueldo = 550;
				case 11: sueldo = 575;
				case 12: sueldo = 600;
				case 13: sueldo = 625;
				case 14: sueldo = 650;
				case 15: sueldo = 700;
				default: sueldo = 50;
			}
		} else if(user[i][jMiembro] == 6) { //- SADOC
			switch(user[i][jRango]) { //- Rangos
				case 1: sueldo = 75;
				case 2: sueldo = 150;
				case 3: sueldo = 300;
				case 4: sueldo = 350;
				case 5: sueldo = 400;
				case 6: sueldo = 500;
				case 7: sueldo = 580;
				case 8: sueldo = 650;
				case 9: sueldo = 700;
				case 10: sueldo = 800;
				default: sueldo = 75;
			}
		}
	}
	user[i][jBanco] += sueldo+400;
	user[i][jBanco] += user[i][jCheques];
	switch(user[i][jPremium]) {
		case 1:  user[i][jBanco] += 1200;
		case 2:  user[i][jBanco] += 3500;
		case 3:  user[i][jBanco] += 5000;
		default: user[i][jBanco] += 0;
	}
	_Mensaje(i, 4, "b0b0b0", "INGRESOS: {FFFF00}Estado de Los Santos (SA)");
	format(string, sizeof(string), "Ingresos por Trabajo: %d$ - Cheques Ingresados: %d$ - [Premium (OOC): %d$]", sueldo+400, user[i][jCheques], 50*user[i][jPremium]);
	_Mensaje(i, 4, "ffffff", string);
	format(string, sizeof(string), "Total de ingresos: %d$", user[i][jBanco] - banco);
	_Mensaje(i, 4, "ffffff", string);
	//- saldo
	_Mensaje(i, 4, "b0b0b0", "CUENTA BANCARIA: {FFFF00}Banco de Los Santos.");
	format(string, sizeof(string), "Saldo Anterior: %d$ | Nuevo saldo: %d$", user[i][jBanco]-(sueldo+400)-user[i][jCheques]-(50*user[i][jPremium])+casai+negi+talli+vehi, user[i][jBanco]);
	_Mensaje(i, 4, "ffffff", string);
	user[i][jCheques] = 0;
	TextoPantalla(i, "~y~Payday", 5000, 1);
	//- extras
	if (DobleExperiencia == 0) user[i][jExperiencia] += 1;
	else user[i][jExperiencia] += 2;
	if (FalsoPD == 1) Regalo = 1;
	if (FalsoPD == 0)
	{ user[i][j_Horas] += 1;
	  if(user[i][jContrato] != -1)
	  {
	  	user[i][jHorasE]++;
	  }
	}
	user[i][jTiempos][9] = 0;
	new proximonvl = user[i][jNivel] + 1, cantidadexp = proximonvl * nivelexp;
	if (user[i][jExperiencia] >= cantidadexp) {
		format(string, sizeof(string), "~w~nivel ~g~%d", proximonvl);
		TextoPantalla(i, string, 5000, 1);
		PlayerPlaySound(i, 1052, 0.0, 0.0, 0.0);
		user[i][jNivel]++;
		user[i][jExperiencia] = 0;
		GuardarCuenta(i);
		SetPlayerScore(i, user[i][jNivel]);
	} //- Final de subirnivel
	FalsoPD = 0;
    return 1;
}

funcion RespawnAutomatico()
{
	new bool: unwanted[MAX_VEHICLES];
	for(new player = 0; player < MAX_PLAYERS; player++)
	{
		if(IsPlayerInAnyVehicle(player))
		{
			unwanted[GetPlayerVehicleID(player)] = true;
		}
	}
	for(new car = 157; car < 227; car++)
	{
		if(!unwanted[car]) SetVehicleToRespawn(car);
		SetVehicleParamsEx(car, 0, 0, 0, 0, 0, 0, 0);
		arr_Engine {car} = 0;
	}
	return 1;
}

funcion A_MedioSegundo()
{
    for(new playerid; playerid < MAX_PLAYERS; playerid++)
	{
        for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(Es_Faccion(i, 1) && EnServicioPD[i] == 1 && SolicitaRefuerzos[playerid] == 1)
				{
				    if (user[i][jDivision] == 1 || user[i][jDivision] == 2) {
				    	if (user[playerid][jDivision] == 1)SetPlayerMarkerForPlayer(i, playerid, 0x1229FAFF);
				    	if (user[playerid][jDivision] == 2)SetPlayerMarkerForPlayer(i, playerid, 0x00C200FF);
				    }
				}
				if(Es_Faccion(i, 1) && EnServicioPD[i] == 1 && BotonPanico[playerid] == 1) if (user[playerid][jDivision] == 1 || user[playerid][jDivision] == 2)SetPlayerMarkerForPlayer(i, playerid, 0xFFB400FF);
			}
		}
        if(GetPlayerState(playerid) == 1) { //- Si NO está subido a un vehículo
            if(Taseado[playerid] > 0) { //- Animación tasér
                if(GetPlayerAnimationIndex(playerid) != 1209) {
                    ApplyAnimation(playerid, "PED", "KO_skid_front", 4.1, 0, 1, 1, 1, 0, 1);
                }
            }
            if(_Gomas[playerid] > 0) { //- Animación gomas
                if(GetPlayerAnimationIndex(playerid) != 1533) {
                    ApplyAnimation(playerid, "SWEET", "LaFin_Sweet", 4.0, 0, 1, 1, 1, 0, 1);
                }
            }
            if(GetPVarInt(playerid, "EnCrack") == 1) { //- herido/muerto
                if(GetPlayerAnimationIndex(playerid) != 1701) {
                    ApplyAnimation(playerid, "WUZI", "CS_Dead_Guy", 4.0, 0, 0, 0, 1, 0, 1);
                }
            }
        }
        update_Manos(playerid); //- Actualiza los objetos de manos del jugador
    }
    return 1;
}

funcion A_Segundo() {
    new string[256];
    foreach(Player, i) {
        if (IsPlayerConnectedEx(i)) {
    		if (GetPVarInt(i, "_heridoC") == 1) ApplyAnimation(i, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0, 1);
            if (GetPlayerPing(i) > 1500) {
				_Expulsar(i, 1, "¡PING demasiado alto! Expulsado por seguridad.");
			}
            if (ComprobarDineroJ(i) != GetPlayerMoney(i)) {
                ReiniciarDinero(i);
                ActualizarDinero(i, GetPVarInt(i, "Money"));
            }
            if (user[i][jTiempoServicio] != 0) user[i][jTiempoServicio]--;
            if (user[i][jEstrellas] > 0) SetPlayerWantedLevel(i, user[i][jEstrellas]);
	        if (user[i][j_Horas] < 2) {
	            if(GetPlayerWeapon(i) > 16) {
	                _Mensaje(i, 4, "ADC3E7", "[CMBlock Admin] dice: {FFFFFF}Debes poseer 2 horas de juego para portar un arma, ¡se te eliminaron del bolsillo y manos!");
	                ResetPlayerWeapons(i);
	                QuitarManos(i);
	                format(string, sizeof(string), "[AdminArmas]: {FFFFFF}Jugador (%s) recibió limpieza de armas del sistema (menos 2 horas de juego).", NombreRJugador(i));
	                MensajeAdmin(string);
	            }
	        }
            if (user[i][jAlcohol] > 40) {
                if (!IsPlayerInAnyVehicle(i)) ApplyAnimation(i, "PED", "WALK_DRUNK", 4.1, 1, 1, 1, 1, 1, 1);
                SetPlayerDrunkLevel(i, user[i][jAlcohol] * 250);
            }
            if (Atado[i] > 0) TogglePlayerControllable(i, 0);
            if (GetPlayerSpecialAction(i) == SPECIAL_ACTION_USEJETPACK && JetPack[i] == 0 && user[i][jAdmin] < 1) {
                format(string, sizeof(string), "Registros: El jugador %s (ID %d) es posible que use Cheat de JetPack. (baneado auto)", NombreRJugador(i), i);
                Log("Registros/Hack.log", string);
                format(string, sizeof(string), "[Administración]: {FFFFFF}El jugador %s ha sido expulsado por CMBlock [BOT] . {E00000}Razón: Cheats.", NombreRJugador(i), i);
                MensajeAdmin(string);
                Kick(i);
            }
            // sistema de incendios.
            if(Es_Faccion(i, 5))
            {
                if(user[i][jm_Derecha] == 37 && user[i][jm_DerechaCant] > 1)
                {
                    new Keys,ud,lr;
                    GetPlayerKeys(i, Keys, ud, lr);
                    if(Keys == KEY_FIRE)
                    {
						new FireID = CercaIncendio(i);
  						if (FireID != -1)
			  			{
			  			    if(Incendios[FireID][pIntensidad] > 0)
			  			    {
							  	if(Incendios[FireID][pIntensidad]-3 < 0) Incendios[FireID][pIntensidad] = 0;
								else Incendios[FireID][pIntensidad]-=3;
								if(Incendios[FireID][pIntensidad] != 0)
								{
									format(string, sizeof(string), "{ff4000}Incendio\n{ffc100}Intensidad: {ffffff}%d", Incendios[FireID][pIntensidad]);
                                	UpdateDynamic3DTextLabelText(Incendios[FireID][pInfoIncendio], -1, string);
								}
								else
								{
								    format(string, sizeof(string), "{ff4000}Incendio\n{ffc100}Intensidad: {ffffff}Baja");
								    UpdateDynamic3DTextLabelText(Incendios[FireID][pInfoIncendio], -1, string);

								}
							}
  						}
                    }
                }
            }
            //repaircar
            if(GetPlayerState(i) == PLAYER_STATE_DRIVER) {
            	new Float: cvida;
				GetVehicleHealth(GetPlayerVehicleID(i), cvida);
				if(cvida > 1001.0)
				{
                	SetVehicleHealth(GetPlayerVehicleID(i), 1000.0);
					format(string, 128, "[AvisoAdmin]: {FFFFFF}El jugador %s puede estar utilizando trucos de 'Repair Car'. (¡ves a mirar!)", NombreRJugador(i));
			    	MensajeAdmin(string);
				}
			}
            //
        }
    }
}

funcion A_Minuto()
{
	new string[128];
	for(new f=0;f<MAX_PLANTAS;f++) {
		if(InfoMaria[f][sSlot]) {
		    if(InfoMaria[f][sTime] > 1) {
				InfoMaria[f][sTime]--;
				format(string, sizeof(string), "Planta de marihuana\n{ffffff}Madura en %ih %im", InfoMaria[f][sTime] / 60, InfoMaria[f][sTime]);
				UpdateDynamic3DTextLabelText(InfoMaria[f][sLabel], 0x009F46FF, string);
			} else {
   				new gramos = random(6);
				InfoMaria[f][sGramos] = gramos;
				UpdateDynamic3DTextLabelText(InfoMaria[f][sLabel], 0x009F46FF, "Planta de marihuana\n{ffffff}Lista a cosechar");
			}
		}
	}
    for (new playerid = 0; playerid < MAX_PLAYERS; playerid++) {
        //- payday
        if(user[playerid][jT_fabrica] == 1)
		{
            user[playerid][jT_fabrica] = -1;
			user[playerid][jI_fabrica] = 0;
  		}
   		if(user[playerid][jT_fabrica2] == 1)
	   	{
            user[playerid][jT_fabrica2] = -1;
			user[playerid][jI_fabrica2] = 0;
  		}
        if(user[playerid][jT_fabrica] != -1) user[playerid][jT_fabrica] --;
        if(user[playerid][jT_fabrica2] != -1) user[playerid][jT_fabrica2] --;
		user[playerid][jPayday] ++;
		if(user[playerid][jPayday] >= 60) {
			user[playerid][jPayday] = 0;
			PagoDiario(playerid);
		}
        if (user[playerid][jTiempos][1] > 0) user[playerid][jTiempos][1]--; //- Llenar Vida
        if (user[playerid][jTiempos][2] > 0) user[playerid][jTiempos][2]--; //- /entrenar
        if (user[playerid][jTiempos][3] > 0) user[playerid][jTiempos][3]--; //- Robo banco
        if (user[playerid][jTiempos][4] > 0) user[playerid][jTiempos][4]--; //- Robo negocio
        if (user[playerid][jTiempos][5] > 0) user[playerid][jTiempos][5]--; //- Tiempo Regalo
        if (user[playerid][jTiempos][6] > 0) user[playerid][jTiempos][6]--; //- /traficar - Trabajo traficante
        if (user[playerid][jTiempos][7] > 0) user[playerid][jTiempos][7]--; //- /comprarnegocio
        if (user[playerid][jTiempos][8] > 0) user[playerid][jTiempos][8]--; //- /comprar > ammunation
        if (user[playerid][jTiempos][11] > 0) user[playerid][jTiempos][11]--; //- /Regalo
        if (user[playerid][jTiempos][12] > 0) user[playerid][jTiempos][12]--; //- /Ads
        if (user[playerid][jAlcohol] > 0) user[playerid][jAlcohol]--; //- /Beber
        if (user[playerid][jTiempos][16] > 0) user[playerid][jTiempos][16]--; //- delincuente
        if (user[playerid][jTiempos][17] > 0) user[playerid][jTiempos][17]--; //- robo coches
        if (user[playerid][jTiempos][18] > 0) user[playerid][jTiempos][18]--; //- /fseguro
        if (user[playerid][jTiempos][19] > 0) user[playerid][jTiempos][19]--; //- /comprar > ammunation
        if (VisitaTimer2[playerid] > 0) VisitaTimer2[playerid]--;
        //Hambre y sed
	  	if(user[playerid][jMuerto2] == 0 && user[playerid][jEncarcelado] == 0 && EnServicioADM[playerid] == 0){
            //Hambre
			if(user[playerid][jHambre] < MIN_HAMBRE)user[playerid][jHambre] = MIN_HAMBRE+1; //Si hambre menor a mínimo, setea mínimo+1 para que se actualice
			ActualizarHambre(playerid);
			//Sed
			if(user[playerid][jSed] < MIN_SED)user[playerid][jSed] = MIN_SED+1; //Si sed menor a mínimo, setea mínimo+1 para que se actualice
			ActualizarSed(playerid);
			//Le va quitando vida por hambre y sed
			new Float:cvida; GetPlayerHealth(playerid, cvida);
			if(user[playerid][jSed] <= MIN_SED && user[playerid][jHambre] <= MIN_HAMBRE) { if(cvida > 10)_Sangre(playerid, -2); }
			else if(user[playerid][jSed] <= MIN_SED) { if(cvida > 10)_Sangre(playerid, -1); }
			else if(user[playerid][jHambre] <= MIN_HAMBRE) { if(cvida > 10)_Sangre(playerid, -1); }
		}
		if(user[playerid][jEncarcelado] > 0) {
            if(user[playerid][jEncarcelado] > 0) { user[playerid][jTiempoCarcel]--; }
            if(user[playerid][jTiempoCarcel] <= 0) {
                user[playerid][jTiempoCarcel] = 0;
                switch(user[playerid][jEncarcelado]) {
                    case 1: {  // OOC
                        EliminarHerido(playerid);
                        Sangre_(playerid, 100);
                        format(InfoHeridas[playerid][Cabeza], 24, "-"); InfoHeridas[playerid][Cabezar] = 0;
                        format(InfoHeridas[playerid][Torso], 24, "-"); InfoHeridas[playerid][Torsor] = 0;
                        format(InfoHeridas[playerid][BrazoD], 24, "-"); InfoHeridas[playerid][BrazoDr] = 0;
                        format(InfoHeridas[playerid][BrazoI], 24, "-"); InfoHeridas[playerid][BrazoIr] = 0;
                        format(InfoHeridas[playerid][EntreP], 24, "-"); InfoHeridas[playerid][EntrePr] = 0;
                        format(InfoHeridas[playerid][PiernaD], 24, "-"); InfoHeridas[playerid][PiernaDr] = 0;
                        format(InfoHeridas[playerid][PiernaI], 24, "-"); InfoHeridas[playerid][PiernaIr] = 0;
                        format(InfoHeridas[playerid][Lesiones], 24, "-"); InfoHeridas[playerid][Lesionesr] = 0;
                        SetPlayerInterior(playerid, 0);
                        user[playerid][jInterior] = 0;
                        SetPlayerVirtualWorld(playerid, 0);
                        user[playerid][jVirtualWorld] = 0;
                        _Mensaje(playerid, 4, "FF0000", "[Mensaje Admin]:{ffffff} Recuerda porque fuiste sancionado, trata de evitarlo nuevamente.");
                        SetPosEx(playerid, 1612.6682, -1648.4236, 13.6149, 0, 0, 0);
                        DeletePVar(playerid, "Congelado");
                        TogglePlayerControllable(playerid, 1);
                        format(user[playerid][jSancionador], 50, "Ninguno");
                        PlayerTextDrawHide(playerid, TextTrabajo[playerid]);
                    }
                    case 2: {   // LSPD
                        EliminarHerido(playerid);
                        Sangre_(playerid, 100);
                        format(InfoHeridas[playerid][Cabeza], 24, "-"); InfoHeridas[playerid][Cabezar] = 0;
                        format(InfoHeridas[playerid][Torso], 24, "-"); InfoHeridas[playerid][Torsor] = 0;
                        format(InfoHeridas[playerid][BrazoD], 24, "-"); InfoHeridas[playerid][BrazoDr] = 0;
                        format(InfoHeridas[playerid][BrazoI], 24, "-"); InfoHeridas[playerid][BrazoIr] = 0;
                        format(InfoHeridas[playerid][EntreP], 24, "-"); InfoHeridas[playerid][EntrePr] = 0;
                        format(InfoHeridas[playerid][PiernaD], 24, "-"); InfoHeridas[playerid][PiernaDr] = 0;
                        format(InfoHeridas[playerid][PiernaI], 24, "-"); InfoHeridas[playerid][PiernaIr] = 0;
                        format(InfoHeridas[playerid][Lesiones], 24, "-"); InfoHeridas[playerid][Lesionesr] = 0;
                        SetPlayerInterior(playerid, 0);
                        user[playerid][jInterior] = 0;
                        _Mensaje(playerid, 4, "8D8DFF", "[Oficial de LSPD]: {ffffff} Usted ha cumplido el tiempo estimado y fue dejado en libertad.");
                        SetPosEx(playerid, 1815.0328, -1938.9517, 13.5279, 0, 0, 0);
                    }
                    case 3: {   // Prision Federal
                        EliminarHerido(playerid);
                        Sangre_(playerid, 100);
                        format(InfoHeridas[playerid][Cabeza], 24, "-"); InfoHeridas[playerid][Cabezar] = 0;
                        format(InfoHeridas[playerid][Torso], 24, "-"); InfoHeridas[playerid][Torsor] = 0;
                        format(InfoHeridas[playerid][BrazoD], 24, "-"); InfoHeridas[playerid][BrazoDr] = 0;
                        format(InfoHeridas[playerid][BrazoI], 24, "-"); InfoHeridas[playerid][BrazoIr] = 0;
                        format(InfoHeridas[playerid][EntreP], 24, "-"); InfoHeridas[playerid][EntrePr] = 0;
                        format(InfoHeridas[playerid][PiernaD], 24, "-"); InfoHeridas[playerid][PiernaDr] = 0;
                        format(InfoHeridas[playerid][PiernaI], 24, "-"); InfoHeridas[playerid][PiernaIr] = 0;
                        format(InfoHeridas[playerid][Lesiones], 24, "-"); InfoHeridas[playerid][Lesionesr] = 0;
                        SetPlayerInterior(playerid, 0);
                        user[playerid][jInterior] = 0;
                        SetPlayerVirtualWorld(playerid, 0);
                        user[playerid][jVirtualWorld] = 0;
                        _Mensaje(playerid, 4, "8D8DFF", "[Oficial de SASD]: {ffffff} Usted ha cumplido el tiempo estimado y fue dejado en libertad.");
                        SetPosEx(playerid, 161.6125,2018.9698,18.6875,85.8027, 0, 0);
                    }
                }
                user[playerid][jEncarcelado] = 0;
                B_Telefono[playerid] = 0;
                TextoPantalla(playerid, "~g~Libre", 5000, 1);
                SetPlayerWantedLevel(playerid, 0);
                user[playerid][jEstrellas] = 0;
            }
        }
    }
    return 1;
}

funcion A_Hora()
{
    for (new nid = 0; nid < MAX_NEGOCIOS; nid++)
	{
    	if (i_Negocio[nid][nComprado] == 1)
		{
		    if (i_Negocio[nid][EnLlamas] == 1)
		    {
				new cuota;
				if (i_Negocio[nid][nTipo] == 1) cuota = 50;
				else if (i_Negocio[nid][nTipo] == 2) cuota = 58;
				else if (i_Negocio[nid][nTipo] == 3) cuota = 55;
				else if (i_Negocio[nid][nTipo] == 4) cuota = 35;
				else if (i_Negocio[nid][nTipo] == 5) cuota = 32;
				else if (i_Negocio[nid][nTipo] == 6) cuota = 29;
				else if (i_Negocio[nid][nTipo] == 7) cuota = 175;
				else if (i_Negocio[nid][nTipo] == 8) cuota = 35;
				else if (i_Negocio[nid][nTipo] == 9) cuota = 30;
				else if (i_Negocio[nid][nTipo] == 10) cuota = 35;
				else if (i_Negocio[nid][nTipo] == 11) cuota = 195;
				else if (i_Negocio[nid][nTipo] == 12) cuota = 80;
				else if (i_Negocio[nid][nTipo] == 13) cuota = 75;
				else if (i_Negocio[nid][nTipo] == 14) cuota = 215;
				else if (i_Negocio[nid][nTipo] == 15) cuota = 150;
				else if (i_Negocio[nid][nTipo] == 16) cuota = 189;
				else if (i_Negocio[nid][nTipo] == 17) cuota = 130;
				i_Negocio[nid][nCuotas] += cuota;
				if (i_Negocio[nid][nProductos] > 25) i_Negocio[nid][nProductos] -= 25;
				if (i_Negocio[nid][nSeguro] == 1) i_Negocio[nid][nSeguro] = 0;
				save_Negocio(nid);
		    }
    	    if (i_Negocio[nid][nSeguro] == 1)
			{
    	        if (i_Negocio[nid][nProductos] > 10 && i_Negocio[nid][EnLlamas] != 1)
				{
	    			new pagan, tipo = i_Negocio[nid][nTipo];
	    			if (tipo == 1) pagan = 118;
	    			else if (tipo == 2) pagan = 122;
	    			else if (tipo == 3) pagan = 130;
	    			else if (tipo == 4) pagan = 95;
	    			else if (tipo == 5) pagan = 90;
	    			else if (tipo == 6) pagan = 87;
	    			else if (tipo == 7) pagan = 455;
	    			else if (tipo == 8) pagan = 85;
	    			else if (tipo == 9) pagan = 80;
	    			else if (tipo == 10) pagan = 75;
	    			else if (tipo == 11) pagan = 295;
	    			else if (tipo == 12) pagan = 120;
	    			else if (tipo == 13) pagan = 95;
	    			else if (tipo == 14) pagan = 315;
	    			else if (tipo == 15) pagan = 270;
	    			else if (tipo == 16) pagan = 289;
	    			else if (tipo == 17) pagan = 210;
			 		i_Negocio[nid][nDinero] += pagan;
	      			i_Negocio[nid][nProductos] -= 15;
	      			save_Negocio(nid);
				}
			}
		}
	}
	for (new e_id = 0; e_id < MAX_EMPRESAS; e_id++)
	{
    	if (i_Empresa[e_id][eComprado] == 1)
		{
			new pagae = 0;
	    	if (i_Empresa[e_id][eTipo] == 1) pagae = 300;//repartos
	    	else if (i_Empresa[e_id][eTipo] == 3) pagae = 122;//taxista-prox
			i_Empresa[e_id][eDinero] += pagae;
			save_Empresa(e_id);
		}
	}
    ActualizarEst();
    IncendioAleatoreo();
    GuardarIncendios();
    Regalo = 1;
    SetTimer("RespawnAutomatico", 60000, 0);
    for (new i = 0; i < MAX_PLAYERS; i++)
	{
    	_Mensaje(i, 4, "EFD110", "[Server Sistema Información]: Respawn de vehículos automático en 60 segundos.");
		if (EnServicioADM[i] == 0)
		{
			user[i][jFuerza] -= 2;
			if (user[i][jHambre] > MIN_HAMBRE) { user[i][jHambre] -= 5; }
  			if (user[i][jSed] > MIN_SED) { user[i][jSed] -= 5; }
            if (user[i][jFuerza] < 50) user[i][jFuerza] = 50;
     	}
     	new pro[144];
     	for(new a = 0; a < 5; a++)
     	{
	     	if(user[i][jEmpeno2][a] > 0 && user[i][jEmpeno][a] != 0)
	     	{
	     	    user[i][jEmpeno2][a]--;
	     	    if(user[i][jEmpeno2][a] == 2 || user[i][jEmpeno2][a] == 1)
			 	{
					format(pro, sizeof(pro), "[SMS n°Desconocido]:{ffffff} Te queda menos de 1 hora para pagar tu %s (%d) o me quedaré el objeto.", InfoObjeto[user[i][jEmpeno][a]][NombreObjeto], PrecioEmpeno(user[i][jEmpeno][a]));
			 		_Mensaje(i, 4, "E7E600", pro);
				}
				if(user[i][jEmpeno2][a] == 0)
				{
					format(pro, sizeof(pro), "[SMS n°Desconocido]:{ffffff} No has pagado, ahora tu %s me pertenece.", InfoObjeto[user[i][jEmpeno][a]][NombreObjeto]);
			 		_Mensaje(i, 4, "E7E600", pro);
			 		user[i][jEmpeno][a] = 0;
				}
	     	}
     	}
    }
    return 1;
}

funcion A_Vehiculos()
{
	new engine, lights, alarm, doors, bonnet, boot, objective, modelid;
	for(new v = 0; v < MAX_VEHICLES; v++) if(GetVehicleModel(v))
	{
		modelid = GetVehicleModel(v);
		GetVehicleParamsEx(v, engine, lights, alarm, doors, bonnet, boot, objective);
		switch(modelid)
		{
			case 520, 476, 593, 553, 513, 512, 577, 592, 511, 539, 464, 519: GasolinaInicialVeh[v] = 500;
			case 509, 481, 510: GasolinaInicialVeh[v] = 500, arr_Engine {v} = 1, SetVehicleParamsEx(v, VEHICLE_PARAMS_ON, lights, alarm, doors, bonnet, boot, objective);
		}
		if(engine == VEHICLE_PARAMS_ON)
		{
			if(GasolinaInicialVeh[v] > 0 && !Pescador_Vehicle(v) && !Camionero_Vehicle(v) && !Granjero_Vehicle(v))
			{
				GasolinaInicialVeh[v] -= 1;
				if(GasolinaInicialVeh[v] <= 0) SetVehicleParamsEx(v, VEHICLE_PARAMS_OFF, lights, alarm, doors, bonnet, boot, objective);
			}
			if(arr_Engine {v} == 0) SetVehicleParamsEx(v, VEHICLE_PARAMS_OFF, lights, alarm, doors, bonnet, boot, objective);
		}
	}
}

Float: detectarvelocidad(playerid)
{
	new Float:x,Float:y,Float:z;
	GetVehicleVelocity(GetPlayerVehicleID(playerid), x, y, z);
	return floatsqroot(((x*x)+(y*y))+(z*z))*175;
}

funcion A_Microbeat()
{
	new Float: vehspeed, vehiculo, _danoveh[4], arrVehParams[7], texttrab[80];
	foreach(Player, i)
	{
		if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
		{
			vehspeed = detectarvelocidad(i);
			_vVelocidad[i] = vehspeed;
			vehiculo = GetPlayerVehicleID(i);
			for(new s = 0; s < 10; s++) {
				if(SpikeStrips[s][sX] != 0) {
					if(VehicleToPoint(3.0, vehiculo, SpikeStrips[s][sX], SpikeStrips[s][sY], SpikeStrips[s][sZ])) {
						GetVehicleDamageStatus(vehiculo, _danoveh[0], _danoveh[1], _danoveh[2], _danoveh[3]);
						_danoveh[3] = encode_tires(1, 1, 1, 1);
						UpdateVehicleDamageStatus(vehiculo, _danoveh[0], _danoveh[1], _danoveh[2], _danoveh[3]);
					}
				}
			}
			if (InfoEvento[iEtapa] == 0) {
				new _string[80], Float:vehVi;
				GetVehicleHealth(vehiculo, vehVi);
				if(_rVeh[i] == 0)
				{
					if(vehVi < 350.0)
					{
						SetVehicleHealth(vehiculo, 251.0);
						GetVehicleParamsEx(vehiculo, arrVehParams[0], arrVehParams[1], arrVehParams[2], arrVehParams[3], arrVehParams[4], arrVehParams[5], arrVehParams[6]);
						if(arrVehParams[0] == VEHICLE_PARAMS_ON) SetVehicleParamsEx(vehiculo, VEHICLE_PARAMS_OFF, arrVehParams[1], arrVehParams[2], arrVehParams[3], arrVehParams[4], arrVehParams[5], arrVehParams[6]);
						TextoPantalla(i, "~w~Motor ~r~averiado", 2500, 3);
						arr_Engine {vehiculo} = 0;
					}
				}
	           	if(arr_Engine {vehiculo} == 1) {
	           		if(EstaEnBicis(vehiculo)) {
	             	} else {
                  		format(_string, sizeof(_string), "        ~b~km/h:~w~ %.0f~n~~b~   gasolina:~w~ %d / 200", vehspeed, GasolinaInicialVeh[vehiculo]);
	                    PlayerTextDrawSetString(i, Velocimetro[i], _string);
	            	}
				}
			}
		} //-
		EstaEnFuego(i); //- Incendios
		//
		if(Granjero[i] == 1) {
			format(texttrab, sizeof(texttrab), "Gramos: ~g~~h~%d", user[i][jCosechas]);
			PlayerTextDrawSetString(i, TextTrabajo[i], texttrab);
		}
		if(Carpintero[i] == 1) {
			format(texttrab, sizeof(texttrab), "Muebles: ~g~~h~%d", user[i][jMuebles]);
			PlayerTextDrawSetString(i, TextTrabajo[i], texttrab);
		}
		if(Carguero[i] == 1) {
			format(texttrab, sizeof(texttrab), "Cargas: ~g~~h~%d", user[i][jCargas]);
			PlayerTextDrawSetString(i, TextTrabajo[i], texttrab);
		}
		if(Lenador[i] == 1) {
			format(texttrab, sizeof(texttrab), "Troncos: ~g~~h~%d", user[i][jTroncos]);
			PlayerTextDrawSetString(i, TextTrabajo[i], texttrab);
		}
		if(_Minero[i] == 1) {
			format(texttrab, sizeof(texttrab), "Piedras: ~g~~h~%d", user[i][jPiedras]);
			PlayerTextDrawSetString(i, TextTrabajo[i], texttrab);
		}
		if(user[i][jEncarcelado] == 1) {
			format(texttrab, sizeof(texttrab), "Tiempo: ~g~~h~%dmin", user[i][jTiempoCarcel]);
			PlayerTextDrawSetString(i, TextTrabajo[i], texttrab);
		}
	}
	return 1;
}

funcion A_Spec() {
    foreach(Player, i) {
        if(user[i][jAdmin] >= 1) {
            if(Spectando[i] >= 1) {
                if(Spectate[i] < 553) {
                    new playerid2 = Spectate[i];
                    if(!IsPlayerConnected(playerid2)) {
                        _Mensaje(i, 2, "0", "El jugador que estabas specteando salio del servidor.");
                        SpectadorID[Spectate[i]] = 999;
                        Spectando[i] = 0;
                        Spectate[i] = 999;
                        TogglePlayerSpectating(i, false);
                        SetPlayerPos(i, user[i][jPosicion_X], user[i][jPosicion_Y], user[i][jPosicion_Z]);
                        SetPlayerInterior(i, user[i][jInterior]);
                        SetPlayerVirtualWorld(i, user[i][jVirtualWorld]);
                        SetCameraBehindPlayer(i);
                    }
                }
                if(Spectate[i] == 554) {
                    TogglePlayerControllable(i, 1);
                    SetPlayerInterior(i, Unspec[i][sPint]);
                    user[i][jInterior] = Unspec[i][sPint];
                    SetPlayerPos(i, Unspec[i][Coords][0], Unspec[i][Coords][1], Unspec[i][Coords][2]);
                    Spectate[i] = 999;
                }
                if(Spectate[i] == 556) Spectate[i] = 999;
                if(Spectate[i] == 557) Spectate[i] = 554;
            }
        }
    }
}

public OnPlayerModelSelection(playerid, response, listid, modelid)
{

	new text_[240], string[128];
    if (listid == MueblesCasa)
	{
		if (!response) return 1;
		new OBJ_INDEX;
		BuscarModeIndexIntC(modelid, OBJ_INDEX);
		new precio = PrecioMuebleDeCasas(modelid);
		MuebleActual[playerid] = modelid;
		format(text_, sizeof(text_), "{FFFFFF}Modelo: %d\nPrecio: %d\nNombre: %s\n\n¿Quieres comprar este mueble?", modelid, precio, ObjetosInteriorC[OBJ_INDEX][2]);
		Dialog(playerid, D_MUEBLES, DIALOG_STYLE_MSGBOX, "{D6E1EB}Adquirir mueble", text_, "Comprar", "Cancelar");
	}
	else if (listid == MueblesNegocios)
	{
		if (!response) return 1;
		new OBJ_INDEX;
		BuscarModeIndexIntN(modelid, OBJ_INDEX);
		new precio = PrecioMuebleDeNegocios(modelid);
		MuebleActual[playerid] = modelid;
		format(text_, sizeof(text_), "{FFFFFF}Modelo: %d\nPrecio: %d\nNombre: %s\n\n¿Quieres comprar este mueble?", modelid, precio, ObjetosInteriorN[OBJ_INDEX][2]);
		Dialog(playerid, D_MUEBLES2, DIALOG_STYLE_MSGBOX, "{D6E1EB}Adquirir mueble", text_, "Comprar", "Cancelar");
	}
	else if (listid == MueblesGarages)
	{
		if (!response) return 1;
		new OBJ_INDEX;
		BuscarModeIndexIntG(modelid, OBJ_INDEX);
		new precio = random(200);
		MuebleActual[playerid] = modelid;
		format(text_, sizeof(text_), "{FFFFFF}Modelo: %d\nPrecio: %d\nNombre: %s\n\n¿Quieres comprar este mueble?", modelid, precio, ObjetosInteriorE[OBJ_INDEX][2]);
		Dialog(playerid, D_MUEBLES3, DIALOG_STYLE_MSGBOX, "{D6E1EB}Adquirir mueble", text_, "Comprar", "Cancelar");
	}
	else if (listid == MueblesRepartos || listid == MueblesTalleres)
	{
		if (!response) return 1;
		new OBJ_INDEX;
		BuscarModeIndexIntE(modelid, OBJ_INDEX);
		new precio = random(200);
		MuebleActual[playerid] = modelid;
		format(text_, sizeof(text_), "{FFFFFF}Modelo: %d\nPrecio: %d\nNombre: %s\n\n¿Quieres comprar este mueble?", modelid, precio, ObjetosInteriorE[OBJ_INDEX][2]);
		Dialog(playerid, D_MUEBLES4, DIALOG_STYLE_MSGBOX, "{D6E1EB}Adquirir mueble", text_, "Comprar", "Cancelar");
	}
	else if (listid == SkinsMujer || listid == SkinsHombre)
	{
		if (response)
		{
			if (ComprobarDineroJ(playerid) < 35) return _Mensaje(playerid, 0, "32", "No tienes suficiente dinero.");
			_Mensaje(playerid, 2, "0", "Compraste esta ropa por {00C200}$35. {ffffff}Puedes guardarla en el armario de tu casa.");
			_Mensaje(playerid, 2, "0", "Usa /ropa o /armario(en tu casa) para poner o cambiar tu ropa.");
			user[playerid][jRopa] = modelid;
			ElegirRopa(playerid, modelid);
			DarDineroGC(playerid, -35);
			i_Negocio[IDNegocio[playerid]][nDinero] += 35;
			i_Negocio[IDNegocio[playerid]][nProductos]--;
			IDNegocio[playerid] = -1;
		} else _Mensaje(playerid, 2, "0", "Has salido del catalogo de ropa.");
    }
	else if (listid == AccesoriosN)
	{
		if (response)
		{
			if (ComprobarDineroJ(playerid) < 18) return _Mensaje(playerid, 0, "32", "No tienes suficiente dinero.");
			new ranura = RanuraSeleccionada[playerid];

			DarDineroGC(playerid, -18);
			i_Negocio[IDNegocio[playerid]][nDinero] += 18;
			i_Negocio[IDNegocio[playerid]][nProductos]--;

			InfoAccesorio[playerid][ranura][aModelo] = modelid;
			InfoAccesorio[playerid][ranura][aParte] = 1;
			InfoAccesorio[playerid][ranura][aPosicionX] = 0.0;
			InfoAccesorio[playerid][ranura][aPosicionY] = 0.0;
			InfoAccesorio[playerid][ranura][aPosicionZ] = 0.0;
			InfoAccesorio[playerid][ranura][aRotacionX] = 0.0;
			InfoAccesorio[playerid][ranura][aRotacionY] = 0.0;
			InfoAccesorio[playerid][ranura][aRotacionZ] = 0.0;
			InfoAccesorio[playerid][ranura][aEscalaX] = 1;
			InfoAccesorio[playerid][ranura][aEscalaY] = 1;
			InfoAccesorio[playerid][ranura][aEscalaZ] = 1;

			format(string, sizeof(string), "Compraste un accesorio por $18 [Ranura: %d]", ranura);
			_Mensaje(playerid, 4, "A7CE00", string);
			_Mensaje(playerid, 4, "b0b0b0", " Escribe /accesorios para editarlos.");

			IDNegocio[playerid] = -1;

		}
	}
	else if (listid == AccesoriosVIP)
	{
		if (response)
		{

			new ranura = RanuraSeleccionada[playerid];
			InfoAccesorio[playerid][ranura][aModelo] = modelid;
			InfoAccesorio[playerid][ranura][aParte] = 1;
			InfoAccesorio[playerid][ranura][aPosicionX] = 0.0;
			InfoAccesorio[playerid][ranura][aPosicionY] = 0.0;
			InfoAccesorio[playerid][ranura][aPosicionZ] = 0.0;
			InfoAccesorio[playerid][ranura][aRotacionX] = 0.0;
			InfoAccesorio[playerid][ranura][aRotacionY] = 0.0;
			InfoAccesorio[playerid][ranura][aRotacionZ] = 0.0;
			InfoAccesorio[playerid][ranura][aEscalaX] = 1;
			InfoAccesorio[playerid][ranura][aEscalaY] = 1;
			InfoAccesorio[playerid][ranura][aEscalaZ] = 1;

			format(string, sizeof(string), "Recibiste un accesorio gratis. [Ranura: %d]", ranura);
			_Mensaje(playerid, 4, "A7CE00", string);
			_Mensaje(playerid, 4, "b0b0b0", " Escribe /accesorios para editarlos.");
		}
	}
	return 1;
}

public OnPlayerModelSelectionEx(playerid, response, extraid, modelid)
{
	new string[128];
	if(extraid == D_OBJETOSADMIN)
	{
		if(response)
		{
		    new objeto = -1;
		    for(new a = 0; a < MAX_POBJETOS;a++)
		    {
				if(cObjeto[a][pOID] == 0)
				{
					objeto = a;
					break;
				}
		    }
		    if(objeto == -1) return _Mensaje(playerid, 4, "b00000", "Se alcanzó el límite de objetos admin.");
			GetPlayerPos(playerid, cObjeto[objeto][pPosX], cObjeto[objeto][pPosY], cObjeto[objeto][pPosZ]);
			cObjeto[objeto][pOID] = modelid;
			cObjeto[objeto][pObjeto]  = CreateDynamicObject(modelid, cObjeto[objeto][pPosX]-2.0, cObjeto[objeto][pPosY]-1.0, cObjeto[objeto][pPosZ], 0.0, 0.0, 0.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, MAX_RADIO_STREAM_MIN);
			cObjeto[objeto][pInt] = GetPlayerInterior(playerid);
			cObjeto[objeto][pVw] = GetPlayerVirtualWorld(playerid);
			EditDynamicObject(playerid, cObjeto[objeto][pObjeto]);
			SetPVarInt(playerid, "OBJ_ADM", 1);
		}
	}
	if(extraid == D_Pesca)
	{
		if(response)
		{
			switch(modelid)
			{
				case 1601: // Pescado
				{
					_Mensaje(playerid, 4, "b00000", "Fallaste al lanzar el arpon, intenta nuevamente.");
				}
				case 1607: // Delfin
				{
				    pescando[playerid] = 1;
				    GameTextForPlayer(playerid, "~g~Pescando...", 8000, 3);
					ApplyAnimation(playerid,"ped", "ARRESTgun", 4.0,0,1,1,1,1);
					SetTimerEx("arpon2", 7000,false,"d", playerid);
				}
				case 1608: // Tiburon
				{
				    pescando[playerid] = 1;
				    GameTextForPlayer(playerid, "~g~Pescando...", 8000, 3);
					ApplyAnimation(playerid,"ped", "ARRESTgun", 4.0,0,1,1,1,1);
					SetTimerEx("arpon3",7000,false,"d", playerid);
				}
				case 1609: // Tortuga
				{
				    pescando[playerid] = 1;
				    GameTextForPlayer(playerid, "~g~Pescando...", 8000, 3);
					ApplyAnimation(playerid,"ped", "ARRESTgun", 4.0,0,1,1,1,1);
					SetTimerEx("arpon1",7000,false,"d", playerid);
				}
			}
		}
	}
	if(extraid == D_MODELOS)
	{
		if(response)
		{
			new objeto, nid = IDNegocio[playerid];
			for (new i = 0; i < sizeof(InfoObjeto); i++) { if(InfoObjeto[i][ModeloObjeto] == modelid) objeto = i; }
			if(user[playerid][jm_Derecha] != 0 && user[playerid][jm_Izquierda] != 0){_Mensaje(playerid, 0, "32", "Tienes ambas manos ocupadas, guarda lo que tienes o tiralo."); return 1;}
			if(user[playerid][jm_Derecha] == 0){PonerObjeto(playerid, 1, objeto); user[playerid][jm_Derecha] = objeto, user[playerid][jm_DerechaCant] = 1;}
			else if(user[playerid][jm_Izquierda] == 0){PonerObjeto(playerid, 2, objeto); user[playerid][jm_Izquierda] = objeto, user[playerid][jm_IzquierdaCant] = 1;}
			_Mensaje(playerid, 2, "0", "Has comprado un teléfono, comandos: /telefono");
			if(user[playerid][jPremium] == 0) {
				Compra(playerid, 15);
				i_Negocio[nid][nDinero] += 15;
				i_Negocio[nid][nProductos]--;
			} else {
				Compra(playerid, 12);
				i_Negocio[nid][nDinero] += 12;
				i_Negocio[nid][nProductos]--;
				_Mensaje(playerid, 4, "C93CCE", "Descuento premium! precio original $15, a ti te costó $12.");
			}
		} else _Mensaje(playerid, 0, "0", "Has salido del catalogo de teléfonos.");
	}
	else if(extraid == D_UNIFORMESSAN || extraid == D_UNIFORMESALC || extraid == D_UNIFORMESES)
	{
		if(response)
		{
			SetPlayerSkin(playerid, modelid);
			_Mensaje(playerid, 4, "A7CE00", "Te has colocado un uniforme.");
		} else _Mensaje(playerid, 0, "0", "Has salido del catalogo de uniformes.");
	}
	else if(extraid == D_UNIFORMESPD)
	{
		if(response)
		{
			Skin_(playerid, modelid);
			_Mensaje(playerid, 4, "A7CE00", "Te has colocado un uniforme.");
		} else _Mensaje(playerid, 0, "0", "Has salido del catalogo de uniformes.");
	}
	else if(extraid == D_OBJETOS_TRAFICO)
	{
		if(response)
		{
			for (new bar = 0; bar < MAX_BARRERAS; bar++) {
				if (InfoBar[bar][bObjeto] == 0) {
					GetPlayerPos(playerid, InfoBar[bar][bPosX], InfoBar[bar][bPosY], InfoBar[bar][bPosZ]);
					InfoBar[bar][bModelo] = modelid;
					InfoBar[bar][bObjeto] = CreateDynamicObject(InfoBar[bar][bModelo], InfoBar[bar][bPosX]-2.0, InfoBar[bar][bPosY]-1.0, InfoBar[bar][bPosZ], 0.0, 0.0, 0.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, MAX_RADIO_STREAM_MIN);
					EditDynamicObject(playerid, InfoBar[bar][bObjeto]);
					SetPVarInt(playerid, "TT_BAR", 1);
					return 1;
				}
			}
			_Mensaje(playerid, 0, "0", "Todos los objetos de trafico se han colocado (40).");
		} else _Mensaje(playerid, 0, "0", "Has salido del catalogo de objetos de trafico.");
	}

	else if (extraid == D_Peluqueria3)
	{
		if (response)
		{
			if (ComprobarDineroJ(playerid) < 25) return _Mensaje(playerid, 0, "32", "No tienes suficiente dinero.");

			new ranura = RanuraSeleccionada[playerid];
			DarDineroGC(playerid, -25);

			i_Negocio[IDNegocio[playerid]][nDinero] += 25;
			i_Negocio[IDNegocio[playerid]][nProductos]--;

			InfoAccesorio[playerid][ranura][aModelo] = modelid;
			InfoAccesorio[playerid][ranura][aParte] = 2;
			InfoAccesorio[playerid][ranura][aPosicionX] = 0.0;
			InfoAccesorio[playerid][ranura][aPosicionY] = 0.0;
			InfoAccesorio[playerid][ranura][aPosicionZ] = 0.0;
			InfoAccesorio[playerid][ranura][aRotacionX] = 0.0;
			InfoAccesorio[playerid][ranura][aRotacionY] = 0.0;
			InfoAccesorio[playerid][ranura][aRotacionZ] = 0.0;
			InfoAccesorio[playerid][ranura][aEscalaX] = 1;
			InfoAccesorio[playerid][ranura][aEscalaY] = 1;
			InfoAccesorio[playerid][ranura][aEscalaZ] = 1;

			format(string, sizeof(string), "Compraste un accesorio por $25 [Ranura: %d]", ranura);
			_Mensaje(playerid, 4, "A7CE00", string);
			_Mensaje(playerid, 4, "b0b0b0", " Escribe /accesorios para editarlos.");

			IDNegocio[playerid] = -1;

		}
	}
    return 1;
}

forward arpon1(playerid);
public arpon1(playerid)
{
	ClearAnimations(playerid);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	SetPlayerCheckpoint(playerid, 2777.1331, -2594.8616, 0.0169, 7.0);
	SetPVarInt(playerid, "TeleportPescador", 120);
	SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TIPO_TELEPORTPESCADOR);
	_Pesca[playerid] = 1;
	new vehch = GetPlayerNearestVehicle(playerid);
	pescador[playerid] = CreateObject(1609,0,0,-1000,0,0,0,100);
	AttachObjectToVehicle(pescador[playerid], vehch, -0.075000,-6.524995,2.175000,80.999992,0.000000,0.000000);
	_Mensaje(playerid, 5, "0", "Atrapaste una tortuga, llévala al muelle de Ocean Docks para recibir el dinero.");
	pesca[playerid] = 1;
}

forward arpon2(playerid);
public arpon2(playerid)
{
	ClearAnimations(playerid);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	SetPlayerCheckpoint(playerid, 2777.1331, -2594.8616, 0.0169, 7.0);
	SetPVarInt(playerid, "TeleportPescador", 120);
	SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TIPO_TELEPORTPESCADOR);
	_Pesca[playerid] = 1;
	new vehch = GetPlayerNearestVehicle(playerid);
	pescador[playerid] = CreateObject(1607,0,0,-1000,0,0,0,100);
	AttachObjectToVehicle(pescador[playerid], vehch, 0.000000,-6.899994,-0.675000,86.399986,0.000000,0.000000);
	_Mensaje(playerid, 5, "0", "Atrapaste un delfin, llévala al muelle de Ocean Docks para recibir el dinero.");
	pesca[playerid] = 2;
}

forward arpon3(playerid);
public arpon3(playerid)
{
	ClearAnimations(playerid);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	SetPVarInt(playerid, "TeleportPescador", 120);
	SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TIPO_TELEPORTPESCADOR);
	SetPlayerCheckpoint(playerid, 2777.1331, -2594.8616, 0.0169, 7.0);
	_Pesca[playerid] = 1;
	new vehch = GetPlayerNearestVehicle(playerid);
	pescador[playerid] = CreateObject(1608,0,0,-1000,0,0,0,100);
	AttachObjectToVehicle(pescador[playerid], vehch, 0.000000,-6.674995,-2.550000,91.799980,0.000000,0.000000);
	_Mensaje(playerid, 5, "0", "Atrapaste un tiburón, llévala al muelle de Ocean Docks para recibir el dinero.");
	pesca[playerid] = 3;
}

stock PrecioMuebleDeCasas(modelid) {
    switch (modelid) {
	    case 2822,2820: return 5;
        case 2515,1715,1716,1720,1721,1714,1811: return 10;
        case 2518,1737,2119,2116,2115,2111,1739,1810: return 12;
        case 2516,2002,2160,2334,2335,2112,2079,2121: return 15;
        case 2514,2015,2157,2159,2029,1825: return 20;
        case 2517,2014,2018,2156,2120: return 23;
        case 2336,2337,2013,2019: return 24;
        case 2519, 2520,2523,2524,2136: return 30;
        case 2521,2525,2528,2529,2135,2339,14720: return 40;
        case 2522,1208,2340,2415: return 50;
        default: {
                new priceex = random(20);
                priceex += 20;
                return priceex;
            }
    }
    return 1;
}

stock BuscarModeIndexIntC(model, &dest) {
	Loop(i, sizeof ObjetosInteriorC, 0) {
		if(model == ObjetosInteriorC[i][0]) dest = i;
	}
	return 0;
}

stock BuscarModeIndexIntN(model, &dest) {
	Loop(i, sizeof ObjetosInteriorN, 0) {
		if(model == ObjetosInteriorN[i][0]) dest = i;
	}
	return 0;
}

stock BuscarModeIndexIntG(model, &dest) {
	Loop(i, sizeof ObjetosInteriorG, 0) {
		if(model == ObjetosInteriorG[i][0]) dest = i;
	}
	return 0;
}

stock BuscarModeIndexIntE(model, &dest) {
	Loop(i, sizeof ObjetosInteriorE, 0) {
		if(model == ObjetosInteriorE[i][0]) dest = i;
	}
	return 0;
}

stock PrecioMuebleDeNegocios(modelid) {
    switch (modelid) {
        //24/7
        case 1988, 1983: return 15;
        case 1842, 1884, 1848: return 20;
        case 1991, 1996, 2871: return 20;
        case 1349, 1984: return 7;
        case 1776: return 5;
        case 2872, 2779, 2002: return 5;
        case 19572, 19592, 19825: return 7;
        case 19859, 1561: return 6;
        case 11706: return 7;
        case 11711, 19326: return 8;
        case 19328, 19329: return 3;
            //Tienda Ropa
        case 2730, 2720, 2722, 2729, 2731, 2719: return 2;
        case 2383, 2374, 2399: return 3;
        case 2382, 2392, 2381, 2394: return 5;
        case 2371, 2372, 2373: return 5;
        case 2698, 2622, 2654, 2694, 2652: return 6;
        case 2704, 2689, 2705, 2706: return 3;
        case 2389, 2396, 2397, 2398, 2401, 2390: return 4;
        case 18069, 18066, 2656, 2732, 2733, 2734: return 2;
        case 2375, 2379, 2708, 2403, 2385, 2387, 2625: return 3;
            //restaurante
        case 2310, 2350, 2635, 2764: return 2;
        case 2638, 2452, 2807: return 3;
        case 1775, 2639: return 4;
            //Cluckin Bell
        case 2770: return 3;
        case 2762, 2763: return 4;
        case 2766, 2767, 2768, 2769, 2765: return 6;
        case 2424, 2422: return 7;
        case 2718: return 2;
            //Pizzeria
        case 2637: return 4;
        case 2636, 2688, 19580: return 3;
        case 2682, 2645, 2453, 2646, 2668, 2665, 19558, 19571: return 2;
        case 2451, 2417, 2415: return 8;
            //Burger shot
        case 2748, 2746, 1716: return 6;
        case 2361, 2714: return 2;
            //-----
        case 2340, 1208, 956, 2337: return 8;
        case 2713, 2843, 2835, 2845, 2846, 2844, 2816: return 3;
        case 1432, 1808: return 5;
            //sex shop
        case 2583, 2582: return 6;
        case 2578, 2585, 2681, 2579: return 5;
        case 2581: return 4;
            //Ammu Nation
        case 2358, 336, 339, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 370, 373, 371, 372: return 8;
            //Gasolinera
        case 2063, 1982, 1891, 1888, 1987, 1889, 1989: return 7;
        case 918, 2798, 1650, 1644, 2040, 1218: return 4;
        default:
            {
                new priceex = random(50);
                priceex += 50;
                return priceex;
            }
    }
    return 1;
}

stock ComprarMuebleC(playerid, cid, modelid, price) {
    new m = 0;
    while (m < MAX_MUEBLES_C) {
        if (InfoCasa[cid][cObjModel][m] == INVALID_MUEBLES_ID) break;
        m++;
    }
    if (m == MAX_MUEBLES_C) return _Mensaje(playerid, 0, "641", "No puedes comprar más objetos para tu casa (80).");
    InfoCasa[cid][cObjModel][m] = modelid;
    MuebleActual[playerid] = 0;
    DarDineroGC(playerid, -price);
    ActualizarCasa(cid, true, m);
    return m;
}

stock ComprarMuebleN(playerid, nid, modelid, price) {
    new m = 0;
    while (m < MAX_MUEBLES_N) {
        if (i_Negocio[nid][nObjModel][m] == INVALID_MUEBLES_ID) break;
        m++;
    }
    if (m == MAX_MUEBLES_N) return _Mensaje(playerid, 0, "641", "No puedes comprar más objetos para tu negocio (100).");
    i_Negocio[nid][nObjModel][m] = modelid;
    MuebleActual[playerid] = 0;
    DarDineroGC(playerid, -price);
    save_Negocio(nid, true, m);
    return m;
}

stock ComprarMuebleG(playerid, gid, modelid, price) {
    new m = 0;
    while (m < MAX_MUEBLES_G) {
        if (InfoGaraje[gid][gObjModel][m] == INVALID_MUEBLES_ID) break;
        m++;
    }
    if (m == MAX_MUEBLES_G) return _Mensaje(playerid, 0, "641", "No puedes comprar más objetos para tu garage (40).");
    InfoGaraje[gid][gObjModel][m] = modelid;
    MuebleActual[playerid] = 0;
    DarDineroGC(playerid, -price);
    ActualizarGarage(gid, true, m);
    return m;
}
stock ComprarMuebleE(playerid, e_id, modelid, price) {
    new m = 0;
    while (m < MAX_MUEBLES_E) {
        if (i_Empresa[e_id][eObjModel][m] == INVALID_MUEBLES_ID) break;
        m++;
    }
    if (m == MAX_MUEBLES_E) return _Mensaje(playerid, 0, "641", "No puedes comprar más objetos para tu empresa (120).");
    i_Empresa[e_id][eObjModel][m] = modelid;
    MuebleActual[playerid] = 0;
    DarDineroGC(playerid, -price);
    save_Empresa(e_id, true, -1, m);
    return m;
}

stock pNombre(playerid) {
    new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, sizeof(name));
    return name;
}

//- Sistema de incendios.
funcion CargarIncendios()
{
    new DirBD[50];
    format(DirBD, sizeof(DirBD), "Incendios2.rp");
    if(fexist(DirBD))
	{
        new FireData[510];
        new FireDataSlots[50][30];
        new File: LoadFire = fopen(DirBD, io_read);
        fread(LoadFire, FireData);
        fclose(LoadFire);
        new PosSplitAfter = 0;
        for(new i = 0; i < MAX_INCENDIOS; i++)
		{
            PosSplitAfter = strfind(FireData, ",", false);
            strmid(FireDataSlots[i], FireData, 0, PosSplitAfter, sizeof(FireData));
            strdel(FireData, 0, PosSplitAfter + 1);
            Incendios[i][pIDI] = strval(FireDataSlots[i]);
            PosSplitAfter = strfind(FireData, ",", false);
            strmid(FireDataSlots[i], FireData, 0, PosSplitAfter, sizeof(FireData));
            strdel(FireData, 0, PosSplitAfter + 1);
            Incendios[i][pType] = strval(FireDataSlots[i]);
			if(Incendios[i][pIDI] != 0) CrearIncendioP(Incendios[i][pIDI], Incendios[i][pType]);
        }
        print("» Incendios cargados.");
    }
	else
	{
        print("No se encontraron los incendios, creando archivo!");
    }
}

funcion GuardarIncendios()
{
    new DirBD[50];
    format(DirBD, sizeof(DirBD), "Incendios2.rp");
    new FireData[510];
    new TempConvert[510];
    for(new i = 0; i < MAX_INCENDIOS; i++) {
        format(TempConvert, sizeof(TempConvert), "%i,%i,", Incendios[i][pIDI], Incendios[i][pType]);
        strcat(FireData, TempConvert, sizeof(TempConvert));
    }
    new File: SaveFire = fopen(DirBD, io_write);
    fwrite(SaveFire, FireData);
    fclose(SaveFire);
}

funcion FuegoSiguiente()
{
    for(new i; i < MAX_INCENDIOS; i++)
	{
        if(!Incendios[i][pIDI])
		{
            return i;
        }
    }
    return -1;
}

funcion DestroyFire(fireid)
{
    if(Incendios[fireid][pIDI] != 0)
	{
	    if(Incendios[fireid][pType] == 1) i_Negocio[Incendios[fireid][pIDI]][EnLlamas] = 0;
        Incendios[fireid][pIDI] = 0;
        Incendios[fireid][pType] = 0;
        for(new i = 0; i < 15; i++)
		{
            if(Incendios[fireid][pObject][i])
			{
                DestroyDynamicObject(Incendios[fireid][pObject][i]);
            }
        }
        DestroyDynamic3DTextLabel(Incendios[fireid][pInfoIncendio]);
        return true;
    }
    return false;
}

funcion CercaIncendio(playerid)
{
    for(new i = 0; i < MAX_INCENDIOS; i++)
	{
        if(Incendios[i][pIDI] != 0)
		{
            new Float: PosFire[3];
            if(Incendios[i][pType] == 0)
            {
            PosFire[0] = InfoCasa[Incendios[i][pIDI]][cExteriorX];
            PosFire[1] = InfoCasa[Incendios[i][pIDI]][cExteriorY];
            PosFire[2] = InfoCasa[Incendios[i][pIDI]][cExteriorZ];
            if(_enPos(playerid, 15.0, PosFire[0], PosFire[1], PosFire[2])) return i;
            }
            else
            {
            PosFire[0] = i_Negocio[Incendios[i][pIDI]][nExteriorX];
            PosFire[1] = i_Negocio[Incendios[i][pIDI]][nExteriorY];
            PosFire[2] = i_Negocio[Incendios[i][pIDI]][nExteriorZ];
            if(_enPos(playerid, 15.0, PosFire[0], PosFire[1], PosFire[2])) return i;
            }
        }
    }
    return -1;
}

funcion LIncendios(playerid)
{
    new IncendiosDialog[700], TempConvert[60], ConteoFire = -1;
    for(new i = 0; i < MAX_INCENDIOS; i++)
	{
        if(Incendios[i][pIDI] != 0)
		{
            if(ConteoFire != -1)
			{
                if(Incendios[i][pType] == 0)format(TempConvert, sizeof(TempConvert), "\r\n{E6E6E6}Incendio ID[%i] - Casa ID[%i]", i, Incendios[i][pIDI]);
                else format(TempConvert, sizeof(TempConvert), "\r\n{E6E6E6}Incendio ID[%i] - Negocio ID[%i]", i, Incendios[i][pIDI]);
            }
			else
			{
			    if(Incendios[i][pType] == 0) format(TempConvert, sizeof(TempConvert), "{E6E6E6}Incendio ID[%i] - Casa ID[%i]", i, Incendios[i][pIDI]);
			    else format(TempConvert, sizeof(TempConvert), "{E6E6E6}Incendio ID[%i] - Negocio ID[%i]", i, Incendios[i][pIDI]);
            }
            strcat(IncendiosDialog, TempConvert, sizeof(IncendiosDialog));
            ConteoFire++;
            user[playerid][SaveAfterAgenda][ConteoFire] = i;
        }
    }
    if(ConteoFire != -1)
	{
        Dialog(playerid, D_Ibuscar, DIALOG_STYLE_LIST, "{D6E1EB}Incendios - Lista", IncendiosDialog, "Buscar", "Salir");
    }
	else
	{
        Dialog(playerid, D_INVALIDO, DIALOG_STYLE_MSGBOX, "{D6E1EB}Incendios - Información", "{F0F0F0}No se encontrarón incendios.", "Aceptar", "");
    }
}

funcion ListaIncendios(playerid)
{
    new IncendiosDialog[700], TempConvert[60], ConteoFire = -1;
    for(new i = 0; i < MAX_INCENDIOS; i++)
	{
        if(Incendios[i][pIDI] != 0)
		{
            if(ConteoFire != -1)
			{
                if(Incendios[i][pType] == 0)format(TempConvert, sizeof(TempConvert), "\r\n{E6E6E6}Incendio ID[%i] - Casa ID[%i]", i, Incendios[i][pIDI]);
                else format(TempConvert, sizeof(TempConvert), "\r\n{E6E6E6}Incendio ID[%i] - Negocio ID[%i]", i, Incendios[i][pIDI]);
            }
			else
			{
			    if(Incendios[i][pType] == 0) format(TempConvert, sizeof(TempConvert), "{E6E6E6}Incendio ID[%i] - Casa ID[%i]", i, Incendios[i][pIDI]);
			    else format(TempConvert, sizeof(TempConvert), "{E6E6E6}Incendio ID[%i] - Negocio ID[%i]", i, Incendios[i][pIDI]);
            }
            strcat(IncendiosDialog, TempConvert, sizeof(IncendiosDialog));
            ConteoFire++;
            user[playerid][SaveAfterAgenda][ConteoFire] = i;
        }
    }
    if(ConteoFire != -1)
	{
        Dialog(playerid, D_Ilista, DIALOG_STYLE_LIST, "{D6E1EB}Incendios - Lista", IncendiosDialog, "Destruir", "Salir");
    }
	else
	{
        Dialog(playerid, D_INVALIDO, DIALOG_STYLE_MSGBOX, "{D6E1EB}Incendios - Información", "{F0F0F0}No se encontrarón incendios.", "Aceptar", "");
    }
}

funcion EstaEnFuego(playerid)
{
    for(new i = 0; i < MAX_INCENDIOS; i++)
	{
	    if(Incendios[i][pIDI] != 0)
	    {
	        if(Incendios[i][pType] == 0)
	        {
	            if(_enPos(playerid, 1.5, InfoCasa[Incendios[i][pIDI]][cExteriorX], InfoCasa[Incendios[i][pIDI]][cExteriorY], InfoCasa[Incendios[i][pIDI]][cExteriorZ]))
				{
	                _Sangre(playerid, -2);
	            }
	        }
	        else
	        {
	            if(_enPos(playerid, 1.5, i_Negocio[Incendios[i][pIDI]][nExteriorX], i_Negocio[Incendios[i][pIDI]][nExteriorY], i_Negocio[Incendios[i][pIDI]][nExteriorZ]))
				{
	                _Sangre(playerid, -2);
	            }
	        }
	    }
    }
}

funcion IncendioAleatoreo() {
    if(Fac5_ < 1) return 1;
    new a = random(4), location[MAX_ZONE_NAME], string[258];
    if(a == 0 || a == 1)
    {
        new casaid = random(1000)+1;
    	if(InfoCasa[casaid][cComprado] && InfoCasa[casaid][c_Int] == 0)
		{
		    Get2DZone(location, MAX_ZONE_NAME, InfoCasa[casaid][cExteriorX], InfoCasa[casaid][cExteriorY], InfoCasa[casaid][cExteriorZ]);
            format(string, sizeof(string), "*[CH|112|Central, S: FIRE]: se ha producido un incendio en la casa de %s, dirección [%i - %s].", InfoCasa[casaid][cComprador], casaid, location);
            _MensajeRfac(5, C_COLORPOLICIA, string);
            CrearIncendioP(casaid, 0);
            printf("[Incendios]: La casa ID[%i] se incendió!", casaid);
            return 1;
    	}
    }
    if(a == 2 || a == 3)
    {
        new negocioid = random(230)+1;
        if(i_Negocio[negocioid][nComprado] == 1)
        {
            Get2DZone(location, MAX_ZONE_NAME, i_Negocio[negocioid][nExteriorX], i_Negocio[negocioid][nExteriorY], i_Negocio[negocioid][nExteriorZ]);
            format(string, sizeof(string), "*[CH|112|Central, S: FIRE]: se ha producido un incendio en el negocio de %s, dirección [%i - %s].", i_Negocio[negocioid][nDueno], negocioid, location);
            _MensajeRfac(5, C_COLORPOLICIA, string);
            CrearIncendioP(negocioid, 1);
            printf("[Incendios]: El negocio ID[%i] se incendió!", negocioid);
            return 1;
        }
    }
    return 0;
}

funcion CrearIncendioP(houseid, tipo)
{
	new a = FuegoSiguiente();
	if(a == -1) return 0;
	new intensidad = random(40)+10;
	for(new c = 0; c < MAX_INCENDIOS;c++)
	{
	    if(Incendios[c][pIDI] == houseid) return 0;
	}
	if(tipo == 0)
	{
		new string[70];
		format(string, sizeof(string), "{ff4000}Incendio\n{ffc100}Intensidad: {ffffff}%d", intensidad);
 		Incendios[a][pInfoIncendio] = CreateDynamic3DTextLabel(string, -1, InfoCasa[houseid][cExteriorX], InfoCasa[houseid][cExteriorY], InfoCasa[houseid][cExteriorZ] + 0.5, 8.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
	    Incendios[a][pType] = 0;
		Incendios[a][pIntensidad] = intensidad;
        Incendios[a][pIDI] = houseid;
        Incendios[a][pObject][14] = CreateDynamicObject(18691, InfoCasa[houseid][cExteriorX], InfoCasa[houseid][cExteriorY], InfoCasa[houseid][cExteriorZ], 0.0, 0.0, 0.0, -1, -1, -1, MAX_RADIO_STREAM);
        Incendios[a][pObject][13] = CreateDynamicObject(18691, InfoCasa[houseid][cExteriorX], InfoCasa[houseid][cExteriorY], InfoCasa[houseid][cExteriorZ] + 2, 0.0, 0.0, 0.0, -1, -1, -1, MAX_RADIO_STREAM);
        Incendios[a][pObject][12] = CreateDynamicObject(18691, InfoCasa[houseid][cExteriorX], InfoCasa[houseid][cExteriorY] + 2, InfoCasa[houseid][cExteriorZ], 0.0, 0.0, 0.0, -1, -1, -1, MAX_RADIO_STREAM);
        Incendios[a][pObject][11] = CreateDynamicObject(18691, InfoCasa[houseid][cExteriorX] + 2, InfoCasa[houseid][cExteriorY], InfoCasa[houseid][cExteriorZ], 0.0, 0.0, 0.0, -1, -1, -1, MAX_RADIO_STREAM);
        Incendios[a][pObject][10] = CreateDynamicObject(18691, InfoCasa[houseid][cExteriorX] + 2, InfoCasa[houseid][cExteriorY] + 2, InfoCasa[houseid][cExteriorZ], 0.0, 0.0, 0.0, -1, -1, -1, MAX_RADIO_STREAM);
        Incendios[a][pObject][9] = CreateDynamicObject(18691, InfoCasa[houseid][cExteriorX], InfoCasa[houseid][cExteriorY] + 2, InfoCasa[houseid][cExteriorZ] + 2, 0.0, 0.0, 0.0, -1, -1, -1, MAX_RADIO_STREAM);
        Incendios[a][pObject][8] = CreateDynamicObject(18691, InfoCasa[houseid][cExteriorX] + 2, InfoCasa[houseid][cExteriorY], InfoCasa[houseid][cExteriorZ] + 2, 0.0, 0.0, 0.0, -1, -1, -1, MAX_RADIO_STREAM);
        Incendios[a][pObject][7] = CreateDynamicObject(18691, InfoCasa[houseid][cExteriorX], InfoCasa[houseid][cExteriorY], InfoCasa[houseid][cExteriorZ] - 2, 0.0, 0.0, 0.0, -1, -1, -1, MAX_RADIO_STREAM);
        Incendios[a][pObject][6] = CreateDynamicObject(18691, InfoCasa[houseid][cExteriorX], InfoCasa[houseid][cExteriorY] - 2, InfoCasa[houseid][cExteriorZ], 0.0, 0.0, 0.0, -1, -1, -1, MAX_RADIO_STREAM);
        Incendios[a][pObject][5] = CreateDynamicObject(18691, InfoCasa[houseid][cExteriorX] - 2, InfoCasa[houseid][cExteriorY], InfoCasa[houseid][cExteriorZ], 0.0, 0.0, 0.0, -1, -1, -1, MAX_RADIO_STREAM);
        Incendios[a][pObject][4] = CreateDynamicObject(18691, InfoCasa[houseid][cExteriorX] - 2, InfoCasa[houseid][cExteriorY] - 2, InfoCasa[houseid][cExteriorZ], 0.0, 0.0, 0.0, -1, -1, -1, MAX_RADIO_STREAM);
        Incendios[a][pObject][3] = CreateDynamicObject(18691, InfoCasa[houseid][cExteriorX], InfoCasa[houseid][cExteriorY] - 2, InfoCasa[houseid][cExteriorZ] - 2, 0.0, 0.0, 0.0, -1, -1, -1, MAX_RADIO_STREAM);
        Incendios[a][pObject][2] = CreateDynamicObject(18691, InfoCasa[houseid][cExteriorX] - 2, InfoCasa[houseid][cExteriorY], InfoCasa[houseid][cExteriorZ] - 2, 0.0, 0.0, 0.0, -1, -1, -1, MAX_RADIO_STREAM);
        Incendios[a][pObject][1] = CreateDynamicObject(18691, InfoCasa[houseid][cExteriorX] + 2, InfoCasa[houseid][cExteriorY] + 2, InfoCasa[houseid][cExteriorZ] + 2, 0.0, 0.0, 0.0, -1, -1, -1, MAX_RADIO_STREAM);
        Incendios[a][pObject][0] = CreateDynamicObject(18691, InfoCasa[houseid][cExteriorX] - 2, InfoCasa[houseid][cExteriorY] - 2, InfoCasa[houseid][cExteriorZ] - 2, 0.0, 0.0, 0.0, -1, -1, -1, MAX_RADIO_STREAM);
        return 1;
	}
	if(tipo == 1)
	{
		new string[70];
		format(string, sizeof(string), "{ff4000}Incendio\n{ffc100}Intensidad: {ffffff}%d", intensidad);
 		Incendios[a][pInfoIncendio] = CreateDynamic3DTextLabel(string, -1, i_Negocio[houseid][nExteriorX], i_Negocio[houseid][nExteriorY], i_Negocio[houseid][nExteriorZ] + 0.5, 8.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
	    Incendios[a][pType] = 1;
        Incendios[a][pIntensidad] = intensidad;
		Incendios[a][pIDI] = houseid;
        Incendios[a][pObject][14] = CreateDynamicObject(18691, i_Negocio[houseid][nExteriorX], i_Negocio[houseid][nExteriorY], i_Negocio[houseid][nExteriorZ], 0.0, 0.0, 0.0, -1, -1, -1, MAX_RADIO_STREAM);
        Incendios[a][pObject][13] = CreateDynamicObject(18691, i_Negocio[houseid][nExteriorX], i_Negocio[houseid][nExteriorY], i_Negocio[houseid][nExteriorZ] + 2, 0.0, 0.0, 0.0, -1, -1, -1, MAX_RADIO_STREAM);
        Incendios[a][pObject][12] = CreateDynamicObject(18691, i_Negocio[houseid][nExteriorX], i_Negocio[houseid][nExteriorY] + 2, i_Negocio[houseid][nExteriorZ], 0.0, 0.0, 0.0, -1, -1, -1, MAX_RADIO_STREAM);
        Incendios[a][pObject][11] = CreateDynamicObject(18691, i_Negocio[houseid][nExteriorX] + 2, i_Negocio[houseid][nExteriorY], i_Negocio[houseid][nExteriorZ], 0.0, 0.0, 0.0, -1, -1, -1, MAX_RADIO_STREAM);
        Incendios[a][pObject][10] = CreateDynamicObject(18691, i_Negocio[houseid][nExteriorX] + 2, i_Negocio[houseid][nExteriorY] + 2, i_Negocio[houseid][nExteriorZ], 0.0, 0.0, 0.0, -1, -1, -1, MAX_RADIO_STREAM);
        Incendios[a][pObject][9] = CreateDynamicObject(18691, i_Negocio[houseid][nExteriorX], i_Negocio[houseid][nExteriorY] + 2, i_Negocio[houseid][nExteriorZ] + 2, 0.0, 0.0, 0.0, -1, -1, -1, MAX_RADIO_STREAM);
        Incendios[a][pObject][8] = CreateDynamicObject(18691, i_Negocio[houseid][nExteriorX] + 2, i_Negocio[houseid][nExteriorY], i_Negocio[houseid][nExteriorZ] + 2, 0.0, 0.0, 0.0, -1, -1, -1, MAX_RADIO_STREAM);
        Incendios[a][pObject][7] = CreateDynamicObject(18691, i_Negocio[houseid][nExteriorX], i_Negocio[houseid][nExteriorY], i_Negocio[houseid][nExteriorZ] - 2, 0.0, 0.0, 0.0, -1, -1, -1, MAX_RADIO_STREAM);
        Incendios[a][pObject][6] = CreateDynamicObject(18691, i_Negocio[houseid][nExteriorX], i_Negocio[houseid][nExteriorY] - 2, i_Negocio[houseid][nExteriorZ], 0.0, 0.0, 0.0, -1, -1, -1, MAX_RADIO_STREAM);
        Incendios[a][pObject][5] = CreateDynamicObject(18691, i_Negocio[houseid][nExteriorX] - 2, i_Negocio[houseid][nExteriorY], i_Negocio[houseid][nExteriorZ], 0.0, 0.0, 0.0, -1, -1, -1, MAX_RADIO_STREAM);
        Incendios[a][pObject][4] = CreateDynamicObject(18691, i_Negocio[houseid][nExteriorX] - 2, i_Negocio[houseid][nExteriorY] - 2, i_Negocio[houseid][nExteriorZ], 0.0, 0.0, 0.0, -1, -1, -1, MAX_RADIO_STREAM);
        Incendios[a][pObject][3] = CreateDynamicObject(18691, i_Negocio[houseid][nExteriorX], i_Negocio[houseid][nExteriorY] - 2, i_Negocio[houseid][nExteriorZ] - 2, 0.0, 0.0, 0.0, -1, -1, -1, MAX_RADIO_STREAM);
        Incendios[a][pObject][2] = CreateDynamicObject(18691, i_Negocio[houseid][nExteriorX] - 2, i_Negocio[houseid][nExteriorY], i_Negocio[houseid][nExteriorZ] - 2, 0.0, 0.0, 0.0, -1, -1, -1, MAX_RADIO_STREAM);
        Incendios[a][pObject][1] = CreateDynamicObject(18691, i_Negocio[houseid][nExteriorX] + 2, i_Negocio[houseid][nExteriorY] + 2, i_Negocio[houseid][nExteriorZ] + 2, 0.0, 0.0, 0.0, -1, -1, -1, MAX_RADIO_STREAM);
        Incendios[a][pObject][0] = CreateDynamicObject(18691, i_Negocio[houseid][nExteriorX] - 2, i_Negocio[houseid][nExteriorY] - 2, i_Negocio[houseid][nExteriorZ] - 2, 0.0, 0.0, 0.0, -1, -1, -1, MAX_RADIO_STREAM);
        i_Negocio[houseid][EnLlamas] = 1;
        return 1;
	}
	return 0;
}

//concesionarias
funcion bV_usado(veh)
{
	i_Usado[veh][uModeloVeh] = 0;
	i_Usado[veh][uPrecioVeh] = 0;
	i_Usado[veh][uSeguro] = 0;
	i_Usado[veh][uPaintJob] = 0;
	i_Usado[veh][uColor_1] = 0;
	i_Usado[veh][uColor_2] = 0;
	i_Usado[veh][uDanioSuperficie] = 0;
	i_Usado[veh][uDanioPuertas] = 0;
	i_Usado[veh][uDanioLuces] = 0;
	i_Usado[veh][uDanioRuedas] = 0;
	i_Usado[veh][uVida] = 0;
	i_Usado[veh][uModificaciones][0] = 0;
	i_Usado[veh][uModificaciones][1] = 0;
	i_Usado[veh][uModificaciones][2] = 0;
	i_Usado[veh][uModificaciones][3] = 0;
	i_Usado[veh][uModificaciones][4] = 0;
	i_Usado[veh][uModificaciones][5] = 0;
	i_Usado[veh][uModificaciones][6] = 0;
	i_Usado[veh][uModificaciones][7] = 0;
	i_Usado[veh][uModificaciones][8] = 0;
	i_Usado[veh][uModificaciones][9] = 0;
	i_Usado[veh][uModificaciones][10] = 0;
	i_Usado[veh][uModificaciones][11] = 0;
	i_Usado[veh][uModificaciones][12] = 0;
	i_Usado[veh][uModificaciones][13] = 0;
	i_Usado[veh][uModificaciones][14] = 0;
	i_Usado[veh][uGasolina] = 0;
	i_Usado[veh][uStereo] = 0;
	i_Usado[veh][uNeon] = 0;
}

funcion bV_nuevo(veh)
{
	i_Conce[veh][eModeloVeh] = 0;
	i_Conce[veh][ePrecioVeh] = 0;
	i_Conce[veh][eDisponibles] = 0;
}

stock GetPlayer2DZone(playerid, zone[], len) {
    new Float: x, Float: y, Float: z;
    GetPlayerPos(playerid, x, y, z);
    for(new i = 0; i != sizeof(NombreZona); i++) {
        if(x >= NombreZona[i][sz_Area][0] && x <= NombreZona[i][sz_Area][3] && y >= NombreZona[i][sz_Area][1] && y <= NombreZona[i][sz_Area][4]) {
            return format(zone, len, NombreZona[i][sz_Nombre], 0);
        }
    }
    return 0;
}

stock GetPlayer3DZone(playerid, zone[], len) {
    new Float: x, Float: y, Float: z;
    GetPlayerPos(playerid, x, y, z);
    for(new i = 0; i != sizeof(NombreZona); i++) {
        if(x >= NombreZona[i][sz_Area][0] && x <= NombreZona[i][sz_Area][3] && y >= NombreZona[i][sz_Area][1] && y <= NombreZona[i][sz_Area][4] && z >= NombreZona[i][sz_Area][2] && z <= NombreZona[i][sz_Area][5]) {
            return format(zone, len, NombreZona[i][sz_Nombre], 0);
        }
    }
    return 0;
}

stock IsPlayerInZone(playerid, zone[]) {
    new TmpZone[MAX_ZONE_NAME];
    GetPlayer3DZone(playerid, TmpZone, sizeof(TmpZone));
    for(new i = 0; i != sizeof(NombreZona); i++) {
        if(strfind(TmpZone, zone, true) != -1) return 1;
    }
    return 0;
}

stock GetCar3DZone(vehicleid, zone[], len) {
    new Float: x, Float: y, Float: z;
    GetVehiclePos(vehicleid, x, y, z);
    for(new i = 0; i != sizeof(NombreZona); i++) {
        if(x >= NombreZona[i][sz_Area][0] && x <= NombreZona[i][sz_Area][3] && y >= NombreZona[i][sz_Area][1] && y <= NombreZona[i][sz_Area][4] && z >= NombreZona[i][sz_Area][2] && z <= NombreZona[i][sz_Area][5]) {
            return format(zone, len, NombreZona[i][sz_Nombre], 0);
        }
    }
    return 0;
}

stock _MapIcon(Float: x, Float: y, Float: z, tipo, distancia = 300) {
    CreateDynamicMapIcon(x, y, z, tipo, 0, 0, 0, -1, distancia);
}

public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
	new string[256];
	for(new i_e = 0; i_e != MAX_EMPRESAS; i_e++)
	{
		if(pickupid == i_Empresa[i_e][eIcono])
		{
 			if (i_Empresa[i_e][eComprado] == 1) format(string, sizeof(string), "~n~~n~~y~%s - (%d) ~n~~w~Dueño: %s",
			i_Empresa[i_e][eNombre], i_e, i_Empresa[i_e][eDueno]);
			else format(string, sizeof(string), "~n~~n~~y~%s - (%d)",
			i_Empresa[i_e][eNombre], i_e);
			GameTextForPlayer(playerid, _text(string), 3000, 3);
		}
	}
	for(new i_n = 0; i_n != MAX_NEGOCIOS; i_n++)
	{
		if(pickupid == i_Negocio[i_n][nIcono])
		{
 			if (i_Negocio[i_n][nComprado] == 0) {
				format(string, sizeof(string), "~n~~n~~w~%s ~n~~g~En venta ~n~~w~Precio: ~g~%d~n~~p~Pulsa 'H' para entrar",
				_tipoN(i_n), i_Negocio[i_n][nPrecio]);
				GameTextForPlayer(playerid, _text(string), 3000, 3);
			}
			else {
				format(string, sizeof(string), "~n~~n~%s ~n~~w~%s ~n~~w~Dueño: %s ~n~~w~%s - (%d)",
				 _estadoN(i_n,1), i_Negocio[i_n][nNombre], i_Negocio[i_n][nDueno], _tipoN(i_n), i_n);
				GameTextForPlayer(playerid, _text(string), 3000, 3);
			}
		}
	}
	if(_Minando[playerid] == 0 && _Minero[playerid] == 1 && _Piedras[playerid] == 0)
	{
		if(pickupid == pickupspf[1] || pickupid == pickupspf[2] || pickupid == pickupspf[3] || pickupid == pickupspf[4])
		{
			_Minando[playerid] = 1;
        	SetTimerEx("Minan2", 4000, 0, "%d", playerid);
			SetPlayerAttachedObject(playerid, 9, 18634, 5, 0.136999, 0.022000, 0.006999, 0.000000, 0.000000, 0.000000, 0.9, 0.0, 0.9);
        	GameTextForPlayer(playerid, "~g~Minando...", 5000, 3);
			TogglePlayerControllable(playerid,0);
			ApplyAnimation(playerid, "CHAINSAW", "CSAW_1", 4.0, 1, 0, 0, 0, 0, 1);
		}
	}
	if(_Minero[playerid] == 1 && pickupid == pickupspf[0])
	{
		if(_Minando[playerid] == 1)
		{
			new text_[128];
			format(text_, sizeof(text_), "{FF6347}Administración: El jugador %s fue expulsado permanentementee. Razón:[Cheat de /minar]", NombreRJugador(playerid));
			MensajeAdmin(text_);
			_Expulsar(playerid, 0, "Cheat de /minar");
		}
		else
		{
			if(_Piedras[playerid] > 0)
			{
				user[playerid][jPiedras] += _Piedras[playerid];
				_Piedras[playerid] = 0;
				if(IsPlayerAttachedObjectSlotUsed(playerid, 9)) RemovePlayerAttachedObject(playerid, 9);
				ApplyAnimation(playerid, "PED", "IDLE_tired", 4.1, 1, 0, 0, 0, 1500, 1);
            }
        }
    }
    if(pickupid == pickupspf[5])
	{
	    if (user[playerid][jSangre] != 100.0) {
		    if (user[playerid][jTiempos][1] > 0) {
				new text_[128];
				format(text_, sizeof(text_), " Debes esperar %d minutos para curarte de nuevo.", user[playerid][jTiempos][1]);
				_Mensaje(playerid, 4, "b0b0b0", text_);
				return 1;
			}
			_Limuerte(playerid);
			user[playerid][jTiempos][1] += 30;
			Sangre_(playerid, 100);
	    }
	}
    if(pickupid == pickupspf[6])
	{
		if(user[playerid][jHambre] >= MAX_HAMBRE && user[playerid][jSed] >= MAX_SED){_Mensaje(playerid, 4, "b0b0b0", " No tienes hambre ni tampoco sed."); return 1;}
		if(user[playerid][jHambre] < MAX_HAMBRE)user[playerid][jHambre] = MAX_HAMBRE, ActualizarHambre(playerid);
		if(user[playerid][jSed] < MAX_SED)user[playerid][jSed] = MAX_SED, ActualizarSed(playerid);
		AccionesRol(playerid, 0, "toma una bandeja del comedor, directamente come de lo que se encuentra en ella.");
		ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.1, 0, 1, 1, 0, 0, 1);
	}
    return 1;
}

funcion Minan2(playerid)
{
	new a = random(5);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 9)) RemovePlayerAttachedObject(playerid, 9);
	_Minando[playerid] = 0;
	_Piedras[playerid] += a+1;
	TogglePlayerControllable(playerid,1);
	ClearAnimations(playerid);
	SetPlayerAttachedObject(playerid, 9, 905, 5, 0.136999, 0.022000, 0.006999, 0.000000, 0.000000, 0.000000, 0.236000, 0.091000, 0.275000);
	GameTextForPlayer(playerid, "Lleva la piedra", 3000, 5);
	return 1;
}

funcion _NegocioP(nid)
{
	DestroyDynamicPickup(i_Negocio[nid][nIcono]);
	if (i_Negocio[nid][nComprado] == 0) i_Negocio[nid][nIcono] = CreateDynamicPickup(1272, 1, i_Negocio[nid][nExteriorX], i_Negocio[nid][nExteriorY], i_Negocio[nid][nExteriorZ]);
	else i_Negocio[nid][nIcono] = CreateDynamicPickup(1273, 1, i_Negocio[nid][nExteriorX], i_Negocio[nid][nExteriorY], i_Negocio[nid][nExteriorZ]);
	return 1;
}

funcion _Negocio2P(nid)
{
	DestroyDynamicPickup(i_Negocio[nid][nIcono]);
	i_Negocio[nid][nIcono] = CreateDynamicPickup(1273, 1, -2190.7974,165.9186,58.2604);
	return 1;
}

stock _tipoN(nid) {
    new string[24];
    if (!i_Negocio[nid][nTipo]) format(string, sizeof(string), "Ninguno");
    else if (i_Negocio[nid][nTipo] == 1) format(string, sizeof(string), "24-7");
    else if (i_Negocio[nid][nTipo] == 2) format(string, sizeof(string), "Ropa");
    else if (i_Negocio[nid][nTipo] == 3) format(string, sizeof(string), "Restaurante");
    else if (i_Negocio[nid][nTipo] == 4) format(string, sizeof(string), "Cluckin bell");
    else if (i_Negocio[nid][nTipo] == 5) format(string, sizeof(string), "Pizzería");
    else if (i_Negocio[nid][nTipo] == 6) format(string, sizeof(string), "Burger Shot");
    else if (i_Negocio[nid][nTipo] == 7) format(string, sizeof(string), "Ammu-Nation");
    else if (i_Negocio[nid][nTipo] == 8) format(string, sizeof(string), "Peluquería");
    else if (i_Negocio[nid][nTipo] == 9) format(string, sizeof(string), "Sex Shop");
    else if (i_Negocio[nid][nTipo] == 10) format(string, sizeof(string), "Gasolinera");
    else if (i_Negocio[nid][nTipo] == 11) format(string, sizeof(string), "Electrónica");
    else if (i_Negocio[nid][nTipo] == 12) format(string, sizeof(string), "Bar");
    else if (i_Negocio[nid][nTipo] == 13) format(string, sizeof(string), "Ferreteria");
    else if (i_Negocio[nid][nTipo] == 14) format(string, sizeof(string), "Alhambra");
	else if (i_Negocio[nid][nTipo] == 15) format(string, sizeof(string), "Strip club");
	else if (i_Negocio[nid][nTipo] == 16) format(string, sizeof(string), "Club private");
	else if (i_Negocio[nid][nTipo] == 17) format(string, sizeof(string), "Tienda empeno");
    return string;
}

stock _estadoN(i_n, tipo) {
	new string[50];
	if (tipo == 1) {
		if (!i_Negocio[i_n][nSeguro]) format(string, sizeof(string), "~r~Cerrado");
		else if (i_Negocio[i_n][nSeguro]) format(string, sizeof(string), "~b~Abierto");
	} else if (tipo == 2) {
		if (!i_Negocio[i_n][nSeguro]) format(string, sizeof(string), "{FF0000}Cerrada");
		else if (i_Negocio[i_n][nSeguro]) format(string, sizeof(string), "{00C200}Abierta");
	}
	return string;
}

//mensajes
new C_MESSAGES[6] = {
    0xFC1111DE, // 0 - Error
    0xFFD97FFF, // 1 - Ayuda
    0xFCE111DE, // 2 - Información
    0xb0b0b0FF, // 3 - Comando
    -1, // 4 - Elección.
    0x1EB032FF // 5 - Verde.
};

funcion _Mensaje(playerid, type, optional[], message[]) {
    new InfoMsg[150];
    switch (type) {
        case 0 :format(InfoMsg, sizeof(InfoMsg), "[Error Comando]: {E0ECED}%s", message); // Error
        case 1: format(InfoMsg, sizeof(InfoMsg), "%s %s", message, optional); // Ayuda
        case 2: format(InfoMsg, sizeof(InfoMsg), "[Servidor Información]: {FFFFFF} %s", message); // Información
        case 3: format(InfoMsg, sizeof(InfoMsg), "*{FFFFFF} %s", message); // CMD
        case 4: format(InfoMsg, sizeof(InfoMsg), "{%s}%s", optional, message); // Con color mensaje
        case 5: format(InfoMsg, sizeof(InfoMsg), "%s", message); // Color verde
    }
    Mensaje_(playerid, C_MESSAGES[type], InfoMsg);
    return 1;
}

funcion AccionesRol(playerid, type, text[]) {
    new MensajeAR[150];
    switch (type) {
        case 0: {
			format(MensajeAR, sizeof(MensajeAR), "%s %s", NombreJugador(playerid), text);
 			SetPlayerChatBubble(playerid, MensajeAR, AccionesColors[type], 15.0, 5000);
 			format(MensajeAR, sizeof(MensajeAR), "%s %s", NombreJugador(playerid), text);
        } // 0 - /me (Acciones largas)
        case 1: {
			format(MensajeAR, sizeof(MensajeAR), "%s %s", NombreJugador(playerid), text);
			SetPlayerChatBubble(playerid, MensajeAR, AccionesColors[1], 15.0, 5000);
			format(MensajeAR, sizeof(MensajeAR), "> %s", text);
			SendClientMessage(playerid, AccionesColors[1], MensajeAR);
		} // 1 - /ame (Acciones cortas)
        case 2: format(MensajeAR, sizeof(MensajeAR), "[%d | %s] %s ", playerid, NombreJugador(playerid), text); // 2 - /do (Entorno o Aclaración)
	    case 3: format(MensajeAR, sizeof(MensajeAR), "%s grita: ¡¡%s!!", NombreJugador(playerid), text); // 3 - Gritar
        case 4: format(MensajeAR, sizeof(MensajeAR), "%s susurra: %s", NombreJugador(playerid), text); // 4 - Susurrar
        case 5: format(MensajeAR, sizeof(MensajeAR), "[Megafóno: [ID]:%d] %s o< %s]", playerid, NombreJugador(playerid), text); // 5 - Megafóno
    }
    new Float: PosMensajeX, Float: PosMensajeY, Float: PosMensajeZ, MyWorrld = GetPlayerVirtualWorld(playerid);
    GetPlayerPos(playerid, Float: PosMensajeX, Float: PosMensajeY, Float: PosMensajeZ);
    for (new i = 0; i < MAX_PLAYERS; i++) {
        if (IsPlayerConnected(i) && _enPos(i,AccionesRadios[type],Float: PosMensajeX,Float: PosMensajeY, Float: PosMensajeZ) && GetPlayerVirtualWorld(i) == MyWorrld && user[i][State] == 3) {
            if (type == 0) SendSplitMessage(i, AccionesColors[type], MensajeAR);
			else if (type == 1) return 1;
			else SendSplitMessage(i, AccionesColors[type], MensajeAR);
        }
    }
    return 1;
}

stock PrecioObjetosNegocio(modelid) {
    switch (modelid) {
        case 2822,2820: return 20;
        case 2515,1715,1716,1720,1721,1714,1811: return 400;
        case 2518,1737,2119,2116,2115,2111,1739,1810: return 450;
        case 2516,2002,2160,2334,2335,2112,2079,2121: return 950;
        case 2514,2015,2157,2159,2029,1825: return 1000;
        case 2517,2014,2018,2156,2120: return 1200;
        case 2336,2337,2013,2019: return 2000;
        case 2519, 2520,2523,2524,2136: return 3000;
        case 2521,2525,2528,2529,2135,2339,14720: return 4000;
        case 2522,1208,2340,2415: return 5000;
        default: {
                new priceex = random(500);
                priceex += 4000;
                return priceex;
            }
    }
    return 1;
}

stock Get2DZone(zone[], len, Float: x, Float: y, Float: z) {
    #pragma unused z
    for (new i = 0; i != sizeof(NombreZona); i++) {
        if (x >= NombreZona[i][sz_Area][0] && x <= NombreZona[i][sz_Area][3] && y >= NombreZona[i][sz_Area][1] && y <= NombreZona[i][sz_Area][4]) {
            return format(zone, len, NombreZona[i][sz_Nombre]);
        }
    }
    return format(zone, len, "San Andreas");
}

stock GetXYInFrontOfPlayer(playerid, & Float: x, & Float: y, Float: distance) {
    new Float: a;
    GetPlayerPos(playerid, x, y, a);
    GetPlayerFacingAngle(playerid, a);
    if (GetPlayerVehicleID(playerid)) GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
    x += (distance * floatsin(-a, degrees));
    y += (distance * floatcos(-a, degrees));
}

public OnPlayerEditObject(playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ){
	if(playerobject) {
		if(GetPVarInt(playerid,"EditandoMuebles")) {
	 		new ID = GetPVarInt(playerid, "ID_MUEBLEC"), i = DentroCasa[playerid];
			Iter_Remove(Player, playerid);
			foreach(Player, p) {
			    if(CasaActual[p] == i) {
			        MovePlayerObject(p, OBJ_MuebleC[playerid][ID], fX, fY, fZ, 10.0, fRotX, fRotY, fRotZ);
				}
			}
			Iter_Add(Player, playerid);
		    if(response == EDIT_RESPONSE_FINAL) {
				if(objectid == OBJ_MuebleC[playerid][ID]) {
				    InfoCasa[i][cObjPosX][ID] = fX;
				    InfoCasa[i][cObjPosY][ID] = fY;
				    InfoCasa[i][cObjPosZ][ID] = fZ;
				    InfoCasa[i][cObjRotX][ID] = fRotX;
				    InfoCasa[i][cObjRotY][ID] = fRotY;
				    InfoCasa[i][cObjRotZ][ID] = fRotZ;
			    	AjustarMueble_P(i,ID,InfoCasa[i][cObjPosX][ID],InfoCasa[i][cObjPosY][ID],InfoCasa[i][cObjPosZ][ID]);
					AjustarMueble_R(i,ID,InfoCasa[i][cObjRotX][ID],InfoCasa[i][cObjRotY][ID],InfoCasa[i][cObjRotZ][ID]);
				    ActualizarCasa(i, false, ID);
					return 1;
				}
			} else if(response == EDIT_RESPONSE_CANCEL) {
				if(objectid == OBJ_MuebleC[playerid][ID]) {
			    	AjustarMueble_P(i,ID,InfoCasa[i][cObjPosX][ID],InfoCasa[i][cObjPosY][ID],InfoCasa[i][cObjPosZ][ID]);
					AjustarMueble_R(i,ID,InfoCasa[i][cObjRotX][ID],InfoCasa[i][cObjRotY][ID],InfoCasa[i][cObjRotZ][ID]);
					return 1;
				}
			}
		} else if(GetPVarInt(playerid,"EditandoMueblesN")) {
	 		new ID = GetPVarInt(playerid, "ID_MUEBLEN"), i = DentroNegocio[playerid];
			Iter_Remove(Player, playerid);
			foreach(Player, p) {
			    if(NegocioActual[p] == i) {
			        MovePlayerObject(p, OBJ_MuebleN[playerid][ID], fX, fY, fZ, 10.0, fRotX, fRotY, fRotZ);
				}
			}
			Iter_Add(Player, playerid);
		    if(response == EDIT_RESPONSE_FINAL) {
				if(objectid == OBJ_MuebleN[playerid][ID]) {
				    i_Negocio[i][nObjPosX][ID] = fX;
				    i_Negocio[i][nObjPosY][ID] = fY;
				    i_Negocio[i][nObjPosZ][ID] = fZ;
				    i_Negocio[i][nObjRotX][ID] = fRotX;
				    i_Negocio[i][nObjRotY][ID] = fRotY;
				    i_Negocio[i][nObjRotZ][ID] = fRotZ;
			    	AjustarMueble_P(i,ID,i_Negocio[i][nObjPosX][ID],i_Negocio[i][nObjPosY][ID],i_Negocio[i][nObjPosZ][ID]);
					AjustarMueble_R(i,ID,i_Negocio[i][nObjRotX][ID],i_Negocio[i][nObjRotY][ID],i_Negocio[i][nObjRotZ][ID]);
				    save_Negocio(i, false, ID);
					return 1;
				}
			} else if(response == EDIT_RESPONSE_CANCEL) {
				if(objectid == OBJ_MuebleN[playerid][ID]) {
			    	AjustarMueble_P(i,ID,i_Negocio[i][nObjPosX][ID],i_Negocio[i][nObjPosY][ID],i_Negocio[i][nObjPosZ][ID]);
					AjustarMueble_R(i,ID,i_Negocio[i][nObjRotX][ID],i_Negocio[i][nObjRotY][ID],i_Negocio[i][nObjRotZ][ID]);
					return 1;
				}
			}
		} else if(GetPVarInt(playerid,"EditandoMueblesG")) {
	 		new ID = GetPVarInt(playerid, "ID_MUEBLEG"), i = DentroGarage[playerid];
			Iter_Remove(Player, playerid);
			foreach(Player, p) {
			    if(GarageActual[p] == i) {
			        MovePlayerObject(p, OBJ_MuebleG[playerid][ID], fX, fY, fZ, 10.0, fRotX, fRotY, fRotZ);
				}
			}
			Iter_Add(Player, playerid);
		    if(response == EDIT_RESPONSE_FINAL) {
				if(objectid == OBJ_MuebleG[playerid][ID]) {
				    InfoGaraje[i][gObjPosX][ID] = fX;
				    InfoGaraje[i][gObjPosY][ID] = fY;
				    InfoGaraje[i][gObjPosZ][ID] = fZ;
				    InfoGaraje[i][gObjRotX][ID] = fRotX;
				    InfoGaraje[i][gObjRotY][ID] = fRotY;
				    InfoGaraje[i][gObjRotZ][ID] = fRotZ;
			    	AjustarMueble_P(i,ID,InfoGaraje[i][gObjPosX][ID],InfoGaraje[i][gObjPosY][ID],InfoGaraje[i][gObjPosZ][ID]);
					AjustarMueble_R(i,ID,InfoGaraje[i][gObjRotX][ID],InfoGaraje[i][gObjRotY][ID],InfoGaraje[i][gObjRotZ][ID]);
				    ActualizarGarage(i, false, ID);
					return 1;
				}
			} else if(response == EDIT_RESPONSE_CANCEL) {
				if(objectid == OBJ_MuebleG[playerid][ID]) {
			    	AjustarMueble_P(i,ID,InfoGaraje[i][gObjPosX][ID],InfoGaraje[i][gObjPosY][ID],InfoGaraje[i][gObjPosZ][ID]);
					AjustarMueble_R(i,ID,InfoGaraje[i][gObjRotX][ID],InfoGaraje[i][gObjRotY][ID],InfoGaraje[i][gObjRotZ][ID]);
					return 1;
				}
			}
		}
		//empresas
		else if(GetPVarInt(playerid,"EditandoMueblesE"))
		{
	 		new ID = GetPVarInt(playerid, "ID_MUEBLEE"), i = DentroEmpresa[playerid];
			Iter_Remove(Player, playerid);
			foreach(Player, p) {
			    if(EmpresaActual[p] == i) {
			        MovePlayerObject(p, OBJ_MuebleE[playerid][ID], fX, fY, fZ, 10.0, fRotX, fRotY, fRotZ);
				}
			}
			Iter_Add(Player, playerid);
		    if(response == EDIT_RESPONSE_FINAL)
			{
				if(objectid == OBJ_MuebleE[playerid][ID])
				{
				    i_Empresa[i][eObjPosX][ID] = fX;
				    i_Empresa[i][eObjPosY][ID] = fY;
				    i_Empresa[i][eObjPosZ][ID] = fZ;
				    i_Empresa[i][eObjRotX][ID] = fRotX;
				    i_Empresa[i][eObjRotY][ID] = fRotY;
				    i_Empresa[i][eObjRotZ][ID] = fRotZ;
			    	AjustarMueble_P(i,ID,i_Empresa[i][eObjPosX][ID],i_Empresa[i][eObjPosY][ID],i_Empresa[i][eObjPosZ][ID]);
					AjustarMueble_R(i,ID,i_Empresa[i][eObjRotX][ID],i_Empresa[i][eObjRotY][ID],i_Empresa[i][eObjRotZ][ID]);
				    save_Empresa(i, false, -1, ID);
					return 1;
				}
			}
			else if(response == EDIT_RESPONSE_CANCEL)
			{
				if(objectid == OBJ_MuebleE[playerid][ID])
				{
			    	AjustarMueble_P(i,ID,i_Empresa[i][eObjPosX][ID],i_Empresa[i][eObjPosY][ID],i_Empresa[i][eObjPosZ][ID]);
					AjustarMueble_R(i,ID,i_Empresa[i][eObjRotX][ID],i_Empresa[i][eObjRotY][ID],i_Empresa[i][eObjRotZ][ID]);
					return 1;
				}
			}
		}
	}
	return 1;
}

funcion AjustarMueble_P(h, index, Float:x, Float:y, Float:z) {
	new playerid = INVALID_PLAYER_ID;
	new bool: playerused = (0 <= playerid < MAX_PLAYERS);
	if(playerused) Iter_Remove(Player, playerid);
	foreach(Player, i) {
	    if(CasaActual[i] == h) SetPlayerObjectPos(i, OBJ_MuebleC[i][index], x, y, z);
		else if(NegocioActual[i] == h) SetPlayerObjectPos(i, OBJ_MuebleN[i][index], x, y, z);
		else if(GarageActual[i] == h) SetPlayerObjectPos(i, OBJ_MuebleG[i][index], x, y, z);
		else if(EmpresaActual[i] == h) SetPlayerObjectPos(i, OBJ_MuebleE[i][index], x, y, z);
	}
	if(playerused) Iter_Add(Player, playerid);
	return 1;
}

funcion AjustarMueble_R(h, index, Float:x, Float:y, Float:z) {
	new playerid = INVALID_PLAYER_ID;
	new bool: playerused = (0 <= playerid < MAX_PLAYERS);
	if(playerused) Iter_Remove(Player, playerid);
	foreach(Player, i) {
	    if(CasaActual[i] == h) SetPlayerObjectRot(i, OBJ_MuebleC[i][index], x, y, z);
		else if(NegocioActual[i] == h) SetPlayerObjectRot(i, OBJ_MuebleN[i][index], x, y, z);
		else if(GarageActual[i] == h) SetPlayerObjectRot(i, OBJ_MuebleG[i][index], x, y, z);
		else if(EmpresaActual[i] == h) SetPlayerObjectRot(i, OBJ_MuebleE[i][index], x, y, z);
	}
	if(playerused) Iter_Add(Player, playerid);
	return 1;
}

funcion DestruirMuebleCasa(h, index) {
	foreach(Player, i) {
	    if(CasaActual[i] == h) {
		    DestroyPlayerObject(i, OBJ_MuebleC[i][index]);
		}
	}
	return 1;
}

funcion DestruirMuebleNegocio(n, index) {
	foreach(Player, i) {
	    if(NegocioActual[i] == n) {
		    DestroyPlayerObject(i, OBJ_MuebleN[i][index]);
		}
	}
	return 1;
}

funcion DestruirMuebleGarage(n, index) {
	foreach(Player, i) {
	    if(GarageActual[i] == n) {
		    DestroyPlayerObject(i, OBJ_MuebleG[i][index]);
		}
	}
	return 1;
}
funcion DestruirMuebleEmpresa(n, index)
{
	foreach(Player, i)
	{
	    if(EmpresaActual[i] == n)
		{
		    DestroyPlayerObject(i, OBJ_MuebleE[i][index]);
		}
	}
	return 1;
}

GuardarObjetosAdmin()
{
    new szFileStr[1024],
    File: fHandle = fopen("ObjetosAdmin.rp", io_write);
    for (new objeto; objeto < MAX_POBJETOS; objeto++)
	{
        format(szFileStr, sizeof(szFileStr), "%d|%d|%d|%f|%f|%f|%f|%f|%f|\r\n",
        cObjeto[objeto][pOID],
        cObjeto[objeto][pVw],
        cObjeto[objeto][pInt],
        cObjeto[objeto][pPosX],
        cObjeto[objeto][pPosY],
        cObjeto[objeto][pPosZ],
        cObjeto[objeto][pPosRX],
        cObjeto[objeto][pPosRY],
        cObjeto[objeto][pPosRZ]);
        fwrite(fHandle, szFileStr);
    }
    return fclose(fHandle);
}

funcion CargarGraffitis() {
    new Totalgffs, gfd[64];
    for (new gfid = 0; gfid < MAX_GRAFFITIS; gfid++)
	{
	    ResetGraffiti(gfid);
	    format(gfd, 64, DATOS_GRAFFITIS, gfid);
	    if(fexist(gfd))
	    {
	        INI_ParseFile(gfd, "CargarGraff", .bExtra = true, .extra = gfid);
			CrearGraffiti(gfid);
   			Totalgffs++;
	    }
    }
    printf("» Sistema de graffitis cargado (%d).",Totalgffs);
    return 1;
}

CrearGraffiti(gfid)
{
	Graffiti[gfid][gObjeto] = CreateDynamicObject(11359, Graffiti[gfid][gPosX], Graffiti[gfid][gPosY], Graffiti[gfid][gPosZ], Graffiti[gfid][gRX], Graffiti[gfid][gRY], Graffiti[gfid][gRZ], Graffiti[gfid][gVw], Graffiti[gfid][gInt], -1, MAX_RADIO_STREAM_MIN);
	new Font[30], Color;
	switch(Graffiti[gfid][gColor])
    {
    case 0: Color = HexToInt("0xFF00B8FF");
    case 1: Color = HexToInt("0xFF002BFF");
    case 2: Color = HexToInt("0xFF41C100");
    case 3: Color = HexToInt("0xFFDF0000");
	case 4: Color = HexToInt("0xFFFFF403");
	case 5: Color = HexToInt("0xFFB103FF");
	case 6: Color = HexToInt("0xFFFF8F03");
    }
	switch(Graffiti[gfid][gFont])
    {
    case 0: format(Font, 30, "Comic Sans MS");
    case 1: format(Font, 30, "Corbel");
    case 2: format(Font, 30, "Courier New");
    case 3: format(Font, 30, "Dotum");
    case 4: format(Font, 30, "Consolas");
	}
	SetDynamicObjectMaterialText(Graffiti[gfid][gObjeto], 0, Graffiti[gfid][gTexto], OBJECT_MATERIAL_SIZE_512x512, Font, Graffiti[gfid][gSize], 0, Color, 0x00000000, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
}

ResetGraffiti(gfid)
{
	format(Graffiti[gfid][gDueno], 30, "Nadie");
	format(Graffiti[gfid][gTexto], 50, "Nada");
	Graffiti[gfid][gFont] = 0;
	Graffiti[gfid][gColor] = 0;
 	Graffiti[gfid][gSize] = 24;
 	Graffiti[gfid][gPosX] = 0.0;
 	Graffiti[gfid][gPosY] = 0.0;
 	Graffiti[gfid][gPosZ] = 0.0;
 	Graffiti[gfid][gRX] = 0.0;
 	Graffiti[gfid][gRY] = 0.0;
 	Graffiti[gfid][gRZ] = 0.0;
  	Graffiti[gfid][gInt] = 0;
   	Graffiti[gfid][gVw] = 0;
}

GuardarGraffiti(gfid)
{
    new gd[64];
    format(gd, 64, DATOS_GRAFFITIS, gfid);
    new INI: File = INI_Open(gd);
   	INI_WriteString(File, "gDueno", Graffiti[gfid][gDueno]);
	INI_WriteString(File, "gTexto", Graffiti[gfid][gTexto]);
  	INI_WriteInt(File, "gFont", Graffiti[gfid][gFont]);
  	INI_WriteInt(File, "gColor", Graffiti[gfid][gColor]);
  	INI_WriteInt(File, "gSize", Graffiti[gfid][gSize]);
  	INI_WriteFloat(File, "gPosX", Graffiti[gfid][gPosX]);
  	INI_WriteFloat(File, "gPosY", Graffiti[gfid][gPosY]);
  	INI_WriteFloat(File, "gPosZ", Graffiti[gfid][gPosZ]);
  	INI_WriteFloat(File, "gRX", Graffiti[gfid][gRX]);
  	INI_WriteFloat(File, "gRY", Graffiti[gfid][gRY]);
  	INI_WriteFloat(File, "gRZ", Graffiti[gfid][gRZ]);
  	INI_WriteInt(File, "gInt", Graffiti[gfid][gInt]);
  	INI_WriteInt(File, "gVw", Graffiti[gfid][gVw]);
	INI_Close(File);
	return 1;
}

funcion CargarGraff(gfid, name[], value[])
{
   	INI_String("gDueno", Graffiti[gfid][gDueno], 30);
	INI_String("gTexto", Graffiti[gfid][gTexto], 50);
  	INI_Int("gFont", Graffiti[gfid][gFont]);
  	INI_Int("gColor", Graffiti[gfid][gColor]);
  	INI_Int("gSize", Graffiti[gfid][gSize]);
  	INI_Float("gPosX", Graffiti[gfid][gPosX]);
  	INI_Float("gPosY", Graffiti[gfid][gPosY]);
  	INI_Float("gPosZ", Graffiti[gfid][gPosZ]);
  	INI_Float("gRX", Graffiti[gfid][gRX]);
  	INI_Float("gRY", Graffiti[gfid][gRY]);
  	INI_Float("gRZ", Graffiti[gfid][gRZ]);
  	INI_Int("gInt", Graffiti[gfid][gInt]);
  	INI_Int("gVw", Graffiti[gfid][gVw]);
    return 1;
}

funcion TerminarGraffiti(playerid)
{
    SetPVarInt(playerid, "Congelado", 0);
	TogglePlayerControllable(playerid, 1);
	ClearAnimations(playerid);
	ApplyAnimation(playerid, "GRAFFITI", "graffiti_Chkout", 4.0, 0, 0, 0, 0, 0, 1);
}

public OnPlayerEditDynamicObject(playerid, objectid, response, Float: x, Float: y, Float: z, Float: rx, Float: ry, Float: rz)
{
	if(user[playerid][jGraffitiE] != -1)
	{
	    if(Graffiti[user[playerid][jGraffitiE]][gObjeto] == objectid)
	    {
	        if(response == EDIT_RESPONSE_FINAL)
	        {
	            if(user[playerid][j_Mascara] == 1) return _Mensaje(playerid, 0, "492", "No puedes crear graffitis si estás enmascarado.");
				new Font[30], Color;
				switch(Graffiti[user[playerid][jGraffitiE]][gColor])
				{
				    case 0: Color = HexToInt("0xFF00B8FF");
				    case 1: Color = HexToInt("0xFF002BFF");
				    case 2: Color = HexToInt("0xFF41C100");
				    case 3: Color = HexToInt("0xFFDF0000");
				    case 4: Color = HexToInt("0xFFFFF403");
				    case 5: Color = HexToInt("0xFFB103FF");
				    case 6: Color = HexToInt("0xFFFF8F03");
				}
				switch(Graffiti[user[playerid][jGraffitiE]][gFont])
				{
				    case 0: format(Font, 30, "Comic Sans MS");
				    case 1: format(Font, 30, "Corbel");
				    case 2: format(Font, 30, "Courier New");
				    case 3: format(Font, 30, "Dotum");
				    case 4: format(Font, 30, "Consolas");
				}
				SetDynamicObjectMaterialText(Graffiti[user[playerid][jGraffitiE]][gObjeto], 0, Graffiti[user[playerid][jGraffitiE]][gTexto], OBJECT_MATERIAL_SIZE_512x512, Font, Graffiti[user[playerid][jGraffitiE]][gSize], 0, Color, 0x00000000, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
		        Graffiti[user[playerid][jGraffitiE]][gPosX] = x;
		        Graffiti[user[playerid][jGraffitiE]][gPosY] = y;
		        Graffiti[user[playerid][jGraffitiE]][gPosZ] = z;
		        Graffiti[user[playerid][jGraffitiE]][gRX] = rx;
		        Graffiti[user[playerid][jGraffitiE]][gRY] = ry;
		        Graffiti[user[playerid][jGraffitiE]][gRZ] = rz;
		        Graffiti[user[playerid][jGraffitiE]][gVw] = GetPlayerVirtualWorld(playerid);
		        Graffiti[user[playerid][jGraffitiE]][gInt] = GetPlayerInterior(playerid);
				SetDynamicObjectPos(Graffiti[user[playerid][jGraffitiE]][gObjeto], x, y, z);
	    		SetDynamicObjectRot(Graffiti[user[playerid][jGraffitiE]][gObjeto], rx, ry, rz);
				TogglePlayerControllable(playerid, 0);
				SetPVarInt(playerid, "Congelado", 1);
				SetTimerEx("TerminarGraffiti", 7000, false, "i", playerid);
				GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~w~~g~Pintando Graffiti...",8000,3);
				ApplyAnimation(playerid, "SPRAYCAN", "spraycan_fire",4.1,1,1,1,1,7000,1);
				Mensaje_(playerid, -1, "Creaste un graffiti.");
				format(Graffiti[user[playerid][jGraffitiE]][gDueno], 30, "%s", N_Apellido(playerid));
				GuardarGraffiti(user[playerid][jGraffitiE]);
				new stringFormat[148];
   				format(stringFormat, sizeof(stringFormat), "[AvisoAdmin]: {FFFFFF}El jugador %s (%d) creó un graffiti [Database ID:%d]", NombreRJugador(playerid), playerid, user[playerid][jGraffitiE]);
    			MensajeAdmin(stringFormat);
				user[playerid][jGraffitiE] = -1;
			}
	    	else if (response == EDIT_RESPONSE_CANCEL)
		    {
		        ResetGraffiti(user[playerid][jGraffitiE]);
		        DestroyDynamicObject(Graffiti[user[playerid][jGraffitiE]][gObjeto]);
	         	user[playerid][jGraffitiE] = -1;
		    }
	    }
	}
	if(GetPVarInt(playerid,"OBJ_ADM"))
	{
		for (new objeto = 0; objeto < MAX_POBJETOS; objeto++)
		{
  			if (objectid == cObjeto[objeto][pObjeto])
  			{
         		if(response == EDIT_RESPONSE_FINAL)
	 			{
					cObjeto[objeto][pPosX] = x;
					cObjeto[objeto][pPosY] = y;
					cObjeto[objeto][pPosZ] = z;
					cObjeto[objeto][pPosRX] = rx;
					cObjeto[objeto][pPosRY] = ry;
					cObjeto[objeto][pPosRZ] = rz;
					SetDynamicObjectPos(cObjeto[objeto][pObjeto], x, y, z);
			    	SetDynamicObjectRot(cObjeto[objeto][pObjeto], rx, ry, rz);
		    		GuardarObjetosAdmin();
		    		DeletePVar(playerid, "OBJ_ADM");
		    		Mensaje_(playerid, -1, "Creaste un objeto admin.");
	    		}
	    		else if (response == EDIT_RESPONSE_CANCEL)
				{
					cObjeto[objeto][pPosX] = x;
					cObjeto[objeto][pPosY] = y;
					cObjeto[objeto][pPosZ] = z;
					cObjeto[objeto][pPosRX] = rx;
					cObjeto[objeto][pPosRY] = ry;
					cObjeto[objeto][pPosRZ] = rz;
					SetDynamicObjectPos(cObjeto[objeto][pObjeto], x, y, z);
			    	SetDynamicObjectRot(cObjeto[objeto][pObjeto], rx, ry, rz);
		    		GuardarObjetosAdmin();
                    DeletePVar(playerid, "OBJ_ADM");
                    Mensaje_(playerid, -1, "Creaste un objeto admin.");
				}
			}
		}
		return 1;
	}
	if(GetPVarInt(playerid,"Editando_F")) {
    	if(objectid == InfoFogata[playerid][fObjeto]) {
		    if(response == EDIT_RESPONSE_FINAL) {
           	    InfoFogata[playerid][fPosicionX] = x;
			    InfoFogata[playerid][fPosicionY] = y;
			    InfoFogata[playerid][fPosicionZ] = z;
			    InfoFogata[playerid][fPosicionRX] = rx;
			    InfoFogata[playerid][fPosicionRY] = ry;
			    InfoFogata[playerid][fPosicionRZ] = rz;
			    SetDynamicObjectPos(InfoFogata[playerid][fObjeto], x, y, z);
			    SetDynamicObjectRot(InfoFogata[playerid][fObjeto], rx, ry, rz);
				if(InfoFogata[playerid][fObjeto] != 0) DestroyDynamicObject(InfoFogata[playerid][fObjeto2]);
   	            InfoFogata[playerid][fObjeto2] = CreateDynamicObject(18688, x, y, z-2, rx, ry, rz);
                DeletePVar(playerid, "Editando_F");
				return 1;
		    } else if(response == EDIT_RESPONSE_CANCEL) {
           	    SetDynamicObjectPos(InfoFogata[playerid][fObjeto], InfoFogata[playerid][fPosicionX], InfoFogata[playerid][fPosicionY], InfoFogata[playerid][fPosicionZ]);
			    SetDynamicObjectRot(InfoFogata[playerid][fObjeto], 0, 0, 0);
				DeletePVar(playerid, "Editando_F");
				return 1;
		    }
	    }
    }
	if(response == EDIT_RESPONSE_FINAL) {
		if(GetPVarInt(playerid, "TT_BAR") == 1) {
			if(!_enPos(playerid, 10, x, y, z)) { DeletePVar(playerid, "TT_BAR"); _Mensaje(playerid, 0, "0", "No te encuentras cerca del objeto de trafico."); return 1; }
			for (new bar = 0; bar < MAX_BARRERAS; bar++) {
            	if (objectid == InfoBar[bar][bObjeto]) {
            		AccionesRol(playerid, 1, "colocó un objeto de trafico cerca de él.");
					DeletePVar(playerid, "TT_BAR");
					InfoBar[bar][bPosX] = x;
					InfoBar[bar][bPosY] = y;
					InfoBar[bar][bPosZ] = z;
					InfoBar[bar][bPosRX] = rx;
					InfoBar[bar][bPosRY] = ry;
					InfoBar[bar][bPosRZ] = rz;
					SetDynamicObjectPos(InfoBar[bar][bObjeto], x, y, z);
            	    SetDynamicObjectRot(InfoBar[bar][bObjeto], rx, ry, rz);
            	    return 1;
				}
			}
			DeletePVar(playerid, "TT_BAR");
		}
		if(GetPVarInt(playerid, "TT_TEF") == 1) {
			if(!_enPos(playerid, 10, x, y, z)) { DeletePVar(playerid, "TT_TEF"); _Mensaje(playerid, 0, "0", "No te encuentras cerca del teléfono público."); return 1; }
			for (new tpid = 0; tpid < MAX_TELEFONOS; tpid++) {
            	if (objectid == InfoTelefono[tpid][tpObjeto]) {
					DeletePVar(playerid, "TT_TEF");
					InfoTelefono[tpid][tpPosicion][0] = x;
					InfoTelefono[tpid][tpPosicion][1] = y;
					InfoTelefono[tpid][tpPosicion][2] = z;
        			InfoTelefono[tpid][tpPosicion][3] = rx;
					InfoTelefono[tpid][tpPosicion][4] = ry;
        			InfoTelefono[tpid][tpPosicion][5] = rz;
					SetDynamicObjectPos(InfoTelefono[tpid][tpObjeto], x, y, z);
            	    SetDynamicObjectRot(InfoTelefono[tpid][tpObjeto], rx, ry, rz);
            	    _Mensaje(playerid, 2, "0", "Has creado correctamente el teléfono público.");
            	    new text[256];
            	    format(text, sizeof(text), "%d | /publico", tpid);
            	    InfoTelefono[tpid][tpTexto] = CreateDynamic3DTextLabel(text, C_BLANCO, InfoTelefono[tpid][tpPosicion][0], InfoTelefono[tpid][tpPosicion][1], InfoTelefono[tpid][tpPosicion][2] + 0.4, 8.0);
            	    ActualizarTelefono();
            	    return 1;
				}
			}
			DeletePVar(playerid, "TT_TEF");
		}
	}
	else if(response == EDIT_RESPONSE_CANCEL) {
	    if(GetPVarInt(playerid, "TT_BAR") == 1) DeletePVar(playerid, "TT_BAR");
	    if(GetPVarInt(playerid, "TT_TEF") == 1) DeletePVar(playerid, "TT_TEF");
	}
    return 1;
}

//garajes
stock _EspacioG(gid) {
    new string[24];
    if(!InfoGaraje[gid][gTipo]) format(string, sizeof(string), "Ninguno");
    else if(InfoGaraje[gid][gTipo] == 1) format(string, sizeof(string), "Pequeño");
    else if(InfoGaraje[gid][gTipo] == 2) format(string, sizeof(string), "Mediano");
    else if(InfoGaraje[gid][gTipo] == 3) format(string, sizeof(string), "Grande");
    return string;
}

stock _EstadoG(gid) {
    new string[24];
    if (!InfoGaraje[gid][gSeguro]) format(string, sizeof(string), "~r~Cerrado");
    else if (InfoGaraje[gid][gSeguro]) format(string, sizeof(string), "~b~Abierto");
    return string;
}

//casas
stock _EstadoC(cid, tipo) {
    new string[24];
	if (tipo == 1) {
		if (!InfoCasa[cid][cEstado]) format(string, sizeof(string), "~r~Cerrado");
		else if (InfoCasa[cid][cEstado]) format(string, sizeof(string), "~b~Abierto");
	} else if (tipo == 2) {
		if (!InfoCasa[cid][cEstado]) format(string, sizeof(string), "{FF0000}Cerrada");
		else if (InfoCasa[cid][cEstado]) format(string, sizeof(string), "{00C200}Abierta");
	}
	return string;
}

stock _EspacioC(casaid) {
    new string[24];
    if (!InfoCasa[casaid][cTipo]) format(string, sizeof(string), "Ninguno");
    else if (InfoCasa[casaid][cTipo] == 1) format(string, sizeof(string), "Habitación");
    else if (InfoCasa[casaid][cTipo] == 2) format(string, sizeof(string), "Pequeño");
    else if (InfoCasa[casaid][cTipo] == 3) format(string, sizeof(string), "Mediano");
    else if (InfoCasa[casaid][cTipo] == 4) format(string, sizeof(string), "Grande");
    else if (InfoCasa[casaid][cTipo] == 5) format(string, sizeof(string), "Extra grande");
    return string;
}

//- Sistema de Ropa con ranuras
funcion CambiarRopa(playerid, skinid, slot) {
    switch(user[playerid][jSexo]) {
        case 1: SetPlayerSkin(playerid, 252);
        case 2: SetPlayerSkin(playerid, 140);
    }
    AccionesRol(playerid, 0, "se está cambiando de ropa.");
    SetTimerEx("CambiarEx", 4000, false, "ii", playerid, skinid);
    user[playerid][jRopaArmario][slot] = skinid;
    user[playerid][jRopa] = skinid;
    TextoPantalla(playerid, "~w~Cambiando ropa...", 4000, 3);
    CongelarEx(playerid, 4);
    return 1;
}

funcion CambiarEx(playerid, skinid) {
    SetPlayerSkin(playerid, skinid);
    return 1;
}

stock CongelarEx(playerid, segundos = 0) {
    if(!segundos) return TogglePlayerControllable(playerid, false);
    else if(segundos) {
        TogglePlayerControllable(playerid, false);
        SetTimerEx("Descongelar", segundos * 1000, false, "i", playerid);
    }
    return 1;
}
funcion Descongelar(playerid) return TogglePlayerControllable(playerid, true);

funcion ElegirRopa(playerid, skin) {
    new Str[18 * MAX_ROPA], Ropa[MAX_ROPA][20], strI[20], ropita;
    if(user[playerid][jPremium] == 0) ropita = 4;
    else if(user[playerid][jPremium] == 1) ropita = 4;
    else if(user[playerid][jPremium] == 2) ropita = 5;
    else if(user[playerid][jPremium] == 3) ropita = MAX_ROPA;
    Loop(i, ropita, 0) {
        if(!user[playerid][jRopaArmario][i]) {
            Ropa[i] = "Nada";
        } else format(Ropa[i], 20, "%d", user[playerid][jRopaArmario][i]);
        format(strI, sizeof(strI), "Ranura %d - '%s'\n", i, Ropa[i]);
        strins(Str, strI, strlen(Str));
    }
    Dialog(playerid, D_ELEGIRROPA, DIALOG_STYLE_LIST, "{D6E1EB}Escoge la ranura para guardar", Str, "Elegir", "");
    SetPVarInt(playerid, "ROPA_SELECCIONADA", skin);
    return 1;
}

// strmatch
stock strmatch(const String1[], const String2[]) {
    if((strcmp(String1, String2, true, strlen(String2)) == 0) && (strlen(String2) == strlen(String1))) {
        return true;
    } else {
        return false;
    }
}

//- Carpintero
funcion Tronco(playerid) {
    if(_enPos(playerid, 2.0, 2142.0522, -2204.2458, 13.5084)) {
        if(TroncosDis == 0) return _Mensaje(playerid, 0, "0", "No hay más troncos en la carpintería.");
        ColocarObject(playerid, 5, 1463, 17, -0.028000, 0.424000, -0.049999, -10.499997, 97.500030, 1.200000, 0.446000, 0.249000, 0.490000);
        SetPVarInt(playerid, "TrabajandoC", 1);
        SetPVarInt(playerid, "TomoCarpintero", 0);
        _Mensaje(playerid, 2, "0", "Has recogido los troncos, ve a la mesa y da clic.");
        ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.1, 0, 1, 1, 1, 1, 1);
        TroncosDis -= 2;
        ActualizarTroncoLabel();
    }
    return 1;
}

funcion HacerMueble(playerid) {
    if(EstaEnPuntosDeMesas(playerid)) {
        if(IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid, 5);
        ClearAnimations(playerid);
        B_Manos[playerid] = 1;
        SetPVarInt(playerid, "HaciendoMueble", 1);
        SetPVarInt(playerid, "MueblesCreados", 1);
        GameTextForPlayer(playerid, "~g~Creando mueble...", 21000, 3);
        SetTimerEx("TerminarMueble", 20000, 0, "%d", playerid);
        ApplyAnimation(playerid, "BASEBALL", "bat_part", 4.1, 1, 1, 0, 0, 0, 1);
        return 1;
    }
    return 1;
}

funcion TerminarMueble(playerid) {
    if(IsPlayerAttachedObjectSlotUsed(playerid, 9)) RemovePlayerAttachedObject(playerid, 9);
    TogglePlayerControllable(playerid, 1);
    ColocarObject(playerid, 5, ObjetoIDs[random(sizeof(ObjetoIDs))], 17, -0.278000, 0.187000, 0.455999, -4.800001, 94.299995, -0.099999, 1.000000, 1.000000, 1.000000);
    ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.1, 0, 1, 1, 1, 1);
    SetPlayerCheckpoint(playerid, 2154.4087, -2168.1611, 13.5084, 1.5);
    SetPVarInt(playerid, "EnCheckPoint", 5);
    B_Manos[playerid] = 0;
    _Mensaje(playerid, 2, "0", "Has hecho un mueble, llevalo al deposito.");
    return 1;
}

funcion ActualizarTroncoLabel() {
    new string[128];
    DestroyDynamic3DTextLabel(LabelTroncos);
    format(string, sizeof(string), "Troncos: %d\n{00C200}'Clic'",TroncosDis);
    LabelTroncos = CreateDynamic3DTextLabel(string, 0xD6E1EBFF, 2142.0522, -2204.2458, 13.5084, 8.0);
    return 1;
}

//- Leñador
funcion TalarArbol(playerid) {
    if(EstaEnPuntosDeArboles(playerid)) {
        if(IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid, 5);
        ClearAnimations(playerid);
        TogglePlayerControllable(playerid, 0);
        B_Manos[playerid] = 1;
        SetPVarInt(playerid, "TrabajandoL", 0);
        SetPVarInt(playerid, "HaciendoMueble", 1);
        SetPVarInt(playerid, "TroncosCreados", 1);
        GameTextForPlayer(playerid, "~g~Talando arbol...", 16000, 3);
        SetTimerEx("TerminarArbol", 15000, 0, "%d", playerid);
        ApplyAnimation(playerid, "CHAINSAW", "WEAPON_csaw", 4.1, 1, 1, 0, 0, 15000, 1);
        return 1;
    }
    return 1;
}

funcion TerminarArbol(playerid) {
    if(IsPlayerAttachedObjectSlotUsed(playerid, 9)) RemovePlayerAttachedObject(playerid, 9);
    TogglePlayerControllable(playerid, 1);
    ColocarObject(playerid, 5, 1463, 1,0.20,0.36,0.0,0.0,90.0, 0.0, 0.4, 0.3, 0.6);
    ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.1, 0, 1, 1, 1, 1, 1);
    SetPlayerCheckpoint(playerid, -422.4325, -1767.3252, 5.0382, 1.5);
    SetPVarInt(playerid, "EnCheckPoint", 5);
    B_Manos[playerid] = 0;
    _Mensaje(playerid, 2, "0", "Has talado el arbol, lleva los troncos.");
    return 1;
}

funcion IsPlayerConnectedEx(const playerid) {
    if(IsPlayerConnected(playerid) && JugadorEnSeccion {playerid} == 1) return 1;
    return 0;
}

funcion CargarPeajes() {
    // Peaje LS Izquierda
    Peajes[MAX_PEAJE][objectmodel] = 968;
    Peajes[MAX_PEAJE][PosXTrue] = 53.86662300;
    Peajes[MAX_PEAJE][PosYTrue] = -1526.9995120;
    Peajes[MAX_PEAJE][PosZTrue] = 4.77926100;
    Peajes[MAX_PEAJE][PosRotXTrue] = 0;
    Peajes[MAX_PEAJE][PosRotYTrue] = -89.38135874;
    Peajes[MAX_PEAJE][PosRotZTrue] = -97.81226081;
    Peajes[MAX_PEAJE][objectid_peaje] = CreateDynamicObject(Peajes[MAX_PEAJE][objectmodel], Peajes[MAX_PEAJE][PosXTrue], Peajes[MAX_PEAJE][PosYTrue], Peajes[MAX_PEAJE][PosZTrue], Peajes[MAX_PEAJE][PosRotXTrue], Peajes[MAX_PEAJE][PosRotYTrue], Peajes[MAX_PEAJE][PosRotZTrue], -1, -1, -1, MAX_RADIO_STREAM);
    Peajes[MAX_PEAJE][PosXFalse] = 53.86662300;
    Peajes[MAX_PEAJE][PosYFalse] = -1526.99951200;
    Peajes[MAX_PEAJE][PosZFalse] = 4.77926100;
    Peajes[MAX_PEAJE][PosRotXFalse] = 0;
    Peajes[MAX_PEAJE][PosRotYFalse] = 0;
    Peajes[MAX_PEAJE][PosRotZFalse] = -97.81226081;
    Peajes[MAX_PEAJE][typePeajeOrParqueo] = 0;
    Peajes[MAX_PEAJE][PosCommandX] = 60.8335;
    Peajes[MAX_PEAJE][PosCommandY] = -1524.7312;
    Peajes[MAX_PEAJE][PosCommandZ] = 4.9415;

    // Peaje LS 1 Derecha
    MAX_PEAJE++;
    Peajes[MAX_PEAJE][objectmodel] = 968;
    Peajes[MAX_PEAJE][PosXTrue] = 52.44144100;
    Peajes[MAX_PEAJE][PosYTrue] = -1536.91735800;
    Peajes[MAX_PEAJE][PosZTrue] = 4.86119400;
    Peajes[MAX_PEAJE][PosRotXTrue] = 0;
    Peajes[MAX_PEAJE][PosRotYTrue] = -90.24079544;
    Peajes[MAX_PEAJE][PosRotZTrue] = 82.18770174;
    Peajes[MAX_PEAJE][objectid_peaje] = CreateDynamicObject(Peajes[MAX_PEAJE][objectmodel], Peajes[MAX_PEAJE][PosXTrue], Peajes[MAX_PEAJE][PosYTrue], Peajes[MAX_PEAJE][PosZTrue], Peajes[MAX_PEAJE][PosRotXTrue], Peajes[MAX_PEAJE][PosRotYTrue], Peajes[MAX_PEAJE][PosRotZTrue], -1, -1, -1, MAX_RADIO_STREAM);
    Peajes[MAX_PEAJE][PosXFalse] = 52.44144100;
    Peajes[MAX_PEAJE][PosYFalse] = -1536.91735800;
    Peajes[MAX_PEAJE][PosZFalse] = 4.86119400;
    Peajes[MAX_PEAJE][PosRotXFalse] = 0;
    Peajes[MAX_PEAJE][PosRotYFalse] = 0;
    Peajes[MAX_PEAJE][PosRotZFalse] = 82.18770174;
    Peajes[MAX_PEAJE][typePeajeOrParqueo] = 0;
    Peajes[MAX_PEAJE][PosCommandX] = 45.1170;
    Peajes[MAX_PEAJE][PosCommandY] = -1538.8495;
    Peajes[MAX_PEAJE][PosCommandZ] = 5.1872;

    // TUNEL SF Derecha
    MAX_PEAJE++;
    Peajes[MAX_PEAJE][objectmodel] = 968;
    Peajes[MAX_PEAJE][PosXTrue] = -1759.976928;
    Peajes[MAX_PEAJE][PosYTrue] = -658.441650;
    Peajes[MAX_PEAJE][PosZTrue] = 20.727149;
    Peajes[MAX_PEAJE][PosRotXTrue] = 4.380000;
    Peajes[MAX_PEAJE][PosRotYTrue] = -90.020019;
    Peajes[MAX_PEAJE][PosRotZTrue] = -182.119384;
    Peajes[MAX_PEAJE][objectid_peaje] = CreateDynamicObject(Peajes[MAX_PEAJE][objectmodel], Peajes[MAX_PEAJE][PosXTrue], Peajes[MAX_PEAJE][PosYTrue], Peajes[MAX_PEAJE][PosZTrue], Peajes[MAX_PEAJE][PosRotXTrue], Peajes[MAX_PEAJE][PosRotYTrue], Peajes[MAX_PEAJE][PosRotZTrue], -1, -1, -1, MAX_RADIO_STREAM);
    Peajes[MAX_PEAJE][PosXFalse] = -1759.752441;
    Peajes[MAX_PEAJE][PosYFalse] = -658.699645;
    Peajes[MAX_PEAJE][PosZFalse] = 17.657993;
    Peajes[MAX_PEAJE][PosRotXFalse] = 4.000000;
    Peajes[MAX_PEAJE][PosRotYFalse] = -0.399999;
    Peajes[MAX_PEAJE][PosRotZFalse] = -179.700042;
    Peajes[MAX_PEAJE][typePeajeOrParqueo] = 0;
    Peajes[MAX_PEAJE][AnimObject] = 1;
    Peajes[MAX_PEAJE][PosCommandX] = -1756.5504;
    Peajes[MAX_PEAJE][PosCommandY] = -664.8318;
    Peajes[MAX_PEAJE][PosCommandZ] = 21.5154;

    // TUNEL SF Izquierda
    MAX_PEAJE++;
    Peajes[MAX_PEAJE][objectmodel] = 968;
    Peajes[MAX_PEAJE][PosXTrue] = -1761.377075;
    Peajes[MAX_PEAJE][PosYTrue] = -658.441650;
    Peajes[MAX_PEAJE][PosZTrue] = 20.727149;
    Peajes[MAX_PEAJE][PosRotXTrue] = -5.619999;
    Peajes[MAX_PEAJE][PosRotYTrue] = -91.120018;
    Peajes[MAX_PEAJE][PosRotZTrue] = -360.819366;
    Peajes[MAX_PEAJE][objectid_peaje] = CreateDynamicObject(Peajes[MAX_PEAJE][objectmodel], Peajes[MAX_PEAJE][PosXTrue], Peajes[MAX_PEAJE][PosYTrue], Peajes[MAX_PEAJE][PosZTrue], Peajes[MAX_PEAJE][PosRotXTrue], Peajes[MAX_PEAJE][PosRotYTrue], Peajes[MAX_PEAJE][PosRotZTrue], -1, -1, -1, MAX_RADIO_STREAM);
    Peajes[MAX_PEAJE][PosXFalse] = -1761.982055;
    Peajes[MAX_PEAJE][PosYFalse] = -658.628234;
    Peajes[MAX_PEAJE][PosZFalse] = 17.653646;
    Peajes[MAX_PEAJE][PosRotXFalse] = 4.000000;
    Peajes[MAX_PEAJE][PosRotYFalse] = 2.299999;
    Peajes[MAX_PEAJE][PosRotZFalse] = -179.700042;
    Peajes[MAX_PEAJE][typePeajeOrParqueo] = 0;
    Peajes[MAX_PEAJE][AnimObject] = 1;
    Peajes[MAX_PEAJE][PosCommandX] = -1765.4451;
    Peajes[MAX_PEAJE][PosCommandY] = -652.9922;
    Peajes[MAX_PEAJE][PosCommandZ] = 19.9730;

    // TUNEL SF-LS Izquierda
    MAX_PEAJE++;
    Peajes[MAX_PEAJE][objectmodel] = 968;
    Peajes[MAX_PEAJE][PosXTrue] = 5.8720703125;
    Peajes[MAX_PEAJE][PosYTrue] = -1318.119140625;
    Peajes[MAX_PEAJE][PosZTrue] = 11.241556167603;
    Peajes[MAX_PEAJE][PosRotXTrue] = 0;
    Peajes[MAX_PEAJE][PosRotYTrue] = 270;
    Peajes[MAX_PEAJE][PosRotZTrue] = 307.99633789063;
    Peajes[MAX_PEAJE][objectid_peaje] = CreateDynamicObject(Peajes[MAX_PEAJE][objectmodel], Peajes[MAX_PEAJE][PosXTrue], Peajes[MAX_PEAJE][PosYTrue], Peajes[MAX_PEAJE][PosZTrue], Peajes[MAX_PEAJE][PosRotXTrue], Peajes[MAX_PEAJE][PosRotYTrue], Peajes[MAX_PEAJE][PosRotZTrue], -1, -1, -1, MAX_RADIO_STREAM);
    Peajes[MAX_PEAJE][PosXFalse] = 5.8720703125;
    Peajes[MAX_PEAJE][PosYFalse] = -1318.119140625;
    Peajes[MAX_PEAJE][PosZFalse] = 11.241556167603;
    Peajes[MAX_PEAJE][PosRotXFalse] = 0;
    Peajes[MAX_PEAJE][PosRotYFalse] = 358;
    Peajes[MAX_PEAJE][PosRotZFalse] = 307.99914550781;
    Peajes[MAX_PEAJE][typePeajeOrParqueo] = 0;
    Peajes[MAX_PEAJE][PosCommandX] = 9.0634;
    Peajes[MAX_PEAJE][PosCommandY] = -1311.3982;
    Peajes[MAX_PEAJE][PosCommandZ] = 11.8607;

    // TUNEL SF-LS Derecha
    MAX_PEAJE++;
    Peajes[MAX_PEAJE][objectmodel] = 968;
    Peajes[MAX_PEAJE][PosXTrue] = 23.958234;
    Peajes[MAX_PEAJE][PosYTrue] = -1339.254516;
    Peajes[MAX_PEAJE][PosZTrue] = 9.898574;
    Peajes[MAX_PEAJE][PosRotXTrue] = 0;
    Peajes[MAX_PEAJE][PosRotYTrue] = 90;
    Peajes[MAX_PEAJE][PosRotZTrue] = 307;
    Peajes[MAX_PEAJE][objectid_peaje] = CreateDynamicObject(Peajes[MAX_PEAJE][objectmodel], Peajes[MAX_PEAJE][PosXTrue], Peajes[MAX_PEAJE][PosYTrue], Peajes[MAX_PEAJE][PosZTrue], Peajes[MAX_PEAJE][PosRotXTrue], Peajes[MAX_PEAJE][PosRotYTrue], Peajes[MAX_PEAJE][PosRotZTrue], -1, -1, -1, MAX_RADIO_STREAM);
    Peajes[MAX_PEAJE][PosXFalse] = 23.974609375;
    Peajes[MAX_PEAJE][PosYFalse] = -1339.2861328125;
    Peajes[MAX_PEAJE][PosZFalse] = 9.8272972106934;
    Peajes[MAX_PEAJE][PosRotXFalse] = 0;
    Peajes[MAX_PEAJE][PosRotYFalse] = 0;
    Peajes[MAX_PEAJE][PosRotZFalse] = 307;
    Peajes[MAX_PEAJE][typePeajeOrParqueo] = 0;
    Peajes[MAX_PEAJE][PosCommandX] = 19.7701;
    Peajes[MAX_PEAJE][PosCommandY] = -1347.0822;
    Peajes[MAX_PEAJE][PosCommandZ] = 10.0829;

    // SFMD(Parqueo)
    MAX_PEAJE++;
    Peajes[MAX_PEAJE][objectmodel] = 968;
    Peajes[MAX_PEAJE][PosXTrue] = -2558.08984375;
    Peajes[MAX_PEAJE][PosYTrue] = 578.4189453125;
    Peajes[MAX_PEAJE][PosZTrue] = 14.354976654053;
    Peajes[MAX_PEAJE][PosRotXTrue] = 0;
    Peajes[MAX_PEAJE][PosRotYTrue] = 270;
    Peajes[MAX_PEAJE][PosRotZTrue] = 0;
    Peajes[MAX_PEAJE][objectid_peaje] = CreateDynamicObject(Peajes[MAX_PEAJE][objectmodel], Peajes[MAX_PEAJE][PosXTrue], Peajes[MAX_PEAJE][PosYTrue], Peajes[MAX_PEAJE][PosZTrue], Peajes[MAX_PEAJE][PosRotXTrue], Peajes[MAX_PEAJE][PosRotYTrue], Peajes[MAX_PEAJE][PosRotZTrue], -1, -1, -1, MAX_RADIO_STREAM);
    Peajes[MAX_PEAJE][PosXFalse] = -2558.08984375;
    Peajes[MAX_PEAJE][PosYFalse] = 578.41973876953;
    Peajes[MAX_PEAJE][PosZFalse] = 14.354976654053;
    Peajes[MAX_PEAJE][PosRotXFalse] = 0;
    Peajes[MAX_PEAJE][PosRotYFalse] = 345;
    Peajes[MAX_PEAJE][PosRotZFalse] = 0;
    Peajes[MAX_PEAJE][typePeajeOrParqueo] = 1;

    // Parqueo SML
    MAX_PEAJE++;
    Peajes[MAX_PEAJE][objectmodel] = 968;
    Peajes[MAX_PEAJE][PosXTrue] = -2123.774169;
    Peajes[MAX_PEAJE][PosYTrue] = -80.860343;
    Peajes[MAX_PEAJE][PosZTrue] = 35.030315;
    Peajes[MAX_PEAJE][PosRotXTrue] = 180;
    Peajes[MAX_PEAJE][PosRotYTrue] = 268.999938;
    Peajes[MAX_PEAJE][PosRotZTrue] = 0;
    Peajes[MAX_PEAJE][objectid_peaje] = CreateDynamicObject(Peajes[MAX_PEAJE][objectmodel], Peajes[MAX_PEAJE][PosXTrue], Peajes[MAX_PEAJE][PosYTrue], Peajes[MAX_PEAJE][PosZTrue], Peajes[MAX_PEAJE][PosRotXTrue], Peajes[MAX_PEAJE][PosRotYTrue], Peajes[MAX_PEAJE][PosRotZTrue], -1, -1, -1, MAX_RADIO_STREAM);
    Peajes[MAX_PEAJE][PosXFalse] = -2123.774169;
    Peajes[MAX_PEAJE][PosYFalse] = -80.860343;
    Peajes[MAX_PEAJE][PosZFalse] = 35.030315;
    Peajes[MAX_PEAJE][PosRotXFalse] = 180;
    Peajes[MAX_PEAJE][PosRotYFalse] = 180;
    Peajes[MAX_PEAJE][PosRotZFalse] = 0;
    Peajes[MAX_PEAJE][typePeajeOrParqueo] = 1;

    // Ayuntamiento Parking 1
    MAX_PEAJE++;
    Peajes[MAX_PEAJE][objectmodel] = 968;
    Peajes[MAX_PEAJE][PosXTrue] = 1760.4208984375;
    Peajes[MAX_PEAJE][PosYTrue] = -1694.7099609375;
    Peajes[MAX_PEAJE][PosZTrue] = 13.199999809265;
    Peajes[MAX_PEAJE][PosRotXTrue] = 0;
    Peajes[MAX_PEAJE][PosRotYTrue] = 90;
    Peajes[MAX_PEAJE][PosRotZTrue] = 89.999938964844;
    Peajes[MAX_PEAJE][objectid_peaje] = CreateDynamicObject(Peajes[MAX_PEAJE][objectmodel], Peajes[MAX_PEAJE][PosXTrue], Peajes[MAX_PEAJE][PosYTrue], Peajes[MAX_PEAJE][PosZTrue], Peajes[MAX_PEAJE][PosRotXTrue], Peajes[MAX_PEAJE][PosRotYTrue], Peajes[MAX_PEAJE][PosRotZTrue], -1, -1, -1, MAX_RADIO_STREAM);
    Peajes[MAX_PEAJE][PosXFalse] = 1760.4208984375;
    Peajes[MAX_PEAJE][PosYFalse] = -1694.7099609375;
    Peajes[MAX_PEAJE][PosZFalse] = 13.199999809265;
    Peajes[MAX_PEAJE][PosRotXFalse] = 0;
    Peajes[MAX_PEAJE][PosRotYFalse] = 0;
    Peajes[MAX_PEAJE][PosRotZFalse] = 90;
    Peajes[MAX_PEAJE][typePeajeOrParqueo] = 1;

    // Ayuntamiento Parking 2
    MAX_PEAJE++;
    Peajes[MAX_PEAJE][objectmodel] = 968;
    Peajes[MAX_PEAJE][PosXTrue] = 1760.4208984375;
    Peajes[MAX_PEAJE][PosYTrue] = -1697.419921875;
    Peajes[MAX_PEAJE][PosZTrue] = 13.199999809265;
    Peajes[MAX_PEAJE][PosRotXTrue] = 0;
    Peajes[MAX_PEAJE][PosRotYTrue] = 90;
    Peajes[MAX_PEAJE][PosRotZTrue] = 270.00006103516;
    Peajes[MAX_PEAJE][objectid_peaje] = CreateDynamicObject(Peajes[MAX_PEAJE][objectmodel], Peajes[MAX_PEAJE][PosXTrue], Peajes[MAX_PEAJE][PosYTrue], Peajes[MAX_PEAJE][PosZTrue], Peajes[MAX_PEAJE][PosRotXTrue], Peajes[MAX_PEAJE][PosRotYTrue], Peajes[MAX_PEAJE][PosRotZTrue], -1, -1, -1, MAX_RADIO_STREAM);
    Peajes[MAX_PEAJE][PosXFalse] = 1760.4208984375;
    Peajes[MAX_PEAJE][PosYFalse] = -1697.419921875;
    Peajes[MAX_PEAJE][PosZFalse] = 13.199999809265;
    Peajes[MAX_PEAJE][PosRotXFalse] = 0;
    Peajes[MAX_PEAJE][PosRotYFalse] = 0;
    Peajes[MAX_PEAJE][PosRotZFalse] = 270;
    Peajes[MAX_PEAJE][typePeajeOrParqueo] = 1;
}

funcion JugadorCercaPeaje(playerid, option, price) {
    new MsgPeaje[150];
    new PeajeOrParking[20];
    if (!option) {
        PeajeOrParking = "Peaje";
    } else {
        PeajeOrParking = "Parqueo";
    }
    new Float: Conteo;
    do {
        Conteo++;
        for (new i = 0; i <= MAX_PEAJE; i++) {
            if (Peajes[i][typePeajeOrParqueo] == option) {
                if (Peajes[i][PosCommandX] == 0 && _enPos(playerid, Conteo, Peajes[i][PosXTrue], Peajes[i][PosYTrue], Peajes[i][PosZTrue]) || Peajes[i][PosCommandX] != 0 && _enPos(playerid, 5.0, Peajes[i][PosCommandX], Peajes[i][PosCommandY], Peajes[i][PosCommandZ])) {
                    new Float: ObjectPosRot[3];
                    GetDynamicObjectRot(Peajes[i][objectid_peaje], ObjectPosRot[0], ObjectPosRot[1], ObjectPosRot[2]);
                    new Float: ObjectPos[3];
                    GetDynamicObjectPos(Peajes[i][objectid_peaje], ObjectPos[0], ObjectPos[1], ObjectPos[2]);
                    if (Peajes[i][PosRotXTrue] == ObjectPosRot[0] && Peajes[i][PosRotYTrue] == ObjectPosRot[1] && Peajes[i][PosRotZTrue] == ObjectPosRot[2] && Peajes[i][PosXTrue] == ObjectPos[0] && Peajes[i][PosYTrue] == ObjectPos[1] && Peajes[i][PosZTrue] == ObjectPos[2]) {
                        if (ComprobarDineroJ(playerid) >= price) {
                            DineroEstado += price;
                            if (Peajes[i][AnimObject]) {
                                SetDynamicObjectPos(Peajes[i][objectid_peaje], Peajes[i][PosXFalse], Peajes[i][PosYFalse], Peajes[i][PosZFalse]);
                                SetDynamicObjectRot(Peajes[i][objectid_peaje], Peajes[i][PosRotXFalse], Peajes[i][PosRotYFalse], Peajes[i][PosRotZFalse]);
                                SetTimerEx("CerrarPeaje", 3000, false, "d", i);
                            } else {
                                MovePeajeDynamicOne(i, 0.0);
                            }
                            format(MsgPeaje, sizeof(MsgPeaje), "Has pagado el %s, te costo $%i", PeajeOrParking, price);
                            _Mensaje(playerid, 2, "0", MsgPeaje);
                            DarDineroGC(playerid, -price);
                        } else {
                            format(MsgPeaje, sizeof(MsgPeaje), "No tienes dinero para pagar el %s! Cuesta $%i", PeajeOrParking, price);
                            _Mensaje(playerid, 0, "741", MsgPeaje);
                        }
                    } else {
                        format(MsgPeaje, sizeof(MsgPeaje), "El %s todavía se encuentra abierto, no necesita pagarlo!", PeajeOrParking);
                        _Mensaje(playerid, 0, "742", MsgPeaje);
                    }
                    return true;
                }
            }
        }
    }
    while (Conteo != 10);
    format(MsgPeaje, sizeof(MsgPeaje), "No te encuentras en ningún %s!", PeajeOrParking);
    _Mensaje(playerid, 0, "743", MsgPeaje);
    return false;
}

funcion CerrarPeaje(peajeid) {
    SetDynamicObjectPos(Peajes[peajeid][objectid_peaje], Peajes[peajeid][PosXTrue], Peajes[peajeid][PosYTrue], Peajes[peajeid][PosZTrue]);
    SetDynamicObjectRot(Peajes[peajeid][objectid_peaje], Peajes[peajeid][PosRotXTrue], Peajes[peajeid][PosRotYTrue], Peajes[peajeid][PosRotZTrue]);
}

funcion MovePeajeDynamicOne(peajeid, Float: Progress) {
    new Float: NextPos[6];
    NextPos[0] = Peajes[peajeid][PosXTrue];
    NextPos[1] = Peajes[peajeid][PosYTrue];
    NextPos[2] = Peajes[peajeid][PosZTrue];
    NextPos[3] = Peajes[peajeid][PosRotXTrue];
    NextPos[4] = Peajes[peajeid][PosRotYTrue];
    NextPos[5] = Peajes[peajeid][PosRotZTrue];
    Progress += VELOCITY_PEAJE_PORCENT;
    //- Posición X
    if (Peajes[peajeid][PosXTrue] > Peajes[peajeid][PosXFalse]) {
        NextPos[0] -= ((Peajes[peajeid][PosXTrue] - Peajes[peajeid][PosXFalse]) * Progress) / 100;
    } else {
        NextPos[0] += ((Peajes[peajeid][PosXFalse] - Peajes[peajeid][PosXTrue]) * Progress) / 100;
    }
    //- Posición Y
    if (Peajes[peajeid][PosYTrue] > Peajes[peajeid][PosYFalse]) {
        NextPos[1] -= ((Peajes[peajeid][PosYTrue] - Peajes[peajeid][PosYFalse]) * Progress) / 100;
    } else {
        NextPos[1] += ((Peajes[peajeid][PosYFalse] - Peajes[peajeid][PosYTrue]) * Progress) / 100;
    }
    //- Posición Z
    if (Peajes[peajeid][PosZTrue] > Peajes[peajeid][PosZFalse]) {
        NextPos[2] -= ((Peajes[peajeid][PosZTrue] - Peajes[peajeid][PosZFalse]) * Progress) / 100;
    } else {
        NextPos[2] += ((Peajes[peajeid][PosZFalse] - Peajes[peajeid][PosZTrue]) * Progress) / 100;
    }
    //- Rotación X
    if (Peajes[peajeid][PosRotXTrue] > Peajes[peajeid][PosRotXFalse]) {
        NextPos[3] -= ((Peajes[peajeid][PosRotXTrue] - Peajes[peajeid][PosRotXFalse]) * Progress) / 100;
    } else {
        NextPos[3] += ((Peajes[peajeid][PosRotXFalse] - Peajes[peajeid][PosRotXTrue]) * Progress) / 100;
    }
    //- Rotación Y
    if (Peajes[peajeid][PosRotYTrue] > Peajes[peajeid][PosRotYFalse]) {
        NextPos[4] -= ((Peajes[peajeid][PosRotYTrue] - Peajes[peajeid][PosRotYFalse]) * Progress) / 100;
    } else {
        NextPos[4] += ((Peajes[peajeid][PosRotYFalse] - Peajes[peajeid][PosRotYTrue]) * Progress) / 100;
    }
    //- Rotación Z
    if (Peajes[peajeid][PosRotZTrue] > Peajes[peajeid][PosRotZFalse]) {
        NextPos[5] -= ((Peajes[peajeid][PosRotZTrue] - Peajes[peajeid][PosRotZFalse]) * Progress) / 100;
    } else {
        NextPos[5] += ((Peajes[peajeid][PosRotZFalse] - Peajes[peajeid][PosRotZTrue]) * Progress) / 100;
    }
    if (Progress < 100.0) {
        SetDynamicObjectPos(Peajes[peajeid][objectid_peaje], NextPos[0], NextPos[1], NextPos[2]);
        SetDynamicObjectRot(Peajes[peajeid][objectid_peaje], NextPos[3], NextPos[4], NextPos[5]);
        SetTimerEx("MovePeajeDynamicOne", VELOCITY_PEAJE_TIME, false, "df", peajeid, Progress);
    } else {
        SetDynamicObjectPos(Peajes[peajeid][objectid_peaje], Peajes[peajeid][PosXFalse], Peajes[peajeid][PosYFalse], Peajes[peajeid][PosZFalse]);
        SetDynamicObjectRot(Peajes[peajeid][objectid_peaje], Peajes[peajeid][PosRotXFalse], Peajes[peajeid][PosRotYFalse], Peajes[peajeid][PosRotZFalse]);
        SetTimerEx("MovePeajeDynamicTwo", 3000, false, "df", peajeid, 0.0);
    }
}

funcion MovePeajeDynamicTwo(peajeid, Float: Progress) {
    new Float: NextPos[6];
    NextPos[0] = Peajes[peajeid][PosXFalse];
    NextPos[1] = Peajes[peajeid][PosYFalse];
    NextPos[2] = Peajes[peajeid][PosZFalse];
    NextPos[3] = Peajes[peajeid][PosRotXFalse];
    NextPos[4] = Peajes[peajeid][PosRotYFalse];
    NextPos[5] = Peajes[peajeid][PosRotZFalse];
    Progress += VELOCITY_PEAJE_PORCENT;
    //- Posición X
    if (Peajes[peajeid][PosXFalse] > Peajes[peajeid][PosXTrue]) {
        NextPos[0] -= ((Peajes[peajeid][PosXFalse] - Peajes[peajeid][PosXTrue]) * Progress) / 100;
    } else {
        NextPos[0] += ((Peajes[peajeid][PosXTrue] - Peajes[peajeid][PosXFalse]) * Progress) / 100;
    }
    //- Posición Y
    if (Peajes[peajeid][PosYFalse] > Peajes[peajeid][PosYTrue]) {
        NextPos[1] -= ((Peajes[peajeid][PosYFalse] - Peajes[peajeid][PosYTrue]) * Progress) / 100;
    } else {
        NextPos[1] += ((Peajes[peajeid][PosYTrue] - Peajes[peajeid][PosYFalse]) * Progress) / 100;
    }
    //- Posición Z
    if (Peajes[peajeid][PosZFalse] > Peajes[peajeid][PosZTrue]) {
        NextPos[2] -= ((Peajes[peajeid][PosZFalse] - Peajes[peajeid][PosZTrue]) * Progress) / 100;
    } else {
        NextPos[2] += ((Peajes[peajeid][PosZTrue] - Peajes[peajeid][PosZFalse]) * Progress) / 100;
    }
    //- Rotación X
    if (Peajes[peajeid][PosRotXFalse] > Peajes[peajeid][PosRotXTrue]) {
        NextPos[3] -= ((Peajes[peajeid][PosRotXFalse] - Peajes[peajeid][PosRotXTrue]) * Progress) / 100;
    } else {
        NextPos[3] += ((Peajes[peajeid][PosRotXTrue] - Peajes[peajeid][PosRotXFalse]) * Progress) / 100;
    }
    //- Rotación Y
    if (Peajes[peajeid][PosRotYFalse] > Peajes[peajeid][PosRotYTrue]) {
        NextPos[4] -= ((Peajes[peajeid][PosRotYFalse] - Peajes[peajeid][PosRotYTrue]) * Progress) / 100;
    } else {
        NextPos[4] += ((Peajes[peajeid][PosRotYTrue] - Peajes[peajeid][PosRotYFalse]) * Progress) / 100;
    }
    //- Rotación Z
    if (Peajes[peajeid][PosRotZFalse] > Peajes[peajeid][PosRotZTrue]) {
        NextPos[5] -= ((Peajes[peajeid][PosRotZFalse] - Peajes[peajeid][PosRotZTrue]) * Progress) / 100;
    } else {
        NextPos[5] += ((Peajes[peajeid][PosRotZTrue] - Peajes[peajeid][PosRotZFalse]) * Progress) / 100;
    }
    if (Progress < 100.0) {
        SetDynamicObjectPos(Peajes[peajeid][objectid_peaje], NextPos[0], NextPos[1], NextPos[2]);
        SetDynamicObjectRot(Peajes[peajeid][objectid_peaje], NextPos[3], NextPos[4], NextPos[5]);
        SetTimerEx("MovePeajeDynamicTwo", VELOCITY_PEAJE_TIME, false, "df", peajeid, Progress);
    } else {
        SetDynamicObjectPos(Peajes[peajeid][objectid_peaje], Peajes[peajeid][PosXTrue], Peajes[peajeid][PosYTrue], Peajes[peajeid][PosZTrue]);
        SetDynamicObjectRot(Peajes[peajeid][objectid_peaje], Peajes[peajeid][PosRotXTrue], Peajes[peajeid][PosRotYTrue], Peajes[peajeid][PosRotZTrue]);
    }
}

stock NombreFamilia(playerid) {
    new famname[32];
    if(user[playerid][jMiembroFam] == 0) format(famname, sizeof(famname), "Sin familia");
    else format(famname, sizeof(famname), "%s", InfoFamilia[user[playerid][jMiembroFam]][fNombre]);
    return famname;
}

public OnRconLoginAttempt(ip[], password[], success) {
    if(!success) {
        new string[128];
        for(new x = 0; x < MAX_PLAYERS; x++) {
            GetPlayerIp(x, string, sizeof(string));
            if(!strcmp(ip, string, true)) {
                _Mensaje(x, 2, "0", "Has sido kickeado automáticamente por intentar loguear como admin RCON.");
                Kick(x);
                return 1;
            }
        }
        format(string, sizeof(string), "banip %s", ip);
        SendRconCommand(string);
    }
    return 1;
}

funcion IsPlayerAdminCall(playerid) {
    if(user[playerid][jAdmin] >= 1) return 1;
    else return 0;
}

funcion CheckTimer(time, ref) {
    new seconds = (time - (gettime() - ref));
    if(ref == 0) return -1;
    else if(seconds <= 0) return 0;
    else return seconds;
}

stock SeleccionSkin(skinid){
	if(skinid < 0 || skinid > 311) return false;
	return true;
}

stock _text(string[])
{
	new szFixed[1024], iPos, iLen;
	for (iLen = strlen(string); iPos < iLen; iPos ++)
		switch (string[iPos]) {
			case 'à':   szFixed[iPos] = 151;
			case 'á':   szFixed[iPos] = 152;
			case 'â':   szFixed[iPos] = 153;
			case 'ä':   szFixed[iPos] = 154;
			case 'À':   szFixed[iPos] = 128;
			case 'Á':   szFixed[iPos] = 129;
			case 'Â':   szFixed[iPos] = 130;
			case 'Ä':   szFixed[iPos] = 131;
			case 'è':   szFixed[iPos] = 157;
			case 'é':   szFixed[iPos] = 158;
			case 'ê':   szFixed[iPos] = 159;
			case 'ë':   szFixed[iPos] = 160;
			case 'È':   szFixed[iPos] = 134;
			case 'É':   szFixed[iPos] = 135;
			case 'Ê':   szFixed[iPos] = 136;
			case 'Ë':   szFixed[iPos] = 137;
			case 'ì':   szFixed[iPos] = 161;
			case 'í':   szFixed[iPos] = 162;
			case 'î':   szFixed[iPos] = 163;
			case 'ï':   szFixed[iPos] = 164;
			case 'Ì':   szFixed[iPos] = 138;
			case 'Í':   szFixed[iPos] = 139;
			case 'Î':   szFixed[iPos] = 140;
			case 'Ï':   szFixed[iPos] = 141;
			case 'ò':   szFixed[iPos] = 165;
			case 'ó':   szFixed[iPos] = 166;
			case 'ô':   szFixed[iPos] = 167;
			case 'ö':   szFixed[iPos] = 168;
			case 'Ò':   szFixed[iPos] = 142;
			case 'Ó':   szFixed[iPos] = 143;
			case 'Ô':   szFixed[iPos] = 144;
			case 'Ö':   szFixed[iPos] = 145;
			case 'ù':   szFixed[iPos] = 169;
			case 'ú':   szFixed[iPos] = 170;
			case 'û':   szFixed[iPos] = 171;
			case 'ü':   szFixed[iPos] = 172;
			case 'Ù':   szFixed[iPos] = 146;
			case 'Ú':   szFixed[iPos] = 147;
			case 'Û':   szFixed[iPos] = 148;
			case 'Ü':   szFixed[iPos] = 149;
			case 'ñ':   szFixed[iPos] = 174;
			case 'Ñ':   szFixed[iPos] = 173;
			case '¡':   szFixed[iPos] = 64;
			case '¿':   szFixed[iPos] = 175;
			case '`':   szFixed[iPos] = 177;
			case '&':   szFixed[iPos] = 38;
			default:    szFixed[iPos] = string[iPos];
	}
	return szFixed;
}

public RemoveBuildingForPlayerEx(playerid)
{
	//maximo vip
	RemoveBuildingForPlayer(playerid, 17351, -1432.5469, -1545.8672, 108.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 17352, -1458.0938, -1499.7813, 100.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 17354, -1458.4531, -1522.6328, 100.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 17355, -1440.8125, -1460.1094, 100.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 17356, -1447.7188, -1576.7344, 100.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 17051, -1426.7656, -1594.4844, 100.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 3425, -1456.9531, -1592.5000, 112.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 17053, -1458.4531, -1522.6328, 100.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 17056, -1462.0156, -1532.5313, 101.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 17057, -1451.5313, -1569.6094, 100.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 17059, -1458.7656, -1535.5703, 100.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 17058, -1447.7188, -1576.7344, 100.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 17335, -1432.5469, -1545.8672, 108.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 1501, -1437.8906, -1545.2344, 101.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 17050, -1411.2188, -1530.5547, 100.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 17049, -1412.8438, -1520.3984, 100.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 3425, -1439.7891, -1520.9375, 112.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 17052, -1458.0938, -1499.7813, 100.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 17060, -1457.6875, -1485.7578, 100.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 17054, -1440.8125, -1460.1094, 100.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 17055, -1439.2422, -1446.6563, 102.9297, 0.25);
	//parque
	RemoveBuildingForPlayer(playerid, 4210, 1479.5625, -1631.4531, 12.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 3985, 1479.5625, -1631.4531, 12.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 4057, 1479.5547, -1693.1406, 19.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 4186, 1479.5547, -1693.1406, 19.5781, 0.25);
	//continuar
	RemoveBuildingForPlayer(playerid, 3563, 2063.1328, -1731.7813, 15.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 3562, 2232.3984, -1464.7969, 25.6484, 0.25);
	RemoveBuildingForPlayer(playerid, 3562, 2247.5313, -1464.7969, 25.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 3562, 2263.7188, -1464.7969, 25.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 3562, 2243.7109, -1401.7813, 25.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 3562, 2230.6094, -1401.7813, 25.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 3562, 2256.6641, -1401.7813, 25.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 3645, 2069.6172, -1556.7031, 15.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 3645, 2070.7578, -1586.0156, 15.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 1490, 2102.1953, -1648.7578, 13.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 2275.3906, -1438.6641, 22.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2072.4531, -1351.8672, 26.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2072.4219, -1312.1641, 26.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2082.8906, -1300.2656, 26.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1862.9453, -1260.1016, 15.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1987.3984, -1260.3828, 26.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2066.3594, -1290.2578, 26.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2072.3984, -1271.7031, 26.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2072.6172, -1232.4609, 26.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2066.1406, -1210.5625, 26.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2082.3672, -1220.2344, 26.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1958.7031, -1140.3438, 28.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1974.6875, -1146.8516, 28.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1981.9141, -1131.4297, 28.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1966.2031, -1124.6875, 28.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2066.0781, -1124.8359, 25.9688, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2072.7422, -1146.7344, 26.0313, 0.25);
	RemoveBuildingForPlayer(playerid, 1297, 2076.3359, -1141.4063, 26.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2084.3359, -1095.1250, 27.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 3555, 2063.1328, -1731.7813, 15.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2123.5703, -1384.0859, 25.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2139.3047, -1383.5781, 26.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2155.6875, -1384.9219, 26.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2178.2422, -1383.9141, 26.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2223.0938, -1410.1172, 23.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 3582, 2230.6094, -1401.7813, 25.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2227.8672, -1394.4141, 23.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 3582, 2243.7109, -1401.7813, 25.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 3582, 2256.6641, -1401.7813, 25.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2252.5859, -1394.4141, 23.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2224.1328, -1383.7813, 26.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2082.2734, -1823.9141, 15.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 2085.7500, -1809.7031, 16.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2091.1641, -1826.8359, 12.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2099.8516, -1813.9063, 13.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2099.8594, -1819.3594, 13.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2099.8594, -1799.4219, 13.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2102.6016, -1822.0781, 13.1172, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2128.3125, -1826.8359, 12.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2099.8516, -1793.9766, 13.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2102.6641, -1791.3281, 13.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2105.0859, -1765.6094, 10.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 2114.7188, -1785.1797, 16.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2128.3125, -1786.7109, 12.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 2078.0859, -1724.4375, 16.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2094.6875, -1667.6953, 10.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 3644, 2070.7578, -1586.0156, 15.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 3644, 2069.6172, -1556.7031, 15.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2224.4219, -1473.0391, 22.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 1307, 2225.4219, -1456.3906, 23.1172, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2239.5703, -1468.8047, 22.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3582, 2232.3984, -1464.7969, 25.6484, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2258.6328, -1473.0391, 22.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 3582, 2247.5313, -1464.7969, 25.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2267.4688, -1470.1953, 21.7188, 0.25);
	RemoveBuildingForPlayer(playerid, 3582, 2263.7188, -1464.7969, 25.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 1307, 2272.6797, -1459.1875, 22.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 1221, 2251.2891, -1461.8281, 23.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 5682, 2241.4297, -1433.6719, 31.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 3699, 2471.6719, -1428.1328, 30.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3699, 2490.6953, -1428.1328, 30.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 3699, 2490.6953, -1413.8984, 30.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3699, 2471.6719, -1413.8984, 30.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3699, 2490.6953, -1395.2656, 30.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3699, 2471.6719, -1395.2656, 30.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3699, 2490.6953, -1379.8281, 30.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3699, 2471.6719, -1379.8281, 30.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3699, 2490.6953, -1362.6563, 30.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3699, 2471.6719, -1362.6563, 30.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1265, 2491.2344, -1653.9609, 12.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 1230, 2492.2656, -1653.9922, 12.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 1230, 2453.9609, -1653.6953, 12.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 1230, 2475.0000, -1653.6094, 12.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2463.0703, -1374.8281, 27.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 3698, 2471.6719, -1428.1328, 30.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3698, 2471.6719, -1413.8984, 30.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3698, 2471.6719, -1395.2656, 30.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3698, 2471.6719, -1379.8281, 30.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3698, 2490.6953, -1428.1328, 30.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 3698, 2490.6953, -1413.8984, 30.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3698, 2490.6953, -1395.2656, 30.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3698, 2490.6953, -1379.8281, 30.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3698, 2471.6719, -1362.6563, 30.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3698, 2490.6953, -1362.6563, 30.8125, 0.25);
	//736 RemoveBuildingForPlayer
	RemoveBuildingForPlayer(playerid, 1226, 1451.3359, -1596.7031, 16.4219, 0.25);//vip - 20objs
	RemoveBuildingForPlayer(playerid, 1226, 1471.3516, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1488.5313, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1504.8906, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1516.1641, -1591.6563, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 2162, 350.4922, 214.5234, 1007.3750, 0.25);//gobierno
	RemoveBuildingForPlayer(playerid, 2164, 350.5078, 210.9766, 1007.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 2164, 350.5078, 212.7500, 1007.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 2164, 350.5078, 216.2969, 1007.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 3366, 276.656, 2023.757, 16.632, 0.250);// Los Santos Roleplay Prison Exterior Mapping | 202 objetos.
	RemoveBuildingForPlayer(playerid, 3366, 276.656, 1989.546, 16.632, 0.250);
	RemoveBuildingForPlayer(playerid, 3366, 276.656, 1955.765, 16.632, 0.250);
	RemoveBuildingForPlayer(playerid, 16619, 199.335, 1943.875, 18.203, 0.250);
	RemoveBuildingForPlayer(playerid, 3267, 188.242, 2081.648, 22.445, 0.250);
	RemoveBuildingForPlayer(playerid, 3277, 188.242, 2081.648, 22.406, 0.250);
	RemoveBuildingForPlayer(playerid, 16093, 211.648, 1810.156, 20.734, 0.250);
	RemoveBuildingForPlayer(playerid, 16638, 211.726, 1809.187, 18.984, 0.250);
	RemoveBuildingForPlayer(playerid, 3279, 262.093, 1807.671, 16.820, 0.250);
	RemoveBuildingForPlayer(playerid, 1411, 347.195, 1799.265, 18.757, 0.250);
	RemoveBuildingForPlayer(playerid, 1411, 342.937, 1796.289, 18.757, 0.250);
	RemoveBuildingForPlayer(playerid, 16670, 330.789, 1813.218, 17.828, 0.250);
	RemoveBuildingForPlayer(playerid, 3279, 113.382, 1814.453, 16.820, 0.250);
	RemoveBuildingForPlayer(playerid, 3279, 165.953, 1849.992, 16.820, 0.250);
	RemoveBuildingForPlayer(playerid, 16095, 279.132, 1829.781, 16.632, 0.250);
	RemoveBuildingForPlayer(playerid, 16094, 191.140, 1870.039, 21.476, 0.250);
	RemoveBuildingForPlayer(playerid, 3279, 103.890, 1901.101, 16.820, 0.250);
	RemoveBuildingForPlayer(playerid, 16096, 120.507, 1934.031, 19.828, 0.250);
	RemoveBuildingForPlayer(playerid, 3279, 161.906, 1933.093, 16.820, 0.250);
	RemoveBuildingForPlayer(playerid, 16323, 199.335, 1943.875, 18.203, 0.250);
	RemoveBuildingForPlayer(playerid, 16671, 193.953, 2051.796, 20.179, 0.250);
	RemoveBuildingForPlayer(playerid, 3279, 233.429, 1934.843, 16.820, 0.250);
	RemoveBuildingForPlayer(playerid, 3279, 267.062, 1895.296, 16.820, 0.250);
	RemoveBuildingForPlayer(playerid, 3268, 276.656, 2023.757, 16.632, 0.250);
	RemoveBuildingForPlayer(playerid, 3268, 276.656, 1989.546, 16.632, 0.250);
	RemoveBuildingForPlayer(playerid, 3268, 276.656, 1955.765, 16.632, 0.250);
	RemoveBuildingForPlayer(playerid, 16668, 357.937, 2049.421, 16.843, 0.250);
	RemoveBuildingForPlayer(playerid, 16669, 380.257, 1914.960, 17.429, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 2367.6016, -1706.2891, 11.2891, 0.25);// ganton
	RemoveBuildingForPlayer(playerid, 1544, 505.7188, -69.5781, 998.6250, 0.25);// Interiores de negocios | by Edinson Walker
	RemoveBuildingForPlayer(playerid, 2112, 506.1875, -69.7734, 998.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 1543, 506.5469, -69.3906, 998.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1805, 507.1641, -69.0938, 998.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1805, 509.1875, -69.7266, 998.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 2112, 509.9531, -69.7734, 998.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 1543, 510.0703, -69.3828, 998.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 510.3438, -69.5703, 998.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 2660, 487.3516, -81.2109, 999.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 2695, 487.3594, -78.3203, 999.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 2964, 489.7500, -80.2109, 997.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 18091, 491.8750, -81.8438, 995.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 2350, 492.0547, -81.1563, 998.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 2350, 492.0547, -78.9531, 998.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 1548, 492.7969, -78.7500, 998.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1543, 492.7656, -81.0000, 998.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 1543, 492.9297, -81.1484, 998.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 496.6094, -79.7891, 999.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 496.4219, -79.5859, 999.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 1520, 496.7656, -79.5938, 998.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 497.0000, -79.5859, 999.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 1520, 497.3438, -79.5938, 998.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 499.3438, -79.8516, 999.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 499.5781, -80.0000, 999.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 499.8438, -79.8672, 999.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 500.1797, -80.0547, 999.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 1520, 500.2344, -79.6172, 998.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 2657, 504.3438, -88.0313, 999.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 2691, 504.3750, -81.3281, 1000.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 2778, 504.8203, -79.9297, 997.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 2681, 504.8359, -81.1719, 997.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 505.2344, -78.8281, 998.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 2695, 505.3594, -89.0781, 1000.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 505.4922, -81.2969, 998.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 506.1484, -87.9688, 998.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 2964, 506.4844, -84.8359, 997.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 2232, 507.1797, -88.3906, 998.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 2662, 507.5078, -89.0703, 1000.4609, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 508.4141, -88.9844, 998.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 2660, 509.8516, -89.0781, 1000.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 2964, 510.1016, -84.8359, 997.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 2232, 510.5234, -88.2578, 998.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 510.8984, -84.8906, 998.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 511.1484, -87.3672, 998.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 2659, 512.3828, -86.6641, 1000.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 2696, 512.3906, -85.2422, 999.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 2662, 487.3516, -76.7422, 1000.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 2112, 489.0469, -75.0938, 998.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 1543, 489.3047, -75.4297, 998.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1805, 488.9375, -75.8047, 998.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 2350, 491.9141, -77.8828, 998.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 492.6797, -76.0156, 997.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 492.8594, -76.9609, 998.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 492.8594, -77.1563, 998.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 492.6875, -77.1328, 998.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 492.6484, -77.3203, 998.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 1547, 493.7344, -76.7656, 998.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 1547, 494.5703, -76.8125, 998.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 1548, 495.6875, -76.7891, 998.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1543, 496.9609, -76.6406, 998.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 1543, 497.1250, -76.7891, 998.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 1548, 498.4219, -76.7891, 998.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1543, 499.2422, -76.6250, 998.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 1547, 499.7188, -76.8594, 998.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 499.5938, -75.9141, 997.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 1543, 500.8125, -76.7500, 998.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 1543, 501.3281, -76.6250, 998.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 500.9922, -76.0469, 997.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 504.8672, -77.1797, 997.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 489.5625, -74.8438, 998.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1543, 489.4688, -74.6563, 998.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1805, 489.6797, -74.3828, 998.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 2112, 491.5156, -73.2109, 998.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 491.1406, -73.6719, 998.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 491.3516, -73.3125, 998.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1805, 492.1797, -73.6641, 998.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 2112, 493.9766, -73.2109, 998.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 1543, 494.1406, -73.1328, 998.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 493.9844, -73.7500, 998.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1543, 493.6563, -73.3906, 998.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 2112, 496.5469, -73.2109, 998.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 1543, 496.2578, -72.9531, 998.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1805, 495.7891, -73.4531, 998.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1543, 496.9219, -73.2891, 998.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 497.0156, -73.4766, 998.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1805, 497.2188, -73.7422, 998.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 2112, 499.1094, -73.2109, 998.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 1805, 500.2031, -72.9219, 998.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 501.8438, -71.7734, 997.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 1805, 507.0469, -70.5938, 998.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1805, 510.1484, -70.6953, 998.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1543, 506.3906, -70.1563, 998.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1543, 510.3594, -70.2344, 998.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1805, 505.4297, -70.0781, 998.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 506.7109, -70.0547, 998.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 2379, 146.0156, -88.4297, 1000.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 2397, 146.5938, -88.4609, 1001.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 2397, 146.5938, -87.6250, 1001.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 2397, 146.5938, -88.4609, 1002.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 2397, 146.5938, -87.6250, 1002.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 2390, 146.5938, -85.9609, 1001.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 2390, 146.5938, -86.7813, 1001.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 2390, 146.5938, -85.9609, 1002.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 2390, 146.5938, -86.7813, 1002.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 2734, 144.6875, -83.2500, 1003.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 2374, 144.8203, -83.7031, 1001.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 2374, 144.8203, -84.5469, 1001.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 2374, 144.8125, -83.7031, 1002.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 2374, 144.8125, -84.5469, 1002.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 2374, 144.8203, -82.0078, 1001.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 2374, 144.8203, -82.8281, 1001.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 2374, 144.8125, -82.0078, 1002.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 2374, 144.8125, -82.8281, 1002.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 2387, 153.7266, -94.1484, 1000.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 150.7188, -92.7500, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 150.7188, -93.2500, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 149.7891, -93.2422, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 149.7891, -92.7500, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 150.7188, -91.7109, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 150.7188, -92.2109, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 149.7891, -92.2031, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 149.7891, -91.7031, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2387, 153.7266, -91.0547, 1000.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 156.1719, -88.4219, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 155.6719, -88.4219, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 155.1328, -88.4219, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 154.6328, -88.4219, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2375, 151.9375, -82.3594, 1000.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 154.6406, -87.4922, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 155.1328, -87.4922, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 155.6797, -87.4922, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 156.1797, -87.4922, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2387, 165.6016, -94.1484, 1000.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 2387, 168.9844, -94.1484, 1000.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 2387, 157.1094, -94.1484, 1000.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 171.9844, -92.7500, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 171.9844, -93.2422, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2387, 157.1094, -91.0547, 1000.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 2387, 165.6016, -91.0547, 1000.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 171.9844, -91.7031, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 171.9844, -92.2031, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2387, 168.9844, -91.0547, 1000.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 18071, 161.4063, -83.5859, 1000.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 168.0625, -88.4219, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 167.0234, -88.4219, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 167.5625, -88.4219, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 166.5234, -88.4219, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 166.5313, -87.4922, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 167.5703, -87.4922, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 167.0234, -87.4922, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 168.0703, -87.4922, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2375, 171.3516, -82.3594, 1000.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 2379, 146.0156, -80.5781, 1000.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 2397, 146.5938, -80.6094, 1001.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 2397, 146.5938, -79.7734, 1001.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 2390, 146.5938, -78.1094, 1001.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 2390, 146.5938, -78.9297, 1001.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 2375, 154.1719, -75.0078, 1000.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 2379, 154.3594, -71.0703, 1000.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 2398, 154.3125, -71.6563, 1001.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 2372, 159.9531, -77.9375, 1000.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 2398, 155.1563, -71.6563, 1001.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 2397, 156.0078, -71.6563, 1001.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 2397, 156.8203, -71.6563, 1001.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 2399, 160.7266, -69.8906, 1002.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 2399, 161.4453, -69.8906, 1002.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 2399, 162.1406, -69.8906, 1002.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 2734, 161.3984, -69.7734, 1004.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 2384, 166.5547, -75.7734, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2384, 167.0391, -75.7734, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 166.5313, -74.8594, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 167.0234, -74.8594, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2384, 168.0625, -75.7734, 1001.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 2384, 167.5781, -75.7734, 1001.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 167.5703, -74.8594, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 168.0703, -74.8594, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2397, 164.7422, -69.8906, 1001.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 2378, 164.7422, -69.8906, 1002.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 2397, 165.5547, -69.8906, 1001.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 2378, 165.5625, -69.8906, 1002.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 2735, 165.9922, -69.7734, 1004.1172, 0.25);
	RemoveBuildingForPlayer(playerid, 2397, 166.4688, -69.8906, 1001.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 2397, 167.2813, -69.8906, 1001.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 2378, 167.2813, -69.8906, 1002.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 2378, 166.4688, -69.8906, 1002.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 169.3281, -70.0625, 1001.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 168.7969, -70.0625, 1001.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 169.3281, -70.0625, 1001.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 168.7969, -70.0625, 1001.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 170.3906, -70.0625, 1001.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 169.8516, -70.0625, 1001.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 170.3906, -70.0625, 1001.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 169.8516, -70.0625, 1001.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 171.8906, -70.0625, 1001.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 172.4219, -70.0625, 1001.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 172.4219, -70.0625, 1001.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 171.8906, -70.0625, 1001.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 172.9141, -92.7500, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 172.9141, -93.2500, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 172.9141, -92.2109, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 172.9141, -91.7109, 1001.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2378, 176.2188, -84.3906, 1001.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 2378, 176.2188, -83.5625, 1001.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 2392, 177.5781, -84.3359, 1002.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 2378, 176.2188, -83.5625, 1002.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 2378, 176.2188, -84.3906, 1002.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 2372, 178.9922, -87.0859, 1001.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 2382, 179.8594, -86.8750, 1001.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 2382, 174.9375, -77.3359, 1002.0313, 0.25);
	RemoveBuildingForPlayer(playerid, 2384, 176.2422, -77.3750, 1001.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 2378, 176.2188, -82.7188, 1001.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 2378, 176.2188, -81.8906, 1001.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 2378, 176.2188, -82.7188, 1002.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 2378, 176.2188, -81.8906, 1002.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 2379, 176.7969, -81.8125, 1000.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 2392, 177.0859, -81.7500, 1002.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 2384, 176.7813, -77.3750, 1001.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 2378, 178.0078, -80.7969, 1002.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 2378, 178.0078, -79.9688, 1002.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 2377, 178.0078, -79.9844, 1001.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 2377, 178.0078, -80.8047, 1001.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 2734, 178.1250, -79.5781, 1003.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 2378, 178.0078, -79.1328, 1002.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 2377, 178.0078, -79.1484, 1001.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 2378, 178.0078, -78.3047, 1002.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 2377, 178.0078, -78.3047, 1001.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 2384, 177.3203, -77.3750, 1001.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 2384, 177.8125, -77.3750, 1001.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 2382, 177.2266, -77.4375, 1002.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 172.9531, -70.0625, 1001.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 172.9531, -70.0625, 1001.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 173.4844, -70.0625, 1001.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 173.4844, -70.0625, 1001.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 2391, 173.8281, -76.4531, 1001.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 2391, 173.8281, -77.2734, 1001.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 2374, 173.8203, -76.4531, 1002.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 2374, 173.8203, -77.2656, 1002.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 2377, 173.8203, -74.7422, 1001.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 2377, 173.8281, -75.5781, 1001.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 2374, 173.8203, -75.5703, 1002.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 2374, 173.8203, -74.7344, 1002.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 2379, 174.4063, -74.7969, 1000.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 2378, 175.3281, -69.8906, 1001.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 2378, 174.5000, -69.8906, 1001.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 2378, 175.3281, -69.8906, 1002.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 2378, 174.5000, -69.8906, 1002.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 2733, 174.8984, -69.7734, 1004.1172, 0.25);
	RemoveBuildingForPlayer(playerid, 2377, 178.0000, -73.6406, 1002.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 2391, 178.0000, -73.6484, 1001.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 2382, 176.5078, -74.6641, 1002.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 2732, 178.1172, -72.4297, 1003.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 2377, 178.0000, -72.8203, 1002.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 2391, 178.0000, -72.8281, 1001.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 2377, 178.0000, -71.9922, 1002.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 2391, 178.0078, -71.9922, 1001.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 2377, 178.0000, -71.1406, 1002.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 2391, 178.0078, -71.1406, 1001.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 2384, 176.2422, -70.0469, 1001.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 2384, 176.7813, -70.0469, 1001.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 2384, 177.3203, -70.0469, 1001.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 2384, 177.8125, -70.0469, 1001.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 2384, 176.2422, -70.0469, 1001.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 2384, 176.7813, -70.0469, 1001.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 2384, 177.3203, -70.0469, 1001.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 2384, 177.8125, -70.0469, 1001.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 2732, 176.3047, -96.5000, 1002.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 2733, 168.7813, -96.5000, 1002.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 2734, 165.8359, -96.5000, 1002.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 2735, 173.4063, -96.5000, 1002.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 2733, 157.1719, -96.5000, 1002.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 2732, 154.1406, -96.5000, 1002.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 2735, 149.5156, -96.5000, 1002.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 2734, 146.5469, -96.5000, 1002.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 285.6328, -112.7344, 1000.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 284.8203, -112.6250, 1001.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 284.7656, -112.6016, 1000.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 284.8047, -112.6172, 1000.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 285.6719, -112.7344, 1000.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 285.6875, -112.7344, 1001.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 286.5469, -112.7266, 1000.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 286.5078, -112.7344, 1000.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 286.5938, -112.7422, 1001.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 284.0703, -112.4531, 1000.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 284.0781, -112.4922, 1000.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 284.0781, -112.5078, 1001.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 2359, 284.4141, -111.9141, 1000.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 287.3438, -112.7266, 1000.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 287.3125, -112.7422, 1000.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 287.3984, -112.7266, 1001.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 2619, 295.4063, -112.6875, 1003.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 18044, 287.8672, -109.9922, 1002.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 18048, 290.2266, -105.3203, 1000.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 6105, 1223.7188, -1616.3203, 19.1172, 0.25);// LSPD Exterior | by Edinson Walker | 72 Objetos
	RemoveBuildingForPlayer(playerid, 6106, 1226.9531, -1656.1563, 24.7734, 0.25);
	RemoveBuildingForPlayer(playerid, 6149, 1170.0781, -1668.5625, 18.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 6196, 1225.3359, -1642.7500, 25.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 1525, 1271.4844, -1662.3203, 20.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 1155.7344, -1690.5469, 13.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1190.9844, -1686.3125, 13.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1190.9844, -1691.3906, 13.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1191.7891, -1691.9063, 12.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1190.9844, -1681.5234, 13.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1191.4063, -1674.4219, 12.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1190.9844, -1674.1484, 13.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 1155.7344, -1672.2031, 13.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1196.7266, -1691.3906, 13.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1202.4141, -1691.3906, 13.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1202.4141, -1686.3125, 13.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1204.3906, -1692.3203, 12.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1202.4141, -1681.5234, 13.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 1258.5781, -1675.5000, 14.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 1267.6719, -1675.5000, 14.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1203.6406, -1674.4844, 12.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1202.4141, -1674.1484, 13.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1197.2734, -1674.1484, 13.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 1155.7344, -1653.3438, 13.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 6150, 1170.0781, -1668.5625, 18.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 1181.3125, -1665.4688, 14.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 1281, 1197.2344, -1667.0547, 13.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 1281, 1189.6016, -1667.3125, 13.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 1208.2813, -1665.4688, 14.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 1281, 1195.1797, -1661.5000, 13.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 1281, 1187.7422, -1661.4219, 13.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1188.3438, -1655.8203, 13.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1200.3125, -1655.8203, 13.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 6102, 1226.9531, -1656.1563, 24.7734, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 1258.5781, -1659.8750, 14.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 1267.6719, -1659.8750, 14.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1237.5000, -1643.4297, 14.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1233.4688, -1643.4297, 14.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1245.5625, -1643.4297, 14.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1241.5313, -1643.4297, 14.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 1258.5781, -1643.3672, 14.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 1267.6719, -1643.3672, 14.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 1219.1172, -1640.4609, 28.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 1231.3125, -1640.4609, 28.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 1243.5078, -1640.4609, 28.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 1255.7109, -1640.4609, 28.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 1282.8281, -1639.9609, 28.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 1155.7344, -1599.9844, 13.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 1169.9297, -1577.8828, 12.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 1186.7344, -1578.0000, 12.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 1206.9141, -1578.0000, 12.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 1211.6016, -1632.8672, 28.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 1219.1172, -1632.8672, 28.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 1231.3125, -1632.8672, 28.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 6103, 1223.7188, -1616.3203, 19.1172, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 1243.5078, -1632.8672, 28.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 1255.7109, -1632.8672, 28.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 1247.6328, -1578.0000, 12.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 1282.8281, -1619.8516, 28.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 1282.8281, -1629.1094, 28.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 1264.1641, -1578.0000, 12.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 1280.5859, -1578.0000, 12.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 2204, 219.9375, 152.2969, 1002.0156, 0.25); //-int
	RemoveBuildingForPlayer(playerid, 2184, 219.9844, 148.0703, 1002.0313, 0.25);
	RemoveBuildingForPlayer(playerid, 1715, 220.1797, 147.2969, 1002.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1715, 221.4531, 147.2031, 1002.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2194, 222.0078, 148.1406, 1003.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 1714, 221.1094, 149.2969, 1002.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 5935, 1120.1563, -1303.4531, 18.5703, 0.25);//- Hospital Hollywood | By Bradley | 11 Objetos
	RemoveBuildingForPlayer(playerid, 1440, 1141.9844, -1346.1094, 13.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 5737, 1120.1563, -1303.4531, 18.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 5855, 1095.6797, -1212.7813, 18.2891, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, -533.5391, -559.6953, 38.5469, 0.25);//- Deposito | By Edinson
	RemoveBuildingForPlayer(playerid, 1415, -541.4297, -561.2266, 24.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 1415, -513.7578, -561.0078, 24.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 1441, -503.6172, -540.5313, 25.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1441, -502.4063, -513.0156, 25.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, -553.6875, -481.6328, 25.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 1441, -554.4531, -496.1797, 25.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1441, -537.0391, -469.1172, 25.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, -516.9453, -496.6484, 25.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, -503.1250, -509.0000, 25.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 17020, -475.9766, -544.8516, 28.1172, 0.25);
	RemoveBuildingForPlayer(playerid, 3769, 1961.4453, -2216.1719, 14.9844, 0.25);//- Aero puerto | By Edinson Walker | 35 objetos
	RemoveBuildingForPlayer(playerid, 3744, 2061.5313, -2209.8125, 14.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 3664, 1960.6953, -2236.4297, 19.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1949.3438, -2227.5156, 13.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1944.0625, -2227.5156, 13.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1954.6172, -2227.4844, 13.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1965.1719, -2227.4141, 13.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1959.8984, -2227.4453, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 3625, 1961.4453, -2216.1719, 14.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1975.7266, -2227.4141, 13.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1970.4453, -2227.4141, 13.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1981.0000, -2227.4141, 13.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1996.8281, -2227.3828, 13.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1991.5547, -2227.4141, 13.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1986.2813, -2227.4141, 13.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2002.1094, -2227.3438, 13.8281, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2055.0547, -2224.3828, 13.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2055.0547, -2219.1094, 13.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2054.9844, -2213.7891, 13.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2054.9219, -2208.4609, 13.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2054.9219, -2203.1875, 13.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 3574, 2061.5313, -2209.8125, 14.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1957.3906, -2176.7109, 16.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2054.9297, -2181.3594, 13.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2054.9297, -2186.6328, 13.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 3744, 2771.0703, -2520.5469, 15.2188, 0.25);//- Pescador + Puerto | by Edinson Walker | 64 objetos
	RemoveBuildingForPlayer(playerid, 3744, 2774.7969, -2534.9531, 15.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3746, 2814.2656, -2521.4922, 25.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 3574, 2774.7969, -2534.9531, 15.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3574, 2771.0703, -2520.5469, 15.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2802.4297, -2556.5234, 26.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 3620, 2814.2656, -2521.4922, 25.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1624.6875, -2190.3750, 16.3125, 0.25);// Casas Aeropuerto | By Edinson Walker | 18 Objetos
	RemoveBuildingForPlayer(playerid, 1226, 1482.0391, -2190.5781, 16.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1526.8438, -2190.3750, 16.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1575.7656, -2190.3750, 16.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 3744, 2193.2578, -2286.2891, 14.8125, 0.25);// Trabajo Carguero | By Edinson Walker | 6 Objetos
	RemoveBuildingForPlayer(playerid, 3574, 2193.2578, -2286.2891, 14.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3630, 2217.5859, -2284.6641, 15.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 3687, 2135.7422, -2186.4453, 15.6719, 0.25);// Trabajo Carpintero | By Edinson Walker | 40 Objetos
	RemoveBuildingForPlayer(playerid, 3687, 2150.1953, -2172.3594, 15.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 3622, 2135.7422, -2186.4453, 15.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 3622, 2150.1953, -2172.3594, 15.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 2135.2969, -2120.4141, 16.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 3425, -370.3750, -1446.9688, 35.9531, 0.25);// Trabajo Granjero | Edinson Walker | 1 Objeto
	RemoveBuildingForPlayer(playerid, 17298, -366.6719, -1422.6875, 30.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1454, -372.1797, -1434.6094, 25.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 1454, -369.1953, -1434.6094, 25.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 1454, -366.2031, -1434.6094, 25.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -361.8125, -1407.5391, 25.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 1454, -363.2109, -1434.6094, 25.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 1216, 1721.6719, -1721.2891, 13.2266, 0.25);	//- Teléfonos públicos
	RemoveBuildingForPlayer(playerid, 1216, 1721.6719, -1720.3906, 13.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1216, 1722.6094, -1721.2891, 13.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1216, 1722.6094, -1720.3906, 13.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1216, 1805.4063, -1600.4609, 13.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1216, 1806.3906, -1599.6172, 13.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1216, 1807.3828, -1598.7813, 13.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1216, 1808.3750, -1597.9219, 13.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1216, 1809.3438, -1597.0859, 13.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1216, 2165.9219, -1155.8047, 24.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 1216, 2165.9219, -1154.9609, 24.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 1216, 2257.6563, -1211.1875, 23.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 1216, 2259.2031, -1211.2109, 23.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 1216, 2069.0000, -1766.6641, 13.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 1216, 2068.9375, -1767.8359, 13.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 1363, 339.1875, -1398.0469, 14.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1216, 355.8047, -1364.9531, 14.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1216, 356.3828, -1364.6797, 14.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1363, 523.1563, -1525.6172, 14.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 1363, 523.1563, -1516.4219, 14.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 1216, 638.0313, -1228.6641, 17.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 1216, 638.0313, -1228.0234, 17.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 2726, 1203.0859, -11.5156, 1001.1016, 0.25);//- Negocios de lujo
	RemoveBuildingForPlayer(playerid, 2725, 1203.1484, -11.3438, 1000.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 2725, 1203.1484, -2.3203, 1000.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 2726, 1203.1797, -5.1250, 1001.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 2725, 1203.1484, -5.0938, 1000.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 2723, 1203.3828, -3.3906, 1000.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 2726, 1203.2734, -2.5000, 1001.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 2723, 1203.7188, -10.2969, 1000.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 2724, 1204.1016, -12.1953, 1000.4609, 0.25);
	RemoveBuildingForPlayer(playerid, 2723, 1204.0547, -5.8438, 1000.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 2776, 1208.4219, -29.2656, 1000.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 2724, 1204.3594, -4.3750, 1000.4609, 0.25);
	RemoveBuildingForPlayer(playerid, 2726, 1202.3984, 8.1406, 1001.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 2725, 1202.2734, 8.3203, 1000.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 2725, 1203.1484, 0.3594, 1000.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 2723, 1204.1328, -0.5156, 1000.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 2726, 1203.0938, 0.5781, 1001.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 2724, 1204.1250, 1.2578, 1000.4609, 0.25);
	RemoveBuildingForPlayer(playerid, 2723, 1208.7109, 0.6172, 1000.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 2726, 1207.8672, 1.0703, 1001.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 2725, 1207.7500, 1.2500, 1000.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 2724, 1206.5391, 1.6328, 1000.4609, 0.25);
	RemoveBuildingForPlayer(playerid, 2724, 1208.5938, 2.0391, 1000.4609, 0.25);
	RemoveBuildingForPlayer(playerid, 14810, 1211.2500, -32.5156, 1001.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 14811, 1211.2734, -32.5469, 1001.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 2776, 1214.2422, -37.7266, 1000.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 14809, 1212.4453, -36.7344, 1001.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 2776, 1214.0625, -36.6016, 1000.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 2776, 1209.4063, -29.6797, 1000.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 2776, 1212.3984, -31.8594, 1000.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 2776, 1211.9063, -30.8906, 1000.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 2776, 1214.7422, -28.8438, 1000.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 2776, 1215.8359, -29.0313, 1000.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 14829, 1212.1875, -2.1719, 1001.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 2723, 1220.1797, -0.9688, 1000.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 2724, 1219.8125, 0.9688, 1000.4609, 0.25);
	RemoveBuildingForPlayer(playerid, 2726, 1215.7188, 4.9297, 1001.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 2725, 1215.7656, 4.8203, 1000.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 2723, 1216.4375, 3.7891, 1000.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 2724, 1216.9453, 4.9922, 1000.4609, 0.25);
	RemoveBuildingForPlayer(playerid, 2723, 1216.3828, 6.0781, 1000.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 2725, 1215.8047, 7.4531, 1000.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 2726, 1215.9297, 7.2734, 1001.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 2724, 1216.5781, 8.1484, 1000.4609, 0.25);
	RemoveBuildingForPlayer(playerid, 2723, 1221.3984, -0.7031, 1000.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 2726, 1220.9219, 0.5781, 1001.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 2725, 1220.9766, 0.3516, 1000.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 1823, 482.0625, -25.0938, 1002.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 482.3906, -24.8672, 1002.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 1754, 482.0469, -23.2891, 1002.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 482.8906, -24.5547, 1002.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 2290, 483.5156, -26.3516, 1002.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 1754, 484.1250, -24.6172, 1002.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 2596, 482.4453, -20.5938, 1002.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 482.2656, -20.5078, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 484.8359, -20.5000, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 479.5078, -20.3828, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 1754, 485.4531, -24.7031, 1002.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 1823, 486.3906, -25.2891, 1002.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 486.6797, -24.6406, 1002.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 486.8125, -24.7500, 1002.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 2596, 485.7422, -20.5938, 1002.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 486.0859, -20.5625, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2290, 487.8203, -26.3516, 1002.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 487.2031, -24.5859, 1002.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 487.1797, -25.1094, 1002.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 487.2266, -20.5391, 1000.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 1754, 488.4219, -25.1719, 1002.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 1754, 488.0313, -23.3906, 1002.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 488.2266, -20.5000, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 490.6328, -24.3906, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 2372, 497.8438, -24.6563, 999.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 1775, 495.9688, -24.3203, 1000.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 2350, 499.8359, -23.3359, 1000.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 2350, 499.8594, -21.6328, 1000.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 478.2188, -19.4141, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 18102, 477.2656, -18.1719, 1001.6484, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 482.6094, -19.5156, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 477.2109, -16.1016, 1003.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 2173, 476.5313, -14.4453, 1002.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 477.3203, -13.9375, 1003.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 1520, 483.3359, -20.1094, 1000.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 1520, 483.6797, -20.1016, 1000.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 484.2266, -19.5547, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1823, 484.1094, -19.9141, 999.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 486.0938, -19.5938, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1520, 487.3359, -20.1484, 1000.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 488.3281, -19.6094, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1823, 487.6250, -19.9141, 999.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 18089, 488.3828, -13.4063, 1000.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 1823, 493.3750, -18.1250, 999.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 493.3516, -18.6641, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 494.3906, -18.6563, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 494.1797, -17.6016, 1000.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 494.3281, -16.5234, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 493.5391, -16.4219, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1823, 495.9844, -17.4844, 999.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 495.9922, -16.0000, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 495.9219, -18.1719, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 496.0156, -14.9688, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1823, 495.6484, -14.5703, 999.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 495.7891, -13.1797, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1520, 496.1484, -13.8672, 1000.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 496.7656, -16.8359, 1000.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 496.4297, -16.7734, 1000.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 496.9375, -15.8828, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 497.0859, -17.9922, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 497.2813, -13.7422, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2350, 499.8359, -19.6875, 1000.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 2350, 499.8594, -17.9844, 1000.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 2350, 499.8516, -16.1484, 1000.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 2780, 478.2188, -9.1250, 994.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 2649, 477.8438, -7.7266, 1003.8672, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 478.1953, -7.1719, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 478.6016, -7.6953, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 1436, 479.5938, -8.9922, 1001.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 2232, 478.3359, -5.5859, 1001.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 479.2891, -5.4063, 1001.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 479.8203, -5.8125, 1001.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 2232, 480.7969, -5.1016, 1001.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 480.8594, -5.0156, 1002.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 1436, 479.5938, -4.2969, 1002.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 2232, 482.5781, -3.2188, 1001.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 493.2266, -12.3906, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 494.3672, -12.3984, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1823, 493.3750, -11.9688, 999.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 494.3281, -10.3672, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 493.2266, -10.2656, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 495.9531, -9.3828, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 495.9531, -11.5078, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1823, 496.1016, -11.0859, 999.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 497.1172, -11.6172, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 497.0547, -9.4844, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 496.8906, -10.4063, 1000.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 2596, 499.9922, -8.9688, 1003.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 501.4141, -7.5547, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 2779, 501.4688, -10.3672, 999.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 2778, 502.4063, -7.5313, 999.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 2681, 503.6484, -7.5156, 999.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 2232, 495.0391, -5.4063, 1001.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 495.0078, -5.4453, 1002.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 495.2031, -5.3828, 1002.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 497.1563, -7.1094, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 2232, 496.3750, -5.6953, 1001.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 505.6797, -7.0156, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 2653, 506.1406, -4.3672, 1004.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 2232, 494.0625, -2.5156, 1001.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 502.1641, -1.8906, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 499.8438, -1.6172, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 505.8125, -1.5625, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 1776, 500.5625, -1.3672, 1000.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 1775, 501.8281, -1.4297, 1000.7344, 0.25);
	// EMPEÑOS
	RemoveBuildingForPlayer(playerid, 2504, -2235.0859, 127.6406, 1035.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 2503, -2235.5703, 127.6406, 1035.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 2501, -2234.6328, 127.6406, 1035.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 928, -2225.1406, 128.2969, 1034.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 926, -2224.2500, 128.4141, 1034.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 1885, -2238.1172, 130.0781, 1034.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 2497, -2237.2266, 131.1328, 1037.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 2510, -2233.6406, 129.2344, 1037.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 2486, -2234.4531, 131.7500, 1035.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 2459, -2234.7031, 131.9922, 1034.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 2484, -2233.9922, 132.1016, 1036.8281, 0.25);
	RemoveBuildingForPlayer(playerid, 2474, -2234.1250, 132.1172, 1035.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 2487, -2226.1641, 129.7500, 1037.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 2499, -2231.4766, 130.3203, 1037.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 2471, -2228.0547, 130.3281, 1035.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 2459, -2228.7969, 130.5859, 1034.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 2470, -2227.4141, 130.6875, 1036.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 2469, -2228.4688, 130.7188, 1036.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 2503, -2223.5391, 131.0703, 1035.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 2412, -2240.5859, 136.1094, 1034.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 1885, -2240.1719, 136.2031, 1034.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 2412, -2240.5859, 137.6719, 1034.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 2469, -2237.9063, 133.1953, 1036.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 2459, -2237.9688, 134.3984, 1034.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 2470, -2237.8750, 134.2500, 1036.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 2486, -2233.4766, 132.4453, 1035.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 2498, -2231.9453, 132.8125, 1037.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 2512, -2235.9922, 133.4375, 1037.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 2459, -2234.7031, 135.0625, 1034.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 2464, -2233.9844, 135.1641, 1036.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 2474, -2234.1250, 135.8672, 1035.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 2498, -2232.3281, 136.2422, 1037.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 2511, -2229.2734, 132.2813, 1037.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 2503, -2223.5391, 132.4375, 1035.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 2501, -2223.5391, 133.0078, 1035.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 2486, -2228.5469, 133.3984, 1035.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 2459, -2228.7969, 133.6563, 1034.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 2474, -2227.8984, 133.7656, 1035.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 2484, -2228.0938, 133.7734, 1036.8281, 0.25);
	RemoveBuildingForPlayer(playerid, 2486, -2227.5703, 134.0938, 1035.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 2512, -2226.4922, 134.0156, 1037.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 2499, -2230.1563, 135.2578, 1037.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 2465, -2227.9219, 137.0234, 1036.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 2480, -2226.3672, 137.0781, 1036.4922, 0.25);
	return 1;
}

funcion PedidoFabrica(playerid, objeto, materiales, tamano, tipo)
{
	KillTimer(jPt_fabrica[playerid]);
	jPt_fabrica[playerid] = 0;
	new p = 1;
	if (!_Fabrica(playerid)) _Mensaje(playerid, 4, "ffffff", "{ADC3E7}Ya no estás en un punto de fábrica, se canceló el pedido."), p = 0;
	if (user[playerid][jMateriales] < materiales) _Mensaje(playerid, 4, "ffffff", "{ADC3E7}No tienes los materiales requeridos para la fabricación, se canceló el pedido."), p = 0;
	if (user[playerid][jm_Derecha] > 0 && user[playerid][jm_Izquierda] > 0) _Mensaje(playerid, 4, "ffffff", "{ADC3E7}No tienes ninguna mano vacia, se canceló el pedido."), p = 0;
	if(p == 1)
	{
		_Mensaje(playerid, 4, "ffffff", "Jorge Sánchez dice: Carnal, aquí llego el camión con tu cargamento, ahorita los muchachos lo descargan..");
		new string[200];
		format(string, sizeof(string), "* Jorge Sánchez te entregó un(a) %s.", InfoObjeto[objeto][NombreObjeto]);
		_Mensaje(playerid, 4, "33CCFF", string);
		if (user[playerid][jm_Derecha] == 0)
		{
		user[playerid][jMateriales] -= materiales;
		user[playerid][jm_Derecha] = objeto;
		user[playerid][jm_DerechaCant] = tamano;
		PonerObjeto(playerid, 1, objeto);
		}
		else
		{
		user[playerid][jMateriales] -= materiales;
		user[playerid][jm_Izquierda] = objeto;
		user[playerid][jm_IzquierdaCant] = tamano;
		PonerObjeto(playerid, 2, objeto);
		}
		if(tipo == 1)
		{
		if(user[playerid][jI_fabrica] == 3 || user[playerid][jI_fabrica] < 0) user[playerid][jT_fabrica] = 900, user[playerid][jI_fabrica] = 3;
		else user[playerid][jI_fabrica]--;
		}
		else
		{
		if(user[playerid][jI_fabrica2] == 3 || user[playerid][jI_fabrica2] < 0) user[playerid][jT_fabrica2] = 480, user[playerid][jI_fabrica2] = 3;
		else user[playerid][jI_fabrica2]--;
		}
		_MensajeRfac(1, C_COLORPOLICIA, "*[CH|911|Central, S: 1]: Un sospechoso salió de la zona del tráfico de armas.", 1, 2);
		return true;
	}
	else
	{
	    if(user[playerid][jm_Derecha] == 0|| user[playerid][jm_Izquierda] == 0)
	    {
	        if(user[playerid][jm_Derecha] == 0)	user[playerid][jm_Derecha] = 50, user[playerid][jm_DerechaCant] = 1, PonerObjeto(playerid, 1, 50);
	        else user[playerid][jm_Izquierda] = 50, user[playerid][jm_IzquierdaCant] = 1, PonerObjeto(playerid, 2, 50);
	    }
	    else
	    {
 			for(new x = 0; x < 10; x++) if(user[playerid][jBolsillo][x] == 0)
			 {
 			user[playerid][jBolsillo][x] = 50;
   			user[playerid][jBolsilloCant][x] = 1;
   			}
		}
		_Mensaje(playerid, 2, "0", "Se te ha devuelto tu caja vacia.");
		return false;
	}
}

IntentoChitearBalas(playerid)
{
	if(GetPlayerAmmo(playerid) > user[playerid][jm_DerechaCant] && AntiG[Balas])
	{
		new text_[168];
		format(text_, sizeof(text_), "{FF6347}Administración: Jugador %s fue expulsado y limpiado por CMBlock BOT. Razón:[Cheat de munición]", NombreRJugador(playerid));
		_MensajeOOC(0xFF6347FF, text_);
		format(text_, sizeof(text_), "El jugador %s ha utilizado cheat de munición. [%s] (baneado por el sistema)", NombreRJugador(playerid), InfoObjeto[user[playerid][jm_Derecha]][NombreObjeto]);
		Log("Registros/cheatsbalas.log", text_);
		QuitarManos(playerid);
		_Expulsar(playerid, 0, "Munición desincronizada con el servidor");
		return 1;
	}
	return 0;
}

stock GetComponentName(componentid)
{
	new
		name_component[32] = "Desconocido";

	if(!IsValidComponent(componentid))
	    return name_component;

    for(new i = 0; i < sizeof(_tuneo); i++)
	{
 		if(_tuneo[i][_Componente] != componentid)
   			continue;

		format(name_component, sizeof(name_component), "%s", _tuneo[i][_Nombre]);
	}
	return name_component;
}

stock GetComponentPrice(componentid)
{
	new
		price_component = 500;

	if(!IsValidComponent(componentid))
	    return price_component;

	for(new i = 0; i < sizeof(_tuneo); i++)
	{
 		if(_tuneo[i][_Componente] != componentid)
   			continue;

		price_component = _tuneo[i][_Precio];
	}
	return price_component;
}

stock IsModelComponentCompatible(model_veh, componentid)
{
	if(!IsVehicleValidModel(model_veh))
	    return 0;

	if(!IsValidComponent(componentid))
	    return 0;

	for(new i = 0; i < sizeof(VehiclesMods); i++)
	{
	    if(VehiclesMods[i][0] != model_veh)
	        continue;

  		for(new x = 1; x < TOTAL_MODS; x++)
		{
		    if(VehiclesMods[i][x] != componentid)
		        continue;

			return 1;
		}
	}
	return 0;
}

stock GetVehicleModIDE(model_veh)
{
	if(!IsVehicleValidModel(model_veh))
	    return -1;

	for(new i = 0; i < sizeof(VehiclesMods); i++)
	{
	    if(VehiclesMods[i][0] != model_veh)
	        continue;

	    return i;
	}
	return -1;
}

stock IsModelComponentCompatibleEx(vehiclemodel, count, &component)
{
	new
		id = GetVehicleModIDE(vehiclemodel);

	if(id == -1)
		return 0;

	if(count == 0)
		count = 1;

	if(count >= TOTAL_MODS){
	    return 0;
	}

	component = VehiclesMods[id][count];
	return 1;
}
stock CargarTextLogin(playerid)
{
	PlayerTextDrawShow(playerid, TextLogin[playerid][1]);
	PlayerTextDrawShow(playerid, TextLogin[playerid][2]);
	return 1;
}

stock BorrarTextLogin(playerid)
{
	PlayerTextDrawHide(playerid, TextLogin[playerid][1]);
	PlayerTextDrawHide(playerid, TextLogin[playerid][2]);
    return 1;
}
funcion _CasaPickup(cid)
{
  DestroyDynamicPickup(InfoCasa[cid][pickhouses]);
  InfoCasa[cid][pickhouses] = CreateDynamicPickup(1273, 1, InfoCasa[cid][cExteriorX], InfoCasa[cid][cExteriorY], InfoCasa[cid][cExteriorZ]);
  return 1;
}
funcion _CasaLabel(cid)
{
	new string[256];
	{
	    if (InfoCasa[cid][cComprado] == 0)
		{
			if (InfoCasa[cid][cRentable] > 0)
			{
			    format(string, sizeof(string), "ID(Llave): %d\n {00FF00}En venta o Alquiler\n {FFFFFF}Tipo: {E2FF00}%s\n Precio: {00FF00}%d $\n Alquiler: {E2FF00}%d\n Usa 'H' para entrar.",
				cid, _EspacioC(cid), InfoCasa[cid][cPrecio], InfoCasa[cid][cRentable]);
				InfoCasa[cid][labelhouses] = CreateDynamic3DTextLabel(string, -1, InfoCasa[cid][cExteriorX], InfoCasa[cid][cExteriorY], InfoCasa[cid][cExteriorZ], 10.0, INVALID_PLAYER_ID);
		    }
		    else
		    {
				format(string, sizeof(string), "ID (Llave): %d\n {00FF00}En venta\n Espacio: {E2FF00}%s\n Precio: {00FF00}%d\n Usa 'H' para entrar.",
				cid, _EspacioC(cid), InfoCasa[cid][cPrecio]);
				InfoCasa[cid][labelhouses] = CreateDynamic3DTextLabel(string, -1, InfoCasa[cid][cExteriorX], InfoCasa[cid][cExteriorY], InfoCasa[cid][cExteriorZ], 10.0, INVALID_PLAYER_ID);
		    }
		}
		else
		{
			new location[MAX_ZONE_NAME];
			Get2DZone(location, MAX_ZONE_NAME, InfoCasa[cid][cExteriorX], InfoCasa[cid][cExteriorY], InfoCasa[cid][cExteriorZ]);

	        format(string, sizeof(string), "ID (Llave): %d\n Propietario: {FF0001}%s\n {FFFFFF}Tipo:{FFD301} %s\n Usa 'H' para entrar.", cid, InfoCasa[cid][cComprador], _EspacioC(cid));
            InfoCasa[cid][labelhouses] = CreateDynamic3DTextLabel(string, -1, InfoCasa[cid][cExteriorX], InfoCasa[cid][cExteriorY], InfoCasa[cid][cExteriorZ], 10.0, INVALID_PLAYER_ID);
		}
	    return 1;
	}
}

